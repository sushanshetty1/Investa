
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Product
 * 
 */
export type Product = $Result.DefaultSelection<Prisma.$ProductPayload>
/**
 * Model ProductVariant
 * 
 */
export type ProductVariant = $Result.DefaultSelection<Prisma.$ProductVariantPayload>
/**
 * Model Category
 * 
 */
export type Category = $Result.DefaultSelection<Prisma.$CategoryPayload>
/**
 * Model Brand
 * 
 */
export type Brand = $Result.DefaultSelection<Prisma.$BrandPayload>
/**
 * Model ProductBundle
 * 
 */
export type ProductBundle = $Result.DefaultSelection<Prisma.$ProductBundlePayload>
/**
 * Model Warehouse
 * 
 */
export type Warehouse = $Result.DefaultSelection<Prisma.$WarehousePayload>
/**
 * Model InventoryItem
 * 
 */
export type InventoryItem = $Result.DefaultSelection<Prisma.$InventoryItemPayload>
/**
 * Model InventoryMovement
 * 
 */
export type InventoryMovement = $Result.DefaultSelection<Prisma.$InventoryMovementPayload>
/**
 * Model Supplier
 * 
 */
export type Supplier = $Result.DefaultSelection<Prisma.$SupplierPayload>
/**
 * Model ProductSupplier
 * 
 */
export type ProductSupplier = $Result.DefaultSelection<Prisma.$ProductSupplierPayload>
/**
 * Model SupplierContact
 * 
 */
export type SupplierContact = $Result.DefaultSelection<Prisma.$SupplierContactPayload>
/**
 * Model SupplierDocument
 * 
 */
export type SupplierDocument = $Result.DefaultSelection<Prisma.$SupplierDocumentPayload>
/**
 * Model PurchaseOrder
 * 
 */
export type PurchaseOrder = $Result.DefaultSelection<Prisma.$PurchaseOrderPayload>
/**
 * Model PurchaseOrderItem
 * 
 */
export type PurchaseOrderItem = $Result.DefaultSelection<Prisma.$PurchaseOrderItemPayload>
/**
 * Model GoodsReceipt
 * 
 */
export type GoodsReceipt = $Result.DefaultSelection<Prisma.$GoodsReceiptPayload>
/**
 * Model GoodsReceiptItem
 * 
 */
export type GoodsReceiptItem = $Result.DefaultSelection<Prisma.$GoodsReceiptItemPayload>
/**
 * Model Customer
 * 
 */
export type Customer = $Result.DefaultSelection<Prisma.$CustomerPayload>
/**
 * Model CustomerContact
 * 
 */
export type CustomerContact = $Result.DefaultSelection<Prisma.$CustomerContactPayload>
/**
 * Model Order
 * 
 */
export type Order = $Result.DefaultSelection<Prisma.$OrderPayload>
/**
 * Model OrderItem
 * 
 */
export type OrderItem = $Result.DefaultSelection<Prisma.$OrderItemPayload>
/**
 * Model Shipment
 * 
 */
export type Shipment = $Result.DefaultSelection<Prisma.$ShipmentPayload>
/**
 * Model ShipmentPackage
 * 
 */
export type ShipmentPackage = $Result.DefaultSelection<Prisma.$ShipmentPackagePayload>
/**
 * Model ShipmentTracking
 * 
 */
export type ShipmentTracking = $Result.DefaultSelection<Prisma.$ShipmentTrackingPayload>
/**
 * Model StockTransfer
 * 
 */
export type StockTransfer = $Result.DefaultSelection<Prisma.$StockTransferPayload>
/**
 * Model StockTransferItem
 * 
 */
export type StockTransferItem = $Result.DefaultSelection<Prisma.$StockTransferItemPayload>
/**
 * Model StockReservation
 * 
 */
export type StockReservation = $Result.DefaultSelection<Prisma.$StockReservationPayload>
/**
 * Model SupplierInvoice
 * 
 */
export type SupplierInvoice = $Result.DefaultSelection<Prisma.$SupplierInvoicePayload>
/**
 * Model CustomerInvoice
 * 
 */
export type CustomerInvoice = $Result.DefaultSelection<Prisma.$CustomerInvoicePayload>
/**
 * Model InventoryAudit
 * 
 */
export type InventoryAudit = $Result.DefaultSelection<Prisma.$InventoryAuditPayload>
/**
 * Model InventoryAuditItem
 * 
 */
export type InventoryAuditItem = $Result.DefaultSelection<Prisma.$InventoryAuditItemPayload>
/**
 * Model ProductReview
 * 
 */
export type ProductReview = $Result.DefaultSelection<Prisma.$ProductReviewPayload>
/**
 * Model SystemConfiguration
 * 
 */
export type SystemConfiguration = $Result.DefaultSelection<Prisma.$SystemConfigurationPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const ProductStatus: {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  DISCONTINUED: 'DISCONTINUED',
  DRAFT: 'DRAFT'
};

export type ProductStatus = (typeof ProductStatus)[keyof typeof ProductStatus]


export const WarehouseType: {
  STANDARD: 'STANDARD',
  DISTRIBUTION_CENTER: 'DISTRIBUTION_CENTER',
  RETAIL_STORE: 'RETAIL_STORE',
  FULFILLMENT_CENTER: 'FULFILLMENT_CENTER',
  CROSS_DOCK: 'CROSS_DOCK',
  COLD_STORAGE: 'COLD_STORAGE'
};

export type WarehouseType = (typeof WarehouseType)[keyof typeof WarehouseType]


export const InventoryStatus: {
  AVAILABLE: 'AVAILABLE',
  RESERVED: 'RESERVED',
  QUARANTINE: 'QUARANTINE',
  DAMAGED: 'DAMAGED',
  EXPIRED: 'EXPIRED',
  RECALLED: 'RECALLED'
};

export type InventoryStatus = (typeof InventoryStatus)[keyof typeof InventoryStatus]


export const QualityStatus: {
  PASSED: 'PASSED',
  FAILED: 'FAILED',
  PENDING: 'PENDING',
  QUARANTINE: 'QUARANTINE'
};

export type QualityStatus = (typeof QualityStatus)[keyof typeof QualityStatus]


export const MovementType: {
  RECEIPT: 'RECEIPT',
  SHIPMENT: 'SHIPMENT',
  ADJUSTMENT: 'ADJUSTMENT',
  TRANSFER_OUT: 'TRANSFER_OUT',
  TRANSFER_IN: 'TRANSFER_IN',
  RETURN: 'RETURN',
  DAMAGE: 'DAMAGE',
  EXPIRED: 'EXPIRED',
  PROMOTION: 'PROMOTION',
  SAMPLE: 'SAMPLE',
  THEFT: 'THEFT',
  COUNT: 'COUNT'
};

export type MovementType = (typeof MovementType)[keyof typeof MovementType]


export const CompanyType: {
  CORPORATION: 'CORPORATION',
  LLC: 'LLC',
  PARTNERSHIP: 'PARTNERSHIP',
  SOLE_PROPRIETORSHIP: 'SOLE_PROPRIETORSHIP',
  NON_PROFIT: 'NON_PROFIT',
  GOVERNMENT: 'GOVERNMENT',
  OTHER: 'OTHER'
};

export type CompanyType = (typeof CompanyType)[keyof typeof CompanyType]


export const SupplierStatus: {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  PENDING_APPROVAL: 'PENDING_APPROVAL',
  SUSPENDED: 'SUSPENDED',
  BLACKLISTED: 'BLACKLISTED'
};

export type SupplierStatus = (typeof SupplierStatus)[keyof typeof SupplierStatus]


export const DocumentType: {
  CONTRACT: 'CONTRACT',
  INVOICE: 'INVOICE',
  CERTIFICATE: 'CERTIFICATE',
  INSURANCE: 'INSURANCE',
  TAX_FORM: 'TAX_FORM',
  COMPLIANCE: 'COMPLIANCE',
  OTHER: 'OTHER'
};

export type DocumentType = (typeof DocumentType)[keyof typeof DocumentType]


export const PurchaseOrderStatus: {
  DRAFT: 'DRAFT',
  PENDING_APPROVAL: 'PENDING_APPROVAL',
  APPROVED: 'APPROVED',
  SENT: 'SENT',
  ACKNOWLEDGED: 'ACKNOWLEDGED',
  PARTIALLY_RECEIVED: 'PARTIALLY_RECEIVED',
  RECEIVED: 'RECEIVED',
  INVOICED: 'INVOICED',
  PAID: 'PAID',
  CANCELLED: 'CANCELLED',
  CLOSED: 'CLOSED'
};

export type PurchaseOrderStatus = (typeof PurchaseOrderStatus)[keyof typeof PurchaseOrderStatus]


export const PurchaseItemStatus: {
  PENDING: 'PENDING',
  PARTIALLY_RECEIVED: 'PARTIALLY_RECEIVED',
  RECEIVED: 'RECEIVED',
  CANCELLED: 'CANCELLED'
};

export type PurchaseItemStatus = (typeof PurchaseItemStatus)[keyof typeof PurchaseItemStatus]


export const ReceiptStatus: {
  PENDING: 'PENDING',
  INSPECTING: 'INSPECTING',
  ACCEPTED: 'ACCEPTED',
  REJECTED: 'REJECTED',
  PARTIALLY_ACCEPTED: 'PARTIALLY_ACCEPTED'
};

export type ReceiptStatus = (typeof ReceiptStatus)[keyof typeof ReceiptStatus]


export const CustomerType: {
  INDIVIDUAL: 'INDIVIDUAL',
  BUSINESS: 'BUSINESS',
  RESELLER: 'RESELLER',
  DISTRIBUTOR: 'DISTRIBUTOR'
};

export type CustomerType = (typeof CustomerType)[keyof typeof CustomerType]


export const CustomerStatus: {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  PROSPECT: 'PROSPECT',
  SUSPENDED: 'SUSPENDED'
};

export type CustomerStatus = (typeof CustomerStatus)[keyof typeof CustomerStatus]


export const OrderType: {
  SALES: 'SALES',
  RETURN: 'RETURN',
  EXCHANGE: 'EXCHANGE',
  SAMPLE: 'SAMPLE',
  REPLACEMENT: 'REPLACEMENT'
};

export type OrderType = (typeof OrderType)[keyof typeof OrderType]


export const OrderChannel: {
  DIRECT: 'DIRECT',
  ONLINE: 'ONLINE',
  PHONE: 'PHONE',
  EMAIL: 'EMAIL',
  RETAIL: 'RETAIL',
  WHOLESALE: 'WHOLESALE',
  B2B_PORTAL: 'B2B_PORTAL'
};

export type OrderChannel = (typeof OrderChannel)[keyof typeof OrderChannel]


export const OrderStatus: {
  PENDING: 'PENDING',
  CONFIRMED: 'CONFIRMED',
  PROCESSING: 'PROCESSING',
  SHIPPED: 'SHIPPED',
  DELIVERED: 'DELIVERED',
  CANCELLED: 'CANCELLED',
  RETURNED: 'RETURNED',
  COMPLETED: 'COMPLETED'
};

export type OrderStatus = (typeof OrderStatus)[keyof typeof OrderStatus]


export const FulfillmentStatus: {
  PENDING: 'PENDING',
  PICKING: 'PICKING',
  PACKED: 'PACKED',
  SHIPPED: 'SHIPPED',
  DELIVERED: 'DELIVERED',
  CANCELLED: 'CANCELLED'
};

export type FulfillmentStatus = (typeof FulfillmentStatus)[keyof typeof FulfillmentStatus]


export const PaymentStatus: {
  PENDING: 'PENDING',
  AUTHORIZED: 'AUTHORIZED',
  PAID: 'PAID',
  PARTIALLY_PAID: 'PARTIALLY_PAID',
  REFUNDED: 'REFUNDED',
  FAILED: 'FAILED'
};

export type PaymentStatus = (typeof PaymentStatus)[keyof typeof PaymentStatus]


export const OrderPriority: {
  LOW: 'LOW',
  NORMAL: 'NORMAL',
  HIGH: 'HIGH',
  URGENT: 'URGENT'
};

export type OrderPriority = (typeof OrderPriority)[keyof typeof OrderPriority]


export const OrderItemStatus: {
  PENDING: 'PENDING',
  RESERVED: 'RESERVED',
  PICKING: 'PICKING',
  PICKED: 'PICKED',
  PACKED: 'PACKED',
  SHIPPED: 'SHIPPED',
  DELIVERED: 'DELIVERED',
  CANCELLED: 'CANCELLED'
};

export type OrderItemStatus = (typeof OrderItemStatus)[keyof typeof OrderItemStatus]


export const ShipmentStatus: {
  CREATED: 'CREATED',
  PICKED_UP: 'PICKED_UP',
  IN_TRANSIT: 'IN_TRANSIT',
  OUT_FOR_DELIVERY: 'OUT_FOR_DELIVERY',
  DELIVERED: 'DELIVERED',
  EXCEPTION: 'EXCEPTION',
  RETURNED: 'RETURNED',
  CANCELLED: 'CANCELLED'
};

export type ShipmentStatus = (typeof ShipmentStatus)[keyof typeof ShipmentStatus]


export const TransferStatus: {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  IN_TRANSIT: 'IN_TRANSIT',
  RECEIVED: 'RECEIVED',
  CANCELLED: 'CANCELLED'
};

export type TransferStatus = (typeof TransferStatus)[keyof typeof TransferStatus]


export const TransferItemStatus: {
  PENDING: 'PENDING',
  SHIPPED: 'SHIPPED',
  RECEIVED: 'RECEIVED',
  CANCELLED: 'CANCELLED'
};

export type TransferItemStatus = (typeof TransferItemStatus)[keyof typeof TransferItemStatus]


export const ReservationType: {
  ORDER: 'ORDER',
  TRANSFER: 'TRANSFER',
  MANUAL: 'MANUAL',
  QUALITY_HOLD: 'QUALITY_HOLD'
};

export type ReservationType = (typeof ReservationType)[keyof typeof ReservationType]


export const ReservationStatus: {
  ACTIVE: 'ACTIVE',
  FULFILLED: 'FULFILLED',
  CANCELLED: 'CANCELLED',
  EXPIRED: 'EXPIRED'
};

export type ReservationStatus = (typeof ReservationStatus)[keyof typeof ReservationStatus]


export const InvoiceStatus: {
  DRAFT: 'DRAFT',
  PENDING: 'PENDING',
  SENT: 'SENT',
  PAID: 'PAID',
  OVERDUE: 'OVERDUE',
  CANCELLED: 'CANCELLED'
};

export type InvoiceStatus = (typeof InvoiceStatus)[keyof typeof InvoiceStatus]


export const AuditType: {
  CYCLE_COUNT: 'CYCLE_COUNT',
  FULL_COUNT: 'FULL_COUNT',
  SPOT_CHECK: 'SPOT_CHECK',
  ANNUAL_COUNT: 'ANNUAL_COUNT',
  INVESTIGATION: 'INVESTIGATION'
};

export type AuditType = (typeof AuditType)[keyof typeof AuditType]


export const AuditMethod: {
  FULL_COUNT: 'FULL_COUNT',
  SAMPLE_COUNT: 'SAMPLE_COUNT',
  ABC_ANALYSIS: 'ABC_ANALYSIS',
  PERPETUAL: 'PERPETUAL'
};

export type AuditMethod = (typeof AuditMethod)[keyof typeof AuditMethod]


export const AuditStatus: {
  PLANNED: 'PLANNED',
  IN_PROGRESS: 'IN_PROGRESS',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED'
};

export type AuditStatus = (typeof AuditStatus)[keyof typeof AuditStatus]


export const AuditItemStatus: {
  PENDING: 'PENDING',
  COUNTED: 'COUNTED',
  VERIFIED: 'VERIFIED',
  ADJUSTED: 'ADJUSTED',
  EXCEPTION: 'EXCEPTION'
};

export type AuditItemStatus = (typeof AuditItemStatus)[keyof typeof AuditItemStatus]

}

export type ProductStatus = $Enums.ProductStatus

export const ProductStatus: typeof $Enums.ProductStatus

export type WarehouseType = $Enums.WarehouseType

export const WarehouseType: typeof $Enums.WarehouseType

export type InventoryStatus = $Enums.InventoryStatus

export const InventoryStatus: typeof $Enums.InventoryStatus

export type QualityStatus = $Enums.QualityStatus

export const QualityStatus: typeof $Enums.QualityStatus

export type MovementType = $Enums.MovementType

export const MovementType: typeof $Enums.MovementType

export type CompanyType = $Enums.CompanyType

export const CompanyType: typeof $Enums.CompanyType

export type SupplierStatus = $Enums.SupplierStatus

export const SupplierStatus: typeof $Enums.SupplierStatus

export type DocumentType = $Enums.DocumentType

export const DocumentType: typeof $Enums.DocumentType

export type PurchaseOrderStatus = $Enums.PurchaseOrderStatus

export const PurchaseOrderStatus: typeof $Enums.PurchaseOrderStatus

export type PurchaseItemStatus = $Enums.PurchaseItemStatus

export const PurchaseItemStatus: typeof $Enums.PurchaseItemStatus

export type ReceiptStatus = $Enums.ReceiptStatus

export const ReceiptStatus: typeof $Enums.ReceiptStatus

export type CustomerType = $Enums.CustomerType

export const CustomerType: typeof $Enums.CustomerType

export type CustomerStatus = $Enums.CustomerStatus

export const CustomerStatus: typeof $Enums.CustomerStatus

export type OrderType = $Enums.OrderType

export const OrderType: typeof $Enums.OrderType

export type OrderChannel = $Enums.OrderChannel

export const OrderChannel: typeof $Enums.OrderChannel

export type OrderStatus = $Enums.OrderStatus

export const OrderStatus: typeof $Enums.OrderStatus

export type FulfillmentStatus = $Enums.FulfillmentStatus

export const FulfillmentStatus: typeof $Enums.FulfillmentStatus

export type PaymentStatus = $Enums.PaymentStatus

export const PaymentStatus: typeof $Enums.PaymentStatus

export type OrderPriority = $Enums.OrderPriority

export const OrderPriority: typeof $Enums.OrderPriority

export type OrderItemStatus = $Enums.OrderItemStatus

export const OrderItemStatus: typeof $Enums.OrderItemStatus

export type ShipmentStatus = $Enums.ShipmentStatus

export const ShipmentStatus: typeof $Enums.ShipmentStatus

export type TransferStatus = $Enums.TransferStatus

export const TransferStatus: typeof $Enums.TransferStatus

export type TransferItemStatus = $Enums.TransferItemStatus

export const TransferItemStatus: typeof $Enums.TransferItemStatus

export type ReservationType = $Enums.ReservationType

export const ReservationType: typeof $Enums.ReservationType

export type ReservationStatus = $Enums.ReservationStatus

export const ReservationStatus: typeof $Enums.ReservationStatus

export type InvoiceStatus = $Enums.InvoiceStatus

export const InvoiceStatus: typeof $Enums.InvoiceStatus

export type AuditType = $Enums.AuditType

export const AuditType: typeof $Enums.AuditType

export type AuditMethod = $Enums.AuditMethod

export const AuditMethod: typeof $Enums.AuditMethod

export type AuditStatus = $Enums.AuditStatus

export const AuditStatus: typeof $Enums.AuditStatus

export type AuditItemStatus = $Enums.AuditItemStatus

export const AuditItemStatus: typeof $Enums.AuditItemStatus

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Products
 * const products = await prisma.product.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Products
   * const products = await prisma.product.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.product`: Exposes CRUD operations for the **Product** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Products
    * const products = await prisma.product.findMany()
    * ```
    */
  get product(): Prisma.ProductDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productVariant`: Exposes CRUD operations for the **ProductVariant** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductVariants
    * const productVariants = await prisma.productVariant.findMany()
    * ```
    */
  get productVariant(): Prisma.ProductVariantDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.category`: Exposes CRUD operations for the **Category** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categories
    * const categories = await prisma.category.findMany()
    * ```
    */
  get category(): Prisma.CategoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.brand`: Exposes CRUD operations for the **Brand** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Brands
    * const brands = await prisma.brand.findMany()
    * ```
    */
  get brand(): Prisma.BrandDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productBundle`: Exposes CRUD operations for the **ProductBundle** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductBundles
    * const productBundles = await prisma.productBundle.findMany()
    * ```
    */
  get productBundle(): Prisma.ProductBundleDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.warehouse`: Exposes CRUD operations for the **Warehouse** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Warehouses
    * const warehouses = await prisma.warehouse.findMany()
    * ```
    */
  get warehouse(): Prisma.WarehouseDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.inventoryItem`: Exposes CRUD operations for the **InventoryItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more InventoryItems
    * const inventoryItems = await prisma.inventoryItem.findMany()
    * ```
    */
  get inventoryItem(): Prisma.InventoryItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.inventoryMovement`: Exposes CRUD operations for the **InventoryMovement** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more InventoryMovements
    * const inventoryMovements = await prisma.inventoryMovement.findMany()
    * ```
    */
  get inventoryMovement(): Prisma.InventoryMovementDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.supplier`: Exposes CRUD operations for the **Supplier** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Suppliers
    * const suppliers = await prisma.supplier.findMany()
    * ```
    */
  get supplier(): Prisma.SupplierDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productSupplier`: Exposes CRUD operations for the **ProductSupplier** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductSuppliers
    * const productSuppliers = await prisma.productSupplier.findMany()
    * ```
    */
  get productSupplier(): Prisma.ProductSupplierDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.supplierContact`: Exposes CRUD operations for the **SupplierContact** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SupplierContacts
    * const supplierContacts = await prisma.supplierContact.findMany()
    * ```
    */
  get supplierContact(): Prisma.SupplierContactDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.supplierDocument`: Exposes CRUD operations for the **SupplierDocument** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SupplierDocuments
    * const supplierDocuments = await prisma.supplierDocument.findMany()
    * ```
    */
  get supplierDocument(): Prisma.SupplierDocumentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.purchaseOrder`: Exposes CRUD operations for the **PurchaseOrder** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PurchaseOrders
    * const purchaseOrders = await prisma.purchaseOrder.findMany()
    * ```
    */
  get purchaseOrder(): Prisma.PurchaseOrderDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.purchaseOrderItem`: Exposes CRUD operations for the **PurchaseOrderItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PurchaseOrderItems
    * const purchaseOrderItems = await prisma.purchaseOrderItem.findMany()
    * ```
    */
  get purchaseOrderItem(): Prisma.PurchaseOrderItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.goodsReceipt`: Exposes CRUD operations for the **GoodsReceipt** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more GoodsReceipts
    * const goodsReceipts = await prisma.goodsReceipt.findMany()
    * ```
    */
  get goodsReceipt(): Prisma.GoodsReceiptDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.goodsReceiptItem`: Exposes CRUD operations for the **GoodsReceiptItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more GoodsReceiptItems
    * const goodsReceiptItems = await prisma.goodsReceiptItem.findMany()
    * ```
    */
  get goodsReceiptItem(): Prisma.GoodsReceiptItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.customer`: Exposes CRUD operations for the **Customer** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Customers
    * const customers = await prisma.customer.findMany()
    * ```
    */
  get customer(): Prisma.CustomerDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.customerContact`: Exposes CRUD operations for the **CustomerContact** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CustomerContacts
    * const customerContacts = await prisma.customerContact.findMany()
    * ```
    */
  get customerContact(): Prisma.CustomerContactDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.order`: Exposes CRUD operations for the **Order** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Orders
    * const orders = await prisma.order.findMany()
    * ```
    */
  get order(): Prisma.OrderDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.orderItem`: Exposes CRUD operations for the **OrderItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OrderItems
    * const orderItems = await prisma.orderItem.findMany()
    * ```
    */
  get orderItem(): Prisma.OrderItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.shipment`: Exposes CRUD operations for the **Shipment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Shipments
    * const shipments = await prisma.shipment.findMany()
    * ```
    */
  get shipment(): Prisma.ShipmentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.shipmentPackage`: Exposes CRUD operations for the **ShipmentPackage** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ShipmentPackages
    * const shipmentPackages = await prisma.shipmentPackage.findMany()
    * ```
    */
  get shipmentPackage(): Prisma.ShipmentPackageDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.shipmentTracking`: Exposes CRUD operations for the **ShipmentTracking** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ShipmentTrackings
    * const shipmentTrackings = await prisma.shipmentTracking.findMany()
    * ```
    */
  get shipmentTracking(): Prisma.ShipmentTrackingDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.stockTransfer`: Exposes CRUD operations for the **StockTransfer** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more StockTransfers
    * const stockTransfers = await prisma.stockTransfer.findMany()
    * ```
    */
  get stockTransfer(): Prisma.StockTransferDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.stockTransferItem`: Exposes CRUD operations for the **StockTransferItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more StockTransferItems
    * const stockTransferItems = await prisma.stockTransferItem.findMany()
    * ```
    */
  get stockTransferItem(): Prisma.StockTransferItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.stockReservation`: Exposes CRUD operations for the **StockReservation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more StockReservations
    * const stockReservations = await prisma.stockReservation.findMany()
    * ```
    */
  get stockReservation(): Prisma.StockReservationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.supplierInvoice`: Exposes CRUD operations for the **SupplierInvoice** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SupplierInvoices
    * const supplierInvoices = await prisma.supplierInvoice.findMany()
    * ```
    */
  get supplierInvoice(): Prisma.SupplierInvoiceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.customerInvoice`: Exposes CRUD operations for the **CustomerInvoice** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CustomerInvoices
    * const customerInvoices = await prisma.customerInvoice.findMany()
    * ```
    */
  get customerInvoice(): Prisma.CustomerInvoiceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.inventoryAudit`: Exposes CRUD operations for the **InventoryAudit** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more InventoryAudits
    * const inventoryAudits = await prisma.inventoryAudit.findMany()
    * ```
    */
  get inventoryAudit(): Prisma.InventoryAuditDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.inventoryAuditItem`: Exposes CRUD operations for the **InventoryAuditItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more InventoryAuditItems
    * const inventoryAuditItems = await prisma.inventoryAuditItem.findMany()
    * ```
    */
  get inventoryAuditItem(): Prisma.InventoryAuditItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productReview`: Exposes CRUD operations for the **ProductReview** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductReviews
    * const productReviews = await prisma.productReview.findMany()
    * ```
    */
  get productReview(): Prisma.ProductReviewDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.systemConfiguration`: Exposes CRUD operations for the **SystemConfiguration** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SystemConfigurations
    * const systemConfigurations = await prisma.systemConfiguration.findMany()
    * ```
    */
  get systemConfiguration(): Prisma.SystemConfigurationDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.9.0
   * Query Engine version: 81e4af48011447c3cc503a190e86995b66d2a28e
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Product: 'Product',
    ProductVariant: 'ProductVariant',
    Category: 'Category',
    Brand: 'Brand',
    ProductBundle: 'ProductBundle',
    Warehouse: 'Warehouse',
    InventoryItem: 'InventoryItem',
    InventoryMovement: 'InventoryMovement',
    Supplier: 'Supplier',
    ProductSupplier: 'ProductSupplier',
    SupplierContact: 'SupplierContact',
    SupplierDocument: 'SupplierDocument',
    PurchaseOrder: 'PurchaseOrder',
    PurchaseOrderItem: 'PurchaseOrderItem',
    GoodsReceipt: 'GoodsReceipt',
    GoodsReceiptItem: 'GoodsReceiptItem',
    Customer: 'Customer',
    CustomerContact: 'CustomerContact',
    Order: 'Order',
    OrderItem: 'OrderItem',
    Shipment: 'Shipment',
    ShipmentPackage: 'ShipmentPackage',
    ShipmentTracking: 'ShipmentTracking',
    StockTransfer: 'StockTransfer',
    StockTransferItem: 'StockTransferItem',
    StockReservation: 'StockReservation',
    SupplierInvoice: 'SupplierInvoice',
    CustomerInvoice: 'CustomerInvoice',
    InventoryAudit: 'InventoryAudit',
    InventoryAuditItem: 'InventoryAuditItem',
    ProductReview: 'ProductReview',
    SystemConfiguration: 'SystemConfiguration'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    neonDb?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "product" | "productVariant" | "category" | "brand" | "productBundle" | "warehouse" | "inventoryItem" | "inventoryMovement" | "supplier" | "productSupplier" | "supplierContact" | "supplierDocument" | "purchaseOrder" | "purchaseOrderItem" | "goodsReceipt" | "goodsReceiptItem" | "customer" | "customerContact" | "order" | "orderItem" | "shipment" | "shipmentPackage" | "shipmentTracking" | "stockTransfer" | "stockTransferItem" | "stockReservation" | "supplierInvoice" | "customerInvoice" | "inventoryAudit" | "inventoryAuditItem" | "productReview" | "systemConfiguration"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Product: {
        payload: Prisma.$ProductPayload<ExtArgs>
        fields: Prisma.ProductFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          findFirst: {
            args: Prisma.ProductFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          findMany: {
            args: Prisma.ProductFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          create: {
            args: Prisma.ProductCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          createMany: {
            args: Prisma.ProductCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          delete: {
            args: Prisma.ProductDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          update: {
            args: Prisma.ProductUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          deleteMany: {
            args: Prisma.ProductDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          upsert: {
            args: Prisma.ProductUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          aggregate: {
            args: Prisma.ProductAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProduct>
          }
          groupBy: {
            args: Prisma.ProductGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductCountArgs<ExtArgs>
            result: $Utils.Optional<ProductCountAggregateOutputType> | number
          }
        }
      }
      ProductVariant: {
        payload: Prisma.$ProductVariantPayload<ExtArgs>
        fields: Prisma.ProductVariantFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductVariantFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductVariantPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductVariantFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductVariantPayload>
          }
          findFirst: {
            args: Prisma.ProductVariantFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductVariantPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductVariantFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductVariantPayload>
          }
          findMany: {
            args: Prisma.ProductVariantFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductVariantPayload>[]
          }
          create: {
            args: Prisma.ProductVariantCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductVariantPayload>
          }
          createMany: {
            args: Prisma.ProductVariantCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductVariantCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductVariantPayload>[]
          }
          delete: {
            args: Prisma.ProductVariantDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductVariantPayload>
          }
          update: {
            args: Prisma.ProductVariantUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductVariantPayload>
          }
          deleteMany: {
            args: Prisma.ProductVariantDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductVariantUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductVariantUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductVariantPayload>[]
          }
          upsert: {
            args: Prisma.ProductVariantUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductVariantPayload>
          }
          aggregate: {
            args: Prisma.ProductVariantAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductVariant>
          }
          groupBy: {
            args: Prisma.ProductVariantGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductVariantGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductVariantCountArgs<ExtArgs>
            result: $Utils.Optional<ProductVariantCountAggregateOutputType> | number
          }
        }
      }
      Category: {
        payload: Prisma.$CategoryPayload<ExtArgs>
        fields: Prisma.CategoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CategoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CategoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          findFirst: {
            args: Prisma.CategoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CategoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          findMany: {
            args: Prisma.CategoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>[]
          }
          create: {
            args: Prisma.CategoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          createMany: {
            args: Prisma.CategoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CategoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>[]
          }
          delete: {
            args: Prisma.CategoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          update: {
            args: Prisma.CategoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          deleteMany: {
            args: Prisma.CategoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CategoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CategoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>[]
          }
          upsert: {
            args: Prisma.CategoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          aggregate: {
            args: Prisma.CategoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategory>
          }
          groupBy: {
            args: Prisma.CategoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.CategoryCountArgs<ExtArgs>
            result: $Utils.Optional<CategoryCountAggregateOutputType> | number
          }
        }
      }
      Brand: {
        payload: Prisma.$BrandPayload<ExtArgs>
        fields: Prisma.BrandFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BrandFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BrandFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>
          }
          findFirst: {
            args: Prisma.BrandFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BrandFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>
          }
          findMany: {
            args: Prisma.BrandFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>[]
          }
          create: {
            args: Prisma.BrandCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>
          }
          createMany: {
            args: Prisma.BrandCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BrandCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>[]
          }
          delete: {
            args: Prisma.BrandDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>
          }
          update: {
            args: Prisma.BrandUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>
          }
          deleteMany: {
            args: Prisma.BrandDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BrandUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BrandUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>[]
          }
          upsert: {
            args: Prisma.BrandUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>
          }
          aggregate: {
            args: Prisma.BrandAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBrand>
          }
          groupBy: {
            args: Prisma.BrandGroupByArgs<ExtArgs>
            result: $Utils.Optional<BrandGroupByOutputType>[]
          }
          count: {
            args: Prisma.BrandCountArgs<ExtArgs>
            result: $Utils.Optional<BrandCountAggregateOutputType> | number
          }
        }
      }
      ProductBundle: {
        payload: Prisma.$ProductBundlePayload<ExtArgs>
        fields: Prisma.ProductBundleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductBundleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductBundlePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductBundleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductBundlePayload>
          }
          findFirst: {
            args: Prisma.ProductBundleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductBundlePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductBundleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductBundlePayload>
          }
          findMany: {
            args: Prisma.ProductBundleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductBundlePayload>[]
          }
          create: {
            args: Prisma.ProductBundleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductBundlePayload>
          }
          createMany: {
            args: Prisma.ProductBundleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductBundleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductBundlePayload>[]
          }
          delete: {
            args: Prisma.ProductBundleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductBundlePayload>
          }
          update: {
            args: Prisma.ProductBundleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductBundlePayload>
          }
          deleteMany: {
            args: Prisma.ProductBundleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductBundleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductBundleUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductBundlePayload>[]
          }
          upsert: {
            args: Prisma.ProductBundleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductBundlePayload>
          }
          aggregate: {
            args: Prisma.ProductBundleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductBundle>
          }
          groupBy: {
            args: Prisma.ProductBundleGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductBundleGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductBundleCountArgs<ExtArgs>
            result: $Utils.Optional<ProductBundleCountAggregateOutputType> | number
          }
        }
      }
      Warehouse: {
        payload: Prisma.$WarehousePayload<ExtArgs>
        fields: Prisma.WarehouseFieldRefs
        operations: {
          findUnique: {
            args: Prisma.WarehouseFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WarehousePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.WarehouseFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WarehousePayload>
          }
          findFirst: {
            args: Prisma.WarehouseFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WarehousePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.WarehouseFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WarehousePayload>
          }
          findMany: {
            args: Prisma.WarehouseFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WarehousePayload>[]
          }
          create: {
            args: Prisma.WarehouseCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WarehousePayload>
          }
          createMany: {
            args: Prisma.WarehouseCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.WarehouseCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WarehousePayload>[]
          }
          delete: {
            args: Prisma.WarehouseDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WarehousePayload>
          }
          update: {
            args: Prisma.WarehouseUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WarehousePayload>
          }
          deleteMany: {
            args: Prisma.WarehouseDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.WarehouseUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.WarehouseUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WarehousePayload>[]
          }
          upsert: {
            args: Prisma.WarehouseUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WarehousePayload>
          }
          aggregate: {
            args: Prisma.WarehouseAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWarehouse>
          }
          groupBy: {
            args: Prisma.WarehouseGroupByArgs<ExtArgs>
            result: $Utils.Optional<WarehouseGroupByOutputType>[]
          }
          count: {
            args: Prisma.WarehouseCountArgs<ExtArgs>
            result: $Utils.Optional<WarehouseCountAggregateOutputType> | number
          }
        }
      }
      InventoryItem: {
        payload: Prisma.$InventoryItemPayload<ExtArgs>
        fields: Prisma.InventoryItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InventoryItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InventoryItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryItemPayload>
          }
          findFirst: {
            args: Prisma.InventoryItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InventoryItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryItemPayload>
          }
          findMany: {
            args: Prisma.InventoryItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryItemPayload>[]
          }
          create: {
            args: Prisma.InventoryItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryItemPayload>
          }
          createMany: {
            args: Prisma.InventoryItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InventoryItemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryItemPayload>[]
          }
          delete: {
            args: Prisma.InventoryItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryItemPayload>
          }
          update: {
            args: Prisma.InventoryItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryItemPayload>
          }
          deleteMany: {
            args: Prisma.InventoryItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InventoryItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.InventoryItemUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryItemPayload>[]
          }
          upsert: {
            args: Prisma.InventoryItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryItemPayload>
          }
          aggregate: {
            args: Prisma.InventoryItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInventoryItem>
          }
          groupBy: {
            args: Prisma.InventoryItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<InventoryItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.InventoryItemCountArgs<ExtArgs>
            result: $Utils.Optional<InventoryItemCountAggregateOutputType> | number
          }
        }
      }
      InventoryMovement: {
        payload: Prisma.$InventoryMovementPayload<ExtArgs>
        fields: Prisma.InventoryMovementFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InventoryMovementFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryMovementPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InventoryMovementFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryMovementPayload>
          }
          findFirst: {
            args: Prisma.InventoryMovementFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryMovementPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InventoryMovementFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryMovementPayload>
          }
          findMany: {
            args: Prisma.InventoryMovementFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryMovementPayload>[]
          }
          create: {
            args: Prisma.InventoryMovementCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryMovementPayload>
          }
          createMany: {
            args: Prisma.InventoryMovementCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InventoryMovementCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryMovementPayload>[]
          }
          delete: {
            args: Prisma.InventoryMovementDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryMovementPayload>
          }
          update: {
            args: Prisma.InventoryMovementUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryMovementPayload>
          }
          deleteMany: {
            args: Prisma.InventoryMovementDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InventoryMovementUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.InventoryMovementUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryMovementPayload>[]
          }
          upsert: {
            args: Prisma.InventoryMovementUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryMovementPayload>
          }
          aggregate: {
            args: Prisma.InventoryMovementAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInventoryMovement>
          }
          groupBy: {
            args: Prisma.InventoryMovementGroupByArgs<ExtArgs>
            result: $Utils.Optional<InventoryMovementGroupByOutputType>[]
          }
          count: {
            args: Prisma.InventoryMovementCountArgs<ExtArgs>
            result: $Utils.Optional<InventoryMovementCountAggregateOutputType> | number
          }
        }
      }
      Supplier: {
        payload: Prisma.$SupplierPayload<ExtArgs>
        fields: Prisma.SupplierFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SupplierFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SupplierFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierPayload>
          }
          findFirst: {
            args: Prisma.SupplierFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SupplierFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierPayload>
          }
          findMany: {
            args: Prisma.SupplierFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierPayload>[]
          }
          create: {
            args: Prisma.SupplierCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierPayload>
          }
          createMany: {
            args: Prisma.SupplierCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SupplierCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierPayload>[]
          }
          delete: {
            args: Prisma.SupplierDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierPayload>
          }
          update: {
            args: Prisma.SupplierUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierPayload>
          }
          deleteMany: {
            args: Prisma.SupplierDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SupplierUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SupplierUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierPayload>[]
          }
          upsert: {
            args: Prisma.SupplierUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierPayload>
          }
          aggregate: {
            args: Prisma.SupplierAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSupplier>
          }
          groupBy: {
            args: Prisma.SupplierGroupByArgs<ExtArgs>
            result: $Utils.Optional<SupplierGroupByOutputType>[]
          }
          count: {
            args: Prisma.SupplierCountArgs<ExtArgs>
            result: $Utils.Optional<SupplierCountAggregateOutputType> | number
          }
        }
      }
      ProductSupplier: {
        payload: Prisma.$ProductSupplierPayload<ExtArgs>
        fields: Prisma.ProductSupplierFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductSupplierFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductSupplierPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductSupplierFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductSupplierPayload>
          }
          findFirst: {
            args: Prisma.ProductSupplierFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductSupplierPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductSupplierFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductSupplierPayload>
          }
          findMany: {
            args: Prisma.ProductSupplierFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductSupplierPayload>[]
          }
          create: {
            args: Prisma.ProductSupplierCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductSupplierPayload>
          }
          createMany: {
            args: Prisma.ProductSupplierCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductSupplierCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductSupplierPayload>[]
          }
          delete: {
            args: Prisma.ProductSupplierDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductSupplierPayload>
          }
          update: {
            args: Prisma.ProductSupplierUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductSupplierPayload>
          }
          deleteMany: {
            args: Prisma.ProductSupplierDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductSupplierUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductSupplierUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductSupplierPayload>[]
          }
          upsert: {
            args: Prisma.ProductSupplierUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductSupplierPayload>
          }
          aggregate: {
            args: Prisma.ProductSupplierAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductSupplier>
          }
          groupBy: {
            args: Prisma.ProductSupplierGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductSupplierGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductSupplierCountArgs<ExtArgs>
            result: $Utils.Optional<ProductSupplierCountAggregateOutputType> | number
          }
        }
      }
      SupplierContact: {
        payload: Prisma.$SupplierContactPayload<ExtArgs>
        fields: Prisma.SupplierContactFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SupplierContactFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierContactPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SupplierContactFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierContactPayload>
          }
          findFirst: {
            args: Prisma.SupplierContactFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierContactPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SupplierContactFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierContactPayload>
          }
          findMany: {
            args: Prisma.SupplierContactFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierContactPayload>[]
          }
          create: {
            args: Prisma.SupplierContactCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierContactPayload>
          }
          createMany: {
            args: Prisma.SupplierContactCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SupplierContactCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierContactPayload>[]
          }
          delete: {
            args: Prisma.SupplierContactDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierContactPayload>
          }
          update: {
            args: Prisma.SupplierContactUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierContactPayload>
          }
          deleteMany: {
            args: Prisma.SupplierContactDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SupplierContactUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SupplierContactUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierContactPayload>[]
          }
          upsert: {
            args: Prisma.SupplierContactUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierContactPayload>
          }
          aggregate: {
            args: Prisma.SupplierContactAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSupplierContact>
          }
          groupBy: {
            args: Prisma.SupplierContactGroupByArgs<ExtArgs>
            result: $Utils.Optional<SupplierContactGroupByOutputType>[]
          }
          count: {
            args: Prisma.SupplierContactCountArgs<ExtArgs>
            result: $Utils.Optional<SupplierContactCountAggregateOutputType> | number
          }
        }
      }
      SupplierDocument: {
        payload: Prisma.$SupplierDocumentPayload<ExtArgs>
        fields: Prisma.SupplierDocumentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SupplierDocumentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierDocumentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SupplierDocumentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierDocumentPayload>
          }
          findFirst: {
            args: Prisma.SupplierDocumentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierDocumentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SupplierDocumentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierDocumentPayload>
          }
          findMany: {
            args: Prisma.SupplierDocumentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierDocumentPayload>[]
          }
          create: {
            args: Prisma.SupplierDocumentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierDocumentPayload>
          }
          createMany: {
            args: Prisma.SupplierDocumentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SupplierDocumentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierDocumentPayload>[]
          }
          delete: {
            args: Prisma.SupplierDocumentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierDocumentPayload>
          }
          update: {
            args: Prisma.SupplierDocumentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierDocumentPayload>
          }
          deleteMany: {
            args: Prisma.SupplierDocumentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SupplierDocumentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SupplierDocumentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierDocumentPayload>[]
          }
          upsert: {
            args: Prisma.SupplierDocumentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierDocumentPayload>
          }
          aggregate: {
            args: Prisma.SupplierDocumentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSupplierDocument>
          }
          groupBy: {
            args: Prisma.SupplierDocumentGroupByArgs<ExtArgs>
            result: $Utils.Optional<SupplierDocumentGroupByOutputType>[]
          }
          count: {
            args: Prisma.SupplierDocumentCountArgs<ExtArgs>
            result: $Utils.Optional<SupplierDocumentCountAggregateOutputType> | number
          }
        }
      }
      PurchaseOrder: {
        payload: Prisma.$PurchaseOrderPayload<ExtArgs>
        fields: Prisma.PurchaseOrderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PurchaseOrderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PurchaseOrderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderPayload>
          }
          findFirst: {
            args: Prisma.PurchaseOrderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PurchaseOrderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderPayload>
          }
          findMany: {
            args: Prisma.PurchaseOrderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderPayload>[]
          }
          create: {
            args: Prisma.PurchaseOrderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderPayload>
          }
          createMany: {
            args: Prisma.PurchaseOrderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PurchaseOrderCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderPayload>[]
          }
          delete: {
            args: Prisma.PurchaseOrderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderPayload>
          }
          update: {
            args: Prisma.PurchaseOrderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderPayload>
          }
          deleteMany: {
            args: Prisma.PurchaseOrderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PurchaseOrderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PurchaseOrderUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderPayload>[]
          }
          upsert: {
            args: Prisma.PurchaseOrderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderPayload>
          }
          aggregate: {
            args: Prisma.PurchaseOrderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePurchaseOrder>
          }
          groupBy: {
            args: Prisma.PurchaseOrderGroupByArgs<ExtArgs>
            result: $Utils.Optional<PurchaseOrderGroupByOutputType>[]
          }
          count: {
            args: Prisma.PurchaseOrderCountArgs<ExtArgs>
            result: $Utils.Optional<PurchaseOrderCountAggregateOutputType> | number
          }
        }
      }
      PurchaseOrderItem: {
        payload: Prisma.$PurchaseOrderItemPayload<ExtArgs>
        fields: Prisma.PurchaseOrderItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PurchaseOrderItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PurchaseOrderItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderItemPayload>
          }
          findFirst: {
            args: Prisma.PurchaseOrderItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PurchaseOrderItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderItemPayload>
          }
          findMany: {
            args: Prisma.PurchaseOrderItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderItemPayload>[]
          }
          create: {
            args: Prisma.PurchaseOrderItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderItemPayload>
          }
          createMany: {
            args: Prisma.PurchaseOrderItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PurchaseOrderItemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderItemPayload>[]
          }
          delete: {
            args: Prisma.PurchaseOrderItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderItemPayload>
          }
          update: {
            args: Prisma.PurchaseOrderItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderItemPayload>
          }
          deleteMany: {
            args: Prisma.PurchaseOrderItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PurchaseOrderItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PurchaseOrderItemUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderItemPayload>[]
          }
          upsert: {
            args: Prisma.PurchaseOrderItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderItemPayload>
          }
          aggregate: {
            args: Prisma.PurchaseOrderItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePurchaseOrderItem>
          }
          groupBy: {
            args: Prisma.PurchaseOrderItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<PurchaseOrderItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.PurchaseOrderItemCountArgs<ExtArgs>
            result: $Utils.Optional<PurchaseOrderItemCountAggregateOutputType> | number
          }
        }
      }
      GoodsReceipt: {
        payload: Prisma.$GoodsReceiptPayload<ExtArgs>
        fields: Prisma.GoodsReceiptFieldRefs
        operations: {
          findUnique: {
            args: Prisma.GoodsReceiptFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GoodsReceiptPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.GoodsReceiptFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GoodsReceiptPayload>
          }
          findFirst: {
            args: Prisma.GoodsReceiptFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GoodsReceiptPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.GoodsReceiptFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GoodsReceiptPayload>
          }
          findMany: {
            args: Prisma.GoodsReceiptFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GoodsReceiptPayload>[]
          }
          create: {
            args: Prisma.GoodsReceiptCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GoodsReceiptPayload>
          }
          createMany: {
            args: Prisma.GoodsReceiptCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.GoodsReceiptCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GoodsReceiptPayload>[]
          }
          delete: {
            args: Prisma.GoodsReceiptDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GoodsReceiptPayload>
          }
          update: {
            args: Prisma.GoodsReceiptUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GoodsReceiptPayload>
          }
          deleteMany: {
            args: Prisma.GoodsReceiptDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.GoodsReceiptUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.GoodsReceiptUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GoodsReceiptPayload>[]
          }
          upsert: {
            args: Prisma.GoodsReceiptUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GoodsReceiptPayload>
          }
          aggregate: {
            args: Prisma.GoodsReceiptAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateGoodsReceipt>
          }
          groupBy: {
            args: Prisma.GoodsReceiptGroupByArgs<ExtArgs>
            result: $Utils.Optional<GoodsReceiptGroupByOutputType>[]
          }
          count: {
            args: Prisma.GoodsReceiptCountArgs<ExtArgs>
            result: $Utils.Optional<GoodsReceiptCountAggregateOutputType> | number
          }
        }
      }
      GoodsReceiptItem: {
        payload: Prisma.$GoodsReceiptItemPayload<ExtArgs>
        fields: Prisma.GoodsReceiptItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.GoodsReceiptItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GoodsReceiptItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.GoodsReceiptItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GoodsReceiptItemPayload>
          }
          findFirst: {
            args: Prisma.GoodsReceiptItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GoodsReceiptItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.GoodsReceiptItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GoodsReceiptItemPayload>
          }
          findMany: {
            args: Prisma.GoodsReceiptItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GoodsReceiptItemPayload>[]
          }
          create: {
            args: Prisma.GoodsReceiptItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GoodsReceiptItemPayload>
          }
          createMany: {
            args: Prisma.GoodsReceiptItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.GoodsReceiptItemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GoodsReceiptItemPayload>[]
          }
          delete: {
            args: Prisma.GoodsReceiptItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GoodsReceiptItemPayload>
          }
          update: {
            args: Prisma.GoodsReceiptItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GoodsReceiptItemPayload>
          }
          deleteMany: {
            args: Prisma.GoodsReceiptItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.GoodsReceiptItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.GoodsReceiptItemUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GoodsReceiptItemPayload>[]
          }
          upsert: {
            args: Prisma.GoodsReceiptItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GoodsReceiptItemPayload>
          }
          aggregate: {
            args: Prisma.GoodsReceiptItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateGoodsReceiptItem>
          }
          groupBy: {
            args: Prisma.GoodsReceiptItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<GoodsReceiptItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.GoodsReceiptItemCountArgs<ExtArgs>
            result: $Utils.Optional<GoodsReceiptItemCountAggregateOutputType> | number
          }
        }
      }
      Customer: {
        payload: Prisma.$CustomerPayload<ExtArgs>
        fields: Prisma.CustomerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CustomerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CustomerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          findFirst: {
            args: Prisma.CustomerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CustomerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          findMany: {
            args: Prisma.CustomerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>[]
          }
          create: {
            args: Prisma.CustomerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          createMany: {
            args: Prisma.CustomerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CustomerCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>[]
          }
          delete: {
            args: Prisma.CustomerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          update: {
            args: Prisma.CustomerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          deleteMany: {
            args: Prisma.CustomerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CustomerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CustomerUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>[]
          }
          upsert: {
            args: Prisma.CustomerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          aggregate: {
            args: Prisma.CustomerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCustomer>
          }
          groupBy: {
            args: Prisma.CustomerGroupByArgs<ExtArgs>
            result: $Utils.Optional<CustomerGroupByOutputType>[]
          }
          count: {
            args: Prisma.CustomerCountArgs<ExtArgs>
            result: $Utils.Optional<CustomerCountAggregateOutputType> | number
          }
        }
      }
      CustomerContact: {
        payload: Prisma.$CustomerContactPayload<ExtArgs>
        fields: Prisma.CustomerContactFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CustomerContactFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerContactPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CustomerContactFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerContactPayload>
          }
          findFirst: {
            args: Prisma.CustomerContactFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerContactPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CustomerContactFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerContactPayload>
          }
          findMany: {
            args: Prisma.CustomerContactFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerContactPayload>[]
          }
          create: {
            args: Prisma.CustomerContactCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerContactPayload>
          }
          createMany: {
            args: Prisma.CustomerContactCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CustomerContactCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerContactPayload>[]
          }
          delete: {
            args: Prisma.CustomerContactDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerContactPayload>
          }
          update: {
            args: Prisma.CustomerContactUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerContactPayload>
          }
          deleteMany: {
            args: Prisma.CustomerContactDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CustomerContactUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CustomerContactUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerContactPayload>[]
          }
          upsert: {
            args: Prisma.CustomerContactUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerContactPayload>
          }
          aggregate: {
            args: Prisma.CustomerContactAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCustomerContact>
          }
          groupBy: {
            args: Prisma.CustomerContactGroupByArgs<ExtArgs>
            result: $Utils.Optional<CustomerContactGroupByOutputType>[]
          }
          count: {
            args: Prisma.CustomerContactCountArgs<ExtArgs>
            result: $Utils.Optional<CustomerContactCountAggregateOutputType> | number
          }
        }
      }
      Order: {
        payload: Prisma.$OrderPayload<ExtArgs>
        fields: Prisma.OrderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          findFirst: {
            args: Prisma.OrderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          findMany: {
            args: Prisma.OrderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>[]
          }
          create: {
            args: Prisma.OrderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          createMany: {
            args: Prisma.OrderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrderCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>[]
          }
          delete: {
            args: Prisma.OrderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          update: {
            args: Prisma.OrderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          deleteMany: {
            args: Prisma.OrderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OrderUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>[]
          }
          upsert: {
            args: Prisma.OrderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          aggregate: {
            args: Prisma.OrderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrder>
          }
          groupBy: {
            args: Prisma.OrderGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderCountArgs<ExtArgs>
            result: $Utils.Optional<OrderCountAggregateOutputType> | number
          }
        }
      }
      OrderItem: {
        payload: Prisma.$OrderItemPayload<ExtArgs>
        fields: Prisma.OrderItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          findFirst: {
            args: Prisma.OrderItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          findMany: {
            args: Prisma.OrderItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>[]
          }
          create: {
            args: Prisma.OrderItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          createMany: {
            args: Prisma.OrderItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrderItemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>[]
          }
          delete: {
            args: Prisma.OrderItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          update: {
            args: Prisma.OrderItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          deleteMany: {
            args: Prisma.OrderItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OrderItemUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>[]
          }
          upsert: {
            args: Prisma.OrderItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          aggregate: {
            args: Prisma.OrderItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrderItem>
          }
          groupBy: {
            args: Prisma.OrderItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderItemCountArgs<ExtArgs>
            result: $Utils.Optional<OrderItemCountAggregateOutputType> | number
          }
        }
      }
      Shipment: {
        payload: Prisma.$ShipmentPayload<ExtArgs>
        fields: Prisma.ShipmentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ShipmentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ShipmentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentPayload>
          }
          findFirst: {
            args: Prisma.ShipmentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ShipmentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentPayload>
          }
          findMany: {
            args: Prisma.ShipmentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentPayload>[]
          }
          create: {
            args: Prisma.ShipmentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentPayload>
          }
          createMany: {
            args: Prisma.ShipmentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ShipmentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentPayload>[]
          }
          delete: {
            args: Prisma.ShipmentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentPayload>
          }
          update: {
            args: Prisma.ShipmentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentPayload>
          }
          deleteMany: {
            args: Prisma.ShipmentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ShipmentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ShipmentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentPayload>[]
          }
          upsert: {
            args: Prisma.ShipmentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentPayload>
          }
          aggregate: {
            args: Prisma.ShipmentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateShipment>
          }
          groupBy: {
            args: Prisma.ShipmentGroupByArgs<ExtArgs>
            result: $Utils.Optional<ShipmentGroupByOutputType>[]
          }
          count: {
            args: Prisma.ShipmentCountArgs<ExtArgs>
            result: $Utils.Optional<ShipmentCountAggregateOutputType> | number
          }
        }
      }
      ShipmentPackage: {
        payload: Prisma.$ShipmentPackagePayload<ExtArgs>
        fields: Prisma.ShipmentPackageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ShipmentPackageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentPackagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ShipmentPackageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentPackagePayload>
          }
          findFirst: {
            args: Prisma.ShipmentPackageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentPackagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ShipmentPackageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentPackagePayload>
          }
          findMany: {
            args: Prisma.ShipmentPackageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentPackagePayload>[]
          }
          create: {
            args: Prisma.ShipmentPackageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentPackagePayload>
          }
          createMany: {
            args: Prisma.ShipmentPackageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ShipmentPackageCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentPackagePayload>[]
          }
          delete: {
            args: Prisma.ShipmentPackageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentPackagePayload>
          }
          update: {
            args: Prisma.ShipmentPackageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentPackagePayload>
          }
          deleteMany: {
            args: Prisma.ShipmentPackageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ShipmentPackageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ShipmentPackageUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentPackagePayload>[]
          }
          upsert: {
            args: Prisma.ShipmentPackageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentPackagePayload>
          }
          aggregate: {
            args: Prisma.ShipmentPackageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateShipmentPackage>
          }
          groupBy: {
            args: Prisma.ShipmentPackageGroupByArgs<ExtArgs>
            result: $Utils.Optional<ShipmentPackageGroupByOutputType>[]
          }
          count: {
            args: Prisma.ShipmentPackageCountArgs<ExtArgs>
            result: $Utils.Optional<ShipmentPackageCountAggregateOutputType> | number
          }
        }
      }
      ShipmentTracking: {
        payload: Prisma.$ShipmentTrackingPayload<ExtArgs>
        fields: Prisma.ShipmentTrackingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ShipmentTrackingFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentTrackingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ShipmentTrackingFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentTrackingPayload>
          }
          findFirst: {
            args: Prisma.ShipmentTrackingFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentTrackingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ShipmentTrackingFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentTrackingPayload>
          }
          findMany: {
            args: Prisma.ShipmentTrackingFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentTrackingPayload>[]
          }
          create: {
            args: Prisma.ShipmentTrackingCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentTrackingPayload>
          }
          createMany: {
            args: Prisma.ShipmentTrackingCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ShipmentTrackingCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentTrackingPayload>[]
          }
          delete: {
            args: Prisma.ShipmentTrackingDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentTrackingPayload>
          }
          update: {
            args: Prisma.ShipmentTrackingUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentTrackingPayload>
          }
          deleteMany: {
            args: Prisma.ShipmentTrackingDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ShipmentTrackingUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ShipmentTrackingUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentTrackingPayload>[]
          }
          upsert: {
            args: Prisma.ShipmentTrackingUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentTrackingPayload>
          }
          aggregate: {
            args: Prisma.ShipmentTrackingAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateShipmentTracking>
          }
          groupBy: {
            args: Prisma.ShipmentTrackingGroupByArgs<ExtArgs>
            result: $Utils.Optional<ShipmentTrackingGroupByOutputType>[]
          }
          count: {
            args: Prisma.ShipmentTrackingCountArgs<ExtArgs>
            result: $Utils.Optional<ShipmentTrackingCountAggregateOutputType> | number
          }
        }
      }
      StockTransfer: {
        payload: Prisma.$StockTransferPayload<ExtArgs>
        fields: Prisma.StockTransferFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StockTransferFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockTransferPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StockTransferFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockTransferPayload>
          }
          findFirst: {
            args: Prisma.StockTransferFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockTransferPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StockTransferFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockTransferPayload>
          }
          findMany: {
            args: Prisma.StockTransferFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockTransferPayload>[]
          }
          create: {
            args: Prisma.StockTransferCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockTransferPayload>
          }
          createMany: {
            args: Prisma.StockTransferCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.StockTransferCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockTransferPayload>[]
          }
          delete: {
            args: Prisma.StockTransferDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockTransferPayload>
          }
          update: {
            args: Prisma.StockTransferUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockTransferPayload>
          }
          deleteMany: {
            args: Prisma.StockTransferDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StockTransferUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.StockTransferUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockTransferPayload>[]
          }
          upsert: {
            args: Prisma.StockTransferUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockTransferPayload>
          }
          aggregate: {
            args: Prisma.StockTransferAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStockTransfer>
          }
          groupBy: {
            args: Prisma.StockTransferGroupByArgs<ExtArgs>
            result: $Utils.Optional<StockTransferGroupByOutputType>[]
          }
          count: {
            args: Prisma.StockTransferCountArgs<ExtArgs>
            result: $Utils.Optional<StockTransferCountAggregateOutputType> | number
          }
        }
      }
      StockTransferItem: {
        payload: Prisma.$StockTransferItemPayload<ExtArgs>
        fields: Prisma.StockTransferItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StockTransferItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockTransferItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StockTransferItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockTransferItemPayload>
          }
          findFirst: {
            args: Prisma.StockTransferItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockTransferItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StockTransferItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockTransferItemPayload>
          }
          findMany: {
            args: Prisma.StockTransferItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockTransferItemPayload>[]
          }
          create: {
            args: Prisma.StockTransferItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockTransferItemPayload>
          }
          createMany: {
            args: Prisma.StockTransferItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.StockTransferItemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockTransferItemPayload>[]
          }
          delete: {
            args: Prisma.StockTransferItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockTransferItemPayload>
          }
          update: {
            args: Prisma.StockTransferItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockTransferItemPayload>
          }
          deleteMany: {
            args: Prisma.StockTransferItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StockTransferItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.StockTransferItemUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockTransferItemPayload>[]
          }
          upsert: {
            args: Prisma.StockTransferItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockTransferItemPayload>
          }
          aggregate: {
            args: Prisma.StockTransferItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStockTransferItem>
          }
          groupBy: {
            args: Prisma.StockTransferItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<StockTransferItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.StockTransferItemCountArgs<ExtArgs>
            result: $Utils.Optional<StockTransferItemCountAggregateOutputType> | number
          }
        }
      }
      StockReservation: {
        payload: Prisma.$StockReservationPayload<ExtArgs>
        fields: Prisma.StockReservationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StockReservationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockReservationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StockReservationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockReservationPayload>
          }
          findFirst: {
            args: Prisma.StockReservationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockReservationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StockReservationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockReservationPayload>
          }
          findMany: {
            args: Prisma.StockReservationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockReservationPayload>[]
          }
          create: {
            args: Prisma.StockReservationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockReservationPayload>
          }
          createMany: {
            args: Prisma.StockReservationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.StockReservationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockReservationPayload>[]
          }
          delete: {
            args: Prisma.StockReservationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockReservationPayload>
          }
          update: {
            args: Prisma.StockReservationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockReservationPayload>
          }
          deleteMany: {
            args: Prisma.StockReservationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StockReservationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.StockReservationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockReservationPayload>[]
          }
          upsert: {
            args: Prisma.StockReservationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockReservationPayload>
          }
          aggregate: {
            args: Prisma.StockReservationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStockReservation>
          }
          groupBy: {
            args: Prisma.StockReservationGroupByArgs<ExtArgs>
            result: $Utils.Optional<StockReservationGroupByOutputType>[]
          }
          count: {
            args: Prisma.StockReservationCountArgs<ExtArgs>
            result: $Utils.Optional<StockReservationCountAggregateOutputType> | number
          }
        }
      }
      SupplierInvoice: {
        payload: Prisma.$SupplierInvoicePayload<ExtArgs>
        fields: Prisma.SupplierInvoiceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SupplierInvoiceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierInvoicePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SupplierInvoiceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierInvoicePayload>
          }
          findFirst: {
            args: Prisma.SupplierInvoiceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierInvoicePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SupplierInvoiceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierInvoicePayload>
          }
          findMany: {
            args: Prisma.SupplierInvoiceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierInvoicePayload>[]
          }
          create: {
            args: Prisma.SupplierInvoiceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierInvoicePayload>
          }
          createMany: {
            args: Prisma.SupplierInvoiceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SupplierInvoiceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierInvoicePayload>[]
          }
          delete: {
            args: Prisma.SupplierInvoiceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierInvoicePayload>
          }
          update: {
            args: Prisma.SupplierInvoiceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierInvoicePayload>
          }
          deleteMany: {
            args: Prisma.SupplierInvoiceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SupplierInvoiceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SupplierInvoiceUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierInvoicePayload>[]
          }
          upsert: {
            args: Prisma.SupplierInvoiceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierInvoicePayload>
          }
          aggregate: {
            args: Prisma.SupplierInvoiceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSupplierInvoice>
          }
          groupBy: {
            args: Prisma.SupplierInvoiceGroupByArgs<ExtArgs>
            result: $Utils.Optional<SupplierInvoiceGroupByOutputType>[]
          }
          count: {
            args: Prisma.SupplierInvoiceCountArgs<ExtArgs>
            result: $Utils.Optional<SupplierInvoiceCountAggregateOutputType> | number
          }
        }
      }
      CustomerInvoice: {
        payload: Prisma.$CustomerInvoicePayload<ExtArgs>
        fields: Prisma.CustomerInvoiceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CustomerInvoiceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerInvoicePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CustomerInvoiceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerInvoicePayload>
          }
          findFirst: {
            args: Prisma.CustomerInvoiceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerInvoicePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CustomerInvoiceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerInvoicePayload>
          }
          findMany: {
            args: Prisma.CustomerInvoiceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerInvoicePayload>[]
          }
          create: {
            args: Prisma.CustomerInvoiceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerInvoicePayload>
          }
          createMany: {
            args: Prisma.CustomerInvoiceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CustomerInvoiceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerInvoicePayload>[]
          }
          delete: {
            args: Prisma.CustomerInvoiceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerInvoicePayload>
          }
          update: {
            args: Prisma.CustomerInvoiceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerInvoicePayload>
          }
          deleteMany: {
            args: Prisma.CustomerInvoiceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CustomerInvoiceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CustomerInvoiceUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerInvoicePayload>[]
          }
          upsert: {
            args: Prisma.CustomerInvoiceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerInvoicePayload>
          }
          aggregate: {
            args: Prisma.CustomerInvoiceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCustomerInvoice>
          }
          groupBy: {
            args: Prisma.CustomerInvoiceGroupByArgs<ExtArgs>
            result: $Utils.Optional<CustomerInvoiceGroupByOutputType>[]
          }
          count: {
            args: Prisma.CustomerInvoiceCountArgs<ExtArgs>
            result: $Utils.Optional<CustomerInvoiceCountAggregateOutputType> | number
          }
        }
      }
      InventoryAudit: {
        payload: Prisma.$InventoryAuditPayload<ExtArgs>
        fields: Prisma.InventoryAuditFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InventoryAuditFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryAuditPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InventoryAuditFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryAuditPayload>
          }
          findFirst: {
            args: Prisma.InventoryAuditFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryAuditPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InventoryAuditFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryAuditPayload>
          }
          findMany: {
            args: Prisma.InventoryAuditFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryAuditPayload>[]
          }
          create: {
            args: Prisma.InventoryAuditCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryAuditPayload>
          }
          createMany: {
            args: Prisma.InventoryAuditCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InventoryAuditCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryAuditPayload>[]
          }
          delete: {
            args: Prisma.InventoryAuditDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryAuditPayload>
          }
          update: {
            args: Prisma.InventoryAuditUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryAuditPayload>
          }
          deleteMany: {
            args: Prisma.InventoryAuditDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InventoryAuditUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.InventoryAuditUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryAuditPayload>[]
          }
          upsert: {
            args: Prisma.InventoryAuditUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryAuditPayload>
          }
          aggregate: {
            args: Prisma.InventoryAuditAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInventoryAudit>
          }
          groupBy: {
            args: Prisma.InventoryAuditGroupByArgs<ExtArgs>
            result: $Utils.Optional<InventoryAuditGroupByOutputType>[]
          }
          count: {
            args: Prisma.InventoryAuditCountArgs<ExtArgs>
            result: $Utils.Optional<InventoryAuditCountAggregateOutputType> | number
          }
        }
      }
      InventoryAuditItem: {
        payload: Prisma.$InventoryAuditItemPayload<ExtArgs>
        fields: Prisma.InventoryAuditItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InventoryAuditItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryAuditItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InventoryAuditItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryAuditItemPayload>
          }
          findFirst: {
            args: Prisma.InventoryAuditItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryAuditItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InventoryAuditItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryAuditItemPayload>
          }
          findMany: {
            args: Prisma.InventoryAuditItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryAuditItemPayload>[]
          }
          create: {
            args: Prisma.InventoryAuditItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryAuditItemPayload>
          }
          createMany: {
            args: Prisma.InventoryAuditItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InventoryAuditItemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryAuditItemPayload>[]
          }
          delete: {
            args: Prisma.InventoryAuditItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryAuditItemPayload>
          }
          update: {
            args: Prisma.InventoryAuditItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryAuditItemPayload>
          }
          deleteMany: {
            args: Prisma.InventoryAuditItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InventoryAuditItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.InventoryAuditItemUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryAuditItemPayload>[]
          }
          upsert: {
            args: Prisma.InventoryAuditItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryAuditItemPayload>
          }
          aggregate: {
            args: Prisma.InventoryAuditItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInventoryAuditItem>
          }
          groupBy: {
            args: Prisma.InventoryAuditItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<InventoryAuditItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.InventoryAuditItemCountArgs<ExtArgs>
            result: $Utils.Optional<InventoryAuditItemCountAggregateOutputType> | number
          }
        }
      }
      ProductReview: {
        payload: Prisma.$ProductReviewPayload<ExtArgs>
        fields: Prisma.ProductReviewFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductReviewFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductReviewPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductReviewFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductReviewPayload>
          }
          findFirst: {
            args: Prisma.ProductReviewFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductReviewPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductReviewFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductReviewPayload>
          }
          findMany: {
            args: Prisma.ProductReviewFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductReviewPayload>[]
          }
          create: {
            args: Prisma.ProductReviewCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductReviewPayload>
          }
          createMany: {
            args: Prisma.ProductReviewCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductReviewCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductReviewPayload>[]
          }
          delete: {
            args: Prisma.ProductReviewDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductReviewPayload>
          }
          update: {
            args: Prisma.ProductReviewUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductReviewPayload>
          }
          deleteMany: {
            args: Prisma.ProductReviewDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductReviewUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductReviewUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductReviewPayload>[]
          }
          upsert: {
            args: Prisma.ProductReviewUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductReviewPayload>
          }
          aggregate: {
            args: Prisma.ProductReviewAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductReview>
          }
          groupBy: {
            args: Prisma.ProductReviewGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductReviewGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductReviewCountArgs<ExtArgs>
            result: $Utils.Optional<ProductReviewCountAggregateOutputType> | number
          }
        }
      }
      SystemConfiguration: {
        payload: Prisma.$SystemConfigurationPayload<ExtArgs>
        fields: Prisma.SystemConfigurationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SystemConfigurationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemConfigurationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SystemConfigurationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemConfigurationPayload>
          }
          findFirst: {
            args: Prisma.SystemConfigurationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemConfigurationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SystemConfigurationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemConfigurationPayload>
          }
          findMany: {
            args: Prisma.SystemConfigurationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemConfigurationPayload>[]
          }
          create: {
            args: Prisma.SystemConfigurationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemConfigurationPayload>
          }
          createMany: {
            args: Prisma.SystemConfigurationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SystemConfigurationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemConfigurationPayload>[]
          }
          delete: {
            args: Prisma.SystemConfigurationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemConfigurationPayload>
          }
          update: {
            args: Prisma.SystemConfigurationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemConfigurationPayload>
          }
          deleteMany: {
            args: Prisma.SystemConfigurationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SystemConfigurationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SystemConfigurationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemConfigurationPayload>[]
          }
          upsert: {
            args: Prisma.SystemConfigurationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemConfigurationPayload>
          }
          aggregate: {
            args: Prisma.SystemConfigurationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSystemConfiguration>
          }
          groupBy: {
            args: Prisma.SystemConfigurationGroupByArgs<ExtArgs>
            result: $Utils.Optional<SystemConfigurationGroupByOutputType>[]
          }
          count: {
            args: Prisma.SystemConfigurationCountArgs<ExtArgs>
            result: $Utils.Optional<SystemConfigurationCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    product?: ProductOmit
    productVariant?: ProductVariantOmit
    category?: CategoryOmit
    brand?: BrandOmit
    productBundle?: ProductBundleOmit
    warehouse?: WarehouseOmit
    inventoryItem?: InventoryItemOmit
    inventoryMovement?: InventoryMovementOmit
    supplier?: SupplierOmit
    productSupplier?: ProductSupplierOmit
    supplierContact?: SupplierContactOmit
    supplierDocument?: SupplierDocumentOmit
    purchaseOrder?: PurchaseOrderOmit
    purchaseOrderItem?: PurchaseOrderItemOmit
    goodsReceipt?: GoodsReceiptOmit
    goodsReceiptItem?: GoodsReceiptItemOmit
    customer?: CustomerOmit
    customerContact?: CustomerContactOmit
    order?: OrderOmit
    orderItem?: OrderItemOmit
    shipment?: ShipmentOmit
    shipmentPackage?: ShipmentPackageOmit
    shipmentTracking?: ShipmentTrackingOmit
    stockTransfer?: StockTransferOmit
    stockTransferItem?: StockTransferItemOmit
    stockReservation?: StockReservationOmit
    supplierInvoice?: SupplierInvoiceOmit
    customerInvoice?: CustomerInvoiceOmit
    inventoryAudit?: InventoryAuditOmit
    inventoryAuditItem?: InventoryAuditItemOmit
    productReview?: ProductReviewOmit
    systemConfiguration?: SystemConfigurationOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type ProductCountOutputType
   */

  export type ProductCountOutputType = {
    inventoryItems: number
    variants: number
    suppliers: number
    orderItems: number
    purchaseItems: number
    movements: number
    audits: number
    reviews: number
    bundles: number
    bundleItems: number
    goodsReceiptItems: number
    transferItems: number
    auditItems: number
  }

  export type ProductCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inventoryItems?: boolean | ProductCountOutputTypeCountInventoryItemsArgs
    variants?: boolean | ProductCountOutputTypeCountVariantsArgs
    suppliers?: boolean | ProductCountOutputTypeCountSuppliersArgs
    orderItems?: boolean | ProductCountOutputTypeCountOrderItemsArgs
    purchaseItems?: boolean | ProductCountOutputTypeCountPurchaseItemsArgs
    movements?: boolean | ProductCountOutputTypeCountMovementsArgs
    audits?: boolean | ProductCountOutputTypeCountAuditsArgs
    reviews?: boolean | ProductCountOutputTypeCountReviewsArgs
    bundles?: boolean | ProductCountOutputTypeCountBundlesArgs
    bundleItems?: boolean | ProductCountOutputTypeCountBundleItemsArgs
    goodsReceiptItems?: boolean | ProductCountOutputTypeCountGoodsReceiptItemsArgs
    transferItems?: boolean | ProductCountOutputTypeCountTransferItemsArgs
    auditItems?: boolean | ProductCountOutputTypeCountAuditItemsArgs
  }

  // Custom InputTypes
  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCountOutputType
     */
    select?: ProductCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountInventoryItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventoryItemWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountVariantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductVariantWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountSuppliersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductSupplierWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountOrderItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderItemWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountPurchaseItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PurchaseOrderItemWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountMovementsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventoryMovementWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountAuditsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventoryAuditWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountReviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductReviewWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountBundlesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductBundleWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountBundleItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductBundleWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountGoodsReceiptItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GoodsReceiptItemWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountTransferItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockTransferItemWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountAuditItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventoryAuditItemWhereInput
  }


  /**
   * Count Type ProductVariantCountOutputType
   */

  export type ProductVariantCountOutputType = {
    inventoryItems: number
    movements: number
    purchaseItems: number
    goodsReceiptItems: number
    orderItems: number
    transferItems: number
    auditItems: number
  }

  export type ProductVariantCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inventoryItems?: boolean | ProductVariantCountOutputTypeCountInventoryItemsArgs
    movements?: boolean | ProductVariantCountOutputTypeCountMovementsArgs
    purchaseItems?: boolean | ProductVariantCountOutputTypeCountPurchaseItemsArgs
    goodsReceiptItems?: boolean | ProductVariantCountOutputTypeCountGoodsReceiptItemsArgs
    orderItems?: boolean | ProductVariantCountOutputTypeCountOrderItemsArgs
    transferItems?: boolean | ProductVariantCountOutputTypeCountTransferItemsArgs
    auditItems?: boolean | ProductVariantCountOutputTypeCountAuditItemsArgs
  }

  // Custom InputTypes
  /**
   * ProductVariantCountOutputType without action
   */
  export type ProductVariantCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariantCountOutputType
     */
    select?: ProductVariantCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductVariantCountOutputType without action
   */
  export type ProductVariantCountOutputTypeCountInventoryItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventoryItemWhereInput
  }

  /**
   * ProductVariantCountOutputType without action
   */
  export type ProductVariantCountOutputTypeCountMovementsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventoryMovementWhereInput
  }

  /**
   * ProductVariantCountOutputType without action
   */
  export type ProductVariantCountOutputTypeCountPurchaseItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PurchaseOrderItemWhereInput
  }

  /**
   * ProductVariantCountOutputType without action
   */
  export type ProductVariantCountOutputTypeCountGoodsReceiptItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GoodsReceiptItemWhereInput
  }

  /**
   * ProductVariantCountOutputType without action
   */
  export type ProductVariantCountOutputTypeCountOrderItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderItemWhereInput
  }

  /**
   * ProductVariantCountOutputType without action
   */
  export type ProductVariantCountOutputTypeCountTransferItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockTransferItemWhereInput
  }

  /**
   * ProductVariantCountOutputType without action
   */
  export type ProductVariantCountOutputTypeCountAuditItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventoryAuditItemWhereInput
  }


  /**
   * Count Type CategoryCountOutputType
   */

  export type CategoryCountOutputType = {
    children: number
    products: number
  }

  export type CategoryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    children?: boolean | CategoryCountOutputTypeCountChildrenArgs
    products?: boolean | CategoryCountOutputTypeCountProductsArgs
  }

  // Custom InputTypes
  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryCountOutputType
     */
    select?: CategoryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountChildrenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }


  /**
   * Count Type BrandCountOutputType
   */

  export type BrandCountOutputType = {
    products: number
  }

  export type BrandCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | BrandCountOutputTypeCountProductsArgs
  }

  // Custom InputTypes
  /**
   * BrandCountOutputType without action
   */
  export type BrandCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BrandCountOutputType
     */
    select?: BrandCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BrandCountOutputType without action
   */
  export type BrandCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }


  /**
   * Count Type ProductBundleCountOutputType
   */

  export type ProductBundleCountOutputType = {
    products: number
    bundleItems: number
  }

  export type ProductBundleCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | ProductBundleCountOutputTypeCountProductsArgs
    bundleItems?: boolean | ProductBundleCountOutputTypeCountBundleItemsArgs
  }

  // Custom InputTypes
  /**
   * ProductBundleCountOutputType without action
   */
  export type ProductBundleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductBundleCountOutputType
     */
    select?: ProductBundleCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductBundleCountOutputType without action
   */
  export type ProductBundleCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }

  /**
   * ProductBundleCountOutputType without action
   */
  export type ProductBundleCountOutputTypeCountBundleItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }


  /**
   * Count Type WarehouseCountOutputType
   */

  export type WarehouseCountOutputType = {
    inventoryItems: number
    movements: number
    transfers: number
    receivedTransfers: number
    orders: number
    purchaseOrders: number
    audits: number
    goodsReceipts: number
    shipments: number
    auditItems: number
  }

  export type WarehouseCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inventoryItems?: boolean | WarehouseCountOutputTypeCountInventoryItemsArgs
    movements?: boolean | WarehouseCountOutputTypeCountMovementsArgs
    transfers?: boolean | WarehouseCountOutputTypeCountTransfersArgs
    receivedTransfers?: boolean | WarehouseCountOutputTypeCountReceivedTransfersArgs
    orders?: boolean | WarehouseCountOutputTypeCountOrdersArgs
    purchaseOrders?: boolean | WarehouseCountOutputTypeCountPurchaseOrdersArgs
    audits?: boolean | WarehouseCountOutputTypeCountAuditsArgs
    goodsReceipts?: boolean | WarehouseCountOutputTypeCountGoodsReceiptsArgs
    shipments?: boolean | WarehouseCountOutputTypeCountShipmentsArgs
    auditItems?: boolean | WarehouseCountOutputTypeCountAuditItemsArgs
  }

  // Custom InputTypes
  /**
   * WarehouseCountOutputType without action
   */
  export type WarehouseCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WarehouseCountOutputType
     */
    select?: WarehouseCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * WarehouseCountOutputType without action
   */
  export type WarehouseCountOutputTypeCountInventoryItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventoryItemWhereInput
  }

  /**
   * WarehouseCountOutputType without action
   */
  export type WarehouseCountOutputTypeCountMovementsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventoryMovementWhereInput
  }

  /**
   * WarehouseCountOutputType without action
   */
  export type WarehouseCountOutputTypeCountTransfersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockTransferWhereInput
  }

  /**
   * WarehouseCountOutputType without action
   */
  export type WarehouseCountOutputTypeCountReceivedTransfersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockTransferWhereInput
  }

  /**
   * WarehouseCountOutputType without action
   */
  export type WarehouseCountOutputTypeCountOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }

  /**
   * WarehouseCountOutputType without action
   */
  export type WarehouseCountOutputTypeCountPurchaseOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PurchaseOrderWhereInput
  }

  /**
   * WarehouseCountOutputType without action
   */
  export type WarehouseCountOutputTypeCountAuditsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventoryAuditWhereInput
  }

  /**
   * WarehouseCountOutputType without action
   */
  export type WarehouseCountOutputTypeCountGoodsReceiptsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GoodsReceiptWhereInput
  }

  /**
   * WarehouseCountOutputType without action
   */
  export type WarehouseCountOutputTypeCountShipmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShipmentWhereInput
  }

  /**
   * WarehouseCountOutputType without action
   */
  export type WarehouseCountOutputTypeCountAuditItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventoryAuditItemWhereInput
  }


  /**
   * Count Type InventoryItemCountOutputType
   */

  export type InventoryItemCountOutputType = {
    movements: number
    reservations: number
  }

  export type InventoryItemCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    movements?: boolean | InventoryItemCountOutputTypeCountMovementsArgs
    reservations?: boolean | InventoryItemCountOutputTypeCountReservationsArgs
  }

  // Custom InputTypes
  /**
   * InventoryItemCountOutputType without action
   */
  export type InventoryItemCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryItemCountOutputType
     */
    select?: InventoryItemCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * InventoryItemCountOutputType without action
   */
  export type InventoryItemCountOutputTypeCountMovementsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventoryMovementWhereInput
  }

  /**
   * InventoryItemCountOutputType without action
   */
  export type InventoryItemCountOutputTypeCountReservationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockReservationWhereInput
  }


  /**
   * Count Type SupplierCountOutputType
   */

  export type SupplierCountOutputType = {
    products: number
    purchaseOrders: number
    invoices: number
    contacts: number
    documents: number
  }

  export type SupplierCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | SupplierCountOutputTypeCountProductsArgs
    purchaseOrders?: boolean | SupplierCountOutputTypeCountPurchaseOrdersArgs
    invoices?: boolean | SupplierCountOutputTypeCountInvoicesArgs
    contacts?: boolean | SupplierCountOutputTypeCountContactsArgs
    documents?: boolean | SupplierCountOutputTypeCountDocumentsArgs
  }

  // Custom InputTypes
  /**
   * SupplierCountOutputType without action
   */
  export type SupplierCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierCountOutputType
     */
    select?: SupplierCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SupplierCountOutputType without action
   */
  export type SupplierCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductSupplierWhereInput
  }

  /**
   * SupplierCountOutputType without action
   */
  export type SupplierCountOutputTypeCountPurchaseOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PurchaseOrderWhereInput
  }

  /**
   * SupplierCountOutputType without action
   */
  export type SupplierCountOutputTypeCountInvoicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupplierInvoiceWhereInput
  }

  /**
   * SupplierCountOutputType without action
   */
  export type SupplierCountOutputTypeCountContactsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupplierContactWhereInput
  }

  /**
   * SupplierCountOutputType without action
   */
  export type SupplierCountOutputTypeCountDocumentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupplierDocumentWhereInput
  }


  /**
   * Count Type PurchaseOrderCountOutputType
   */

  export type PurchaseOrderCountOutputType = {
    items: number
    receipts: number
    invoices: number
  }

  export type PurchaseOrderCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | PurchaseOrderCountOutputTypeCountItemsArgs
    receipts?: boolean | PurchaseOrderCountOutputTypeCountReceiptsArgs
    invoices?: boolean | PurchaseOrderCountOutputTypeCountInvoicesArgs
  }

  // Custom InputTypes
  /**
   * PurchaseOrderCountOutputType without action
   */
  export type PurchaseOrderCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrderCountOutputType
     */
    select?: PurchaseOrderCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PurchaseOrderCountOutputType without action
   */
  export type PurchaseOrderCountOutputTypeCountItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PurchaseOrderItemWhereInput
  }

  /**
   * PurchaseOrderCountOutputType without action
   */
  export type PurchaseOrderCountOutputTypeCountReceiptsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GoodsReceiptWhereInput
  }

  /**
   * PurchaseOrderCountOutputType without action
   */
  export type PurchaseOrderCountOutputTypeCountInvoicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupplierInvoiceWhereInput
  }


  /**
   * Count Type GoodsReceiptCountOutputType
   */

  export type GoodsReceiptCountOutputType = {
    items: number
  }

  export type GoodsReceiptCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | GoodsReceiptCountOutputTypeCountItemsArgs
  }

  // Custom InputTypes
  /**
   * GoodsReceiptCountOutputType without action
   */
  export type GoodsReceiptCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoodsReceiptCountOutputType
     */
    select?: GoodsReceiptCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * GoodsReceiptCountOutputType without action
   */
  export type GoodsReceiptCountOutputTypeCountItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GoodsReceiptItemWhereInput
  }


  /**
   * Count Type CustomerCountOutputType
   */

  export type CustomerCountOutputType = {
    orders: number
    invoices: number
    contacts: number
  }

  export type CustomerCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | CustomerCountOutputTypeCountOrdersArgs
    invoices?: boolean | CustomerCountOutputTypeCountInvoicesArgs
    contacts?: boolean | CustomerCountOutputTypeCountContactsArgs
  }

  // Custom InputTypes
  /**
   * CustomerCountOutputType without action
   */
  export type CustomerCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerCountOutputType
     */
    select?: CustomerCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CustomerCountOutputType without action
   */
  export type CustomerCountOutputTypeCountOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }

  /**
   * CustomerCountOutputType without action
   */
  export type CustomerCountOutputTypeCountInvoicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CustomerInvoiceWhereInput
  }

  /**
   * CustomerCountOutputType without action
   */
  export type CustomerCountOutputTypeCountContactsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CustomerContactWhereInput
  }


  /**
   * Count Type OrderCountOutputType
   */

  export type OrderCountOutputType = {
    items: number
    shipments: number
    invoices: number
  }

  export type OrderCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | OrderCountOutputTypeCountItemsArgs
    shipments?: boolean | OrderCountOutputTypeCountShipmentsArgs
    invoices?: boolean | OrderCountOutputTypeCountInvoicesArgs
  }

  // Custom InputTypes
  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderCountOutputType
     */
    select?: OrderCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderItemWhereInput
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountShipmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShipmentWhereInput
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountInvoicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CustomerInvoiceWhereInput
  }


  /**
   * Count Type ShipmentCountOutputType
   */

  export type ShipmentCountOutputType = {
    packages: number
    tracking: number
  }

  export type ShipmentCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    packages?: boolean | ShipmentCountOutputTypeCountPackagesArgs
    tracking?: boolean | ShipmentCountOutputTypeCountTrackingArgs
  }

  // Custom InputTypes
  /**
   * ShipmentCountOutputType without action
   */
  export type ShipmentCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentCountOutputType
     */
    select?: ShipmentCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ShipmentCountOutputType without action
   */
  export type ShipmentCountOutputTypeCountPackagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShipmentPackageWhereInput
  }

  /**
   * ShipmentCountOutputType without action
   */
  export type ShipmentCountOutputTypeCountTrackingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShipmentTrackingWhereInput
  }


  /**
   * Count Type StockTransferCountOutputType
   */

  export type StockTransferCountOutputType = {
    items: number
  }

  export type StockTransferCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | StockTransferCountOutputTypeCountItemsArgs
  }

  // Custom InputTypes
  /**
   * StockTransferCountOutputType without action
   */
  export type StockTransferCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockTransferCountOutputType
     */
    select?: StockTransferCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * StockTransferCountOutputType without action
   */
  export type StockTransferCountOutputTypeCountItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockTransferItemWhereInput
  }


  /**
   * Count Type InventoryAuditCountOutputType
   */

  export type InventoryAuditCountOutputType = {
    items: number
  }

  export type InventoryAuditCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | InventoryAuditCountOutputTypeCountItemsArgs
  }

  // Custom InputTypes
  /**
   * InventoryAuditCountOutputType without action
   */
  export type InventoryAuditCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAuditCountOutputType
     */
    select?: InventoryAuditCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * InventoryAuditCountOutputType without action
   */
  export type InventoryAuditCountOutputTypeCountItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventoryAuditItemWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Product
   */

  export type AggregateProduct = {
    _count: ProductCountAggregateOutputType | null
    _avg: ProductAvgAggregateOutputType | null
    _sum: ProductSumAggregateOutputType | null
    _min: ProductMinAggregateOutputType | null
    _max: ProductMaxAggregateOutputType | null
  }

  export type ProductAvgAggregateOutputType = {
    weight: Decimal | null
    costPrice: Decimal | null
    sellingPrice: Decimal | null
    wholesalePrice: Decimal | null
    minStockLevel: number | null
    maxStockLevel: number | null
    reorderPoint: number | null
    reorderQuantity: number | null
    leadTimeSupply: number | null
    shelfLife: number | null
  }

  export type ProductSumAggregateOutputType = {
    weight: Decimal | null
    costPrice: Decimal | null
    sellingPrice: Decimal | null
    wholesalePrice: Decimal | null
    minStockLevel: number | null
    maxStockLevel: number | null
    reorderPoint: number | null
    reorderQuantity: number | null
    leadTimeSupply: number | null
    shelfLife: number | null
  }

  export type ProductMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    sku: string | null
    barcode: string | null
    slug: string | null
    categoryId: string | null
    brandId: string | null
    weight: Decimal | null
    color: string | null
    size: string | null
    material: string | null
    costPrice: Decimal | null
    sellingPrice: Decimal | null
    wholesalePrice: Decimal | null
    minStockLevel: number | null
    maxStockLevel: number | null
    reorderPoint: number | null
    reorderQuantity: number | null
    status: $Enums.ProductStatus | null
    isTrackable: boolean | null
    isSerialized: boolean | null
    primaryImage: string | null
    metaTitle: string | null
    metaDescription: string | null
    leadTimeSupply: number | null
    shelfLife: number | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
  }

  export type ProductMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    sku: string | null
    barcode: string | null
    slug: string | null
    categoryId: string | null
    brandId: string | null
    weight: Decimal | null
    color: string | null
    size: string | null
    material: string | null
    costPrice: Decimal | null
    sellingPrice: Decimal | null
    wholesalePrice: Decimal | null
    minStockLevel: number | null
    maxStockLevel: number | null
    reorderPoint: number | null
    reorderQuantity: number | null
    status: $Enums.ProductStatus | null
    isTrackable: boolean | null
    isSerialized: boolean | null
    primaryImage: string | null
    metaTitle: string | null
    metaDescription: string | null
    leadTimeSupply: number | null
    shelfLife: number | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
  }

  export type ProductCountAggregateOutputType = {
    id: number
    name: number
    description: number
    sku: number
    barcode: number
    slug: number
    categoryId: number
    brandId: number
    weight: number
    dimensions: number
    color: number
    size: number
    material: number
    costPrice: number
    sellingPrice: number
    wholesalePrice: number
    minStockLevel: number
    maxStockLevel: number
    reorderPoint: number
    reorderQuantity: number
    status: number
    isTrackable: number
    isSerialized: number
    images: number
    primaryImage: number
    metaTitle: number
    metaDescription: number
    tags: number
    leadTimeSupply: number
    shelfLife: number
    createdAt: number
    updatedAt: number
    createdBy: number
    _all: number
  }


  export type ProductAvgAggregateInputType = {
    weight?: true
    costPrice?: true
    sellingPrice?: true
    wholesalePrice?: true
    minStockLevel?: true
    maxStockLevel?: true
    reorderPoint?: true
    reorderQuantity?: true
    leadTimeSupply?: true
    shelfLife?: true
  }

  export type ProductSumAggregateInputType = {
    weight?: true
    costPrice?: true
    sellingPrice?: true
    wholesalePrice?: true
    minStockLevel?: true
    maxStockLevel?: true
    reorderPoint?: true
    reorderQuantity?: true
    leadTimeSupply?: true
    shelfLife?: true
  }

  export type ProductMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    sku?: true
    barcode?: true
    slug?: true
    categoryId?: true
    brandId?: true
    weight?: true
    color?: true
    size?: true
    material?: true
    costPrice?: true
    sellingPrice?: true
    wholesalePrice?: true
    minStockLevel?: true
    maxStockLevel?: true
    reorderPoint?: true
    reorderQuantity?: true
    status?: true
    isTrackable?: true
    isSerialized?: true
    primaryImage?: true
    metaTitle?: true
    metaDescription?: true
    leadTimeSupply?: true
    shelfLife?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
  }

  export type ProductMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    sku?: true
    barcode?: true
    slug?: true
    categoryId?: true
    brandId?: true
    weight?: true
    color?: true
    size?: true
    material?: true
    costPrice?: true
    sellingPrice?: true
    wholesalePrice?: true
    minStockLevel?: true
    maxStockLevel?: true
    reorderPoint?: true
    reorderQuantity?: true
    status?: true
    isTrackable?: true
    isSerialized?: true
    primaryImage?: true
    metaTitle?: true
    metaDescription?: true
    leadTimeSupply?: true
    shelfLife?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
  }

  export type ProductCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    sku?: true
    barcode?: true
    slug?: true
    categoryId?: true
    brandId?: true
    weight?: true
    dimensions?: true
    color?: true
    size?: true
    material?: true
    costPrice?: true
    sellingPrice?: true
    wholesalePrice?: true
    minStockLevel?: true
    maxStockLevel?: true
    reorderPoint?: true
    reorderQuantity?: true
    status?: true
    isTrackable?: true
    isSerialized?: true
    images?: true
    primaryImage?: true
    metaTitle?: true
    metaDescription?: true
    tags?: true
    leadTimeSupply?: true
    shelfLife?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    _all?: true
  }

  export type ProductAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Product to aggregate.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Products
    **/
    _count?: true | ProductCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductMaxAggregateInputType
  }

  export type GetProductAggregateType<T extends ProductAggregateArgs> = {
        [P in keyof T & keyof AggregateProduct]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProduct[P]>
      : GetScalarType<T[P], AggregateProduct[P]>
  }




  export type ProductGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithAggregationInput | ProductOrderByWithAggregationInput[]
    by: ProductScalarFieldEnum[] | ProductScalarFieldEnum
    having?: ProductScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductCountAggregateInputType | true
    _avg?: ProductAvgAggregateInputType
    _sum?: ProductSumAggregateInputType
    _min?: ProductMinAggregateInputType
    _max?: ProductMaxAggregateInputType
  }

  export type ProductGroupByOutputType = {
    id: string
    name: string
    description: string | null
    sku: string
    barcode: string | null
    slug: string | null
    categoryId: string | null
    brandId: string | null
    weight: Decimal | null
    dimensions: JsonValue | null
    color: string | null
    size: string | null
    material: string | null
    costPrice: Decimal | null
    sellingPrice: Decimal | null
    wholesalePrice: Decimal | null
    minStockLevel: number
    maxStockLevel: number | null
    reorderPoint: number | null
    reorderQuantity: number | null
    status: $Enums.ProductStatus
    isTrackable: boolean
    isSerialized: boolean
    images: JsonValue | null
    primaryImage: string | null
    metaTitle: string | null
    metaDescription: string | null
    tags: JsonValue | null
    leadTimeSupply: number | null
    shelfLife: number | null
    createdAt: Date
    updatedAt: Date
    createdBy: string
    _count: ProductCountAggregateOutputType | null
    _avg: ProductAvgAggregateOutputType | null
    _sum: ProductSumAggregateOutputType | null
    _min: ProductMinAggregateOutputType | null
    _max: ProductMaxAggregateOutputType | null
  }

  type GetProductGroupByPayload<T extends ProductGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductGroupByOutputType[P]>
            : GetScalarType<T[P], ProductGroupByOutputType[P]>
        }
      >
    >


  export type ProductSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    sku?: boolean
    barcode?: boolean
    slug?: boolean
    categoryId?: boolean
    brandId?: boolean
    weight?: boolean
    dimensions?: boolean
    color?: boolean
    size?: boolean
    material?: boolean
    costPrice?: boolean
    sellingPrice?: boolean
    wholesalePrice?: boolean
    minStockLevel?: boolean
    maxStockLevel?: boolean
    reorderPoint?: boolean
    reorderQuantity?: boolean
    status?: boolean
    isTrackable?: boolean
    isSerialized?: boolean
    images?: boolean
    primaryImage?: boolean
    metaTitle?: boolean
    metaDescription?: boolean
    tags?: boolean
    leadTimeSupply?: boolean
    shelfLife?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    category?: boolean | Product$categoryArgs<ExtArgs>
    brand?: boolean | Product$brandArgs<ExtArgs>
    inventoryItems?: boolean | Product$inventoryItemsArgs<ExtArgs>
    variants?: boolean | Product$variantsArgs<ExtArgs>
    suppliers?: boolean | Product$suppliersArgs<ExtArgs>
    orderItems?: boolean | Product$orderItemsArgs<ExtArgs>
    purchaseItems?: boolean | Product$purchaseItemsArgs<ExtArgs>
    movements?: boolean | Product$movementsArgs<ExtArgs>
    audits?: boolean | Product$auditsArgs<ExtArgs>
    reviews?: boolean | Product$reviewsArgs<ExtArgs>
    bundles?: boolean | Product$bundlesArgs<ExtArgs>
    bundleItems?: boolean | Product$bundleItemsArgs<ExtArgs>
    goodsReceiptItems?: boolean | Product$goodsReceiptItemsArgs<ExtArgs>
    transferItems?: boolean | Product$transferItemsArgs<ExtArgs>
    auditItems?: boolean | Product$auditItemsArgs<ExtArgs>
    _count?: boolean | ProductCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    sku?: boolean
    barcode?: boolean
    slug?: boolean
    categoryId?: boolean
    brandId?: boolean
    weight?: boolean
    dimensions?: boolean
    color?: boolean
    size?: boolean
    material?: boolean
    costPrice?: boolean
    sellingPrice?: boolean
    wholesalePrice?: boolean
    minStockLevel?: boolean
    maxStockLevel?: boolean
    reorderPoint?: boolean
    reorderQuantity?: boolean
    status?: boolean
    isTrackable?: boolean
    isSerialized?: boolean
    images?: boolean
    primaryImage?: boolean
    metaTitle?: boolean
    metaDescription?: boolean
    tags?: boolean
    leadTimeSupply?: boolean
    shelfLife?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    category?: boolean | Product$categoryArgs<ExtArgs>
    brand?: boolean | Product$brandArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    sku?: boolean
    barcode?: boolean
    slug?: boolean
    categoryId?: boolean
    brandId?: boolean
    weight?: boolean
    dimensions?: boolean
    color?: boolean
    size?: boolean
    material?: boolean
    costPrice?: boolean
    sellingPrice?: boolean
    wholesalePrice?: boolean
    minStockLevel?: boolean
    maxStockLevel?: boolean
    reorderPoint?: boolean
    reorderQuantity?: boolean
    status?: boolean
    isTrackable?: boolean
    isSerialized?: boolean
    images?: boolean
    primaryImage?: boolean
    metaTitle?: boolean
    metaDescription?: boolean
    tags?: boolean
    leadTimeSupply?: boolean
    shelfLife?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    category?: boolean | Product$categoryArgs<ExtArgs>
    brand?: boolean | Product$brandArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    sku?: boolean
    barcode?: boolean
    slug?: boolean
    categoryId?: boolean
    brandId?: boolean
    weight?: boolean
    dimensions?: boolean
    color?: boolean
    size?: boolean
    material?: boolean
    costPrice?: boolean
    sellingPrice?: boolean
    wholesalePrice?: boolean
    minStockLevel?: boolean
    maxStockLevel?: boolean
    reorderPoint?: boolean
    reorderQuantity?: boolean
    status?: boolean
    isTrackable?: boolean
    isSerialized?: boolean
    images?: boolean
    primaryImage?: boolean
    metaTitle?: boolean
    metaDescription?: boolean
    tags?: boolean
    leadTimeSupply?: boolean
    shelfLife?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
  }

  export type ProductOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "sku" | "barcode" | "slug" | "categoryId" | "brandId" | "weight" | "dimensions" | "color" | "size" | "material" | "costPrice" | "sellingPrice" | "wholesalePrice" | "minStockLevel" | "maxStockLevel" | "reorderPoint" | "reorderQuantity" | "status" | "isTrackable" | "isSerialized" | "images" | "primaryImage" | "metaTitle" | "metaDescription" | "tags" | "leadTimeSupply" | "shelfLife" | "createdAt" | "updatedAt" | "createdBy", ExtArgs["result"]["product"]>
  export type ProductInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | Product$categoryArgs<ExtArgs>
    brand?: boolean | Product$brandArgs<ExtArgs>
    inventoryItems?: boolean | Product$inventoryItemsArgs<ExtArgs>
    variants?: boolean | Product$variantsArgs<ExtArgs>
    suppliers?: boolean | Product$suppliersArgs<ExtArgs>
    orderItems?: boolean | Product$orderItemsArgs<ExtArgs>
    purchaseItems?: boolean | Product$purchaseItemsArgs<ExtArgs>
    movements?: boolean | Product$movementsArgs<ExtArgs>
    audits?: boolean | Product$auditsArgs<ExtArgs>
    reviews?: boolean | Product$reviewsArgs<ExtArgs>
    bundles?: boolean | Product$bundlesArgs<ExtArgs>
    bundleItems?: boolean | Product$bundleItemsArgs<ExtArgs>
    goodsReceiptItems?: boolean | Product$goodsReceiptItemsArgs<ExtArgs>
    transferItems?: boolean | Product$transferItemsArgs<ExtArgs>
    auditItems?: boolean | Product$auditItemsArgs<ExtArgs>
    _count?: boolean | ProductCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProductIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | Product$categoryArgs<ExtArgs>
    brand?: boolean | Product$brandArgs<ExtArgs>
  }
  export type ProductIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | Product$categoryArgs<ExtArgs>
    brand?: boolean | Product$brandArgs<ExtArgs>
  }

  export type $ProductPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Product"
    objects: {
      category: Prisma.$CategoryPayload<ExtArgs> | null
      brand: Prisma.$BrandPayload<ExtArgs> | null
      inventoryItems: Prisma.$InventoryItemPayload<ExtArgs>[]
      variants: Prisma.$ProductVariantPayload<ExtArgs>[]
      suppliers: Prisma.$ProductSupplierPayload<ExtArgs>[]
      orderItems: Prisma.$OrderItemPayload<ExtArgs>[]
      purchaseItems: Prisma.$PurchaseOrderItemPayload<ExtArgs>[]
      movements: Prisma.$InventoryMovementPayload<ExtArgs>[]
      audits: Prisma.$InventoryAuditPayload<ExtArgs>[]
      reviews: Prisma.$ProductReviewPayload<ExtArgs>[]
      bundles: Prisma.$ProductBundlePayload<ExtArgs>[]
      bundleItems: Prisma.$ProductBundlePayload<ExtArgs>[]
      goodsReceiptItems: Prisma.$GoodsReceiptItemPayload<ExtArgs>[]
      transferItems: Prisma.$StockTransferItemPayload<ExtArgs>[]
      auditItems: Prisma.$InventoryAuditItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      sku: string
      barcode: string | null
      slug: string | null
      categoryId: string | null
      brandId: string | null
      weight: Prisma.Decimal | null
      dimensions: Prisma.JsonValue | null
      color: string | null
      size: string | null
      material: string | null
      costPrice: Prisma.Decimal | null
      sellingPrice: Prisma.Decimal | null
      wholesalePrice: Prisma.Decimal | null
      minStockLevel: number
      maxStockLevel: number | null
      reorderPoint: number | null
      reorderQuantity: number | null
      status: $Enums.ProductStatus
      isTrackable: boolean
      isSerialized: boolean
      images: Prisma.JsonValue | null
      primaryImage: string | null
      metaTitle: string | null
      metaDescription: string | null
      tags: Prisma.JsonValue | null
      leadTimeSupply: number | null
      shelfLife: number | null
      createdAt: Date
      updatedAt: Date
      createdBy: string
    }, ExtArgs["result"]["product"]>
    composites: {}
  }

  type ProductGetPayload<S extends boolean | null | undefined | ProductDefaultArgs> = $Result.GetResult<Prisma.$ProductPayload, S>

  type ProductCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductCountAggregateInputType | true
    }

  export interface ProductDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Product'], meta: { name: 'Product' } }
    /**
     * Find zero or one Product that matches the filter.
     * @param {ProductFindUniqueArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductFindUniqueArgs>(args: SelectSubset<T, ProductFindUniqueArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Product that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductFindUniqueOrThrowArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindFirstArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductFindFirstArgs>(args?: SelectSubset<T, ProductFindFirstArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindFirstOrThrowArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Products
     * const products = await prisma.product.findMany()
     * 
     * // Get first 10 Products
     * const products = await prisma.product.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productWithIdOnly = await prisma.product.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductFindManyArgs>(args?: SelectSubset<T, ProductFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Product.
     * @param {ProductCreateArgs} args - Arguments to create a Product.
     * @example
     * // Create one Product
     * const Product = await prisma.product.create({
     *   data: {
     *     // ... data to create a Product
     *   }
     * })
     * 
     */
    create<T extends ProductCreateArgs>(args: SelectSubset<T, ProductCreateArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Products.
     * @param {ProductCreateManyArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const product = await prisma.product.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductCreateManyArgs>(args?: SelectSubset<T, ProductCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Products and returns the data saved in the database.
     * @param {ProductCreateManyAndReturnArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const product = await prisma.product.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Products and only return the `id`
     * const productWithIdOnly = await prisma.product.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Product.
     * @param {ProductDeleteArgs} args - Arguments to delete one Product.
     * @example
     * // Delete one Product
     * const Product = await prisma.product.delete({
     *   where: {
     *     // ... filter to delete one Product
     *   }
     * })
     * 
     */
    delete<T extends ProductDeleteArgs>(args: SelectSubset<T, ProductDeleteArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Product.
     * @param {ProductUpdateArgs} args - Arguments to update one Product.
     * @example
     * // Update one Product
     * const product = await prisma.product.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductUpdateArgs>(args: SelectSubset<T, ProductUpdateArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Products.
     * @param {ProductDeleteManyArgs} args - Arguments to filter Products to delete.
     * @example
     * // Delete a few Products
     * const { count } = await prisma.product.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductDeleteManyArgs>(args?: SelectSubset<T, ProductDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Products
     * const product = await prisma.product.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductUpdateManyArgs>(args: SelectSubset<T, ProductUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products and returns the data updated in the database.
     * @param {ProductUpdateManyAndReturnArgs} args - Arguments to update many Products.
     * @example
     * // Update many Products
     * const product = await prisma.product.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Products and only return the `id`
     * const productWithIdOnly = await prisma.product.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Product.
     * @param {ProductUpsertArgs} args - Arguments to update or create a Product.
     * @example
     * // Update or create a Product
     * const product = await prisma.product.upsert({
     *   create: {
     *     // ... data to create a Product
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Product we want to update
     *   }
     * })
     */
    upsert<T extends ProductUpsertArgs>(args: SelectSubset<T, ProductUpsertArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCountArgs} args - Arguments to filter Products to count.
     * @example
     * // Count the number of Products
     * const count = await prisma.product.count({
     *   where: {
     *     // ... the filter for the Products we want to count
     *   }
     * })
    **/
    count<T extends ProductCountArgs>(
      args?: Subset<T, ProductCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductAggregateArgs>(args: Subset<T, ProductAggregateArgs>): Prisma.PrismaPromise<GetProductAggregateType<T>>

    /**
     * Group by Product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductGroupByArgs['orderBy'] }
        : { orderBy?: ProductGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Product model
   */
  readonly fields: ProductFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Product.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    category<T extends Product$categoryArgs<ExtArgs> = {}>(args?: Subset<T, Product$categoryArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    brand<T extends Product$brandArgs<ExtArgs> = {}>(args?: Subset<T, Product$brandArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    inventoryItems<T extends Product$inventoryItemsArgs<ExtArgs> = {}>(args?: Subset<T, Product$inventoryItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    variants<T extends Product$variantsArgs<ExtArgs> = {}>(args?: Subset<T, Product$variantsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    suppliers<T extends Product$suppliersArgs<ExtArgs> = {}>(args?: Subset<T, Product$suppliersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductSupplierPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    orderItems<T extends Product$orderItemsArgs<ExtArgs> = {}>(args?: Subset<T, Product$orderItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    purchaseItems<T extends Product$purchaseItemsArgs<ExtArgs> = {}>(args?: Subset<T, Product$purchaseItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    movements<T extends Product$movementsArgs<ExtArgs> = {}>(args?: Subset<T, Product$movementsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryMovementPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    audits<T extends Product$auditsArgs<ExtArgs> = {}>(args?: Subset<T, Product$auditsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryAuditPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reviews<T extends Product$reviewsArgs<ExtArgs> = {}>(args?: Subset<T, Product$reviewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductReviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    bundles<T extends Product$bundlesArgs<ExtArgs> = {}>(args?: Subset<T, Product$bundlesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductBundlePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    bundleItems<T extends Product$bundleItemsArgs<ExtArgs> = {}>(args?: Subset<T, Product$bundleItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductBundlePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    goodsReceiptItems<T extends Product$goodsReceiptItemsArgs<ExtArgs> = {}>(args?: Subset<T, Product$goodsReceiptItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GoodsReceiptItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    transferItems<T extends Product$transferItemsArgs<ExtArgs> = {}>(args?: Subset<T, Product$transferItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockTransferItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    auditItems<T extends Product$auditItemsArgs<ExtArgs> = {}>(args?: Subset<T, Product$auditItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryAuditItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Product model
   */
  interface ProductFieldRefs {
    readonly id: FieldRef<"Product", 'String'>
    readonly name: FieldRef<"Product", 'String'>
    readonly description: FieldRef<"Product", 'String'>
    readonly sku: FieldRef<"Product", 'String'>
    readonly barcode: FieldRef<"Product", 'String'>
    readonly slug: FieldRef<"Product", 'String'>
    readonly categoryId: FieldRef<"Product", 'String'>
    readonly brandId: FieldRef<"Product", 'String'>
    readonly weight: FieldRef<"Product", 'Decimal'>
    readonly dimensions: FieldRef<"Product", 'Json'>
    readonly color: FieldRef<"Product", 'String'>
    readonly size: FieldRef<"Product", 'String'>
    readonly material: FieldRef<"Product", 'String'>
    readonly costPrice: FieldRef<"Product", 'Decimal'>
    readonly sellingPrice: FieldRef<"Product", 'Decimal'>
    readonly wholesalePrice: FieldRef<"Product", 'Decimal'>
    readonly minStockLevel: FieldRef<"Product", 'Int'>
    readonly maxStockLevel: FieldRef<"Product", 'Int'>
    readonly reorderPoint: FieldRef<"Product", 'Int'>
    readonly reorderQuantity: FieldRef<"Product", 'Int'>
    readonly status: FieldRef<"Product", 'ProductStatus'>
    readonly isTrackable: FieldRef<"Product", 'Boolean'>
    readonly isSerialized: FieldRef<"Product", 'Boolean'>
    readonly images: FieldRef<"Product", 'Json'>
    readonly primaryImage: FieldRef<"Product", 'String'>
    readonly metaTitle: FieldRef<"Product", 'String'>
    readonly metaDescription: FieldRef<"Product", 'String'>
    readonly tags: FieldRef<"Product", 'Json'>
    readonly leadTimeSupply: FieldRef<"Product", 'Int'>
    readonly shelfLife: FieldRef<"Product", 'Int'>
    readonly createdAt: FieldRef<"Product", 'DateTime'>
    readonly updatedAt: FieldRef<"Product", 'DateTime'>
    readonly createdBy: FieldRef<"Product", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Product findUnique
   */
  export type ProductFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product findUniqueOrThrow
   */
  export type ProductFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product findFirst
   */
  export type ProductFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Products.
     */
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product findFirstOrThrow
   */
  export type ProductFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Products.
     */
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product findMany
   */
  export type ProductFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Products to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product create
   */
  export type ProductCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The data needed to create a Product.
     */
    data: XOR<ProductCreateInput, ProductUncheckedCreateInput>
  }

  /**
   * Product createMany
   */
  export type ProductCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Products.
     */
    data: ProductCreateManyInput | ProductCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Product createManyAndReturn
   */
  export type ProductCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * The data used to create many Products.
     */
    data: ProductCreateManyInput | ProductCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Product update
   */
  export type ProductUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The data needed to update a Product.
     */
    data: XOR<ProductUpdateInput, ProductUncheckedUpdateInput>
    /**
     * Choose, which Product to update.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product updateMany
   */
  export type ProductUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Products.
     */
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyInput>
    /**
     * Filter which Products to update
     */
    where?: ProductWhereInput
    /**
     * Limit how many Products to update.
     */
    limit?: number
  }

  /**
   * Product updateManyAndReturn
   */
  export type ProductUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * The data used to update Products.
     */
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyInput>
    /**
     * Filter which Products to update
     */
    where?: ProductWhereInput
    /**
     * Limit how many Products to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Product upsert
   */
  export type ProductUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The filter to search for the Product to update in case it exists.
     */
    where: ProductWhereUniqueInput
    /**
     * In case the Product found by the `where` argument doesn't exist, create a new Product with this data.
     */
    create: XOR<ProductCreateInput, ProductUncheckedCreateInput>
    /**
     * In case the Product was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductUpdateInput, ProductUncheckedUpdateInput>
  }

  /**
   * Product delete
   */
  export type ProductDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter which Product to delete.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product deleteMany
   */
  export type ProductDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Products to delete
     */
    where?: ProductWhereInput
    /**
     * Limit how many Products to delete.
     */
    limit?: number
  }

  /**
   * Product.category
   */
  export type Product$categoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
  }

  /**
   * Product.brand
   */
  export type Product$brandArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    where?: BrandWhereInput
  }

  /**
   * Product.inventoryItems
   */
  export type Product$inventoryItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryItem
     */
    select?: InventoryItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryItem
     */
    omit?: InventoryItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryItemInclude<ExtArgs> | null
    where?: InventoryItemWhereInput
    orderBy?: InventoryItemOrderByWithRelationInput | InventoryItemOrderByWithRelationInput[]
    cursor?: InventoryItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InventoryItemScalarFieldEnum | InventoryItemScalarFieldEnum[]
  }

  /**
   * Product.variants
   */
  export type Product$variantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductVariant
     */
    omit?: ProductVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    where?: ProductVariantWhereInput
    orderBy?: ProductVariantOrderByWithRelationInput | ProductVariantOrderByWithRelationInput[]
    cursor?: ProductVariantWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductVariantScalarFieldEnum | ProductVariantScalarFieldEnum[]
  }

  /**
   * Product.suppliers
   */
  export type Product$suppliersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSupplier
     */
    select?: ProductSupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSupplier
     */
    omit?: ProductSupplierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSupplierInclude<ExtArgs> | null
    where?: ProductSupplierWhereInput
    orderBy?: ProductSupplierOrderByWithRelationInput | ProductSupplierOrderByWithRelationInput[]
    cursor?: ProductSupplierWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductSupplierScalarFieldEnum | ProductSupplierScalarFieldEnum[]
  }

  /**
   * Product.orderItems
   */
  export type Product$orderItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    where?: OrderItemWhereInput
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    cursor?: OrderItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * Product.purchaseItems
   */
  export type Product$purchaseItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrderItem
     */
    select?: PurchaseOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrderItem
     */
    omit?: PurchaseOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderItemInclude<ExtArgs> | null
    where?: PurchaseOrderItemWhereInput
    orderBy?: PurchaseOrderItemOrderByWithRelationInput | PurchaseOrderItemOrderByWithRelationInput[]
    cursor?: PurchaseOrderItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PurchaseOrderItemScalarFieldEnum | PurchaseOrderItemScalarFieldEnum[]
  }

  /**
   * Product.movements
   */
  export type Product$movementsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryMovement
     */
    select?: InventoryMovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryMovement
     */
    omit?: InventoryMovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryMovementInclude<ExtArgs> | null
    where?: InventoryMovementWhereInput
    orderBy?: InventoryMovementOrderByWithRelationInput | InventoryMovementOrderByWithRelationInput[]
    cursor?: InventoryMovementWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InventoryMovementScalarFieldEnum | InventoryMovementScalarFieldEnum[]
  }

  /**
   * Product.audits
   */
  export type Product$auditsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAudit
     */
    select?: InventoryAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAudit
     */
    omit?: InventoryAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAuditInclude<ExtArgs> | null
    where?: InventoryAuditWhereInput
    orderBy?: InventoryAuditOrderByWithRelationInput | InventoryAuditOrderByWithRelationInput[]
    cursor?: InventoryAuditWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InventoryAuditScalarFieldEnum | InventoryAuditScalarFieldEnum[]
  }

  /**
   * Product.reviews
   */
  export type Product$reviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductReview
     */
    select?: ProductReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductReview
     */
    omit?: ProductReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductReviewInclude<ExtArgs> | null
    where?: ProductReviewWhereInput
    orderBy?: ProductReviewOrderByWithRelationInput | ProductReviewOrderByWithRelationInput[]
    cursor?: ProductReviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductReviewScalarFieldEnum | ProductReviewScalarFieldEnum[]
  }

  /**
   * Product.bundles
   */
  export type Product$bundlesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductBundle
     */
    select?: ProductBundleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductBundle
     */
    omit?: ProductBundleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductBundleInclude<ExtArgs> | null
    where?: ProductBundleWhereInput
    orderBy?: ProductBundleOrderByWithRelationInput | ProductBundleOrderByWithRelationInput[]
    cursor?: ProductBundleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductBundleScalarFieldEnum | ProductBundleScalarFieldEnum[]
  }

  /**
   * Product.bundleItems
   */
  export type Product$bundleItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductBundle
     */
    select?: ProductBundleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductBundle
     */
    omit?: ProductBundleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductBundleInclude<ExtArgs> | null
    where?: ProductBundleWhereInput
    orderBy?: ProductBundleOrderByWithRelationInput | ProductBundleOrderByWithRelationInput[]
    cursor?: ProductBundleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductBundleScalarFieldEnum | ProductBundleScalarFieldEnum[]
  }

  /**
   * Product.goodsReceiptItems
   */
  export type Product$goodsReceiptItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoodsReceiptItem
     */
    select?: GoodsReceiptItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GoodsReceiptItem
     */
    omit?: GoodsReceiptItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoodsReceiptItemInclude<ExtArgs> | null
    where?: GoodsReceiptItemWhereInput
    orderBy?: GoodsReceiptItemOrderByWithRelationInput | GoodsReceiptItemOrderByWithRelationInput[]
    cursor?: GoodsReceiptItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GoodsReceiptItemScalarFieldEnum | GoodsReceiptItemScalarFieldEnum[]
  }

  /**
   * Product.transferItems
   */
  export type Product$transferItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockTransferItem
     */
    select?: StockTransferItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockTransferItem
     */
    omit?: StockTransferItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockTransferItemInclude<ExtArgs> | null
    where?: StockTransferItemWhereInput
    orderBy?: StockTransferItemOrderByWithRelationInput | StockTransferItemOrderByWithRelationInput[]
    cursor?: StockTransferItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StockTransferItemScalarFieldEnum | StockTransferItemScalarFieldEnum[]
  }

  /**
   * Product.auditItems
   */
  export type Product$auditItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAuditItem
     */
    select?: InventoryAuditItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAuditItem
     */
    omit?: InventoryAuditItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAuditItemInclude<ExtArgs> | null
    where?: InventoryAuditItemWhereInput
    orderBy?: InventoryAuditItemOrderByWithRelationInput | InventoryAuditItemOrderByWithRelationInput[]
    cursor?: InventoryAuditItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InventoryAuditItemScalarFieldEnum | InventoryAuditItemScalarFieldEnum[]
  }

  /**
   * Product without action
   */
  export type ProductDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
  }


  /**
   * Model ProductVariant
   */

  export type AggregateProductVariant = {
    _count: ProductVariantCountAggregateOutputType | null
    _avg: ProductVariantAvgAggregateOutputType | null
    _sum: ProductVariantSumAggregateOutputType | null
    _min: ProductVariantMinAggregateOutputType | null
    _max: ProductVariantMaxAggregateOutputType | null
  }

  export type ProductVariantAvgAggregateOutputType = {
    costPrice: Decimal | null
    sellingPrice: Decimal | null
    minStockLevel: number | null
    reorderPoint: number | null
  }

  export type ProductVariantSumAggregateOutputType = {
    costPrice: Decimal | null
    sellingPrice: Decimal | null
    minStockLevel: number | null
    reorderPoint: number | null
  }

  export type ProductVariantMinAggregateOutputType = {
    id: string | null
    productId: string | null
    name: string | null
    sku: string | null
    barcode: string | null
    costPrice: Decimal | null
    sellingPrice: Decimal | null
    minStockLevel: number | null
    reorderPoint: number | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductVariantMaxAggregateOutputType = {
    id: string | null
    productId: string | null
    name: string | null
    sku: string | null
    barcode: string | null
    costPrice: Decimal | null
    sellingPrice: Decimal | null
    minStockLevel: number | null
    reorderPoint: number | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductVariantCountAggregateOutputType = {
    id: number
    productId: number
    name: number
    sku: number
    barcode: number
    attributes: number
    costPrice: number
    sellingPrice: number
    minStockLevel: number
    reorderPoint: number
    isActive: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ProductVariantAvgAggregateInputType = {
    costPrice?: true
    sellingPrice?: true
    minStockLevel?: true
    reorderPoint?: true
  }

  export type ProductVariantSumAggregateInputType = {
    costPrice?: true
    sellingPrice?: true
    minStockLevel?: true
    reorderPoint?: true
  }

  export type ProductVariantMinAggregateInputType = {
    id?: true
    productId?: true
    name?: true
    sku?: true
    barcode?: true
    costPrice?: true
    sellingPrice?: true
    minStockLevel?: true
    reorderPoint?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductVariantMaxAggregateInputType = {
    id?: true
    productId?: true
    name?: true
    sku?: true
    barcode?: true
    costPrice?: true
    sellingPrice?: true
    minStockLevel?: true
    reorderPoint?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductVariantCountAggregateInputType = {
    id?: true
    productId?: true
    name?: true
    sku?: true
    barcode?: true
    attributes?: true
    costPrice?: true
    sellingPrice?: true
    minStockLevel?: true
    reorderPoint?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ProductVariantAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductVariant to aggregate.
     */
    where?: ProductVariantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductVariants to fetch.
     */
    orderBy?: ProductVariantOrderByWithRelationInput | ProductVariantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductVariantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductVariants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductVariants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductVariants
    **/
    _count?: true | ProductVariantCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductVariantAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductVariantSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductVariantMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductVariantMaxAggregateInputType
  }

  export type GetProductVariantAggregateType<T extends ProductVariantAggregateArgs> = {
        [P in keyof T & keyof AggregateProductVariant]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductVariant[P]>
      : GetScalarType<T[P], AggregateProductVariant[P]>
  }




  export type ProductVariantGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductVariantWhereInput
    orderBy?: ProductVariantOrderByWithAggregationInput | ProductVariantOrderByWithAggregationInput[]
    by: ProductVariantScalarFieldEnum[] | ProductVariantScalarFieldEnum
    having?: ProductVariantScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductVariantCountAggregateInputType | true
    _avg?: ProductVariantAvgAggregateInputType
    _sum?: ProductVariantSumAggregateInputType
    _min?: ProductVariantMinAggregateInputType
    _max?: ProductVariantMaxAggregateInputType
  }

  export type ProductVariantGroupByOutputType = {
    id: string
    productId: string
    name: string
    sku: string
    barcode: string | null
    attributes: JsonValue
    costPrice: Decimal | null
    sellingPrice: Decimal | null
    minStockLevel: number | null
    reorderPoint: number | null
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    _count: ProductVariantCountAggregateOutputType | null
    _avg: ProductVariantAvgAggregateOutputType | null
    _sum: ProductVariantSumAggregateOutputType | null
    _min: ProductVariantMinAggregateOutputType | null
    _max: ProductVariantMaxAggregateOutputType | null
  }

  type GetProductVariantGroupByPayload<T extends ProductVariantGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductVariantGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductVariantGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductVariantGroupByOutputType[P]>
            : GetScalarType<T[P], ProductVariantGroupByOutputType[P]>
        }
      >
    >


  export type ProductVariantSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    name?: boolean
    sku?: boolean
    barcode?: boolean
    attributes?: boolean
    costPrice?: boolean
    sellingPrice?: boolean
    minStockLevel?: boolean
    reorderPoint?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    inventoryItems?: boolean | ProductVariant$inventoryItemsArgs<ExtArgs>
    movements?: boolean | ProductVariant$movementsArgs<ExtArgs>
    purchaseItems?: boolean | ProductVariant$purchaseItemsArgs<ExtArgs>
    goodsReceiptItems?: boolean | ProductVariant$goodsReceiptItemsArgs<ExtArgs>
    orderItems?: boolean | ProductVariant$orderItemsArgs<ExtArgs>
    transferItems?: boolean | ProductVariant$transferItemsArgs<ExtArgs>
    auditItems?: boolean | ProductVariant$auditItemsArgs<ExtArgs>
    _count?: boolean | ProductVariantCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productVariant"]>

  export type ProductVariantSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    name?: boolean
    sku?: boolean
    barcode?: boolean
    attributes?: boolean
    costPrice?: boolean
    sellingPrice?: boolean
    minStockLevel?: boolean
    reorderPoint?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productVariant"]>

  export type ProductVariantSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    name?: boolean
    sku?: boolean
    barcode?: boolean
    attributes?: boolean
    costPrice?: boolean
    sellingPrice?: boolean
    minStockLevel?: boolean
    reorderPoint?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productVariant"]>

  export type ProductVariantSelectScalar = {
    id?: boolean
    productId?: boolean
    name?: boolean
    sku?: boolean
    barcode?: boolean
    attributes?: boolean
    costPrice?: boolean
    sellingPrice?: boolean
    minStockLevel?: boolean
    reorderPoint?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ProductVariantOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "productId" | "name" | "sku" | "barcode" | "attributes" | "costPrice" | "sellingPrice" | "minStockLevel" | "reorderPoint" | "isActive" | "createdAt" | "updatedAt", ExtArgs["result"]["productVariant"]>
  export type ProductVariantInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    inventoryItems?: boolean | ProductVariant$inventoryItemsArgs<ExtArgs>
    movements?: boolean | ProductVariant$movementsArgs<ExtArgs>
    purchaseItems?: boolean | ProductVariant$purchaseItemsArgs<ExtArgs>
    goodsReceiptItems?: boolean | ProductVariant$goodsReceiptItemsArgs<ExtArgs>
    orderItems?: boolean | ProductVariant$orderItemsArgs<ExtArgs>
    transferItems?: boolean | ProductVariant$transferItemsArgs<ExtArgs>
    auditItems?: boolean | ProductVariant$auditItemsArgs<ExtArgs>
    _count?: boolean | ProductVariantCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProductVariantIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type ProductVariantIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }

  export type $ProductVariantPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductVariant"
    objects: {
      product: Prisma.$ProductPayload<ExtArgs>
      inventoryItems: Prisma.$InventoryItemPayload<ExtArgs>[]
      movements: Prisma.$InventoryMovementPayload<ExtArgs>[]
      purchaseItems: Prisma.$PurchaseOrderItemPayload<ExtArgs>[]
      goodsReceiptItems: Prisma.$GoodsReceiptItemPayload<ExtArgs>[]
      orderItems: Prisma.$OrderItemPayload<ExtArgs>[]
      transferItems: Prisma.$StockTransferItemPayload<ExtArgs>[]
      auditItems: Prisma.$InventoryAuditItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      productId: string
      name: string
      sku: string
      barcode: string | null
      attributes: Prisma.JsonValue
      costPrice: Prisma.Decimal | null
      sellingPrice: Prisma.Decimal | null
      minStockLevel: number | null
      reorderPoint: number | null
      isActive: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["productVariant"]>
    composites: {}
  }

  type ProductVariantGetPayload<S extends boolean | null | undefined | ProductVariantDefaultArgs> = $Result.GetResult<Prisma.$ProductVariantPayload, S>

  type ProductVariantCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductVariantFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductVariantCountAggregateInputType | true
    }

  export interface ProductVariantDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductVariant'], meta: { name: 'ProductVariant' } }
    /**
     * Find zero or one ProductVariant that matches the filter.
     * @param {ProductVariantFindUniqueArgs} args - Arguments to find a ProductVariant
     * @example
     * // Get one ProductVariant
     * const productVariant = await prisma.productVariant.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductVariantFindUniqueArgs>(args: SelectSubset<T, ProductVariantFindUniqueArgs<ExtArgs>>): Prisma__ProductVariantClient<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProductVariant that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductVariantFindUniqueOrThrowArgs} args - Arguments to find a ProductVariant
     * @example
     * // Get one ProductVariant
     * const productVariant = await prisma.productVariant.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductVariantFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductVariantFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductVariantClient<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductVariant that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductVariantFindFirstArgs} args - Arguments to find a ProductVariant
     * @example
     * // Get one ProductVariant
     * const productVariant = await prisma.productVariant.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductVariantFindFirstArgs>(args?: SelectSubset<T, ProductVariantFindFirstArgs<ExtArgs>>): Prisma__ProductVariantClient<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductVariant that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductVariantFindFirstOrThrowArgs} args - Arguments to find a ProductVariant
     * @example
     * // Get one ProductVariant
     * const productVariant = await prisma.productVariant.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductVariantFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductVariantFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductVariantClient<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProductVariants that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductVariantFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductVariants
     * const productVariants = await prisma.productVariant.findMany()
     * 
     * // Get first 10 ProductVariants
     * const productVariants = await prisma.productVariant.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productVariantWithIdOnly = await prisma.productVariant.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductVariantFindManyArgs>(args?: SelectSubset<T, ProductVariantFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProductVariant.
     * @param {ProductVariantCreateArgs} args - Arguments to create a ProductVariant.
     * @example
     * // Create one ProductVariant
     * const ProductVariant = await prisma.productVariant.create({
     *   data: {
     *     // ... data to create a ProductVariant
     *   }
     * })
     * 
     */
    create<T extends ProductVariantCreateArgs>(args: SelectSubset<T, ProductVariantCreateArgs<ExtArgs>>): Prisma__ProductVariantClient<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProductVariants.
     * @param {ProductVariantCreateManyArgs} args - Arguments to create many ProductVariants.
     * @example
     * // Create many ProductVariants
     * const productVariant = await prisma.productVariant.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductVariantCreateManyArgs>(args?: SelectSubset<T, ProductVariantCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductVariants and returns the data saved in the database.
     * @param {ProductVariantCreateManyAndReturnArgs} args - Arguments to create many ProductVariants.
     * @example
     * // Create many ProductVariants
     * const productVariant = await prisma.productVariant.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductVariants and only return the `id`
     * const productVariantWithIdOnly = await prisma.productVariant.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductVariantCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductVariantCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProductVariant.
     * @param {ProductVariantDeleteArgs} args - Arguments to delete one ProductVariant.
     * @example
     * // Delete one ProductVariant
     * const ProductVariant = await prisma.productVariant.delete({
     *   where: {
     *     // ... filter to delete one ProductVariant
     *   }
     * })
     * 
     */
    delete<T extends ProductVariantDeleteArgs>(args: SelectSubset<T, ProductVariantDeleteArgs<ExtArgs>>): Prisma__ProductVariantClient<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProductVariant.
     * @param {ProductVariantUpdateArgs} args - Arguments to update one ProductVariant.
     * @example
     * // Update one ProductVariant
     * const productVariant = await prisma.productVariant.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductVariantUpdateArgs>(args: SelectSubset<T, ProductVariantUpdateArgs<ExtArgs>>): Prisma__ProductVariantClient<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProductVariants.
     * @param {ProductVariantDeleteManyArgs} args - Arguments to filter ProductVariants to delete.
     * @example
     * // Delete a few ProductVariants
     * const { count } = await prisma.productVariant.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductVariantDeleteManyArgs>(args?: SelectSubset<T, ProductVariantDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductVariants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductVariantUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductVariants
     * const productVariant = await prisma.productVariant.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductVariantUpdateManyArgs>(args: SelectSubset<T, ProductVariantUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductVariants and returns the data updated in the database.
     * @param {ProductVariantUpdateManyAndReturnArgs} args - Arguments to update many ProductVariants.
     * @example
     * // Update many ProductVariants
     * const productVariant = await prisma.productVariant.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProductVariants and only return the `id`
     * const productVariantWithIdOnly = await prisma.productVariant.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductVariantUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductVariantUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProductVariant.
     * @param {ProductVariantUpsertArgs} args - Arguments to update or create a ProductVariant.
     * @example
     * // Update or create a ProductVariant
     * const productVariant = await prisma.productVariant.upsert({
     *   create: {
     *     // ... data to create a ProductVariant
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductVariant we want to update
     *   }
     * })
     */
    upsert<T extends ProductVariantUpsertArgs>(args: SelectSubset<T, ProductVariantUpsertArgs<ExtArgs>>): Prisma__ProductVariantClient<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProductVariants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductVariantCountArgs} args - Arguments to filter ProductVariants to count.
     * @example
     * // Count the number of ProductVariants
     * const count = await prisma.productVariant.count({
     *   where: {
     *     // ... the filter for the ProductVariants we want to count
     *   }
     * })
    **/
    count<T extends ProductVariantCountArgs>(
      args?: Subset<T, ProductVariantCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductVariantCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductVariant.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductVariantAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductVariantAggregateArgs>(args: Subset<T, ProductVariantAggregateArgs>): Prisma.PrismaPromise<GetProductVariantAggregateType<T>>

    /**
     * Group by ProductVariant.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductVariantGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductVariantGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductVariantGroupByArgs['orderBy'] }
        : { orderBy?: ProductVariantGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductVariantGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductVariantGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductVariant model
   */
  readonly fields: ProductVariantFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductVariant.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductVariantClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    inventoryItems<T extends ProductVariant$inventoryItemsArgs<ExtArgs> = {}>(args?: Subset<T, ProductVariant$inventoryItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    movements<T extends ProductVariant$movementsArgs<ExtArgs> = {}>(args?: Subset<T, ProductVariant$movementsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryMovementPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    purchaseItems<T extends ProductVariant$purchaseItemsArgs<ExtArgs> = {}>(args?: Subset<T, ProductVariant$purchaseItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    goodsReceiptItems<T extends ProductVariant$goodsReceiptItemsArgs<ExtArgs> = {}>(args?: Subset<T, ProductVariant$goodsReceiptItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GoodsReceiptItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    orderItems<T extends ProductVariant$orderItemsArgs<ExtArgs> = {}>(args?: Subset<T, ProductVariant$orderItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    transferItems<T extends ProductVariant$transferItemsArgs<ExtArgs> = {}>(args?: Subset<T, ProductVariant$transferItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockTransferItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    auditItems<T extends ProductVariant$auditItemsArgs<ExtArgs> = {}>(args?: Subset<T, ProductVariant$auditItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryAuditItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductVariant model
   */
  interface ProductVariantFieldRefs {
    readonly id: FieldRef<"ProductVariant", 'String'>
    readonly productId: FieldRef<"ProductVariant", 'String'>
    readonly name: FieldRef<"ProductVariant", 'String'>
    readonly sku: FieldRef<"ProductVariant", 'String'>
    readonly barcode: FieldRef<"ProductVariant", 'String'>
    readonly attributes: FieldRef<"ProductVariant", 'Json'>
    readonly costPrice: FieldRef<"ProductVariant", 'Decimal'>
    readonly sellingPrice: FieldRef<"ProductVariant", 'Decimal'>
    readonly minStockLevel: FieldRef<"ProductVariant", 'Int'>
    readonly reorderPoint: FieldRef<"ProductVariant", 'Int'>
    readonly isActive: FieldRef<"ProductVariant", 'Boolean'>
    readonly createdAt: FieldRef<"ProductVariant", 'DateTime'>
    readonly updatedAt: FieldRef<"ProductVariant", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ProductVariant findUnique
   */
  export type ProductVariantFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductVariant
     */
    omit?: ProductVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    /**
     * Filter, which ProductVariant to fetch.
     */
    where: ProductVariantWhereUniqueInput
  }

  /**
   * ProductVariant findUniqueOrThrow
   */
  export type ProductVariantFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductVariant
     */
    omit?: ProductVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    /**
     * Filter, which ProductVariant to fetch.
     */
    where: ProductVariantWhereUniqueInput
  }

  /**
   * ProductVariant findFirst
   */
  export type ProductVariantFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductVariant
     */
    omit?: ProductVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    /**
     * Filter, which ProductVariant to fetch.
     */
    where?: ProductVariantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductVariants to fetch.
     */
    orderBy?: ProductVariantOrderByWithRelationInput | ProductVariantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductVariants.
     */
    cursor?: ProductVariantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductVariants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductVariants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductVariants.
     */
    distinct?: ProductVariantScalarFieldEnum | ProductVariantScalarFieldEnum[]
  }

  /**
   * ProductVariant findFirstOrThrow
   */
  export type ProductVariantFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductVariant
     */
    omit?: ProductVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    /**
     * Filter, which ProductVariant to fetch.
     */
    where?: ProductVariantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductVariants to fetch.
     */
    orderBy?: ProductVariantOrderByWithRelationInput | ProductVariantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductVariants.
     */
    cursor?: ProductVariantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductVariants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductVariants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductVariants.
     */
    distinct?: ProductVariantScalarFieldEnum | ProductVariantScalarFieldEnum[]
  }

  /**
   * ProductVariant findMany
   */
  export type ProductVariantFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductVariant
     */
    omit?: ProductVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    /**
     * Filter, which ProductVariants to fetch.
     */
    where?: ProductVariantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductVariants to fetch.
     */
    orderBy?: ProductVariantOrderByWithRelationInput | ProductVariantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductVariants.
     */
    cursor?: ProductVariantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductVariants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductVariants.
     */
    skip?: number
    distinct?: ProductVariantScalarFieldEnum | ProductVariantScalarFieldEnum[]
  }

  /**
   * ProductVariant create
   */
  export type ProductVariantCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductVariant
     */
    omit?: ProductVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductVariant.
     */
    data: XOR<ProductVariantCreateInput, ProductVariantUncheckedCreateInput>
  }

  /**
   * ProductVariant createMany
   */
  export type ProductVariantCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductVariants.
     */
    data: ProductVariantCreateManyInput | ProductVariantCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductVariant createManyAndReturn
   */
  export type ProductVariantCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductVariant
     */
    omit?: ProductVariantOmit<ExtArgs> | null
    /**
     * The data used to create many ProductVariants.
     */
    data: ProductVariantCreateManyInput | ProductVariantCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductVariant update
   */
  export type ProductVariantUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductVariant
     */
    omit?: ProductVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductVariant.
     */
    data: XOR<ProductVariantUpdateInput, ProductVariantUncheckedUpdateInput>
    /**
     * Choose, which ProductVariant to update.
     */
    where: ProductVariantWhereUniqueInput
  }

  /**
   * ProductVariant updateMany
   */
  export type ProductVariantUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductVariants.
     */
    data: XOR<ProductVariantUpdateManyMutationInput, ProductVariantUncheckedUpdateManyInput>
    /**
     * Filter which ProductVariants to update
     */
    where?: ProductVariantWhereInput
    /**
     * Limit how many ProductVariants to update.
     */
    limit?: number
  }

  /**
   * ProductVariant updateManyAndReturn
   */
  export type ProductVariantUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductVariant
     */
    omit?: ProductVariantOmit<ExtArgs> | null
    /**
     * The data used to update ProductVariants.
     */
    data: XOR<ProductVariantUpdateManyMutationInput, ProductVariantUncheckedUpdateManyInput>
    /**
     * Filter which ProductVariants to update
     */
    where?: ProductVariantWhereInput
    /**
     * Limit how many ProductVariants to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductVariant upsert
   */
  export type ProductVariantUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductVariant
     */
    omit?: ProductVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductVariant to update in case it exists.
     */
    where: ProductVariantWhereUniqueInput
    /**
     * In case the ProductVariant found by the `where` argument doesn't exist, create a new ProductVariant with this data.
     */
    create: XOR<ProductVariantCreateInput, ProductVariantUncheckedCreateInput>
    /**
     * In case the ProductVariant was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductVariantUpdateInput, ProductVariantUncheckedUpdateInput>
  }

  /**
   * ProductVariant delete
   */
  export type ProductVariantDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductVariant
     */
    omit?: ProductVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    /**
     * Filter which ProductVariant to delete.
     */
    where: ProductVariantWhereUniqueInput
  }

  /**
   * ProductVariant deleteMany
   */
  export type ProductVariantDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductVariants to delete
     */
    where?: ProductVariantWhereInput
    /**
     * Limit how many ProductVariants to delete.
     */
    limit?: number
  }

  /**
   * ProductVariant.inventoryItems
   */
  export type ProductVariant$inventoryItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryItem
     */
    select?: InventoryItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryItem
     */
    omit?: InventoryItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryItemInclude<ExtArgs> | null
    where?: InventoryItemWhereInput
    orderBy?: InventoryItemOrderByWithRelationInput | InventoryItemOrderByWithRelationInput[]
    cursor?: InventoryItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InventoryItemScalarFieldEnum | InventoryItemScalarFieldEnum[]
  }

  /**
   * ProductVariant.movements
   */
  export type ProductVariant$movementsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryMovement
     */
    select?: InventoryMovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryMovement
     */
    omit?: InventoryMovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryMovementInclude<ExtArgs> | null
    where?: InventoryMovementWhereInput
    orderBy?: InventoryMovementOrderByWithRelationInput | InventoryMovementOrderByWithRelationInput[]
    cursor?: InventoryMovementWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InventoryMovementScalarFieldEnum | InventoryMovementScalarFieldEnum[]
  }

  /**
   * ProductVariant.purchaseItems
   */
  export type ProductVariant$purchaseItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrderItem
     */
    select?: PurchaseOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrderItem
     */
    omit?: PurchaseOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderItemInclude<ExtArgs> | null
    where?: PurchaseOrderItemWhereInput
    orderBy?: PurchaseOrderItemOrderByWithRelationInput | PurchaseOrderItemOrderByWithRelationInput[]
    cursor?: PurchaseOrderItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PurchaseOrderItemScalarFieldEnum | PurchaseOrderItemScalarFieldEnum[]
  }

  /**
   * ProductVariant.goodsReceiptItems
   */
  export type ProductVariant$goodsReceiptItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoodsReceiptItem
     */
    select?: GoodsReceiptItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GoodsReceiptItem
     */
    omit?: GoodsReceiptItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoodsReceiptItemInclude<ExtArgs> | null
    where?: GoodsReceiptItemWhereInput
    orderBy?: GoodsReceiptItemOrderByWithRelationInput | GoodsReceiptItemOrderByWithRelationInput[]
    cursor?: GoodsReceiptItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GoodsReceiptItemScalarFieldEnum | GoodsReceiptItemScalarFieldEnum[]
  }

  /**
   * ProductVariant.orderItems
   */
  export type ProductVariant$orderItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    where?: OrderItemWhereInput
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    cursor?: OrderItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * ProductVariant.transferItems
   */
  export type ProductVariant$transferItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockTransferItem
     */
    select?: StockTransferItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockTransferItem
     */
    omit?: StockTransferItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockTransferItemInclude<ExtArgs> | null
    where?: StockTransferItemWhereInput
    orderBy?: StockTransferItemOrderByWithRelationInput | StockTransferItemOrderByWithRelationInput[]
    cursor?: StockTransferItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StockTransferItemScalarFieldEnum | StockTransferItemScalarFieldEnum[]
  }

  /**
   * ProductVariant.auditItems
   */
  export type ProductVariant$auditItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAuditItem
     */
    select?: InventoryAuditItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAuditItem
     */
    omit?: InventoryAuditItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAuditItemInclude<ExtArgs> | null
    where?: InventoryAuditItemWhereInput
    orderBy?: InventoryAuditItemOrderByWithRelationInput | InventoryAuditItemOrderByWithRelationInput[]
    cursor?: InventoryAuditItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InventoryAuditItemScalarFieldEnum | InventoryAuditItemScalarFieldEnum[]
  }

  /**
   * ProductVariant without action
   */
  export type ProductVariantDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductVariant
     */
    omit?: ProductVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
  }


  /**
   * Model Category
   */

  export type AggregateCategory = {
    _count: CategoryCountAggregateOutputType | null
    _avg: CategoryAvgAggregateOutputType | null
    _sum: CategorySumAggregateOutputType | null
    _min: CategoryMinAggregateOutputType | null
    _max: CategoryMaxAggregateOutputType | null
  }

  export type CategoryAvgAggregateOutputType = {
    level: number | null
  }

  export type CategorySumAggregateOutputType = {
    level: number | null
  }

  export type CategoryMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    slug: string | null
    parentId: string | null
    level: number | null
    path: string | null
    icon: string | null
    color: string | null
    image: string | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CategoryMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    slug: string | null
    parentId: string | null
    level: number | null
    path: string | null
    icon: string | null
    color: string | null
    image: string | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CategoryCountAggregateOutputType = {
    id: number
    name: number
    description: number
    slug: number
    parentId: number
    level: number
    path: number
    icon: number
    color: number
    image: number
    isActive: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CategoryAvgAggregateInputType = {
    level?: true
  }

  export type CategorySumAggregateInputType = {
    level?: true
  }

  export type CategoryMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    slug?: true
    parentId?: true
    level?: true
    path?: true
    icon?: true
    color?: true
    image?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CategoryMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    slug?: true
    parentId?: true
    level?: true
    path?: true
    icon?: true
    color?: true
    image?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CategoryCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    slug?: true
    parentId?: true
    level?: true
    path?: true
    icon?: true
    color?: true
    image?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CategoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Category to aggregate.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Categories
    **/
    _count?: true | CategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoryMaxAggregateInputType
  }

  export type GetCategoryAggregateType<T extends CategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateCategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategory[P]>
      : GetScalarType<T[P], AggregateCategory[P]>
  }




  export type CategoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithAggregationInput | CategoryOrderByWithAggregationInput[]
    by: CategoryScalarFieldEnum[] | CategoryScalarFieldEnum
    having?: CategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoryCountAggregateInputType | true
    _avg?: CategoryAvgAggregateInputType
    _sum?: CategorySumAggregateInputType
    _min?: CategoryMinAggregateInputType
    _max?: CategoryMaxAggregateInputType
  }

  export type CategoryGroupByOutputType = {
    id: string
    name: string
    description: string | null
    slug: string
    parentId: string | null
    level: number
    path: string | null
    icon: string | null
    color: string | null
    image: string | null
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    _count: CategoryCountAggregateOutputType | null
    _avg: CategoryAvgAggregateOutputType | null
    _sum: CategorySumAggregateOutputType | null
    _min: CategoryMinAggregateOutputType | null
    _max: CategoryMaxAggregateOutputType | null
  }

  type GetCategoryGroupByPayload<T extends CategoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoryGroupByOutputType[P]>
            : GetScalarType<T[P], CategoryGroupByOutputType[P]>
        }
      >
    >


  export type CategorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    slug?: boolean
    parentId?: boolean
    level?: boolean
    path?: boolean
    icon?: boolean
    color?: boolean
    image?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    parent?: boolean | Category$parentArgs<ExtArgs>
    children?: boolean | Category$childrenArgs<ExtArgs>
    products?: boolean | Category$productsArgs<ExtArgs>
    _count?: boolean | CategoryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["category"]>

  export type CategorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    slug?: boolean
    parentId?: boolean
    level?: boolean
    path?: boolean
    icon?: boolean
    color?: boolean
    image?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    parent?: boolean | Category$parentArgs<ExtArgs>
  }, ExtArgs["result"]["category"]>

  export type CategorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    slug?: boolean
    parentId?: boolean
    level?: boolean
    path?: boolean
    icon?: boolean
    color?: boolean
    image?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    parent?: boolean | Category$parentArgs<ExtArgs>
  }, ExtArgs["result"]["category"]>

  export type CategorySelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    slug?: boolean
    parentId?: boolean
    level?: boolean
    path?: boolean
    icon?: boolean
    color?: boolean
    image?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CategoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "slug" | "parentId" | "level" | "path" | "icon" | "color" | "image" | "isActive" | "createdAt" | "updatedAt", ExtArgs["result"]["category"]>
  export type CategoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parent?: boolean | Category$parentArgs<ExtArgs>
    children?: boolean | Category$childrenArgs<ExtArgs>
    products?: boolean | Category$productsArgs<ExtArgs>
    _count?: boolean | CategoryCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CategoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parent?: boolean | Category$parentArgs<ExtArgs>
  }
  export type CategoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parent?: boolean | Category$parentArgs<ExtArgs>
  }

  export type $CategoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Category"
    objects: {
      parent: Prisma.$CategoryPayload<ExtArgs> | null
      children: Prisma.$CategoryPayload<ExtArgs>[]
      products: Prisma.$ProductPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      slug: string
      parentId: string | null
      level: number
      path: string | null
      icon: string | null
      color: string | null
      image: string | null
      isActive: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["category"]>
    composites: {}
  }

  type CategoryGetPayload<S extends boolean | null | undefined | CategoryDefaultArgs> = $Result.GetResult<Prisma.$CategoryPayload, S>

  type CategoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CategoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CategoryCountAggregateInputType | true
    }

  export interface CategoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Category'], meta: { name: 'Category' } }
    /**
     * Find zero or one Category that matches the filter.
     * @param {CategoryFindUniqueArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CategoryFindUniqueArgs>(args: SelectSubset<T, CategoryFindUniqueArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Category that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CategoryFindUniqueOrThrowArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CategoryFindUniqueOrThrowArgs>(args: SelectSubset<T, CategoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Category that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindFirstArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CategoryFindFirstArgs>(args?: SelectSubset<T, CategoryFindFirstArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Category that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindFirstOrThrowArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CategoryFindFirstOrThrowArgs>(args?: SelectSubset<T, CategoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categories
     * const categories = await prisma.category.findMany()
     * 
     * // Get first 10 Categories
     * const categories = await prisma.category.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoryWithIdOnly = await prisma.category.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CategoryFindManyArgs>(args?: SelectSubset<T, CategoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Category.
     * @param {CategoryCreateArgs} args - Arguments to create a Category.
     * @example
     * // Create one Category
     * const Category = await prisma.category.create({
     *   data: {
     *     // ... data to create a Category
     *   }
     * })
     * 
     */
    create<T extends CategoryCreateArgs>(args: SelectSubset<T, CategoryCreateArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Categories.
     * @param {CategoryCreateManyArgs} args - Arguments to create many Categories.
     * @example
     * // Create many Categories
     * const category = await prisma.category.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CategoryCreateManyArgs>(args?: SelectSubset<T, CategoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Categories and returns the data saved in the database.
     * @param {CategoryCreateManyAndReturnArgs} args - Arguments to create many Categories.
     * @example
     * // Create many Categories
     * const category = await prisma.category.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Categories and only return the `id`
     * const categoryWithIdOnly = await prisma.category.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CategoryCreateManyAndReturnArgs>(args?: SelectSubset<T, CategoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Category.
     * @param {CategoryDeleteArgs} args - Arguments to delete one Category.
     * @example
     * // Delete one Category
     * const Category = await prisma.category.delete({
     *   where: {
     *     // ... filter to delete one Category
     *   }
     * })
     * 
     */
    delete<T extends CategoryDeleteArgs>(args: SelectSubset<T, CategoryDeleteArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Category.
     * @param {CategoryUpdateArgs} args - Arguments to update one Category.
     * @example
     * // Update one Category
     * const category = await prisma.category.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CategoryUpdateArgs>(args: SelectSubset<T, CategoryUpdateArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Categories.
     * @param {CategoryDeleteManyArgs} args - Arguments to filter Categories to delete.
     * @example
     * // Delete a few Categories
     * const { count } = await prisma.category.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CategoryDeleteManyArgs>(args?: SelectSubset<T, CategoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categories
     * const category = await prisma.category.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CategoryUpdateManyArgs>(args: SelectSubset<T, CategoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categories and returns the data updated in the database.
     * @param {CategoryUpdateManyAndReturnArgs} args - Arguments to update many Categories.
     * @example
     * // Update many Categories
     * const category = await prisma.category.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Categories and only return the `id`
     * const categoryWithIdOnly = await prisma.category.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CategoryUpdateManyAndReturnArgs>(args: SelectSubset<T, CategoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Category.
     * @param {CategoryUpsertArgs} args - Arguments to update or create a Category.
     * @example
     * // Update or create a Category
     * const category = await prisma.category.upsert({
     *   create: {
     *     // ... data to create a Category
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Category we want to update
     *   }
     * })
     */
    upsert<T extends CategoryUpsertArgs>(args: SelectSubset<T, CategoryUpsertArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryCountArgs} args - Arguments to filter Categories to count.
     * @example
     * // Count the number of Categories
     * const count = await prisma.category.count({
     *   where: {
     *     // ... the filter for the Categories we want to count
     *   }
     * })
    **/
    count<T extends CategoryCountArgs>(
      args?: Subset<T, CategoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoryAggregateArgs>(args: Subset<T, CategoryAggregateArgs>): Prisma.PrismaPromise<GetCategoryAggregateType<T>>

    /**
     * Group by Category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoryGroupByArgs['orderBy'] }
        : { orderBy?: CategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Category model
   */
  readonly fields: CategoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Category.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CategoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    parent<T extends Category$parentArgs<ExtArgs> = {}>(args?: Subset<T, Category$parentArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    children<T extends Category$childrenArgs<ExtArgs> = {}>(args?: Subset<T, Category$childrenArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    products<T extends Category$productsArgs<ExtArgs> = {}>(args?: Subset<T, Category$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Category model
   */
  interface CategoryFieldRefs {
    readonly id: FieldRef<"Category", 'String'>
    readonly name: FieldRef<"Category", 'String'>
    readonly description: FieldRef<"Category", 'String'>
    readonly slug: FieldRef<"Category", 'String'>
    readonly parentId: FieldRef<"Category", 'String'>
    readonly level: FieldRef<"Category", 'Int'>
    readonly path: FieldRef<"Category", 'String'>
    readonly icon: FieldRef<"Category", 'String'>
    readonly color: FieldRef<"Category", 'String'>
    readonly image: FieldRef<"Category", 'String'>
    readonly isActive: FieldRef<"Category", 'Boolean'>
    readonly createdAt: FieldRef<"Category", 'DateTime'>
    readonly updatedAt: FieldRef<"Category", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Category findUnique
   */
  export type CategoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category findUniqueOrThrow
   */
  export type CategoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category findFirst
   */
  export type CategoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories.
     */
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category findFirstOrThrow
   */
  export type CategoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories.
     */
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category findMany
   */
  export type CategoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Categories to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category create
   */
  export type CategoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The data needed to create a Category.
     */
    data: XOR<CategoryCreateInput, CategoryUncheckedCreateInput>
  }

  /**
   * Category createMany
   */
  export type CategoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Categories.
     */
    data: CategoryCreateManyInput | CategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Category createManyAndReturn
   */
  export type CategoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * The data used to create many Categories.
     */
    data: CategoryCreateManyInput | CategoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Category update
   */
  export type CategoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The data needed to update a Category.
     */
    data: XOR<CategoryUpdateInput, CategoryUncheckedUpdateInput>
    /**
     * Choose, which Category to update.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category updateMany
   */
  export type CategoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Categories.
     */
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyInput>
    /**
     * Filter which Categories to update
     */
    where?: CategoryWhereInput
    /**
     * Limit how many Categories to update.
     */
    limit?: number
  }

  /**
   * Category updateManyAndReturn
   */
  export type CategoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * The data used to update Categories.
     */
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyInput>
    /**
     * Filter which Categories to update
     */
    where?: CategoryWhereInput
    /**
     * Limit how many Categories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Category upsert
   */
  export type CategoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The filter to search for the Category to update in case it exists.
     */
    where: CategoryWhereUniqueInput
    /**
     * In case the Category found by the `where` argument doesn't exist, create a new Category with this data.
     */
    create: XOR<CategoryCreateInput, CategoryUncheckedCreateInput>
    /**
     * In case the Category was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CategoryUpdateInput, CategoryUncheckedUpdateInput>
  }

  /**
   * Category delete
   */
  export type CategoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter which Category to delete.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category deleteMany
   */
  export type CategoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categories to delete
     */
    where?: CategoryWhereInput
    /**
     * Limit how many Categories to delete.
     */
    limit?: number
  }

  /**
   * Category.parent
   */
  export type Category$parentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
  }

  /**
   * Category.children
   */
  export type Category$childrenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    cursor?: CategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category.products
   */
  export type Category$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Category without action
   */
  export type CategoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
  }


  /**
   * Model Brand
   */

  export type AggregateBrand = {
    _count: BrandCountAggregateOutputType | null
    _min: BrandMinAggregateOutputType | null
    _max: BrandMaxAggregateOutputType | null
  }

  export type BrandMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    logo: string | null
    website: string | null
    contactEmail: string | null
    contactPhone: string | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BrandMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    logo: string | null
    website: string | null
    contactEmail: string | null
    contactPhone: string | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BrandCountAggregateOutputType = {
    id: number
    name: number
    description: number
    logo: number
    website: number
    contactEmail: number
    contactPhone: number
    isActive: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type BrandMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    logo?: true
    website?: true
    contactEmail?: true
    contactPhone?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BrandMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    logo?: true
    website?: true
    contactEmail?: true
    contactPhone?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BrandCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    logo?: true
    website?: true
    contactEmail?: true
    contactPhone?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type BrandAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Brand to aggregate.
     */
    where?: BrandWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Brands to fetch.
     */
    orderBy?: BrandOrderByWithRelationInput | BrandOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BrandWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Brands from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Brands.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Brands
    **/
    _count?: true | BrandCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BrandMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BrandMaxAggregateInputType
  }

  export type GetBrandAggregateType<T extends BrandAggregateArgs> = {
        [P in keyof T & keyof AggregateBrand]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBrand[P]>
      : GetScalarType<T[P], AggregateBrand[P]>
  }




  export type BrandGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BrandWhereInput
    orderBy?: BrandOrderByWithAggregationInput | BrandOrderByWithAggregationInput[]
    by: BrandScalarFieldEnum[] | BrandScalarFieldEnum
    having?: BrandScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BrandCountAggregateInputType | true
    _min?: BrandMinAggregateInputType
    _max?: BrandMaxAggregateInputType
  }

  export type BrandGroupByOutputType = {
    id: string
    name: string
    description: string | null
    logo: string | null
    website: string | null
    contactEmail: string | null
    contactPhone: string | null
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    _count: BrandCountAggregateOutputType | null
    _min: BrandMinAggregateOutputType | null
    _max: BrandMaxAggregateOutputType | null
  }

  type GetBrandGroupByPayload<T extends BrandGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BrandGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BrandGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BrandGroupByOutputType[P]>
            : GetScalarType<T[P], BrandGroupByOutputType[P]>
        }
      >
    >


  export type BrandSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    logo?: boolean
    website?: boolean
    contactEmail?: boolean
    contactPhone?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    products?: boolean | Brand$productsArgs<ExtArgs>
    _count?: boolean | BrandCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["brand"]>

  export type BrandSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    logo?: boolean
    website?: boolean
    contactEmail?: boolean
    contactPhone?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["brand"]>

  export type BrandSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    logo?: boolean
    website?: boolean
    contactEmail?: boolean
    contactPhone?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["brand"]>

  export type BrandSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    logo?: boolean
    website?: boolean
    contactEmail?: boolean
    contactPhone?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type BrandOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "logo" | "website" | "contactEmail" | "contactPhone" | "isActive" | "createdAt" | "updatedAt", ExtArgs["result"]["brand"]>
  export type BrandInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | Brand$productsArgs<ExtArgs>
    _count?: boolean | BrandCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type BrandIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type BrandIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $BrandPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Brand"
    objects: {
      products: Prisma.$ProductPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      logo: string | null
      website: string | null
      contactEmail: string | null
      contactPhone: string | null
      isActive: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["brand"]>
    composites: {}
  }

  type BrandGetPayload<S extends boolean | null | undefined | BrandDefaultArgs> = $Result.GetResult<Prisma.$BrandPayload, S>

  type BrandCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BrandFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BrandCountAggregateInputType | true
    }

  export interface BrandDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Brand'], meta: { name: 'Brand' } }
    /**
     * Find zero or one Brand that matches the filter.
     * @param {BrandFindUniqueArgs} args - Arguments to find a Brand
     * @example
     * // Get one Brand
     * const brand = await prisma.brand.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BrandFindUniqueArgs>(args: SelectSubset<T, BrandFindUniqueArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Brand that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BrandFindUniqueOrThrowArgs} args - Arguments to find a Brand
     * @example
     * // Get one Brand
     * const brand = await prisma.brand.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BrandFindUniqueOrThrowArgs>(args: SelectSubset<T, BrandFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Brand that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandFindFirstArgs} args - Arguments to find a Brand
     * @example
     * // Get one Brand
     * const brand = await prisma.brand.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BrandFindFirstArgs>(args?: SelectSubset<T, BrandFindFirstArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Brand that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandFindFirstOrThrowArgs} args - Arguments to find a Brand
     * @example
     * // Get one Brand
     * const brand = await prisma.brand.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BrandFindFirstOrThrowArgs>(args?: SelectSubset<T, BrandFindFirstOrThrowArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Brands that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Brands
     * const brands = await prisma.brand.findMany()
     * 
     * // Get first 10 Brands
     * const brands = await prisma.brand.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const brandWithIdOnly = await prisma.brand.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BrandFindManyArgs>(args?: SelectSubset<T, BrandFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Brand.
     * @param {BrandCreateArgs} args - Arguments to create a Brand.
     * @example
     * // Create one Brand
     * const Brand = await prisma.brand.create({
     *   data: {
     *     // ... data to create a Brand
     *   }
     * })
     * 
     */
    create<T extends BrandCreateArgs>(args: SelectSubset<T, BrandCreateArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Brands.
     * @param {BrandCreateManyArgs} args - Arguments to create many Brands.
     * @example
     * // Create many Brands
     * const brand = await prisma.brand.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BrandCreateManyArgs>(args?: SelectSubset<T, BrandCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Brands and returns the data saved in the database.
     * @param {BrandCreateManyAndReturnArgs} args - Arguments to create many Brands.
     * @example
     * // Create many Brands
     * const brand = await prisma.brand.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Brands and only return the `id`
     * const brandWithIdOnly = await prisma.brand.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BrandCreateManyAndReturnArgs>(args?: SelectSubset<T, BrandCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Brand.
     * @param {BrandDeleteArgs} args - Arguments to delete one Brand.
     * @example
     * // Delete one Brand
     * const Brand = await prisma.brand.delete({
     *   where: {
     *     // ... filter to delete one Brand
     *   }
     * })
     * 
     */
    delete<T extends BrandDeleteArgs>(args: SelectSubset<T, BrandDeleteArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Brand.
     * @param {BrandUpdateArgs} args - Arguments to update one Brand.
     * @example
     * // Update one Brand
     * const brand = await prisma.brand.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BrandUpdateArgs>(args: SelectSubset<T, BrandUpdateArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Brands.
     * @param {BrandDeleteManyArgs} args - Arguments to filter Brands to delete.
     * @example
     * // Delete a few Brands
     * const { count } = await prisma.brand.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BrandDeleteManyArgs>(args?: SelectSubset<T, BrandDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Brands.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Brands
     * const brand = await prisma.brand.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BrandUpdateManyArgs>(args: SelectSubset<T, BrandUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Brands and returns the data updated in the database.
     * @param {BrandUpdateManyAndReturnArgs} args - Arguments to update many Brands.
     * @example
     * // Update many Brands
     * const brand = await prisma.brand.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Brands and only return the `id`
     * const brandWithIdOnly = await prisma.brand.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BrandUpdateManyAndReturnArgs>(args: SelectSubset<T, BrandUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Brand.
     * @param {BrandUpsertArgs} args - Arguments to update or create a Brand.
     * @example
     * // Update or create a Brand
     * const brand = await prisma.brand.upsert({
     *   create: {
     *     // ... data to create a Brand
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Brand we want to update
     *   }
     * })
     */
    upsert<T extends BrandUpsertArgs>(args: SelectSubset<T, BrandUpsertArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Brands.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandCountArgs} args - Arguments to filter Brands to count.
     * @example
     * // Count the number of Brands
     * const count = await prisma.brand.count({
     *   where: {
     *     // ... the filter for the Brands we want to count
     *   }
     * })
    **/
    count<T extends BrandCountArgs>(
      args?: Subset<T, BrandCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BrandCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Brand.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BrandAggregateArgs>(args: Subset<T, BrandAggregateArgs>): Prisma.PrismaPromise<GetBrandAggregateType<T>>

    /**
     * Group by Brand.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BrandGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BrandGroupByArgs['orderBy'] }
        : { orderBy?: BrandGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BrandGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBrandGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Brand model
   */
  readonly fields: BrandFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Brand.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BrandClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    products<T extends Brand$productsArgs<ExtArgs> = {}>(args?: Subset<T, Brand$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Brand model
   */
  interface BrandFieldRefs {
    readonly id: FieldRef<"Brand", 'String'>
    readonly name: FieldRef<"Brand", 'String'>
    readonly description: FieldRef<"Brand", 'String'>
    readonly logo: FieldRef<"Brand", 'String'>
    readonly website: FieldRef<"Brand", 'String'>
    readonly contactEmail: FieldRef<"Brand", 'String'>
    readonly contactPhone: FieldRef<"Brand", 'String'>
    readonly isActive: FieldRef<"Brand", 'Boolean'>
    readonly createdAt: FieldRef<"Brand", 'DateTime'>
    readonly updatedAt: FieldRef<"Brand", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Brand findUnique
   */
  export type BrandFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * Filter, which Brand to fetch.
     */
    where: BrandWhereUniqueInput
  }

  /**
   * Brand findUniqueOrThrow
   */
  export type BrandFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * Filter, which Brand to fetch.
     */
    where: BrandWhereUniqueInput
  }

  /**
   * Brand findFirst
   */
  export type BrandFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * Filter, which Brand to fetch.
     */
    where?: BrandWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Brands to fetch.
     */
    orderBy?: BrandOrderByWithRelationInput | BrandOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Brands.
     */
    cursor?: BrandWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Brands from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Brands.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Brands.
     */
    distinct?: BrandScalarFieldEnum | BrandScalarFieldEnum[]
  }

  /**
   * Brand findFirstOrThrow
   */
  export type BrandFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * Filter, which Brand to fetch.
     */
    where?: BrandWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Brands to fetch.
     */
    orderBy?: BrandOrderByWithRelationInput | BrandOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Brands.
     */
    cursor?: BrandWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Brands from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Brands.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Brands.
     */
    distinct?: BrandScalarFieldEnum | BrandScalarFieldEnum[]
  }

  /**
   * Brand findMany
   */
  export type BrandFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * Filter, which Brands to fetch.
     */
    where?: BrandWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Brands to fetch.
     */
    orderBy?: BrandOrderByWithRelationInput | BrandOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Brands.
     */
    cursor?: BrandWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Brands from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Brands.
     */
    skip?: number
    distinct?: BrandScalarFieldEnum | BrandScalarFieldEnum[]
  }

  /**
   * Brand create
   */
  export type BrandCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * The data needed to create a Brand.
     */
    data: XOR<BrandCreateInput, BrandUncheckedCreateInput>
  }

  /**
   * Brand createMany
   */
  export type BrandCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Brands.
     */
    data: BrandCreateManyInput | BrandCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Brand createManyAndReturn
   */
  export type BrandCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * The data used to create many Brands.
     */
    data: BrandCreateManyInput | BrandCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Brand update
   */
  export type BrandUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * The data needed to update a Brand.
     */
    data: XOR<BrandUpdateInput, BrandUncheckedUpdateInput>
    /**
     * Choose, which Brand to update.
     */
    where: BrandWhereUniqueInput
  }

  /**
   * Brand updateMany
   */
  export type BrandUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Brands.
     */
    data: XOR<BrandUpdateManyMutationInput, BrandUncheckedUpdateManyInput>
    /**
     * Filter which Brands to update
     */
    where?: BrandWhereInput
    /**
     * Limit how many Brands to update.
     */
    limit?: number
  }

  /**
   * Brand updateManyAndReturn
   */
  export type BrandUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * The data used to update Brands.
     */
    data: XOR<BrandUpdateManyMutationInput, BrandUncheckedUpdateManyInput>
    /**
     * Filter which Brands to update
     */
    where?: BrandWhereInput
    /**
     * Limit how many Brands to update.
     */
    limit?: number
  }

  /**
   * Brand upsert
   */
  export type BrandUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * The filter to search for the Brand to update in case it exists.
     */
    where: BrandWhereUniqueInput
    /**
     * In case the Brand found by the `where` argument doesn't exist, create a new Brand with this data.
     */
    create: XOR<BrandCreateInput, BrandUncheckedCreateInput>
    /**
     * In case the Brand was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BrandUpdateInput, BrandUncheckedUpdateInput>
  }

  /**
   * Brand delete
   */
  export type BrandDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * Filter which Brand to delete.
     */
    where: BrandWhereUniqueInput
  }

  /**
   * Brand deleteMany
   */
  export type BrandDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Brands to delete
     */
    where?: BrandWhereInput
    /**
     * Limit how many Brands to delete.
     */
    limit?: number
  }

  /**
   * Brand.products
   */
  export type Brand$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Brand without action
   */
  export type BrandDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
  }


  /**
   * Model ProductBundle
   */

  export type AggregateProductBundle = {
    _count: ProductBundleCountAggregateOutputType | null
    _avg: ProductBundleAvgAggregateOutputType | null
    _sum: ProductBundleSumAggregateOutputType | null
    _min: ProductBundleMinAggregateOutputType | null
    _max: ProductBundleMaxAggregateOutputType | null
  }

  export type ProductBundleAvgAggregateOutputType = {
    bundlePrice: Decimal | null
    discount: Decimal | null
  }

  export type ProductBundleSumAggregateOutputType = {
    bundlePrice: Decimal | null
    discount: Decimal | null
  }

  export type ProductBundleMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    sku: string | null
    bundlePrice: Decimal | null
    discount: Decimal | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductBundleMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    sku: string | null
    bundlePrice: Decimal | null
    discount: Decimal | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductBundleCountAggregateOutputType = {
    id: number
    name: number
    description: number
    sku: number
    bundlePrice: number
    discount: number
    isActive: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ProductBundleAvgAggregateInputType = {
    bundlePrice?: true
    discount?: true
  }

  export type ProductBundleSumAggregateInputType = {
    bundlePrice?: true
    discount?: true
  }

  export type ProductBundleMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    sku?: true
    bundlePrice?: true
    discount?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductBundleMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    sku?: true
    bundlePrice?: true
    discount?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductBundleCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    sku?: true
    bundlePrice?: true
    discount?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ProductBundleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductBundle to aggregate.
     */
    where?: ProductBundleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductBundles to fetch.
     */
    orderBy?: ProductBundleOrderByWithRelationInput | ProductBundleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductBundleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductBundles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductBundles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductBundles
    **/
    _count?: true | ProductBundleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductBundleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductBundleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductBundleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductBundleMaxAggregateInputType
  }

  export type GetProductBundleAggregateType<T extends ProductBundleAggregateArgs> = {
        [P in keyof T & keyof AggregateProductBundle]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductBundle[P]>
      : GetScalarType<T[P], AggregateProductBundle[P]>
  }




  export type ProductBundleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductBundleWhereInput
    orderBy?: ProductBundleOrderByWithAggregationInput | ProductBundleOrderByWithAggregationInput[]
    by: ProductBundleScalarFieldEnum[] | ProductBundleScalarFieldEnum
    having?: ProductBundleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductBundleCountAggregateInputType | true
    _avg?: ProductBundleAvgAggregateInputType
    _sum?: ProductBundleSumAggregateInputType
    _min?: ProductBundleMinAggregateInputType
    _max?: ProductBundleMaxAggregateInputType
  }

  export type ProductBundleGroupByOutputType = {
    id: string
    name: string
    description: string | null
    sku: string
    bundlePrice: Decimal
    discount: Decimal | null
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    _count: ProductBundleCountAggregateOutputType | null
    _avg: ProductBundleAvgAggregateOutputType | null
    _sum: ProductBundleSumAggregateOutputType | null
    _min: ProductBundleMinAggregateOutputType | null
    _max: ProductBundleMaxAggregateOutputType | null
  }

  type GetProductBundleGroupByPayload<T extends ProductBundleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductBundleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductBundleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductBundleGroupByOutputType[P]>
            : GetScalarType<T[P], ProductBundleGroupByOutputType[P]>
        }
      >
    >


  export type ProductBundleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    sku?: boolean
    bundlePrice?: boolean
    discount?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    products?: boolean | ProductBundle$productsArgs<ExtArgs>
    bundleItems?: boolean | ProductBundle$bundleItemsArgs<ExtArgs>
    _count?: boolean | ProductBundleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productBundle"]>

  export type ProductBundleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    sku?: boolean
    bundlePrice?: boolean
    discount?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["productBundle"]>

  export type ProductBundleSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    sku?: boolean
    bundlePrice?: boolean
    discount?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["productBundle"]>

  export type ProductBundleSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    sku?: boolean
    bundlePrice?: boolean
    discount?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ProductBundleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "sku" | "bundlePrice" | "discount" | "isActive" | "createdAt" | "updatedAt", ExtArgs["result"]["productBundle"]>
  export type ProductBundleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | ProductBundle$productsArgs<ExtArgs>
    bundleItems?: boolean | ProductBundle$bundleItemsArgs<ExtArgs>
    _count?: boolean | ProductBundleCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProductBundleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type ProductBundleIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ProductBundlePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductBundle"
    objects: {
      products: Prisma.$ProductPayload<ExtArgs>[]
      bundleItems: Prisma.$ProductPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      sku: string
      bundlePrice: Prisma.Decimal
      discount: Prisma.Decimal | null
      isActive: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["productBundle"]>
    composites: {}
  }

  type ProductBundleGetPayload<S extends boolean | null | undefined | ProductBundleDefaultArgs> = $Result.GetResult<Prisma.$ProductBundlePayload, S>

  type ProductBundleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductBundleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductBundleCountAggregateInputType | true
    }

  export interface ProductBundleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductBundle'], meta: { name: 'ProductBundle' } }
    /**
     * Find zero or one ProductBundle that matches the filter.
     * @param {ProductBundleFindUniqueArgs} args - Arguments to find a ProductBundle
     * @example
     * // Get one ProductBundle
     * const productBundle = await prisma.productBundle.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductBundleFindUniqueArgs>(args: SelectSubset<T, ProductBundleFindUniqueArgs<ExtArgs>>): Prisma__ProductBundleClient<$Result.GetResult<Prisma.$ProductBundlePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProductBundle that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductBundleFindUniqueOrThrowArgs} args - Arguments to find a ProductBundle
     * @example
     * // Get one ProductBundle
     * const productBundle = await prisma.productBundle.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductBundleFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductBundleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductBundleClient<$Result.GetResult<Prisma.$ProductBundlePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductBundle that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductBundleFindFirstArgs} args - Arguments to find a ProductBundle
     * @example
     * // Get one ProductBundle
     * const productBundle = await prisma.productBundle.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductBundleFindFirstArgs>(args?: SelectSubset<T, ProductBundleFindFirstArgs<ExtArgs>>): Prisma__ProductBundleClient<$Result.GetResult<Prisma.$ProductBundlePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductBundle that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductBundleFindFirstOrThrowArgs} args - Arguments to find a ProductBundle
     * @example
     * // Get one ProductBundle
     * const productBundle = await prisma.productBundle.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductBundleFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductBundleFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductBundleClient<$Result.GetResult<Prisma.$ProductBundlePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProductBundles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductBundleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductBundles
     * const productBundles = await prisma.productBundle.findMany()
     * 
     * // Get first 10 ProductBundles
     * const productBundles = await prisma.productBundle.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productBundleWithIdOnly = await prisma.productBundle.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductBundleFindManyArgs>(args?: SelectSubset<T, ProductBundleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductBundlePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProductBundle.
     * @param {ProductBundleCreateArgs} args - Arguments to create a ProductBundle.
     * @example
     * // Create one ProductBundle
     * const ProductBundle = await prisma.productBundle.create({
     *   data: {
     *     // ... data to create a ProductBundle
     *   }
     * })
     * 
     */
    create<T extends ProductBundleCreateArgs>(args: SelectSubset<T, ProductBundleCreateArgs<ExtArgs>>): Prisma__ProductBundleClient<$Result.GetResult<Prisma.$ProductBundlePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProductBundles.
     * @param {ProductBundleCreateManyArgs} args - Arguments to create many ProductBundles.
     * @example
     * // Create many ProductBundles
     * const productBundle = await prisma.productBundle.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductBundleCreateManyArgs>(args?: SelectSubset<T, ProductBundleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductBundles and returns the data saved in the database.
     * @param {ProductBundleCreateManyAndReturnArgs} args - Arguments to create many ProductBundles.
     * @example
     * // Create many ProductBundles
     * const productBundle = await prisma.productBundle.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductBundles and only return the `id`
     * const productBundleWithIdOnly = await prisma.productBundle.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductBundleCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductBundleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductBundlePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProductBundle.
     * @param {ProductBundleDeleteArgs} args - Arguments to delete one ProductBundle.
     * @example
     * // Delete one ProductBundle
     * const ProductBundle = await prisma.productBundle.delete({
     *   where: {
     *     // ... filter to delete one ProductBundle
     *   }
     * })
     * 
     */
    delete<T extends ProductBundleDeleteArgs>(args: SelectSubset<T, ProductBundleDeleteArgs<ExtArgs>>): Prisma__ProductBundleClient<$Result.GetResult<Prisma.$ProductBundlePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProductBundle.
     * @param {ProductBundleUpdateArgs} args - Arguments to update one ProductBundle.
     * @example
     * // Update one ProductBundle
     * const productBundle = await prisma.productBundle.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductBundleUpdateArgs>(args: SelectSubset<T, ProductBundleUpdateArgs<ExtArgs>>): Prisma__ProductBundleClient<$Result.GetResult<Prisma.$ProductBundlePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProductBundles.
     * @param {ProductBundleDeleteManyArgs} args - Arguments to filter ProductBundles to delete.
     * @example
     * // Delete a few ProductBundles
     * const { count } = await prisma.productBundle.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductBundleDeleteManyArgs>(args?: SelectSubset<T, ProductBundleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductBundles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductBundleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductBundles
     * const productBundle = await prisma.productBundle.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductBundleUpdateManyArgs>(args: SelectSubset<T, ProductBundleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductBundles and returns the data updated in the database.
     * @param {ProductBundleUpdateManyAndReturnArgs} args - Arguments to update many ProductBundles.
     * @example
     * // Update many ProductBundles
     * const productBundle = await prisma.productBundle.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProductBundles and only return the `id`
     * const productBundleWithIdOnly = await prisma.productBundle.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductBundleUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductBundleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductBundlePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProductBundle.
     * @param {ProductBundleUpsertArgs} args - Arguments to update or create a ProductBundle.
     * @example
     * // Update or create a ProductBundle
     * const productBundle = await prisma.productBundle.upsert({
     *   create: {
     *     // ... data to create a ProductBundle
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductBundle we want to update
     *   }
     * })
     */
    upsert<T extends ProductBundleUpsertArgs>(args: SelectSubset<T, ProductBundleUpsertArgs<ExtArgs>>): Prisma__ProductBundleClient<$Result.GetResult<Prisma.$ProductBundlePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProductBundles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductBundleCountArgs} args - Arguments to filter ProductBundles to count.
     * @example
     * // Count the number of ProductBundles
     * const count = await prisma.productBundle.count({
     *   where: {
     *     // ... the filter for the ProductBundles we want to count
     *   }
     * })
    **/
    count<T extends ProductBundleCountArgs>(
      args?: Subset<T, ProductBundleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductBundleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductBundle.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductBundleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductBundleAggregateArgs>(args: Subset<T, ProductBundleAggregateArgs>): Prisma.PrismaPromise<GetProductBundleAggregateType<T>>

    /**
     * Group by ProductBundle.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductBundleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductBundleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductBundleGroupByArgs['orderBy'] }
        : { orderBy?: ProductBundleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductBundleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductBundleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductBundle model
   */
  readonly fields: ProductBundleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductBundle.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductBundleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    products<T extends ProductBundle$productsArgs<ExtArgs> = {}>(args?: Subset<T, ProductBundle$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    bundleItems<T extends ProductBundle$bundleItemsArgs<ExtArgs> = {}>(args?: Subset<T, ProductBundle$bundleItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductBundle model
   */
  interface ProductBundleFieldRefs {
    readonly id: FieldRef<"ProductBundle", 'String'>
    readonly name: FieldRef<"ProductBundle", 'String'>
    readonly description: FieldRef<"ProductBundle", 'String'>
    readonly sku: FieldRef<"ProductBundle", 'String'>
    readonly bundlePrice: FieldRef<"ProductBundle", 'Decimal'>
    readonly discount: FieldRef<"ProductBundle", 'Decimal'>
    readonly isActive: FieldRef<"ProductBundle", 'Boolean'>
    readonly createdAt: FieldRef<"ProductBundle", 'DateTime'>
    readonly updatedAt: FieldRef<"ProductBundle", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ProductBundle findUnique
   */
  export type ProductBundleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductBundle
     */
    select?: ProductBundleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductBundle
     */
    omit?: ProductBundleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductBundleInclude<ExtArgs> | null
    /**
     * Filter, which ProductBundle to fetch.
     */
    where: ProductBundleWhereUniqueInput
  }

  /**
   * ProductBundle findUniqueOrThrow
   */
  export type ProductBundleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductBundle
     */
    select?: ProductBundleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductBundle
     */
    omit?: ProductBundleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductBundleInclude<ExtArgs> | null
    /**
     * Filter, which ProductBundle to fetch.
     */
    where: ProductBundleWhereUniqueInput
  }

  /**
   * ProductBundle findFirst
   */
  export type ProductBundleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductBundle
     */
    select?: ProductBundleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductBundle
     */
    omit?: ProductBundleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductBundleInclude<ExtArgs> | null
    /**
     * Filter, which ProductBundle to fetch.
     */
    where?: ProductBundleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductBundles to fetch.
     */
    orderBy?: ProductBundleOrderByWithRelationInput | ProductBundleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductBundles.
     */
    cursor?: ProductBundleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductBundles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductBundles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductBundles.
     */
    distinct?: ProductBundleScalarFieldEnum | ProductBundleScalarFieldEnum[]
  }

  /**
   * ProductBundle findFirstOrThrow
   */
  export type ProductBundleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductBundle
     */
    select?: ProductBundleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductBundle
     */
    omit?: ProductBundleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductBundleInclude<ExtArgs> | null
    /**
     * Filter, which ProductBundle to fetch.
     */
    where?: ProductBundleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductBundles to fetch.
     */
    orderBy?: ProductBundleOrderByWithRelationInput | ProductBundleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductBundles.
     */
    cursor?: ProductBundleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductBundles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductBundles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductBundles.
     */
    distinct?: ProductBundleScalarFieldEnum | ProductBundleScalarFieldEnum[]
  }

  /**
   * ProductBundle findMany
   */
  export type ProductBundleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductBundle
     */
    select?: ProductBundleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductBundle
     */
    omit?: ProductBundleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductBundleInclude<ExtArgs> | null
    /**
     * Filter, which ProductBundles to fetch.
     */
    where?: ProductBundleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductBundles to fetch.
     */
    orderBy?: ProductBundleOrderByWithRelationInput | ProductBundleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductBundles.
     */
    cursor?: ProductBundleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductBundles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductBundles.
     */
    skip?: number
    distinct?: ProductBundleScalarFieldEnum | ProductBundleScalarFieldEnum[]
  }

  /**
   * ProductBundle create
   */
  export type ProductBundleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductBundle
     */
    select?: ProductBundleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductBundle
     */
    omit?: ProductBundleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductBundleInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductBundle.
     */
    data: XOR<ProductBundleCreateInput, ProductBundleUncheckedCreateInput>
  }

  /**
   * ProductBundle createMany
   */
  export type ProductBundleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductBundles.
     */
    data: ProductBundleCreateManyInput | ProductBundleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductBundle createManyAndReturn
   */
  export type ProductBundleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductBundle
     */
    select?: ProductBundleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductBundle
     */
    omit?: ProductBundleOmit<ExtArgs> | null
    /**
     * The data used to create many ProductBundles.
     */
    data: ProductBundleCreateManyInput | ProductBundleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductBundle update
   */
  export type ProductBundleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductBundle
     */
    select?: ProductBundleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductBundle
     */
    omit?: ProductBundleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductBundleInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductBundle.
     */
    data: XOR<ProductBundleUpdateInput, ProductBundleUncheckedUpdateInput>
    /**
     * Choose, which ProductBundle to update.
     */
    where: ProductBundleWhereUniqueInput
  }

  /**
   * ProductBundle updateMany
   */
  export type ProductBundleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductBundles.
     */
    data: XOR<ProductBundleUpdateManyMutationInput, ProductBundleUncheckedUpdateManyInput>
    /**
     * Filter which ProductBundles to update
     */
    where?: ProductBundleWhereInput
    /**
     * Limit how many ProductBundles to update.
     */
    limit?: number
  }

  /**
   * ProductBundle updateManyAndReturn
   */
  export type ProductBundleUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductBundle
     */
    select?: ProductBundleSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductBundle
     */
    omit?: ProductBundleOmit<ExtArgs> | null
    /**
     * The data used to update ProductBundles.
     */
    data: XOR<ProductBundleUpdateManyMutationInput, ProductBundleUncheckedUpdateManyInput>
    /**
     * Filter which ProductBundles to update
     */
    where?: ProductBundleWhereInput
    /**
     * Limit how many ProductBundles to update.
     */
    limit?: number
  }

  /**
   * ProductBundle upsert
   */
  export type ProductBundleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductBundle
     */
    select?: ProductBundleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductBundle
     */
    omit?: ProductBundleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductBundleInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductBundle to update in case it exists.
     */
    where: ProductBundleWhereUniqueInput
    /**
     * In case the ProductBundle found by the `where` argument doesn't exist, create a new ProductBundle with this data.
     */
    create: XOR<ProductBundleCreateInput, ProductBundleUncheckedCreateInput>
    /**
     * In case the ProductBundle was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductBundleUpdateInput, ProductBundleUncheckedUpdateInput>
  }

  /**
   * ProductBundle delete
   */
  export type ProductBundleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductBundle
     */
    select?: ProductBundleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductBundle
     */
    omit?: ProductBundleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductBundleInclude<ExtArgs> | null
    /**
     * Filter which ProductBundle to delete.
     */
    where: ProductBundleWhereUniqueInput
  }

  /**
   * ProductBundle deleteMany
   */
  export type ProductBundleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductBundles to delete
     */
    where?: ProductBundleWhereInput
    /**
     * Limit how many ProductBundles to delete.
     */
    limit?: number
  }

  /**
   * ProductBundle.products
   */
  export type ProductBundle$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * ProductBundle.bundleItems
   */
  export type ProductBundle$bundleItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * ProductBundle without action
   */
  export type ProductBundleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductBundle
     */
    select?: ProductBundleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductBundle
     */
    omit?: ProductBundleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductBundleInclude<ExtArgs> | null
  }


  /**
   * Model Warehouse
   */

  export type AggregateWarehouse = {
    _count: WarehouseCountAggregateOutputType | null
    _min: WarehouseMinAggregateOutputType | null
    _max: WarehouseMaxAggregateOutputType | null
  }

  export type WarehouseMinAggregateOutputType = {
    id: string | null
    name: string | null
    code: string | null
    description: string | null
    timezone: string | null
    managerName: string | null
    managerEmail: string | null
    managerPhone: string | null
    phone: string | null
    email: string | null
    type: $Enums.WarehouseType | null
    isActive: boolean | null
    hasRfid: boolean | null
    hasBarcode: boolean | null
    temperatureControl: boolean | null
    securityLevel: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type WarehouseMaxAggregateOutputType = {
    id: string | null
    name: string | null
    code: string | null
    description: string | null
    timezone: string | null
    managerName: string | null
    managerEmail: string | null
    managerPhone: string | null
    phone: string | null
    email: string | null
    type: $Enums.WarehouseType | null
    isActive: boolean | null
    hasRfid: boolean | null
    hasBarcode: boolean | null
    temperatureControl: boolean | null
    securityLevel: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type WarehouseCountAggregateOutputType = {
    id: number
    name: number
    code: number
    description: number
    address: number
    coordinates: number
    timezone: number
    managerName: number
    managerEmail: number
    managerPhone: number
    phone: number
    email: number
    type: number
    capacity: number
    isActive: number
    hasRfid: number
    hasBarcode: number
    temperatureControl: number
    securityLevel: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type WarehouseMinAggregateInputType = {
    id?: true
    name?: true
    code?: true
    description?: true
    timezone?: true
    managerName?: true
    managerEmail?: true
    managerPhone?: true
    phone?: true
    email?: true
    type?: true
    isActive?: true
    hasRfid?: true
    hasBarcode?: true
    temperatureControl?: true
    securityLevel?: true
    createdAt?: true
    updatedAt?: true
  }

  export type WarehouseMaxAggregateInputType = {
    id?: true
    name?: true
    code?: true
    description?: true
    timezone?: true
    managerName?: true
    managerEmail?: true
    managerPhone?: true
    phone?: true
    email?: true
    type?: true
    isActive?: true
    hasRfid?: true
    hasBarcode?: true
    temperatureControl?: true
    securityLevel?: true
    createdAt?: true
    updatedAt?: true
  }

  export type WarehouseCountAggregateInputType = {
    id?: true
    name?: true
    code?: true
    description?: true
    address?: true
    coordinates?: true
    timezone?: true
    managerName?: true
    managerEmail?: true
    managerPhone?: true
    phone?: true
    email?: true
    type?: true
    capacity?: true
    isActive?: true
    hasRfid?: true
    hasBarcode?: true
    temperatureControl?: true
    securityLevel?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type WarehouseAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Warehouse to aggregate.
     */
    where?: WarehouseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Warehouses to fetch.
     */
    orderBy?: WarehouseOrderByWithRelationInput | WarehouseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: WarehouseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Warehouses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Warehouses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Warehouses
    **/
    _count?: true | WarehouseCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WarehouseMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WarehouseMaxAggregateInputType
  }

  export type GetWarehouseAggregateType<T extends WarehouseAggregateArgs> = {
        [P in keyof T & keyof AggregateWarehouse]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWarehouse[P]>
      : GetScalarType<T[P], AggregateWarehouse[P]>
  }




  export type WarehouseGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: WarehouseWhereInput
    orderBy?: WarehouseOrderByWithAggregationInput | WarehouseOrderByWithAggregationInput[]
    by: WarehouseScalarFieldEnum[] | WarehouseScalarFieldEnum
    having?: WarehouseScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WarehouseCountAggregateInputType | true
    _min?: WarehouseMinAggregateInputType
    _max?: WarehouseMaxAggregateInputType
  }

  export type WarehouseGroupByOutputType = {
    id: string
    name: string
    code: string
    description: string | null
    address: JsonValue
    coordinates: JsonValue | null
    timezone: string | null
    managerName: string | null
    managerEmail: string | null
    managerPhone: string | null
    phone: string | null
    email: string | null
    type: $Enums.WarehouseType
    capacity: JsonValue | null
    isActive: boolean
    hasRfid: boolean
    hasBarcode: boolean
    temperatureControl: boolean
    securityLevel: string | null
    createdAt: Date
    updatedAt: Date
    _count: WarehouseCountAggregateOutputType | null
    _min: WarehouseMinAggregateOutputType | null
    _max: WarehouseMaxAggregateOutputType | null
  }

  type GetWarehouseGroupByPayload<T extends WarehouseGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<WarehouseGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof WarehouseGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], WarehouseGroupByOutputType[P]>
            : GetScalarType<T[P], WarehouseGroupByOutputType[P]>
        }
      >
    >


  export type WarehouseSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    code?: boolean
    description?: boolean
    address?: boolean
    coordinates?: boolean
    timezone?: boolean
    managerName?: boolean
    managerEmail?: boolean
    managerPhone?: boolean
    phone?: boolean
    email?: boolean
    type?: boolean
    capacity?: boolean
    isActive?: boolean
    hasRfid?: boolean
    hasBarcode?: boolean
    temperatureControl?: boolean
    securityLevel?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    inventoryItems?: boolean | Warehouse$inventoryItemsArgs<ExtArgs>
    movements?: boolean | Warehouse$movementsArgs<ExtArgs>
    transfers?: boolean | Warehouse$transfersArgs<ExtArgs>
    receivedTransfers?: boolean | Warehouse$receivedTransfersArgs<ExtArgs>
    orders?: boolean | Warehouse$ordersArgs<ExtArgs>
    purchaseOrders?: boolean | Warehouse$purchaseOrdersArgs<ExtArgs>
    audits?: boolean | Warehouse$auditsArgs<ExtArgs>
    goodsReceipts?: boolean | Warehouse$goodsReceiptsArgs<ExtArgs>
    shipments?: boolean | Warehouse$shipmentsArgs<ExtArgs>
    auditItems?: boolean | Warehouse$auditItemsArgs<ExtArgs>
    _count?: boolean | WarehouseCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["warehouse"]>

  export type WarehouseSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    code?: boolean
    description?: boolean
    address?: boolean
    coordinates?: boolean
    timezone?: boolean
    managerName?: boolean
    managerEmail?: boolean
    managerPhone?: boolean
    phone?: boolean
    email?: boolean
    type?: boolean
    capacity?: boolean
    isActive?: boolean
    hasRfid?: boolean
    hasBarcode?: boolean
    temperatureControl?: boolean
    securityLevel?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["warehouse"]>

  export type WarehouseSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    code?: boolean
    description?: boolean
    address?: boolean
    coordinates?: boolean
    timezone?: boolean
    managerName?: boolean
    managerEmail?: boolean
    managerPhone?: boolean
    phone?: boolean
    email?: boolean
    type?: boolean
    capacity?: boolean
    isActive?: boolean
    hasRfid?: boolean
    hasBarcode?: boolean
    temperatureControl?: boolean
    securityLevel?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["warehouse"]>

  export type WarehouseSelectScalar = {
    id?: boolean
    name?: boolean
    code?: boolean
    description?: boolean
    address?: boolean
    coordinates?: boolean
    timezone?: boolean
    managerName?: boolean
    managerEmail?: boolean
    managerPhone?: boolean
    phone?: boolean
    email?: boolean
    type?: boolean
    capacity?: boolean
    isActive?: boolean
    hasRfid?: boolean
    hasBarcode?: boolean
    temperatureControl?: boolean
    securityLevel?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type WarehouseOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "code" | "description" | "address" | "coordinates" | "timezone" | "managerName" | "managerEmail" | "managerPhone" | "phone" | "email" | "type" | "capacity" | "isActive" | "hasRfid" | "hasBarcode" | "temperatureControl" | "securityLevel" | "createdAt" | "updatedAt", ExtArgs["result"]["warehouse"]>
  export type WarehouseInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inventoryItems?: boolean | Warehouse$inventoryItemsArgs<ExtArgs>
    movements?: boolean | Warehouse$movementsArgs<ExtArgs>
    transfers?: boolean | Warehouse$transfersArgs<ExtArgs>
    receivedTransfers?: boolean | Warehouse$receivedTransfersArgs<ExtArgs>
    orders?: boolean | Warehouse$ordersArgs<ExtArgs>
    purchaseOrders?: boolean | Warehouse$purchaseOrdersArgs<ExtArgs>
    audits?: boolean | Warehouse$auditsArgs<ExtArgs>
    goodsReceipts?: boolean | Warehouse$goodsReceiptsArgs<ExtArgs>
    shipments?: boolean | Warehouse$shipmentsArgs<ExtArgs>
    auditItems?: boolean | Warehouse$auditItemsArgs<ExtArgs>
    _count?: boolean | WarehouseCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type WarehouseIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type WarehouseIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $WarehousePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Warehouse"
    objects: {
      inventoryItems: Prisma.$InventoryItemPayload<ExtArgs>[]
      movements: Prisma.$InventoryMovementPayload<ExtArgs>[]
      transfers: Prisma.$StockTransferPayload<ExtArgs>[]
      receivedTransfers: Prisma.$StockTransferPayload<ExtArgs>[]
      orders: Prisma.$OrderPayload<ExtArgs>[]
      purchaseOrders: Prisma.$PurchaseOrderPayload<ExtArgs>[]
      audits: Prisma.$InventoryAuditPayload<ExtArgs>[]
      goodsReceipts: Prisma.$GoodsReceiptPayload<ExtArgs>[]
      shipments: Prisma.$ShipmentPayload<ExtArgs>[]
      auditItems: Prisma.$InventoryAuditItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      code: string
      description: string | null
      address: Prisma.JsonValue
      coordinates: Prisma.JsonValue | null
      timezone: string | null
      managerName: string | null
      managerEmail: string | null
      managerPhone: string | null
      phone: string | null
      email: string | null
      type: $Enums.WarehouseType
      capacity: Prisma.JsonValue | null
      isActive: boolean
      hasRfid: boolean
      hasBarcode: boolean
      temperatureControl: boolean
      securityLevel: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["warehouse"]>
    composites: {}
  }

  type WarehouseGetPayload<S extends boolean | null | undefined | WarehouseDefaultArgs> = $Result.GetResult<Prisma.$WarehousePayload, S>

  type WarehouseCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<WarehouseFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: WarehouseCountAggregateInputType | true
    }

  export interface WarehouseDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Warehouse'], meta: { name: 'Warehouse' } }
    /**
     * Find zero or one Warehouse that matches the filter.
     * @param {WarehouseFindUniqueArgs} args - Arguments to find a Warehouse
     * @example
     * // Get one Warehouse
     * const warehouse = await prisma.warehouse.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends WarehouseFindUniqueArgs>(args: SelectSubset<T, WarehouseFindUniqueArgs<ExtArgs>>): Prisma__WarehouseClient<$Result.GetResult<Prisma.$WarehousePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Warehouse that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {WarehouseFindUniqueOrThrowArgs} args - Arguments to find a Warehouse
     * @example
     * // Get one Warehouse
     * const warehouse = await prisma.warehouse.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends WarehouseFindUniqueOrThrowArgs>(args: SelectSubset<T, WarehouseFindUniqueOrThrowArgs<ExtArgs>>): Prisma__WarehouseClient<$Result.GetResult<Prisma.$WarehousePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Warehouse that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WarehouseFindFirstArgs} args - Arguments to find a Warehouse
     * @example
     * // Get one Warehouse
     * const warehouse = await prisma.warehouse.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends WarehouseFindFirstArgs>(args?: SelectSubset<T, WarehouseFindFirstArgs<ExtArgs>>): Prisma__WarehouseClient<$Result.GetResult<Prisma.$WarehousePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Warehouse that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WarehouseFindFirstOrThrowArgs} args - Arguments to find a Warehouse
     * @example
     * // Get one Warehouse
     * const warehouse = await prisma.warehouse.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends WarehouseFindFirstOrThrowArgs>(args?: SelectSubset<T, WarehouseFindFirstOrThrowArgs<ExtArgs>>): Prisma__WarehouseClient<$Result.GetResult<Prisma.$WarehousePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Warehouses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WarehouseFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Warehouses
     * const warehouses = await prisma.warehouse.findMany()
     * 
     * // Get first 10 Warehouses
     * const warehouses = await prisma.warehouse.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const warehouseWithIdOnly = await prisma.warehouse.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends WarehouseFindManyArgs>(args?: SelectSubset<T, WarehouseFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WarehousePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Warehouse.
     * @param {WarehouseCreateArgs} args - Arguments to create a Warehouse.
     * @example
     * // Create one Warehouse
     * const Warehouse = await prisma.warehouse.create({
     *   data: {
     *     // ... data to create a Warehouse
     *   }
     * })
     * 
     */
    create<T extends WarehouseCreateArgs>(args: SelectSubset<T, WarehouseCreateArgs<ExtArgs>>): Prisma__WarehouseClient<$Result.GetResult<Prisma.$WarehousePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Warehouses.
     * @param {WarehouseCreateManyArgs} args - Arguments to create many Warehouses.
     * @example
     * // Create many Warehouses
     * const warehouse = await prisma.warehouse.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends WarehouseCreateManyArgs>(args?: SelectSubset<T, WarehouseCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Warehouses and returns the data saved in the database.
     * @param {WarehouseCreateManyAndReturnArgs} args - Arguments to create many Warehouses.
     * @example
     * // Create many Warehouses
     * const warehouse = await prisma.warehouse.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Warehouses and only return the `id`
     * const warehouseWithIdOnly = await prisma.warehouse.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends WarehouseCreateManyAndReturnArgs>(args?: SelectSubset<T, WarehouseCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WarehousePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Warehouse.
     * @param {WarehouseDeleteArgs} args - Arguments to delete one Warehouse.
     * @example
     * // Delete one Warehouse
     * const Warehouse = await prisma.warehouse.delete({
     *   where: {
     *     // ... filter to delete one Warehouse
     *   }
     * })
     * 
     */
    delete<T extends WarehouseDeleteArgs>(args: SelectSubset<T, WarehouseDeleteArgs<ExtArgs>>): Prisma__WarehouseClient<$Result.GetResult<Prisma.$WarehousePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Warehouse.
     * @param {WarehouseUpdateArgs} args - Arguments to update one Warehouse.
     * @example
     * // Update one Warehouse
     * const warehouse = await prisma.warehouse.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends WarehouseUpdateArgs>(args: SelectSubset<T, WarehouseUpdateArgs<ExtArgs>>): Prisma__WarehouseClient<$Result.GetResult<Prisma.$WarehousePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Warehouses.
     * @param {WarehouseDeleteManyArgs} args - Arguments to filter Warehouses to delete.
     * @example
     * // Delete a few Warehouses
     * const { count } = await prisma.warehouse.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends WarehouseDeleteManyArgs>(args?: SelectSubset<T, WarehouseDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Warehouses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WarehouseUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Warehouses
     * const warehouse = await prisma.warehouse.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends WarehouseUpdateManyArgs>(args: SelectSubset<T, WarehouseUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Warehouses and returns the data updated in the database.
     * @param {WarehouseUpdateManyAndReturnArgs} args - Arguments to update many Warehouses.
     * @example
     * // Update many Warehouses
     * const warehouse = await prisma.warehouse.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Warehouses and only return the `id`
     * const warehouseWithIdOnly = await prisma.warehouse.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends WarehouseUpdateManyAndReturnArgs>(args: SelectSubset<T, WarehouseUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WarehousePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Warehouse.
     * @param {WarehouseUpsertArgs} args - Arguments to update or create a Warehouse.
     * @example
     * // Update or create a Warehouse
     * const warehouse = await prisma.warehouse.upsert({
     *   create: {
     *     // ... data to create a Warehouse
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Warehouse we want to update
     *   }
     * })
     */
    upsert<T extends WarehouseUpsertArgs>(args: SelectSubset<T, WarehouseUpsertArgs<ExtArgs>>): Prisma__WarehouseClient<$Result.GetResult<Prisma.$WarehousePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Warehouses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WarehouseCountArgs} args - Arguments to filter Warehouses to count.
     * @example
     * // Count the number of Warehouses
     * const count = await prisma.warehouse.count({
     *   where: {
     *     // ... the filter for the Warehouses we want to count
     *   }
     * })
    **/
    count<T extends WarehouseCountArgs>(
      args?: Subset<T, WarehouseCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WarehouseCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Warehouse.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WarehouseAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WarehouseAggregateArgs>(args: Subset<T, WarehouseAggregateArgs>): Prisma.PrismaPromise<GetWarehouseAggregateType<T>>

    /**
     * Group by Warehouse.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WarehouseGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WarehouseGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WarehouseGroupByArgs['orderBy'] }
        : { orderBy?: WarehouseGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WarehouseGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWarehouseGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Warehouse model
   */
  readonly fields: WarehouseFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Warehouse.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__WarehouseClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    inventoryItems<T extends Warehouse$inventoryItemsArgs<ExtArgs> = {}>(args?: Subset<T, Warehouse$inventoryItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    movements<T extends Warehouse$movementsArgs<ExtArgs> = {}>(args?: Subset<T, Warehouse$movementsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryMovementPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    transfers<T extends Warehouse$transfersArgs<ExtArgs> = {}>(args?: Subset<T, Warehouse$transfersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockTransferPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    receivedTransfers<T extends Warehouse$receivedTransfersArgs<ExtArgs> = {}>(args?: Subset<T, Warehouse$receivedTransfersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockTransferPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    orders<T extends Warehouse$ordersArgs<ExtArgs> = {}>(args?: Subset<T, Warehouse$ordersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    purchaseOrders<T extends Warehouse$purchaseOrdersArgs<ExtArgs> = {}>(args?: Subset<T, Warehouse$purchaseOrdersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PurchaseOrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    audits<T extends Warehouse$auditsArgs<ExtArgs> = {}>(args?: Subset<T, Warehouse$auditsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryAuditPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    goodsReceipts<T extends Warehouse$goodsReceiptsArgs<ExtArgs> = {}>(args?: Subset<T, Warehouse$goodsReceiptsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GoodsReceiptPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    shipments<T extends Warehouse$shipmentsArgs<ExtArgs> = {}>(args?: Subset<T, Warehouse$shipmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    auditItems<T extends Warehouse$auditItemsArgs<ExtArgs> = {}>(args?: Subset<T, Warehouse$auditItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryAuditItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Warehouse model
   */
  interface WarehouseFieldRefs {
    readonly id: FieldRef<"Warehouse", 'String'>
    readonly name: FieldRef<"Warehouse", 'String'>
    readonly code: FieldRef<"Warehouse", 'String'>
    readonly description: FieldRef<"Warehouse", 'String'>
    readonly address: FieldRef<"Warehouse", 'Json'>
    readonly coordinates: FieldRef<"Warehouse", 'Json'>
    readonly timezone: FieldRef<"Warehouse", 'String'>
    readonly managerName: FieldRef<"Warehouse", 'String'>
    readonly managerEmail: FieldRef<"Warehouse", 'String'>
    readonly managerPhone: FieldRef<"Warehouse", 'String'>
    readonly phone: FieldRef<"Warehouse", 'String'>
    readonly email: FieldRef<"Warehouse", 'String'>
    readonly type: FieldRef<"Warehouse", 'WarehouseType'>
    readonly capacity: FieldRef<"Warehouse", 'Json'>
    readonly isActive: FieldRef<"Warehouse", 'Boolean'>
    readonly hasRfid: FieldRef<"Warehouse", 'Boolean'>
    readonly hasBarcode: FieldRef<"Warehouse", 'Boolean'>
    readonly temperatureControl: FieldRef<"Warehouse", 'Boolean'>
    readonly securityLevel: FieldRef<"Warehouse", 'String'>
    readonly createdAt: FieldRef<"Warehouse", 'DateTime'>
    readonly updatedAt: FieldRef<"Warehouse", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Warehouse findUnique
   */
  export type WarehouseFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Warehouse
     */
    select?: WarehouseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Warehouse
     */
    omit?: WarehouseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WarehouseInclude<ExtArgs> | null
    /**
     * Filter, which Warehouse to fetch.
     */
    where: WarehouseWhereUniqueInput
  }

  /**
   * Warehouse findUniqueOrThrow
   */
  export type WarehouseFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Warehouse
     */
    select?: WarehouseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Warehouse
     */
    omit?: WarehouseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WarehouseInclude<ExtArgs> | null
    /**
     * Filter, which Warehouse to fetch.
     */
    where: WarehouseWhereUniqueInput
  }

  /**
   * Warehouse findFirst
   */
  export type WarehouseFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Warehouse
     */
    select?: WarehouseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Warehouse
     */
    omit?: WarehouseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WarehouseInclude<ExtArgs> | null
    /**
     * Filter, which Warehouse to fetch.
     */
    where?: WarehouseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Warehouses to fetch.
     */
    orderBy?: WarehouseOrderByWithRelationInput | WarehouseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Warehouses.
     */
    cursor?: WarehouseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Warehouses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Warehouses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Warehouses.
     */
    distinct?: WarehouseScalarFieldEnum | WarehouseScalarFieldEnum[]
  }

  /**
   * Warehouse findFirstOrThrow
   */
  export type WarehouseFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Warehouse
     */
    select?: WarehouseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Warehouse
     */
    omit?: WarehouseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WarehouseInclude<ExtArgs> | null
    /**
     * Filter, which Warehouse to fetch.
     */
    where?: WarehouseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Warehouses to fetch.
     */
    orderBy?: WarehouseOrderByWithRelationInput | WarehouseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Warehouses.
     */
    cursor?: WarehouseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Warehouses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Warehouses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Warehouses.
     */
    distinct?: WarehouseScalarFieldEnum | WarehouseScalarFieldEnum[]
  }

  /**
   * Warehouse findMany
   */
  export type WarehouseFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Warehouse
     */
    select?: WarehouseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Warehouse
     */
    omit?: WarehouseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WarehouseInclude<ExtArgs> | null
    /**
     * Filter, which Warehouses to fetch.
     */
    where?: WarehouseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Warehouses to fetch.
     */
    orderBy?: WarehouseOrderByWithRelationInput | WarehouseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Warehouses.
     */
    cursor?: WarehouseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Warehouses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Warehouses.
     */
    skip?: number
    distinct?: WarehouseScalarFieldEnum | WarehouseScalarFieldEnum[]
  }

  /**
   * Warehouse create
   */
  export type WarehouseCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Warehouse
     */
    select?: WarehouseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Warehouse
     */
    omit?: WarehouseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WarehouseInclude<ExtArgs> | null
    /**
     * The data needed to create a Warehouse.
     */
    data: XOR<WarehouseCreateInput, WarehouseUncheckedCreateInput>
  }

  /**
   * Warehouse createMany
   */
  export type WarehouseCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Warehouses.
     */
    data: WarehouseCreateManyInput | WarehouseCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Warehouse createManyAndReturn
   */
  export type WarehouseCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Warehouse
     */
    select?: WarehouseSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Warehouse
     */
    omit?: WarehouseOmit<ExtArgs> | null
    /**
     * The data used to create many Warehouses.
     */
    data: WarehouseCreateManyInput | WarehouseCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Warehouse update
   */
  export type WarehouseUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Warehouse
     */
    select?: WarehouseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Warehouse
     */
    omit?: WarehouseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WarehouseInclude<ExtArgs> | null
    /**
     * The data needed to update a Warehouse.
     */
    data: XOR<WarehouseUpdateInput, WarehouseUncheckedUpdateInput>
    /**
     * Choose, which Warehouse to update.
     */
    where: WarehouseWhereUniqueInput
  }

  /**
   * Warehouse updateMany
   */
  export type WarehouseUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Warehouses.
     */
    data: XOR<WarehouseUpdateManyMutationInput, WarehouseUncheckedUpdateManyInput>
    /**
     * Filter which Warehouses to update
     */
    where?: WarehouseWhereInput
    /**
     * Limit how many Warehouses to update.
     */
    limit?: number
  }

  /**
   * Warehouse updateManyAndReturn
   */
  export type WarehouseUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Warehouse
     */
    select?: WarehouseSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Warehouse
     */
    omit?: WarehouseOmit<ExtArgs> | null
    /**
     * The data used to update Warehouses.
     */
    data: XOR<WarehouseUpdateManyMutationInput, WarehouseUncheckedUpdateManyInput>
    /**
     * Filter which Warehouses to update
     */
    where?: WarehouseWhereInput
    /**
     * Limit how many Warehouses to update.
     */
    limit?: number
  }

  /**
   * Warehouse upsert
   */
  export type WarehouseUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Warehouse
     */
    select?: WarehouseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Warehouse
     */
    omit?: WarehouseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WarehouseInclude<ExtArgs> | null
    /**
     * The filter to search for the Warehouse to update in case it exists.
     */
    where: WarehouseWhereUniqueInput
    /**
     * In case the Warehouse found by the `where` argument doesn't exist, create a new Warehouse with this data.
     */
    create: XOR<WarehouseCreateInput, WarehouseUncheckedCreateInput>
    /**
     * In case the Warehouse was found with the provided `where` argument, update it with this data.
     */
    update: XOR<WarehouseUpdateInput, WarehouseUncheckedUpdateInput>
  }

  /**
   * Warehouse delete
   */
  export type WarehouseDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Warehouse
     */
    select?: WarehouseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Warehouse
     */
    omit?: WarehouseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WarehouseInclude<ExtArgs> | null
    /**
     * Filter which Warehouse to delete.
     */
    where: WarehouseWhereUniqueInput
  }

  /**
   * Warehouse deleteMany
   */
  export type WarehouseDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Warehouses to delete
     */
    where?: WarehouseWhereInput
    /**
     * Limit how many Warehouses to delete.
     */
    limit?: number
  }

  /**
   * Warehouse.inventoryItems
   */
  export type Warehouse$inventoryItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryItem
     */
    select?: InventoryItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryItem
     */
    omit?: InventoryItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryItemInclude<ExtArgs> | null
    where?: InventoryItemWhereInput
    orderBy?: InventoryItemOrderByWithRelationInput | InventoryItemOrderByWithRelationInput[]
    cursor?: InventoryItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InventoryItemScalarFieldEnum | InventoryItemScalarFieldEnum[]
  }

  /**
   * Warehouse.movements
   */
  export type Warehouse$movementsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryMovement
     */
    select?: InventoryMovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryMovement
     */
    omit?: InventoryMovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryMovementInclude<ExtArgs> | null
    where?: InventoryMovementWhereInput
    orderBy?: InventoryMovementOrderByWithRelationInput | InventoryMovementOrderByWithRelationInput[]
    cursor?: InventoryMovementWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InventoryMovementScalarFieldEnum | InventoryMovementScalarFieldEnum[]
  }

  /**
   * Warehouse.transfers
   */
  export type Warehouse$transfersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockTransfer
     */
    select?: StockTransferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockTransfer
     */
    omit?: StockTransferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockTransferInclude<ExtArgs> | null
    where?: StockTransferWhereInput
    orderBy?: StockTransferOrderByWithRelationInput | StockTransferOrderByWithRelationInput[]
    cursor?: StockTransferWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StockTransferScalarFieldEnum | StockTransferScalarFieldEnum[]
  }

  /**
   * Warehouse.receivedTransfers
   */
  export type Warehouse$receivedTransfersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockTransfer
     */
    select?: StockTransferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockTransfer
     */
    omit?: StockTransferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockTransferInclude<ExtArgs> | null
    where?: StockTransferWhereInput
    orderBy?: StockTransferOrderByWithRelationInput | StockTransferOrderByWithRelationInput[]
    cursor?: StockTransferWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StockTransferScalarFieldEnum | StockTransferScalarFieldEnum[]
  }

  /**
   * Warehouse.orders
   */
  export type Warehouse$ordersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Warehouse.purchaseOrders
   */
  export type Warehouse$purchaseOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrder
     */
    select?: PurchaseOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrder
     */
    omit?: PurchaseOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderInclude<ExtArgs> | null
    where?: PurchaseOrderWhereInput
    orderBy?: PurchaseOrderOrderByWithRelationInput | PurchaseOrderOrderByWithRelationInput[]
    cursor?: PurchaseOrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PurchaseOrderScalarFieldEnum | PurchaseOrderScalarFieldEnum[]
  }

  /**
   * Warehouse.audits
   */
  export type Warehouse$auditsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAudit
     */
    select?: InventoryAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAudit
     */
    omit?: InventoryAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAuditInclude<ExtArgs> | null
    where?: InventoryAuditWhereInput
    orderBy?: InventoryAuditOrderByWithRelationInput | InventoryAuditOrderByWithRelationInput[]
    cursor?: InventoryAuditWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InventoryAuditScalarFieldEnum | InventoryAuditScalarFieldEnum[]
  }

  /**
   * Warehouse.goodsReceipts
   */
  export type Warehouse$goodsReceiptsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoodsReceipt
     */
    select?: GoodsReceiptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GoodsReceipt
     */
    omit?: GoodsReceiptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoodsReceiptInclude<ExtArgs> | null
    where?: GoodsReceiptWhereInput
    orderBy?: GoodsReceiptOrderByWithRelationInput | GoodsReceiptOrderByWithRelationInput[]
    cursor?: GoodsReceiptWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GoodsReceiptScalarFieldEnum | GoodsReceiptScalarFieldEnum[]
  }

  /**
   * Warehouse.shipments
   */
  export type Warehouse$shipmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Shipment
     */
    select?: ShipmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Shipment
     */
    omit?: ShipmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentInclude<ExtArgs> | null
    where?: ShipmentWhereInput
    orderBy?: ShipmentOrderByWithRelationInput | ShipmentOrderByWithRelationInput[]
    cursor?: ShipmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ShipmentScalarFieldEnum | ShipmentScalarFieldEnum[]
  }

  /**
   * Warehouse.auditItems
   */
  export type Warehouse$auditItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAuditItem
     */
    select?: InventoryAuditItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAuditItem
     */
    omit?: InventoryAuditItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAuditItemInclude<ExtArgs> | null
    where?: InventoryAuditItemWhereInput
    orderBy?: InventoryAuditItemOrderByWithRelationInput | InventoryAuditItemOrderByWithRelationInput[]
    cursor?: InventoryAuditItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InventoryAuditItemScalarFieldEnum | InventoryAuditItemScalarFieldEnum[]
  }

  /**
   * Warehouse without action
   */
  export type WarehouseDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Warehouse
     */
    select?: WarehouseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Warehouse
     */
    omit?: WarehouseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WarehouseInclude<ExtArgs> | null
  }


  /**
   * Model InventoryItem
   */

  export type AggregateInventoryItem = {
    _count: InventoryItemCountAggregateOutputType | null
    _avg: InventoryItemAvgAggregateOutputType | null
    _sum: InventoryItemSumAggregateOutputType | null
    _min: InventoryItemMinAggregateOutputType | null
    _max: InventoryItemMaxAggregateOutputType | null
  }

  export type InventoryItemAvgAggregateOutputType = {
    quantity: number | null
    reservedQuantity: number | null
    availableQuantity: number | null
    averageCost: Decimal | null
    lastCost: Decimal | null
  }

  export type InventoryItemSumAggregateOutputType = {
    quantity: number | null
    reservedQuantity: number | null
    availableQuantity: number | null
    averageCost: Decimal | null
    lastCost: Decimal | null
  }

  export type InventoryItemMinAggregateOutputType = {
    id: string | null
    productId: string | null
    variantId: string | null
    warehouseId: string | null
    zone: string | null
    aisle: string | null
    shelf: string | null
    bin: string | null
    locationCode: string | null
    quantity: number | null
    reservedQuantity: number | null
    availableQuantity: number | null
    averageCost: Decimal | null
    lastCost: Decimal | null
    lotNumber: string | null
    batchNumber: string | null
    expiryDate: Date | null
    status: $Enums.InventoryStatus | null
    qcStatus: $Enums.QualityStatus | null
    quarantineReason: string | null
    lastMovement: Date | null
    lastCount: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type InventoryItemMaxAggregateOutputType = {
    id: string | null
    productId: string | null
    variantId: string | null
    warehouseId: string | null
    zone: string | null
    aisle: string | null
    shelf: string | null
    bin: string | null
    locationCode: string | null
    quantity: number | null
    reservedQuantity: number | null
    availableQuantity: number | null
    averageCost: Decimal | null
    lastCost: Decimal | null
    lotNumber: string | null
    batchNumber: string | null
    expiryDate: Date | null
    status: $Enums.InventoryStatus | null
    qcStatus: $Enums.QualityStatus | null
    quarantineReason: string | null
    lastMovement: Date | null
    lastCount: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type InventoryItemCountAggregateOutputType = {
    id: number
    productId: number
    variantId: number
    warehouseId: number
    zone: number
    aisle: number
    shelf: number
    bin: number
    locationCode: number
    quantity: number
    reservedQuantity: number
    availableQuantity: number
    averageCost: number
    lastCost: number
    lotNumber: number
    batchNumber: number
    serialNumbers: number
    expiryDate: number
    status: number
    qcStatus: number
    quarantineReason: number
    lastMovement: number
    lastCount: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type InventoryItemAvgAggregateInputType = {
    quantity?: true
    reservedQuantity?: true
    availableQuantity?: true
    averageCost?: true
    lastCost?: true
  }

  export type InventoryItemSumAggregateInputType = {
    quantity?: true
    reservedQuantity?: true
    availableQuantity?: true
    averageCost?: true
    lastCost?: true
  }

  export type InventoryItemMinAggregateInputType = {
    id?: true
    productId?: true
    variantId?: true
    warehouseId?: true
    zone?: true
    aisle?: true
    shelf?: true
    bin?: true
    locationCode?: true
    quantity?: true
    reservedQuantity?: true
    availableQuantity?: true
    averageCost?: true
    lastCost?: true
    lotNumber?: true
    batchNumber?: true
    expiryDate?: true
    status?: true
    qcStatus?: true
    quarantineReason?: true
    lastMovement?: true
    lastCount?: true
    createdAt?: true
    updatedAt?: true
  }

  export type InventoryItemMaxAggregateInputType = {
    id?: true
    productId?: true
    variantId?: true
    warehouseId?: true
    zone?: true
    aisle?: true
    shelf?: true
    bin?: true
    locationCode?: true
    quantity?: true
    reservedQuantity?: true
    availableQuantity?: true
    averageCost?: true
    lastCost?: true
    lotNumber?: true
    batchNumber?: true
    expiryDate?: true
    status?: true
    qcStatus?: true
    quarantineReason?: true
    lastMovement?: true
    lastCount?: true
    createdAt?: true
    updatedAt?: true
  }

  export type InventoryItemCountAggregateInputType = {
    id?: true
    productId?: true
    variantId?: true
    warehouseId?: true
    zone?: true
    aisle?: true
    shelf?: true
    bin?: true
    locationCode?: true
    quantity?: true
    reservedQuantity?: true
    availableQuantity?: true
    averageCost?: true
    lastCost?: true
    lotNumber?: true
    batchNumber?: true
    serialNumbers?: true
    expiryDate?: true
    status?: true
    qcStatus?: true
    quarantineReason?: true
    lastMovement?: true
    lastCount?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type InventoryItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InventoryItem to aggregate.
     */
    where?: InventoryItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InventoryItems to fetch.
     */
    orderBy?: InventoryItemOrderByWithRelationInput | InventoryItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InventoryItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InventoryItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InventoryItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned InventoryItems
    **/
    _count?: true | InventoryItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InventoryItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InventoryItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InventoryItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InventoryItemMaxAggregateInputType
  }

  export type GetInventoryItemAggregateType<T extends InventoryItemAggregateArgs> = {
        [P in keyof T & keyof AggregateInventoryItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInventoryItem[P]>
      : GetScalarType<T[P], AggregateInventoryItem[P]>
  }




  export type InventoryItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventoryItemWhereInput
    orderBy?: InventoryItemOrderByWithAggregationInput | InventoryItemOrderByWithAggregationInput[]
    by: InventoryItemScalarFieldEnum[] | InventoryItemScalarFieldEnum
    having?: InventoryItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InventoryItemCountAggregateInputType | true
    _avg?: InventoryItemAvgAggregateInputType
    _sum?: InventoryItemSumAggregateInputType
    _min?: InventoryItemMinAggregateInputType
    _max?: InventoryItemMaxAggregateInputType
  }

  export type InventoryItemGroupByOutputType = {
    id: string
    productId: string
    variantId: string | null
    warehouseId: string
    zone: string | null
    aisle: string | null
    shelf: string | null
    bin: string | null
    locationCode: string | null
    quantity: number
    reservedQuantity: number
    availableQuantity: number
    averageCost: Decimal | null
    lastCost: Decimal | null
    lotNumber: string | null
    batchNumber: string | null
    serialNumbers: JsonValue | null
    expiryDate: Date | null
    status: $Enums.InventoryStatus
    qcStatus: $Enums.QualityStatus
    quarantineReason: string | null
    lastMovement: Date | null
    lastCount: Date | null
    createdAt: Date
    updatedAt: Date
    _count: InventoryItemCountAggregateOutputType | null
    _avg: InventoryItemAvgAggregateOutputType | null
    _sum: InventoryItemSumAggregateOutputType | null
    _min: InventoryItemMinAggregateOutputType | null
    _max: InventoryItemMaxAggregateOutputType | null
  }

  type GetInventoryItemGroupByPayload<T extends InventoryItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InventoryItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InventoryItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InventoryItemGroupByOutputType[P]>
            : GetScalarType<T[P], InventoryItemGroupByOutputType[P]>
        }
      >
    >


  export type InventoryItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    variantId?: boolean
    warehouseId?: boolean
    zone?: boolean
    aisle?: boolean
    shelf?: boolean
    bin?: boolean
    locationCode?: boolean
    quantity?: boolean
    reservedQuantity?: boolean
    availableQuantity?: boolean
    averageCost?: boolean
    lastCost?: boolean
    lotNumber?: boolean
    batchNumber?: boolean
    serialNumbers?: boolean
    expiryDate?: boolean
    status?: boolean
    qcStatus?: boolean
    quarantineReason?: boolean
    lastMovement?: boolean
    lastCount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | InventoryItem$variantArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
    movements?: boolean | InventoryItem$movementsArgs<ExtArgs>
    reservations?: boolean | InventoryItem$reservationsArgs<ExtArgs>
    _count?: boolean | InventoryItemCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inventoryItem"]>

  export type InventoryItemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    variantId?: boolean
    warehouseId?: boolean
    zone?: boolean
    aisle?: boolean
    shelf?: boolean
    bin?: boolean
    locationCode?: boolean
    quantity?: boolean
    reservedQuantity?: boolean
    availableQuantity?: boolean
    averageCost?: boolean
    lastCost?: boolean
    lotNumber?: boolean
    batchNumber?: boolean
    serialNumbers?: boolean
    expiryDate?: boolean
    status?: boolean
    qcStatus?: boolean
    quarantineReason?: boolean
    lastMovement?: boolean
    lastCount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | InventoryItem$variantArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inventoryItem"]>

  export type InventoryItemSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    variantId?: boolean
    warehouseId?: boolean
    zone?: boolean
    aisle?: boolean
    shelf?: boolean
    bin?: boolean
    locationCode?: boolean
    quantity?: boolean
    reservedQuantity?: boolean
    availableQuantity?: boolean
    averageCost?: boolean
    lastCost?: boolean
    lotNumber?: boolean
    batchNumber?: boolean
    serialNumbers?: boolean
    expiryDate?: boolean
    status?: boolean
    qcStatus?: boolean
    quarantineReason?: boolean
    lastMovement?: boolean
    lastCount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | InventoryItem$variantArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inventoryItem"]>

  export type InventoryItemSelectScalar = {
    id?: boolean
    productId?: boolean
    variantId?: boolean
    warehouseId?: boolean
    zone?: boolean
    aisle?: boolean
    shelf?: boolean
    bin?: boolean
    locationCode?: boolean
    quantity?: boolean
    reservedQuantity?: boolean
    availableQuantity?: boolean
    averageCost?: boolean
    lastCost?: boolean
    lotNumber?: boolean
    batchNumber?: boolean
    serialNumbers?: boolean
    expiryDate?: boolean
    status?: boolean
    qcStatus?: boolean
    quarantineReason?: boolean
    lastMovement?: boolean
    lastCount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type InventoryItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "productId" | "variantId" | "warehouseId" | "zone" | "aisle" | "shelf" | "bin" | "locationCode" | "quantity" | "reservedQuantity" | "availableQuantity" | "averageCost" | "lastCost" | "lotNumber" | "batchNumber" | "serialNumbers" | "expiryDate" | "status" | "qcStatus" | "quarantineReason" | "lastMovement" | "lastCount" | "createdAt" | "updatedAt", ExtArgs["result"]["inventoryItem"]>
  export type InventoryItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | InventoryItem$variantArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
    movements?: boolean | InventoryItem$movementsArgs<ExtArgs>
    reservations?: boolean | InventoryItem$reservationsArgs<ExtArgs>
    _count?: boolean | InventoryItemCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type InventoryItemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | InventoryItem$variantArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
  }
  export type InventoryItemIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | InventoryItem$variantArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
  }

  export type $InventoryItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "InventoryItem"
    objects: {
      product: Prisma.$ProductPayload<ExtArgs>
      variant: Prisma.$ProductVariantPayload<ExtArgs> | null
      warehouse: Prisma.$WarehousePayload<ExtArgs>
      movements: Prisma.$InventoryMovementPayload<ExtArgs>[]
      reservations: Prisma.$StockReservationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      productId: string
      variantId: string | null
      warehouseId: string
      zone: string | null
      aisle: string | null
      shelf: string | null
      bin: string | null
      locationCode: string | null
      quantity: number
      reservedQuantity: number
      availableQuantity: number
      averageCost: Prisma.Decimal | null
      lastCost: Prisma.Decimal | null
      lotNumber: string | null
      batchNumber: string | null
      serialNumbers: Prisma.JsonValue | null
      expiryDate: Date | null
      status: $Enums.InventoryStatus
      qcStatus: $Enums.QualityStatus
      quarantineReason: string | null
      lastMovement: Date | null
      lastCount: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["inventoryItem"]>
    composites: {}
  }

  type InventoryItemGetPayload<S extends boolean | null | undefined | InventoryItemDefaultArgs> = $Result.GetResult<Prisma.$InventoryItemPayload, S>

  type InventoryItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<InventoryItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InventoryItemCountAggregateInputType | true
    }

  export interface InventoryItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['InventoryItem'], meta: { name: 'InventoryItem' } }
    /**
     * Find zero or one InventoryItem that matches the filter.
     * @param {InventoryItemFindUniqueArgs} args - Arguments to find a InventoryItem
     * @example
     * // Get one InventoryItem
     * const inventoryItem = await prisma.inventoryItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InventoryItemFindUniqueArgs>(args: SelectSubset<T, InventoryItemFindUniqueArgs<ExtArgs>>): Prisma__InventoryItemClient<$Result.GetResult<Prisma.$InventoryItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one InventoryItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {InventoryItemFindUniqueOrThrowArgs} args - Arguments to find a InventoryItem
     * @example
     * // Get one InventoryItem
     * const inventoryItem = await prisma.inventoryItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InventoryItemFindUniqueOrThrowArgs>(args: SelectSubset<T, InventoryItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InventoryItemClient<$Result.GetResult<Prisma.$InventoryItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InventoryItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryItemFindFirstArgs} args - Arguments to find a InventoryItem
     * @example
     * // Get one InventoryItem
     * const inventoryItem = await prisma.inventoryItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InventoryItemFindFirstArgs>(args?: SelectSubset<T, InventoryItemFindFirstArgs<ExtArgs>>): Prisma__InventoryItemClient<$Result.GetResult<Prisma.$InventoryItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InventoryItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryItemFindFirstOrThrowArgs} args - Arguments to find a InventoryItem
     * @example
     * // Get one InventoryItem
     * const inventoryItem = await prisma.inventoryItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InventoryItemFindFirstOrThrowArgs>(args?: SelectSubset<T, InventoryItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__InventoryItemClient<$Result.GetResult<Prisma.$InventoryItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more InventoryItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all InventoryItems
     * const inventoryItems = await prisma.inventoryItem.findMany()
     * 
     * // Get first 10 InventoryItems
     * const inventoryItems = await prisma.inventoryItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const inventoryItemWithIdOnly = await prisma.inventoryItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends InventoryItemFindManyArgs>(args?: SelectSubset<T, InventoryItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a InventoryItem.
     * @param {InventoryItemCreateArgs} args - Arguments to create a InventoryItem.
     * @example
     * // Create one InventoryItem
     * const InventoryItem = await prisma.inventoryItem.create({
     *   data: {
     *     // ... data to create a InventoryItem
     *   }
     * })
     * 
     */
    create<T extends InventoryItemCreateArgs>(args: SelectSubset<T, InventoryItemCreateArgs<ExtArgs>>): Prisma__InventoryItemClient<$Result.GetResult<Prisma.$InventoryItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many InventoryItems.
     * @param {InventoryItemCreateManyArgs} args - Arguments to create many InventoryItems.
     * @example
     * // Create many InventoryItems
     * const inventoryItem = await prisma.inventoryItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InventoryItemCreateManyArgs>(args?: SelectSubset<T, InventoryItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many InventoryItems and returns the data saved in the database.
     * @param {InventoryItemCreateManyAndReturnArgs} args - Arguments to create many InventoryItems.
     * @example
     * // Create many InventoryItems
     * const inventoryItem = await prisma.inventoryItem.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many InventoryItems and only return the `id`
     * const inventoryItemWithIdOnly = await prisma.inventoryItem.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InventoryItemCreateManyAndReturnArgs>(args?: SelectSubset<T, InventoryItemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryItemPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a InventoryItem.
     * @param {InventoryItemDeleteArgs} args - Arguments to delete one InventoryItem.
     * @example
     * // Delete one InventoryItem
     * const InventoryItem = await prisma.inventoryItem.delete({
     *   where: {
     *     // ... filter to delete one InventoryItem
     *   }
     * })
     * 
     */
    delete<T extends InventoryItemDeleteArgs>(args: SelectSubset<T, InventoryItemDeleteArgs<ExtArgs>>): Prisma__InventoryItemClient<$Result.GetResult<Prisma.$InventoryItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one InventoryItem.
     * @param {InventoryItemUpdateArgs} args - Arguments to update one InventoryItem.
     * @example
     * // Update one InventoryItem
     * const inventoryItem = await prisma.inventoryItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InventoryItemUpdateArgs>(args: SelectSubset<T, InventoryItemUpdateArgs<ExtArgs>>): Prisma__InventoryItemClient<$Result.GetResult<Prisma.$InventoryItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more InventoryItems.
     * @param {InventoryItemDeleteManyArgs} args - Arguments to filter InventoryItems to delete.
     * @example
     * // Delete a few InventoryItems
     * const { count } = await prisma.inventoryItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InventoryItemDeleteManyArgs>(args?: SelectSubset<T, InventoryItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InventoryItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many InventoryItems
     * const inventoryItem = await prisma.inventoryItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InventoryItemUpdateManyArgs>(args: SelectSubset<T, InventoryItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InventoryItems and returns the data updated in the database.
     * @param {InventoryItemUpdateManyAndReturnArgs} args - Arguments to update many InventoryItems.
     * @example
     * // Update many InventoryItems
     * const inventoryItem = await prisma.inventoryItem.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more InventoryItems and only return the `id`
     * const inventoryItemWithIdOnly = await prisma.inventoryItem.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends InventoryItemUpdateManyAndReturnArgs>(args: SelectSubset<T, InventoryItemUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryItemPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one InventoryItem.
     * @param {InventoryItemUpsertArgs} args - Arguments to update or create a InventoryItem.
     * @example
     * // Update or create a InventoryItem
     * const inventoryItem = await prisma.inventoryItem.upsert({
     *   create: {
     *     // ... data to create a InventoryItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the InventoryItem we want to update
     *   }
     * })
     */
    upsert<T extends InventoryItemUpsertArgs>(args: SelectSubset<T, InventoryItemUpsertArgs<ExtArgs>>): Prisma__InventoryItemClient<$Result.GetResult<Prisma.$InventoryItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of InventoryItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryItemCountArgs} args - Arguments to filter InventoryItems to count.
     * @example
     * // Count the number of InventoryItems
     * const count = await prisma.inventoryItem.count({
     *   where: {
     *     // ... the filter for the InventoryItems we want to count
     *   }
     * })
    **/
    count<T extends InventoryItemCountArgs>(
      args?: Subset<T, InventoryItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InventoryItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a InventoryItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InventoryItemAggregateArgs>(args: Subset<T, InventoryItemAggregateArgs>): Prisma.PrismaPromise<GetInventoryItemAggregateType<T>>

    /**
     * Group by InventoryItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InventoryItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InventoryItemGroupByArgs['orderBy'] }
        : { orderBy?: InventoryItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InventoryItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInventoryItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the InventoryItem model
   */
  readonly fields: InventoryItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for InventoryItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InventoryItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    variant<T extends InventoryItem$variantArgs<ExtArgs> = {}>(args?: Subset<T, InventoryItem$variantArgs<ExtArgs>>): Prisma__ProductVariantClient<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    warehouse<T extends WarehouseDefaultArgs<ExtArgs> = {}>(args?: Subset<T, WarehouseDefaultArgs<ExtArgs>>): Prisma__WarehouseClient<$Result.GetResult<Prisma.$WarehousePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    movements<T extends InventoryItem$movementsArgs<ExtArgs> = {}>(args?: Subset<T, InventoryItem$movementsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryMovementPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reservations<T extends InventoryItem$reservationsArgs<ExtArgs> = {}>(args?: Subset<T, InventoryItem$reservationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockReservationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the InventoryItem model
   */
  interface InventoryItemFieldRefs {
    readonly id: FieldRef<"InventoryItem", 'String'>
    readonly productId: FieldRef<"InventoryItem", 'String'>
    readonly variantId: FieldRef<"InventoryItem", 'String'>
    readonly warehouseId: FieldRef<"InventoryItem", 'String'>
    readonly zone: FieldRef<"InventoryItem", 'String'>
    readonly aisle: FieldRef<"InventoryItem", 'String'>
    readonly shelf: FieldRef<"InventoryItem", 'String'>
    readonly bin: FieldRef<"InventoryItem", 'String'>
    readonly locationCode: FieldRef<"InventoryItem", 'String'>
    readonly quantity: FieldRef<"InventoryItem", 'Int'>
    readonly reservedQuantity: FieldRef<"InventoryItem", 'Int'>
    readonly availableQuantity: FieldRef<"InventoryItem", 'Int'>
    readonly averageCost: FieldRef<"InventoryItem", 'Decimal'>
    readonly lastCost: FieldRef<"InventoryItem", 'Decimal'>
    readonly lotNumber: FieldRef<"InventoryItem", 'String'>
    readonly batchNumber: FieldRef<"InventoryItem", 'String'>
    readonly serialNumbers: FieldRef<"InventoryItem", 'Json'>
    readonly expiryDate: FieldRef<"InventoryItem", 'DateTime'>
    readonly status: FieldRef<"InventoryItem", 'InventoryStatus'>
    readonly qcStatus: FieldRef<"InventoryItem", 'QualityStatus'>
    readonly quarantineReason: FieldRef<"InventoryItem", 'String'>
    readonly lastMovement: FieldRef<"InventoryItem", 'DateTime'>
    readonly lastCount: FieldRef<"InventoryItem", 'DateTime'>
    readonly createdAt: FieldRef<"InventoryItem", 'DateTime'>
    readonly updatedAt: FieldRef<"InventoryItem", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * InventoryItem findUnique
   */
  export type InventoryItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryItem
     */
    select?: InventoryItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryItem
     */
    omit?: InventoryItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryItemInclude<ExtArgs> | null
    /**
     * Filter, which InventoryItem to fetch.
     */
    where: InventoryItemWhereUniqueInput
  }

  /**
   * InventoryItem findUniqueOrThrow
   */
  export type InventoryItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryItem
     */
    select?: InventoryItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryItem
     */
    omit?: InventoryItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryItemInclude<ExtArgs> | null
    /**
     * Filter, which InventoryItem to fetch.
     */
    where: InventoryItemWhereUniqueInput
  }

  /**
   * InventoryItem findFirst
   */
  export type InventoryItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryItem
     */
    select?: InventoryItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryItem
     */
    omit?: InventoryItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryItemInclude<ExtArgs> | null
    /**
     * Filter, which InventoryItem to fetch.
     */
    where?: InventoryItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InventoryItems to fetch.
     */
    orderBy?: InventoryItemOrderByWithRelationInput | InventoryItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InventoryItems.
     */
    cursor?: InventoryItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InventoryItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InventoryItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InventoryItems.
     */
    distinct?: InventoryItemScalarFieldEnum | InventoryItemScalarFieldEnum[]
  }

  /**
   * InventoryItem findFirstOrThrow
   */
  export type InventoryItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryItem
     */
    select?: InventoryItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryItem
     */
    omit?: InventoryItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryItemInclude<ExtArgs> | null
    /**
     * Filter, which InventoryItem to fetch.
     */
    where?: InventoryItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InventoryItems to fetch.
     */
    orderBy?: InventoryItemOrderByWithRelationInput | InventoryItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InventoryItems.
     */
    cursor?: InventoryItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InventoryItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InventoryItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InventoryItems.
     */
    distinct?: InventoryItemScalarFieldEnum | InventoryItemScalarFieldEnum[]
  }

  /**
   * InventoryItem findMany
   */
  export type InventoryItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryItem
     */
    select?: InventoryItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryItem
     */
    omit?: InventoryItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryItemInclude<ExtArgs> | null
    /**
     * Filter, which InventoryItems to fetch.
     */
    where?: InventoryItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InventoryItems to fetch.
     */
    orderBy?: InventoryItemOrderByWithRelationInput | InventoryItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing InventoryItems.
     */
    cursor?: InventoryItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InventoryItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InventoryItems.
     */
    skip?: number
    distinct?: InventoryItemScalarFieldEnum | InventoryItemScalarFieldEnum[]
  }

  /**
   * InventoryItem create
   */
  export type InventoryItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryItem
     */
    select?: InventoryItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryItem
     */
    omit?: InventoryItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryItemInclude<ExtArgs> | null
    /**
     * The data needed to create a InventoryItem.
     */
    data: XOR<InventoryItemCreateInput, InventoryItemUncheckedCreateInput>
  }

  /**
   * InventoryItem createMany
   */
  export type InventoryItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many InventoryItems.
     */
    data: InventoryItemCreateManyInput | InventoryItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * InventoryItem createManyAndReturn
   */
  export type InventoryItemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryItem
     */
    select?: InventoryItemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryItem
     */
    omit?: InventoryItemOmit<ExtArgs> | null
    /**
     * The data used to create many InventoryItems.
     */
    data: InventoryItemCreateManyInput | InventoryItemCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryItemIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * InventoryItem update
   */
  export type InventoryItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryItem
     */
    select?: InventoryItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryItem
     */
    omit?: InventoryItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryItemInclude<ExtArgs> | null
    /**
     * The data needed to update a InventoryItem.
     */
    data: XOR<InventoryItemUpdateInput, InventoryItemUncheckedUpdateInput>
    /**
     * Choose, which InventoryItem to update.
     */
    where: InventoryItemWhereUniqueInput
  }

  /**
   * InventoryItem updateMany
   */
  export type InventoryItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update InventoryItems.
     */
    data: XOR<InventoryItemUpdateManyMutationInput, InventoryItemUncheckedUpdateManyInput>
    /**
     * Filter which InventoryItems to update
     */
    where?: InventoryItemWhereInput
    /**
     * Limit how many InventoryItems to update.
     */
    limit?: number
  }

  /**
   * InventoryItem updateManyAndReturn
   */
  export type InventoryItemUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryItem
     */
    select?: InventoryItemSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryItem
     */
    omit?: InventoryItemOmit<ExtArgs> | null
    /**
     * The data used to update InventoryItems.
     */
    data: XOR<InventoryItemUpdateManyMutationInput, InventoryItemUncheckedUpdateManyInput>
    /**
     * Filter which InventoryItems to update
     */
    where?: InventoryItemWhereInput
    /**
     * Limit how many InventoryItems to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryItemIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * InventoryItem upsert
   */
  export type InventoryItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryItem
     */
    select?: InventoryItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryItem
     */
    omit?: InventoryItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryItemInclude<ExtArgs> | null
    /**
     * The filter to search for the InventoryItem to update in case it exists.
     */
    where: InventoryItemWhereUniqueInput
    /**
     * In case the InventoryItem found by the `where` argument doesn't exist, create a new InventoryItem with this data.
     */
    create: XOR<InventoryItemCreateInput, InventoryItemUncheckedCreateInput>
    /**
     * In case the InventoryItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InventoryItemUpdateInput, InventoryItemUncheckedUpdateInput>
  }

  /**
   * InventoryItem delete
   */
  export type InventoryItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryItem
     */
    select?: InventoryItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryItem
     */
    omit?: InventoryItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryItemInclude<ExtArgs> | null
    /**
     * Filter which InventoryItem to delete.
     */
    where: InventoryItemWhereUniqueInput
  }

  /**
   * InventoryItem deleteMany
   */
  export type InventoryItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InventoryItems to delete
     */
    where?: InventoryItemWhereInput
    /**
     * Limit how many InventoryItems to delete.
     */
    limit?: number
  }

  /**
   * InventoryItem.variant
   */
  export type InventoryItem$variantArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductVariant
     */
    omit?: ProductVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    where?: ProductVariantWhereInput
  }

  /**
   * InventoryItem.movements
   */
  export type InventoryItem$movementsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryMovement
     */
    select?: InventoryMovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryMovement
     */
    omit?: InventoryMovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryMovementInclude<ExtArgs> | null
    where?: InventoryMovementWhereInput
    orderBy?: InventoryMovementOrderByWithRelationInput | InventoryMovementOrderByWithRelationInput[]
    cursor?: InventoryMovementWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InventoryMovementScalarFieldEnum | InventoryMovementScalarFieldEnum[]
  }

  /**
   * InventoryItem.reservations
   */
  export type InventoryItem$reservationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReservation
     */
    select?: StockReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockReservation
     */
    omit?: StockReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockReservationInclude<ExtArgs> | null
    where?: StockReservationWhereInput
    orderBy?: StockReservationOrderByWithRelationInput | StockReservationOrderByWithRelationInput[]
    cursor?: StockReservationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StockReservationScalarFieldEnum | StockReservationScalarFieldEnum[]
  }

  /**
   * InventoryItem without action
   */
  export type InventoryItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryItem
     */
    select?: InventoryItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryItem
     */
    omit?: InventoryItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryItemInclude<ExtArgs> | null
  }


  /**
   * Model InventoryMovement
   */

  export type AggregateInventoryMovement = {
    _count: InventoryMovementCountAggregateOutputType | null
    _avg: InventoryMovementAvgAggregateOutputType | null
    _sum: InventoryMovementSumAggregateOutputType | null
    _min: InventoryMovementMinAggregateOutputType | null
    _max: InventoryMovementMaxAggregateOutputType | null
  }

  export type InventoryMovementAvgAggregateOutputType = {
    quantity: number | null
    quantityBefore: number | null
    quantityAfter: number | null
    unitCost: Decimal | null
    totalCost: Decimal | null
  }

  export type InventoryMovementSumAggregateOutputType = {
    quantity: number | null
    quantityBefore: number | null
    quantityAfter: number | null
    unitCost: Decimal | null
    totalCost: Decimal | null
  }

  export type InventoryMovementMinAggregateOutputType = {
    id: string | null
    type: $Enums.MovementType | null
    subtype: string | null
    productId: string | null
    variantId: string | null
    warehouseId: string | null
    inventoryItemId: string | null
    quantity: number | null
    quantityBefore: number | null
    quantityAfter: number | null
    unitCost: Decimal | null
    totalCost: Decimal | null
    referenceType: string | null
    referenceId: string | null
    fromLocation: string | null
    toLocation: string | null
    lotNumber: string | null
    batchNumber: string | null
    expiryDate: Date | null
    reason: string | null
    notes: string | null
    userId: string | null
    approvedBy: string | null
    approvedAt: Date | null
    occurredAt: Date | null
    createdAt: Date | null
  }

  export type InventoryMovementMaxAggregateOutputType = {
    id: string | null
    type: $Enums.MovementType | null
    subtype: string | null
    productId: string | null
    variantId: string | null
    warehouseId: string | null
    inventoryItemId: string | null
    quantity: number | null
    quantityBefore: number | null
    quantityAfter: number | null
    unitCost: Decimal | null
    totalCost: Decimal | null
    referenceType: string | null
    referenceId: string | null
    fromLocation: string | null
    toLocation: string | null
    lotNumber: string | null
    batchNumber: string | null
    expiryDate: Date | null
    reason: string | null
    notes: string | null
    userId: string | null
    approvedBy: string | null
    approvedAt: Date | null
    occurredAt: Date | null
    createdAt: Date | null
  }

  export type InventoryMovementCountAggregateOutputType = {
    id: number
    type: number
    subtype: number
    productId: number
    variantId: number
    warehouseId: number
    inventoryItemId: number
    quantity: number
    quantityBefore: number
    quantityAfter: number
    unitCost: number
    totalCost: number
    referenceType: number
    referenceId: number
    fromLocation: number
    toLocation: number
    lotNumber: number
    batchNumber: number
    expiryDate: number
    reason: number
    notes: number
    userId: number
    approvedBy: number
    approvedAt: number
    occurredAt: number
    createdAt: number
    _all: number
  }


  export type InventoryMovementAvgAggregateInputType = {
    quantity?: true
    quantityBefore?: true
    quantityAfter?: true
    unitCost?: true
    totalCost?: true
  }

  export type InventoryMovementSumAggregateInputType = {
    quantity?: true
    quantityBefore?: true
    quantityAfter?: true
    unitCost?: true
    totalCost?: true
  }

  export type InventoryMovementMinAggregateInputType = {
    id?: true
    type?: true
    subtype?: true
    productId?: true
    variantId?: true
    warehouseId?: true
    inventoryItemId?: true
    quantity?: true
    quantityBefore?: true
    quantityAfter?: true
    unitCost?: true
    totalCost?: true
    referenceType?: true
    referenceId?: true
    fromLocation?: true
    toLocation?: true
    lotNumber?: true
    batchNumber?: true
    expiryDate?: true
    reason?: true
    notes?: true
    userId?: true
    approvedBy?: true
    approvedAt?: true
    occurredAt?: true
    createdAt?: true
  }

  export type InventoryMovementMaxAggregateInputType = {
    id?: true
    type?: true
    subtype?: true
    productId?: true
    variantId?: true
    warehouseId?: true
    inventoryItemId?: true
    quantity?: true
    quantityBefore?: true
    quantityAfter?: true
    unitCost?: true
    totalCost?: true
    referenceType?: true
    referenceId?: true
    fromLocation?: true
    toLocation?: true
    lotNumber?: true
    batchNumber?: true
    expiryDate?: true
    reason?: true
    notes?: true
    userId?: true
    approvedBy?: true
    approvedAt?: true
    occurredAt?: true
    createdAt?: true
  }

  export type InventoryMovementCountAggregateInputType = {
    id?: true
    type?: true
    subtype?: true
    productId?: true
    variantId?: true
    warehouseId?: true
    inventoryItemId?: true
    quantity?: true
    quantityBefore?: true
    quantityAfter?: true
    unitCost?: true
    totalCost?: true
    referenceType?: true
    referenceId?: true
    fromLocation?: true
    toLocation?: true
    lotNumber?: true
    batchNumber?: true
    expiryDate?: true
    reason?: true
    notes?: true
    userId?: true
    approvedBy?: true
    approvedAt?: true
    occurredAt?: true
    createdAt?: true
    _all?: true
  }

  export type InventoryMovementAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InventoryMovement to aggregate.
     */
    where?: InventoryMovementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InventoryMovements to fetch.
     */
    orderBy?: InventoryMovementOrderByWithRelationInput | InventoryMovementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InventoryMovementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InventoryMovements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InventoryMovements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned InventoryMovements
    **/
    _count?: true | InventoryMovementCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InventoryMovementAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InventoryMovementSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InventoryMovementMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InventoryMovementMaxAggregateInputType
  }

  export type GetInventoryMovementAggregateType<T extends InventoryMovementAggregateArgs> = {
        [P in keyof T & keyof AggregateInventoryMovement]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInventoryMovement[P]>
      : GetScalarType<T[P], AggregateInventoryMovement[P]>
  }




  export type InventoryMovementGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventoryMovementWhereInput
    orderBy?: InventoryMovementOrderByWithAggregationInput | InventoryMovementOrderByWithAggregationInput[]
    by: InventoryMovementScalarFieldEnum[] | InventoryMovementScalarFieldEnum
    having?: InventoryMovementScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InventoryMovementCountAggregateInputType | true
    _avg?: InventoryMovementAvgAggregateInputType
    _sum?: InventoryMovementSumAggregateInputType
    _min?: InventoryMovementMinAggregateInputType
    _max?: InventoryMovementMaxAggregateInputType
  }

  export type InventoryMovementGroupByOutputType = {
    id: string
    type: $Enums.MovementType
    subtype: string | null
    productId: string
    variantId: string | null
    warehouseId: string
    inventoryItemId: string | null
    quantity: number
    quantityBefore: number
    quantityAfter: number
    unitCost: Decimal | null
    totalCost: Decimal | null
    referenceType: string | null
    referenceId: string | null
    fromLocation: string | null
    toLocation: string | null
    lotNumber: string | null
    batchNumber: string | null
    expiryDate: Date | null
    reason: string | null
    notes: string | null
    userId: string
    approvedBy: string | null
    approvedAt: Date | null
    occurredAt: Date
    createdAt: Date
    _count: InventoryMovementCountAggregateOutputType | null
    _avg: InventoryMovementAvgAggregateOutputType | null
    _sum: InventoryMovementSumAggregateOutputType | null
    _min: InventoryMovementMinAggregateOutputType | null
    _max: InventoryMovementMaxAggregateOutputType | null
  }

  type GetInventoryMovementGroupByPayload<T extends InventoryMovementGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InventoryMovementGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InventoryMovementGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InventoryMovementGroupByOutputType[P]>
            : GetScalarType<T[P], InventoryMovementGroupByOutputType[P]>
        }
      >
    >


  export type InventoryMovementSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    subtype?: boolean
    productId?: boolean
    variantId?: boolean
    warehouseId?: boolean
    inventoryItemId?: boolean
    quantity?: boolean
    quantityBefore?: boolean
    quantityAfter?: boolean
    unitCost?: boolean
    totalCost?: boolean
    referenceType?: boolean
    referenceId?: boolean
    fromLocation?: boolean
    toLocation?: boolean
    lotNumber?: boolean
    batchNumber?: boolean
    expiryDate?: boolean
    reason?: boolean
    notes?: boolean
    userId?: boolean
    approvedBy?: boolean
    approvedAt?: boolean
    occurredAt?: boolean
    createdAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | InventoryMovement$variantArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
    inventoryItem?: boolean | InventoryMovement$inventoryItemArgs<ExtArgs>
  }, ExtArgs["result"]["inventoryMovement"]>

  export type InventoryMovementSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    subtype?: boolean
    productId?: boolean
    variantId?: boolean
    warehouseId?: boolean
    inventoryItemId?: boolean
    quantity?: boolean
    quantityBefore?: boolean
    quantityAfter?: boolean
    unitCost?: boolean
    totalCost?: boolean
    referenceType?: boolean
    referenceId?: boolean
    fromLocation?: boolean
    toLocation?: boolean
    lotNumber?: boolean
    batchNumber?: boolean
    expiryDate?: boolean
    reason?: boolean
    notes?: boolean
    userId?: boolean
    approvedBy?: boolean
    approvedAt?: boolean
    occurredAt?: boolean
    createdAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | InventoryMovement$variantArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
    inventoryItem?: boolean | InventoryMovement$inventoryItemArgs<ExtArgs>
  }, ExtArgs["result"]["inventoryMovement"]>

  export type InventoryMovementSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    subtype?: boolean
    productId?: boolean
    variantId?: boolean
    warehouseId?: boolean
    inventoryItemId?: boolean
    quantity?: boolean
    quantityBefore?: boolean
    quantityAfter?: boolean
    unitCost?: boolean
    totalCost?: boolean
    referenceType?: boolean
    referenceId?: boolean
    fromLocation?: boolean
    toLocation?: boolean
    lotNumber?: boolean
    batchNumber?: boolean
    expiryDate?: boolean
    reason?: boolean
    notes?: boolean
    userId?: boolean
    approvedBy?: boolean
    approvedAt?: boolean
    occurredAt?: boolean
    createdAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | InventoryMovement$variantArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
    inventoryItem?: boolean | InventoryMovement$inventoryItemArgs<ExtArgs>
  }, ExtArgs["result"]["inventoryMovement"]>

  export type InventoryMovementSelectScalar = {
    id?: boolean
    type?: boolean
    subtype?: boolean
    productId?: boolean
    variantId?: boolean
    warehouseId?: boolean
    inventoryItemId?: boolean
    quantity?: boolean
    quantityBefore?: boolean
    quantityAfter?: boolean
    unitCost?: boolean
    totalCost?: boolean
    referenceType?: boolean
    referenceId?: boolean
    fromLocation?: boolean
    toLocation?: boolean
    lotNumber?: boolean
    batchNumber?: boolean
    expiryDate?: boolean
    reason?: boolean
    notes?: boolean
    userId?: boolean
    approvedBy?: boolean
    approvedAt?: boolean
    occurredAt?: boolean
    createdAt?: boolean
  }

  export type InventoryMovementOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "type" | "subtype" | "productId" | "variantId" | "warehouseId" | "inventoryItemId" | "quantity" | "quantityBefore" | "quantityAfter" | "unitCost" | "totalCost" | "referenceType" | "referenceId" | "fromLocation" | "toLocation" | "lotNumber" | "batchNumber" | "expiryDate" | "reason" | "notes" | "userId" | "approvedBy" | "approvedAt" | "occurredAt" | "createdAt", ExtArgs["result"]["inventoryMovement"]>
  export type InventoryMovementInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | InventoryMovement$variantArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
    inventoryItem?: boolean | InventoryMovement$inventoryItemArgs<ExtArgs>
  }
  export type InventoryMovementIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | InventoryMovement$variantArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
    inventoryItem?: boolean | InventoryMovement$inventoryItemArgs<ExtArgs>
  }
  export type InventoryMovementIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | InventoryMovement$variantArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
    inventoryItem?: boolean | InventoryMovement$inventoryItemArgs<ExtArgs>
  }

  export type $InventoryMovementPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "InventoryMovement"
    objects: {
      product: Prisma.$ProductPayload<ExtArgs>
      variant: Prisma.$ProductVariantPayload<ExtArgs> | null
      warehouse: Prisma.$WarehousePayload<ExtArgs>
      inventoryItem: Prisma.$InventoryItemPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      type: $Enums.MovementType
      subtype: string | null
      productId: string
      variantId: string | null
      warehouseId: string
      inventoryItemId: string | null
      quantity: number
      quantityBefore: number
      quantityAfter: number
      unitCost: Prisma.Decimal | null
      totalCost: Prisma.Decimal | null
      referenceType: string | null
      referenceId: string | null
      fromLocation: string | null
      toLocation: string | null
      lotNumber: string | null
      batchNumber: string | null
      expiryDate: Date | null
      reason: string | null
      notes: string | null
      userId: string
      approvedBy: string | null
      approvedAt: Date | null
      occurredAt: Date
      createdAt: Date
    }, ExtArgs["result"]["inventoryMovement"]>
    composites: {}
  }

  type InventoryMovementGetPayload<S extends boolean | null | undefined | InventoryMovementDefaultArgs> = $Result.GetResult<Prisma.$InventoryMovementPayload, S>

  type InventoryMovementCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<InventoryMovementFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InventoryMovementCountAggregateInputType | true
    }

  export interface InventoryMovementDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['InventoryMovement'], meta: { name: 'InventoryMovement' } }
    /**
     * Find zero or one InventoryMovement that matches the filter.
     * @param {InventoryMovementFindUniqueArgs} args - Arguments to find a InventoryMovement
     * @example
     * // Get one InventoryMovement
     * const inventoryMovement = await prisma.inventoryMovement.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InventoryMovementFindUniqueArgs>(args: SelectSubset<T, InventoryMovementFindUniqueArgs<ExtArgs>>): Prisma__InventoryMovementClient<$Result.GetResult<Prisma.$InventoryMovementPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one InventoryMovement that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {InventoryMovementFindUniqueOrThrowArgs} args - Arguments to find a InventoryMovement
     * @example
     * // Get one InventoryMovement
     * const inventoryMovement = await prisma.inventoryMovement.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InventoryMovementFindUniqueOrThrowArgs>(args: SelectSubset<T, InventoryMovementFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InventoryMovementClient<$Result.GetResult<Prisma.$InventoryMovementPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InventoryMovement that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryMovementFindFirstArgs} args - Arguments to find a InventoryMovement
     * @example
     * // Get one InventoryMovement
     * const inventoryMovement = await prisma.inventoryMovement.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InventoryMovementFindFirstArgs>(args?: SelectSubset<T, InventoryMovementFindFirstArgs<ExtArgs>>): Prisma__InventoryMovementClient<$Result.GetResult<Prisma.$InventoryMovementPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InventoryMovement that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryMovementFindFirstOrThrowArgs} args - Arguments to find a InventoryMovement
     * @example
     * // Get one InventoryMovement
     * const inventoryMovement = await prisma.inventoryMovement.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InventoryMovementFindFirstOrThrowArgs>(args?: SelectSubset<T, InventoryMovementFindFirstOrThrowArgs<ExtArgs>>): Prisma__InventoryMovementClient<$Result.GetResult<Prisma.$InventoryMovementPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more InventoryMovements that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryMovementFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all InventoryMovements
     * const inventoryMovements = await prisma.inventoryMovement.findMany()
     * 
     * // Get first 10 InventoryMovements
     * const inventoryMovements = await prisma.inventoryMovement.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const inventoryMovementWithIdOnly = await prisma.inventoryMovement.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends InventoryMovementFindManyArgs>(args?: SelectSubset<T, InventoryMovementFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryMovementPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a InventoryMovement.
     * @param {InventoryMovementCreateArgs} args - Arguments to create a InventoryMovement.
     * @example
     * // Create one InventoryMovement
     * const InventoryMovement = await prisma.inventoryMovement.create({
     *   data: {
     *     // ... data to create a InventoryMovement
     *   }
     * })
     * 
     */
    create<T extends InventoryMovementCreateArgs>(args: SelectSubset<T, InventoryMovementCreateArgs<ExtArgs>>): Prisma__InventoryMovementClient<$Result.GetResult<Prisma.$InventoryMovementPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many InventoryMovements.
     * @param {InventoryMovementCreateManyArgs} args - Arguments to create many InventoryMovements.
     * @example
     * // Create many InventoryMovements
     * const inventoryMovement = await prisma.inventoryMovement.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InventoryMovementCreateManyArgs>(args?: SelectSubset<T, InventoryMovementCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many InventoryMovements and returns the data saved in the database.
     * @param {InventoryMovementCreateManyAndReturnArgs} args - Arguments to create many InventoryMovements.
     * @example
     * // Create many InventoryMovements
     * const inventoryMovement = await prisma.inventoryMovement.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many InventoryMovements and only return the `id`
     * const inventoryMovementWithIdOnly = await prisma.inventoryMovement.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InventoryMovementCreateManyAndReturnArgs>(args?: SelectSubset<T, InventoryMovementCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryMovementPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a InventoryMovement.
     * @param {InventoryMovementDeleteArgs} args - Arguments to delete one InventoryMovement.
     * @example
     * // Delete one InventoryMovement
     * const InventoryMovement = await prisma.inventoryMovement.delete({
     *   where: {
     *     // ... filter to delete one InventoryMovement
     *   }
     * })
     * 
     */
    delete<T extends InventoryMovementDeleteArgs>(args: SelectSubset<T, InventoryMovementDeleteArgs<ExtArgs>>): Prisma__InventoryMovementClient<$Result.GetResult<Prisma.$InventoryMovementPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one InventoryMovement.
     * @param {InventoryMovementUpdateArgs} args - Arguments to update one InventoryMovement.
     * @example
     * // Update one InventoryMovement
     * const inventoryMovement = await prisma.inventoryMovement.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InventoryMovementUpdateArgs>(args: SelectSubset<T, InventoryMovementUpdateArgs<ExtArgs>>): Prisma__InventoryMovementClient<$Result.GetResult<Prisma.$InventoryMovementPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more InventoryMovements.
     * @param {InventoryMovementDeleteManyArgs} args - Arguments to filter InventoryMovements to delete.
     * @example
     * // Delete a few InventoryMovements
     * const { count } = await prisma.inventoryMovement.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InventoryMovementDeleteManyArgs>(args?: SelectSubset<T, InventoryMovementDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InventoryMovements.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryMovementUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many InventoryMovements
     * const inventoryMovement = await prisma.inventoryMovement.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InventoryMovementUpdateManyArgs>(args: SelectSubset<T, InventoryMovementUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InventoryMovements and returns the data updated in the database.
     * @param {InventoryMovementUpdateManyAndReturnArgs} args - Arguments to update many InventoryMovements.
     * @example
     * // Update many InventoryMovements
     * const inventoryMovement = await prisma.inventoryMovement.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more InventoryMovements and only return the `id`
     * const inventoryMovementWithIdOnly = await prisma.inventoryMovement.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends InventoryMovementUpdateManyAndReturnArgs>(args: SelectSubset<T, InventoryMovementUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryMovementPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one InventoryMovement.
     * @param {InventoryMovementUpsertArgs} args - Arguments to update or create a InventoryMovement.
     * @example
     * // Update or create a InventoryMovement
     * const inventoryMovement = await prisma.inventoryMovement.upsert({
     *   create: {
     *     // ... data to create a InventoryMovement
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the InventoryMovement we want to update
     *   }
     * })
     */
    upsert<T extends InventoryMovementUpsertArgs>(args: SelectSubset<T, InventoryMovementUpsertArgs<ExtArgs>>): Prisma__InventoryMovementClient<$Result.GetResult<Prisma.$InventoryMovementPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of InventoryMovements.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryMovementCountArgs} args - Arguments to filter InventoryMovements to count.
     * @example
     * // Count the number of InventoryMovements
     * const count = await prisma.inventoryMovement.count({
     *   where: {
     *     // ... the filter for the InventoryMovements we want to count
     *   }
     * })
    **/
    count<T extends InventoryMovementCountArgs>(
      args?: Subset<T, InventoryMovementCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InventoryMovementCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a InventoryMovement.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryMovementAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InventoryMovementAggregateArgs>(args: Subset<T, InventoryMovementAggregateArgs>): Prisma.PrismaPromise<GetInventoryMovementAggregateType<T>>

    /**
     * Group by InventoryMovement.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryMovementGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InventoryMovementGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InventoryMovementGroupByArgs['orderBy'] }
        : { orderBy?: InventoryMovementGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InventoryMovementGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInventoryMovementGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the InventoryMovement model
   */
  readonly fields: InventoryMovementFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for InventoryMovement.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InventoryMovementClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    variant<T extends InventoryMovement$variantArgs<ExtArgs> = {}>(args?: Subset<T, InventoryMovement$variantArgs<ExtArgs>>): Prisma__ProductVariantClient<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    warehouse<T extends WarehouseDefaultArgs<ExtArgs> = {}>(args?: Subset<T, WarehouseDefaultArgs<ExtArgs>>): Prisma__WarehouseClient<$Result.GetResult<Prisma.$WarehousePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    inventoryItem<T extends InventoryMovement$inventoryItemArgs<ExtArgs> = {}>(args?: Subset<T, InventoryMovement$inventoryItemArgs<ExtArgs>>): Prisma__InventoryItemClient<$Result.GetResult<Prisma.$InventoryItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the InventoryMovement model
   */
  interface InventoryMovementFieldRefs {
    readonly id: FieldRef<"InventoryMovement", 'String'>
    readonly type: FieldRef<"InventoryMovement", 'MovementType'>
    readonly subtype: FieldRef<"InventoryMovement", 'String'>
    readonly productId: FieldRef<"InventoryMovement", 'String'>
    readonly variantId: FieldRef<"InventoryMovement", 'String'>
    readonly warehouseId: FieldRef<"InventoryMovement", 'String'>
    readonly inventoryItemId: FieldRef<"InventoryMovement", 'String'>
    readonly quantity: FieldRef<"InventoryMovement", 'Int'>
    readonly quantityBefore: FieldRef<"InventoryMovement", 'Int'>
    readonly quantityAfter: FieldRef<"InventoryMovement", 'Int'>
    readonly unitCost: FieldRef<"InventoryMovement", 'Decimal'>
    readonly totalCost: FieldRef<"InventoryMovement", 'Decimal'>
    readonly referenceType: FieldRef<"InventoryMovement", 'String'>
    readonly referenceId: FieldRef<"InventoryMovement", 'String'>
    readonly fromLocation: FieldRef<"InventoryMovement", 'String'>
    readonly toLocation: FieldRef<"InventoryMovement", 'String'>
    readonly lotNumber: FieldRef<"InventoryMovement", 'String'>
    readonly batchNumber: FieldRef<"InventoryMovement", 'String'>
    readonly expiryDate: FieldRef<"InventoryMovement", 'DateTime'>
    readonly reason: FieldRef<"InventoryMovement", 'String'>
    readonly notes: FieldRef<"InventoryMovement", 'String'>
    readonly userId: FieldRef<"InventoryMovement", 'String'>
    readonly approvedBy: FieldRef<"InventoryMovement", 'String'>
    readonly approvedAt: FieldRef<"InventoryMovement", 'DateTime'>
    readonly occurredAt: FieldRef<"InventoryMovement", 'DateTime'>
    readonly createdAt: FieldRef<"InventoryMovement", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * InventoryMovement findUnique
   */
  export type InventoryMovementFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryMovement
     */
    select?: InventoryMovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryMovement
     */
    omit?: InventoryMovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryMovementInclude<ExtArgs> | null
    /**
     * Filter, which InventoryMovement to fetch.
     */
    where: InventoryMovementWhereUniqueInput
  }

  /**
   * InventoryMovement findUniqueOrThrow
   */
  export type InventoryMovementFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryMovement
     */
    select?: InventoryMovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryMovement
     */
    omit?: InventoryMovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryMovementInclude<ExtArgs> | null
    /**
     * Filter, which InventoryMovement to fetch.
     */
    where: InventoryMovementWhereUniqueInput
  }

  /**
   * InventoryMovement findFirst
   */
  export type InventoryMovementFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryMovement
     */
    select?: InventoryMovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryMovement
     */
    omit?: InventoryMovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryMovementInclude<ExtArgs> | null
    /**
     * Filter, which InventoryMovement to fetch.
     */
    where?: InventoryMovementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InventoryMovements to fetch.
     */
    orderBy?: InventoryMovementOrderByWithRelationInput | InventoryMovementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InventoryMovements.
     */
    cursor?: InventoryMovementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InventoryMovements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InventoryMovements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InventoryMovements.
     */
    distinct?: InventoryMovementScalarFieldEnum | InventoryMovementScalarFieldEnum[]
  }

  /**
   * InventoryMovement findFirstOrThrow
   */
  export type InventoryMovementFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryMovement
     */
    select?: InventoryMovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryMovement
     */
    omit?: InventoryMovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryMovementInclude<ExtArgs> | null
    /**
     * Filter, which InventoryMovement to fetch.
     */
    where?: InventoryMovementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InventoryMovements to fetch.
     */
    orderBy?: InventoryMovementOrderByWithRelationInput | InventoryMovementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InventoryMovements.
     */
    cursor?: InventoryMovementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InventoryMovements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InventoryMovements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InventoryMovements.
     */
    distinct?: InventoryMovementScalarFieldEnum | InventoryMovementScalarFieldEnum[]
  }

  /**
   * InventoryMovement findMany
   */
  export type InventoryMovementFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryMovement
     */
    select?: InventoryMovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryMovement
     */
    omit?: InventoryMovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryMovementInclude<ExtArgs> | null
    /**
     * Filter, which InventoryMovements to fetch.
     */
    where?: InventoryMovementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InventoryMovements to fetch.
     */
    orderBy?: InventoryMovementOrderByWithRelationInput | InventoryMovementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing InventoryMovements.
     */
    cursor?: InventoryMovementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InventoryMovements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InventoryMovements.
     */
    skip?: number
    distinct?: InventoryMovementScalarFieldEnum | InventoryMovementScalarFieldEnum[]
  }

  /**
   * InventoryMovement create
   */
  export type InventoryMovementCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryMovement
     */
    select?: InventoryMovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryMovement
     */
    omit?: InventoryMovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryMovementInclude<ExtArgs> | null
    /**
     * The data needed to create a InventoryMovement.
     */
    data: XOR<InventoryMovementCreateInput, InventoryMovementUncheckedCreateInput>
  }

  /**
   * InventoryMovement createMany
   */
  export type InventoryMovementCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many InventoryMovements.
     */
    data: InventoryMovementCreateManyInput | InventoryMovementCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * InventoryMovement createManyAndReturn
   */
  export type InventoryMovementCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryMovement
     */
    select?: InventoryMovementSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryMovement
     */
    omit?: InventoryMovementOmit<ExtArgs> | null
    /**
     * The data used to create many InventoryMovements.
     */
    data: InventoryMovementCreateManyInput | InventoryMovementCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryMovementIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * InventoryMovement update
   */
  export type InventoryMovementUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryMovement
     */
    select?: InventoryMovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryMovement
     */
    omit?: InventoryMovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryMovementInclude<ExtArgs> | null
    /**
     * The data needed to update a InventoryMovement.
     */
    data: XOR<InventoryMovementUpdateInput, InventoryMovementUncheckedUpdateInput>
    /**
     * Choose, which InventoryMovement to update.
     */
    where: InventoryMovementWhereUniqueInput
  }

  /**
   * InventoryMovement updateMany
   */
  export type InventoryMovementUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update InventoryMovements.
     */
    data: XOR<InventoryMovementUpdateManyMutationInput, InventoryMovementUncheckedUpdateManyInput>
    /**
     * Filter which InventoryMovements to update
     */
    where?: InventoryMovementWhereInput
    /**
     * Limit how many InventoryMovements to update.
     */
    limit?: number
  }

  /**
   * InventoryMovement updateManyAndReturn
   */
  export type InventoryMovementUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryMovement
     */
    select?: InventoryMovementSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryMovement
     */
    omit?: InventoryMovementOmit<ExtArgs> | null
    /**
     * The data used to update InventoryMovements.
     */
    data: XOR<InventoryMovementUpdateManyMutationInput, InventoryMovementUncheckedUpdateManyInput>
    /**
     * Filter which InventoryMovements to update
     */
    where?: InventoryMovementWhereInput
    /**
     * Limit how many InventoryMovements to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryMovementIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * InventoryMovement upsert
   */
  export type InventoryMovementUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryMovement
     */
    select?: InventoryMovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryMovement
     */
    omit?: InventoryMovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryMovementInclude<ExtArgs> | null
    /**
     * The filter to search for the InventoryMovement to update in case it exists.
     */
    where: InventoryMovementWhereUniqueInput
    /**
     * In case the InventoryMovement found by the `where` argument doesn't exist, create a new InventoryMovement with this data.
     */
    create: XOR<InventoryMovementCreateInput, InventoryMovementUncheckedCreateInput>
    /**
     * In case the InventoryMovement was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InventoryMovementUpdateInput, InventoryMovementUncheckedUpdateInput>
  }

  /**
   * InventoryMovement delete
   */
  export type InventoryMovementDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryMovement
     */
    select?: InventoryMovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryMovement
     */
    omit?: InventoryMovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryMovementInclude<ExtArgs> | null
    /**
     * Filter which InventoryMovement to delete.
     */
    where: InventoryMovementWhereUniqueInput
  }

  /**
   * InventoryMovement deleteMany
   */
  export type InventoryMovementDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InventoryMovements to delete
     */
    where?: InventoryMovementWhereInput
    /**
     * Limit how many InventoryMovements to delete.
     */
    limit?: number
  }

  /**
   * InventoryMovement.variant
   */
  export type InventoryMovement$variantArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductVariant
     */
    omit?: ProductVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    where?: ProductVariantWhereInput
  }

  /**
   * InventoryMovement.inventoryItem
   */
  export type InventoryMovement$inventoryItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryItem
     */
    select?: InventoryItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryItem
     */
    omit?: InventoryItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryItemInclude<ExtArgs> | null
    where?: InventoryItemWhereInput
  }

  /**
   * InventoryMovement without action
   */
  export type InventoryMovementDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryMovement
     */
    select?: InventoryMovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryMovement
     */
    omit?: InventoryMovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryMovementInclude<ExtArgs> | null
  }


  /**
   * Model Supplier
   */

  export type AggregateSupplier = {
    _count: SupplierCountAggregateOutputType | null
    _avg: SupplierAvgAggregateOutputType | null
    _sum: SupplierSumAggregateOutputType | null
    _min: SupplierMinAggregateOutputType | null
    _max: SupplierMaxAggregateOutputType | null
  }

  export type SupplierAvgAggregateOutputType = {
    creditLimit: Decimal | null
    rating: Decimal | null
    onTimeDelivery: Decimal | null
    qualityRating: Decimal | null
  }

  export type SupplierSumAggregateOutputType = {
    creditLimit: Decimal | null
    rating: Decimal | null
    onTimeDelivery: Decimal | null
    qualityRating: Decimal | null
  }

  export type SupplierMinAggregateOutputType = {
    id: string | null
    name: string | null
    code: string | null
    email: string | null
    phone: string | null
    website: string | null
    companyType: $Enums.CompanyType | null
    taxId: string | null
    vatNumber: string | null
    registrationNumber: string | null
    contactName: string | null
    contactEmail: string | null
    contactPhone: string | null
    contactTitle: string | null
    paymentTerms: string | null
    creditLimit: Decimal | null
    currency: string | null
    rating: Decimal | null
    onTimeDelivery: Decimal | null
    qualityRating: Decimal | null
    status: $Enums.SupplierStatus | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
  }

  export type SupplierMaxAggregateOutputType = {
    id: string | null
    name: string | null
    code: string | null
    email: string | null
    phone: string | null
    website: string | null
    companyType: $Enums.CompanyType | null
    taxId: string | null
    vatNumber: string | null
    registrationNumber: string | null
    contactName: string | null
    contactEmail: string | null
    contactPhone: string | null
    contactTitle: string | null
    paymentTerms: string | null
    creditLimit: Decimal | null
    currency: string | null
    rating: Decimal | null
    onTimeDelivery: Decimal | null
    qualityRating: Decimal | null
    status: $Enums.SupplierStatus | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
  }

  export type SupplierCountAggregateOutputType = {
    id: number
    name: number
    code: number
    email: number
    phone: number
    website: number
    companyType: number
    taxId: number
    vatNumber: number
    registrationNumber: number
    billingAddress: number
    shippingAddress: number
    contactName: number
    contactEmail: number
    contactPhone: number
    contactTitle: number
    paymentTerms: number
    creditLimit: number
    currency: number
    rating: number
    onTimeDelivery: number
    qualityRating: number
    status: number
    certifications: number
    notes: number
    createdAt: number
    updatedAt: number
    createdBy: number
    _all: number
  }


  export type SupplierAvgAggregateInputType = {
    creditLimit?: true
    rating?: true
    onTimeDelivery?: true
    qualityRating?: true
  }

  export type SupplierSumAggregateInputType = {
    creditLimit?: true
    rating?: true
    onTimeDelivery?: true
    qualityRating?: true
  }

  export type SupplierMinAggregateInputType = {
    id?: true
    name?: true
    code?: true
    email?: true
    phone?: true
    website?: true
    companyType?: true
    taxId?: true
    vatNumber?: true
    registrationNumber?: true
    contactName?: true
    contactEmail?: true
    contactPhone?: true
    contactTitle?: true
    paymentTerms?: true
    creditLimit?: true
    currency?: true
    rating?: true
    onTimeDelivery?: true
    qualityRating?: true
    status?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
  }

  export type SupplierMaxAggregateInputType = {
    id?: true
    name?: true
    code?: true
    email?: true
    phone?: true
    website?: true
    companyType?: true
    taxId?: true
    vatNumber?: true
    registrationNumber?: true
    contactName?: true
    contactEmail?: true
    contactPhone?: true
    contactTitle?: true
    paymentTerms?: true
    creditLimit?: true
    currency?: true
    rating?: true
    onTimeDelivery?: true
    qualityRating?: true
    status?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
  }

  export type SupplierCountAggregateInputType = {
    id?: true
    name?: true
    code?: true
    email?: true
    phone?: true
    website?: true
    companyType?: true
    taxId?: true
    vatNumber?: true
    registrationNumber?: true
    billingAddress?: true
    shippingAddress?: true
    contactName?: true
    contactEmail?: true
    contactPhone?: true
    contactTitle?: true
    paymentTerms?: true
    creditLimit?: true
    currency?: true
    rating?: true
    onTimeDelivery?: true
    qualityRating?: true
    status?: true
    certifications?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    _all?: true
  }

  export type SupplierAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Supplier to aggregate.
     */
    where?: SupplierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Suppliers to fetch.
     */
    orderBy?: SupplierOrderByWithRelationInput | SupplierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SupplierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Suppliers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Suppliers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Suppliers
    **/
    _count?: true | SupplierCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SupplierAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SupplierSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SupplierMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SupplierMaxAggregateInputType
  }

  export type GetSupplierAggregateType<T extends SupplierAggregateArgs> = {
        [P in keyof T & keyof AggregateSupplier]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSupplier[P]>
      : GetScalarType<T[P], AggregateSupplier[P]>
  }




  export type SupplierGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupplierWhereInput
    orderBy?: SupplierOrderByWithAggregationInput | SupplierOrderByWithAggregationInput[]
    by: SupplierScalarFieldEnum[] | SupplierScalarFieldEnum
    having?: SupplierScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SupplierCountAggregateInputType | true
    _avg?: SupplierAvgAggregateInputType
    _sum?: SupplierSumAggregateInputType
    _min?: SupplierMinAggregateInputType
    _max?: SupplierMaxAggregateInputType
  }

  export type SupplierGroupByOutputType = {
    id: string
    name: string
    code: string
    email: string | null
    phone: string | null
    website: string | null
    companyType: $Enums.CompanyType | null
    taxId: string | null
    vatNumber: string | null
    registrationNumber: string | null
    billingAddress: JsonValue
    shippingAddress: JsonValue | null
    contactName: string | null
    contactEmail: string | null
    contactPhone: string | null
    contactTitle: string | null
    paymentTerms: string | null
    creditLimit: Decimal | null
    currency: string
    rating: Decimal | null
    onTimeDelivery: Decimal | null
    qualityRating: Decimal | null
    status: $Enums.SupplierStatus
    certifications: JsonValue | null
    notes: string | null
    createdAt: Date
    updatedAt: Date
    createdBy: string
    _count: SupplierCountAggregateOutputType | null
    _avg: SupplierAvgAggregateOutputType | null
    _sum: SupplierSumAggregateOutputType | null
    _min: SupplierMinAggregateOutputType | null
    _max: SupplierMaxAggregateOutputType | null
  }

  type GetSupplierGroupByPayload<T extends SupplierGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SupplierGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SupplierGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SupplierGroupByOutputType[P]>
            : GetScalarType<T[P], SupplierGroupByOutputType[P]>
        }
      >
    >


  export type SupplierSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    code?: boolean
    email?: boolean
    phone?: boolean
    website?: boolean
    companyType?: boolean
    taxId?: boolean
    vatNumber?: boolean
    registrationNumber?: boolean
    billingAddress?: boolean
    shippingAddress?: boolean
    contactName?: boolean
    contactEmail?: boolean
    contactPhone?: boolean
    contactTitle?: boolean
    paymentTerms?: boolean
    creditLimit?: boolean
    currency?: boolean
    rating?: boolean
    onTimeDelivery?: boolean
    qualityRating?: boolean
    status?: boolean
    certifications?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    products?: boolean | Supplier$productsArgs<ExtArgs>
    purchaseOrders?: boolean | Supplier$purchaseOrdersArgs<ExtArgs>
    invoices?: boolean | Supplier$invoicesArgs<ExtArgs>
    contacts?: boolean | Supplier$contactsArgs<ExtArgs>
    documents?: boolean | Supplier$documentsArgs<ExtArgs>
    _count?: boolean | SupplierCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["supplier"]>

  export type SupplierSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    code?: boolean
    email?: boolean
    phone?: boolean
    website?: boolean
    companyType?: boolean
    taxId?: boolean
    vatNumber?: boolean
    registrationNumber?: boolean
    billingAddress?: boolean
    shippingAddress?: boolean
    contactName?: boolean
    contactEmail?: boolean
    contactPhone?: boolean
    contactTitle?: boolean
    paymentTerms?: boolean
    creditLimit?: boolean
    currency?: boolean
    rating?: boolean
    onTimeDelivery?: boolean
    qualityRating?: boolean
    status?: boolean
    certifications?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
  }, ExtArgs["result"]["supplier"]>

  export type SupplierSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    code?: boolean
    email?: boolean
    phone?: boolean
    website?: boolean
    companyType?: boolean
    taxId?: boolean
    vatNumber?: boolean
    registrationNumber?: boolean
    billingAddress?: boolean
    shippingAddress?: boolean
    contactName?: boolean
    contactEmail?: boolean
    contactPhone?: boolean
    contactTitle?: boolean
    paymentTerms?: boolean
    creditLimit?: boolean
    currency?: boolean
    rating?: boolean
    onTimeDelivery?: boolean
    qualityRating?: boolean
    status?: boolean
    certifications?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
  }, ExtArgs["result"]["supplier"]>

  export type SupplierSelectScalar = {
    id?: boolean
    name?: boolean
    code?: boolean
    email?: boolean
    phone?: boolean
    website?: boolean
    companyType?: boolean
    taxId?: boolean
    vatNumber?: boolean
    registrationNumber?: boolean
    billingAddress?: boolean
    shippingAddress?: boolean
    contactName?: boolean
    contactEmail?: boolean
    contactPhone?: boolean
    contactTitle?: boolean
    paymentTerms?: boolean
    creditLimit?: boolean
    currency?: boolean
    rating?: boolean
    onTimeDelivery?: boolean
    qualityRating?: boolean
    status?: boolean
    certifications?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
  }

  export type SupplierOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "code" | "email" | "phone" | "website" | "companyType" | "taxId" | "vatNumber" | "registrationNumber" | "billingAddress" | "shippingAddress" | "contactName" | "contactEmail" | "contactPhone" | "contactTitle" | "paymentTerms" | "creditLimit" | "currency" | "rating" | "onTimeDelivery" | "qualityRating" | "status" | "certifications" | "notes" | "createdAt" | "updatedAt" | "createdBy", ExtArgs["result"]["supplier"]>
  export type SupplierInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | Supplier$productsArgs<ExtArgs>
    purchaseOrders?: boolean | Supplier$purchaseOrdersArgs<ExtArgs>
    invoices?: boolean | Supplier$invoicesArgs<ExtArgs>
    contacts?: boolean | Supplier$contactsArgs<ExtArgs>
    documents?: boolean | Supplier$documentsArgs<ExtArgs>
    _count?: boolean | SupplierCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SupplierIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type SupplierIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $SupplierPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Supplier"
    objects: {
      products: Prisma.$ProductSupplierPayload<ExtArgs>[]
      purchaseOrders: Prisma.$PurchaseOrderPayload<ExtArgs>[]
      invoices: Prisma.$SupplierInvoicePayload<ExtArgs>[]
      contacts: Prisma.$SupplierContactPayload<ExtArgs>[]
      documents: Prisma.$SupplierDocumentPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      code: string
      email: string | null
      phone: string | null
      website: string | null
      companyType: $Enums.CompanyType | null
      taxId: string | null
      vatNumber: string | null
      registrationNumber: string | null
      billingAddress: Prisma.JsonValue
      shippingAddress: Prisma.JsonValue | null
      contactName: string | null
      contactEmail: string | null
      contactPhone: string | null
      contactTitle: string | null
      paymentTerms: string | null
      creditLimit: Prisma.Decimal | null
      currency: string
      rating: Prisma.Decimal | null
      onTimeDelivery: Prisma.Decimal | null
      qualityRating: Prisma.Decimal | null
      status: $Enums.SupplierStatus
      certifications: Prisma.JsonValue | null
      notes: string | null
      createdAt: Date
      updatedAt: Date
      createdBy: string
    }, ExtArgs["result"]["supplier"]>
    composites: {}
  }

  type SupplierGetPayload<S extends boolean | null | undefined | SupplierDefaultArgs> = $Result.GetResult<Prisma.$SupplierPayload, S>

  type SupplierCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SupplierFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SupplierCountAggregateInputType | true
    }

  export interface SupplierDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Supplier'], meta: { name: 'Supplier' } }
    /**
     * Find zero or one Supplier that matches the filter.
     * @param {SupplierFindUniqueArgs} args - Arguments to find a Supplier
     * @example
     * // Get one Supplier
     * const supplier = await prisma.supplier.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SupplierFindUniqueArgs>(args: SelectSubset<T, SupplierFindUniqueArgs<ExtArgs>>): Prisma__SupplierClient<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Supplier that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SupplierFindUniqueOrThrowArgs} args - Arguments to find a Supplier
     * @example
     * // Get one Supplier
     * const supplier = await prisma.supplier.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SupplierFindUniqueOrThrowArgs>(args: SelectSubset<T, SupplierFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SupplierClient<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Supplier that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierFindFirstArgs} args - Arguments to find a Supplier
     * @example
     * // Get one Supplier
     * const supplier = await prisma.supplier.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SupplierFindFirstArgs>(args?: SelectSubset<T, SupplierFindFirstArgs<ExtArgs>>): Prisma__SupplierClient<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Supplier that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierFindFirstOrThrowArgs} args - Arguments to find a Supplier
     * @example
     * // Get one Supplier
     * const supplier = await prisma.supplier.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SupplierFindFirstOrThrowArgs>(args?: SelectSubset<T, SupplierFindFirstOrThrowArgs<ExtArgs>>): Prisma__SupplierClient<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Suppliers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Suppliers
     * const suppliers = await prisma.supplier.findMany()
     * 
     * // Get first 10 Suppliers
     * const suppliers = await prisma.supplier.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const supplierWithIdOnly = await prisma.supplier.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SupplierFindManyArgs>(args?: SelectSubset<T, SupplierFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Supplier.
     * @param {SupplierCreateArgs} args - Arguments to create a Supplier.
     * @example
     * // Create one Supplier
     * const Supplier = await prisma.supplier.create({
     *   data: {
     *     // ... data to create a Supplier
     *   }
     * })
     * 
     */
    create<T extends SupplierCreateArgs>(args: SelectSubset<T, SupplierCreateArgs<ExtArgs>>): Prisma__SupplierClient<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Suppliers.
     * @param {SupplierCreateManyArgs} args - Arguments to create many Suppliers.
     * @example
     * // Create many Suppliers
     * const supplier = await prisma.supplier.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SupplierCreateManyArgs>(args?: SelectSubset<T, SupplierCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Suppliers and returns the data saved in the database.
     * @param {SupplierCreateManyAndReturnArgs} args - Arguments to create many Suppliers.
     * @example
     * // Create many Suppliers
     * const supplier = await prisma.supplier.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Suppliers and only return the `id`
     * const supplierWithIdOnly = await prisma.supplier.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SupplierCreateManyAndReturnArgs>(args?: SelectSubset<T, SupplierCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Supplier.
     * @param {SupplierDeleteArgs} args - Arguments to delete one Supplier.
     * @example
     * // Delete one Supplier
     * const Supplier = await prisma.supplier.delete({
     *   where: {
     *     // ... filter to delete one Supplier
     *   }
     * })
     * 
     */
    delete<T extends SupplierDeleteArgs>(args: SelectSubset<T, SupplierDeleteArgs<ExtArgs>>): Prisma__SupplierClient<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Supplier.
     * @param {SupplierUpdateArgs} args - Arguments to update one Supplier.
     * @example
     * // Update one Supplier
     * const supplier = await prisma.supplier.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SupplierUpdateArgs>(args: SelectSubset<T, SupplierUpdateArgs<ExtArgs>>): Prisma__SupplierClient<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Suppliers.
     * @param {SupplierDeleteManyArgs} args - Arguments to filter Suppliers to delete.
     * @example
     * // Delete a few Suppliers
     * const { count } = await prisma.supplier.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SupplierDeleteManyArgs>(args?: SelectSubset<T, SupplierDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Suppliers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Suppliers
     * const supplier = await prisma.supplier.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SupplierUpdateManyArgs>(args: SelectSubset<T, SupplierUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Suppliers and returns the data updated in the database.
     * @param {SupplierUpdateManyAndReturnArgs} args - Arguments to update many Suppliers.
     * @example
     * // Update many Suppliers
     * const supplier = await prisma.supplier.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Suppliers and only return the `id`
     * const supplierWithIdOnly = await prisma.supplier.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SupplierUpdateManyAndReturnArgs>(args: SelectSubset<T, SupplierUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Supplier.
     * @param {SupplierUpsertArgs} args - Arguments to update or create a Supplier.
     * @example
     * // Update or create a Supplier
     * const supplier = await prisma.supplier.upsert({
     *   create: {
     *     // ... data to create a Supplier
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Supplier we want to update
     *   }
     * })
     */
    upsert<T extends SupplierUpsertArgs>(args: SelectSubset<T, SupplierUpsertArgs<ExtArgs>>): Prisma__SupplierClient<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Suppliers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierCountArgs} args - Arguments to filter Suppliers to count.
     * @example
     * // Count the number of Suppliers
     * const count = await prisma.supplier.count({
     *   where: {
     *     // ... the filter for the Suppliers we want to count
     *   }
     * })
    **/
    count<T extends SupplierCountArgs>(
      args?: Subset<T, SupplierCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SupplierCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Supplier.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SupplierAggregateArgs>(args: Subset<T, SupplierAggregateArgs>): Prisma.PrismaPromise<GetSupplierAggregateType<T>>

    /**
     * Group by Supplier.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SupplierGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SupplierGroupByArgs['orderBy'] }
        : { orderBy?: SupplierGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SupplierGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSupplierGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Supplier model
   */
  readonly fields: SupplierFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Supplier.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SupplierClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    products<T extends Supplier$productsArgs<ExtArgs> = {}>(args?: Subset<T, Supplier$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductSupplierPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    purchaseOrders<T extends Supplier$purchaseOrdersArgs<ExtArgs> = {}>(args?: Subset<T, Supplier$purchaseOrdersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PurchaseOrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    invoices<T extends Supplier$invoicesArgs<ExtArgs> = {}>(args?: Subset<T, Supplier$invoicesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplierInvoicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    contacts<T extends Supplier$contactsArgs<ExtArgs> = {}>(args?: Subset<T, Supplier$contactsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplierContactPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    documents<T extends Supplier$documentsArgs<ExtArgs> = {}>(args?: Subset<T, Supplier$documentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplierDocumentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Supplier model
   */
  interface SupplierFieldRefs {
    readonly id: FieldRef<"Supplier", 'String'>
    readonly name: FieldRef<"Supplier", 'String'>
    readonly code: FieldRef<"Supplier", 'String'>
    readonly email: FieldRef<"Supplier", 'String'>
    readonly phone: FieldRef<"Supplier", 'String'>
    readonly website: FieldRef<"Supplier", 'String'>
    readonly companyType: FieldRef<"Supplier", 'CompanyType'>
    readonly taxId: FieldRef<"Supplier", 'String'>
    readonly vatNumber: FieldRef<"Supplier", 'String'>
    readonly registrationNumber: FieldRef<"Supplier", 'String'>
    readonly billingAddress: FieldRef<"Supplier", 'Json'>
    readonly shippingAddress: FieldRef<"Supplier", 'Json'>
    readonly contactName: FieldRef<"Supplier", 'String'>
    readonly contactEmail: FieldRef<"Supplier", 'String'>
    readonly contactPhone: FieldRef<"Supplier", 'String'>
    readonly contactTitle: FieldRef<"Supplier", 'String'>
    readonly paymentTerms: FieldRef<"Supplier", 'String'>
    readonly creditLimit: FieldRef<"Supplier", 'Decimal'>
    readonly currency: FieldRef<"Supplier", 'String'>
    readonly rating: FieldRef<"Supplier", 'Decimal'>
    readonly onTimeDelivery: FieldRef<"Supplier", 'Decimal'>
    readonly qualityRating: FieldRef<"Supplier", 'Decimal'>
    readonly status: FieldRef<"Supplier", 'SupplierStatus'>
    readonly certifications: FieldRef<"Supplier", 'Json'>
    readonly notes: FieldRef<"Supplier", 'String'>
    readonly createdAt: FieldRef<"Supplier", 'DateTime'>
    readonly updatedAt: FieldRef<"Supplier", 'DateTime'>
    readonly createdBy: FieldRef<"Supplier", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Supplier findUnique
   */
  export type SupplierFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInclude<ExtArgs> | null
    /**
     * Filter, which Supplier to fetch.
     */
    where: SupplierWhereUniqueInput
  }

  /**
   * Supplier findUniqueOrThrow
   */
  export type SupplierFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInclude<ExtArgs> | null
    /**
     * Filter, which Supplier to fetch.
     */
    where: SupplierWhereUniqueInput
  }

  /**
   * Supplier findFirst
   */
  export type SupplierFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInclude<ExtArgs> | null
    /**
     * Filter, which Supplier to fetch.
     */
    where?: SupplierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Suppliers to fetch.
     */
    orderBy?: SupplierOrderByWithRelationInput | SupplierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Suppliers.
     */
    cursor?: SupplierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Suppliers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Suppliers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Suppliers.
     */
    distinct?: SupplierScalarFieldEnum | SupplierScalarFieldEnum[]
  }

  /**
   * Supplier findFirstOrThrow
   */
  export type SupplierFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInclude<ExtArgs> | null
    /**
     * Filter, which Supplier to fetch.
     */
    where?: SupplierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Suppliers to fetch.
     */
    orderBy?: SupplierOrderByWithRelationInput | SupplierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Suppliers.
     */
    cursor?: SupplierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Suppliers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Suppliers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Suppliers.
     */
    distinct?: SupplierScalarFieldEnum | SupplierScalarFieldEnum[]
  }

  /**
   * Supplier findMany
   */
  export type SupplierFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInclude<ExtArgs> | null
    /**
     * Filter, which Suppliers to fetch.
     */
    where?: SupplierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Suppliers to fetch.
     */
    orderBy?: SupplierOrderByWithRelationInput | SupplierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Suppliers.
     */
    cursor?: SupplierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Suppliers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Suppliers.
     */
    skip?: number
    distinct?: SupplierScalarFieldEnum | SupplierScalarFieldEnum[]
  }

  /**
   * Supplier create
   */
  export type SupplierCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInclude<ExtArgs> | null
    /**
     * The data needed to create a Supplier.
     */
    data: XOR<SupplierCreateInput, SupplierUncheckedCreateInput>
  }

  /**
   * Supplier createMany
   */
  export type SupplierCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Suppliers.
     */
    data: SupplierCreateManyInput | SupplierCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Supplier createManyAndReturn
   */
  export type SupplierCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
    /**
     * The data used to create many Suppliers.
     */
    data: SupplierCreateManyInput | SupplierCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Supplier update
   */
  export type SupplierUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInclude<ExtArgs> | null
    /**
     * The data needed to update a Supplier.
     */
    data: XOR<SupplierUpdateInput, SupplierUncheckedUpdateInput>
    /**
     * Choose, which Supplier to update.
     */
    where: SupplierWhereUniqueInput
  }

  /**
   * Supplier updateMany
   */
  export type SupplierUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Suppliers.
     */
    data: XOR<SupplierUpdateManyMutationInput, SupplierUncheckedUpdateManyInput>
    /**
     * Filter which Suppliers to update
     */
    where?: SupplierWhereInput
    /**
     * Limit how many Suppliers to update.
     */
    limit?: number
  }

  /**
   * Supplier updateManyAndReturn
   */
  export type SupplierUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
    /**
     * The data used to update Suppliers.
     */
    data: XOR<SupplierUpdateManyMutationInput, SupplierUncheckedUpdateManyInput>
    /**
     * Filter which Suppliers to update
     */
    where?: SupplierWhereInput
    /**
     * Limit how many Suppliers to update.
     */
    limit?: number
  }

  /**
   * Supplier upsert
   */
  export type SupplierUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInclude<ExtArgs> | null
    /**
     * The filter to search for the Supplier to update in case it exists.
     */
    where: SupplierWhereUniqueInput
    /**
     * In case the Supplier found by the `where` argument doesn't exist, create a new Supplier with this data.
     */
    create: XOR<SupplierCreateInput, SupplierUncheckedCreateInput>
    /**
     * In case the Supplier was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SupplierUpdateInput, SupplierUncheckedUpdateInput>
  }

  /**
   * Supplier delete
   */
  export type SupplierDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInclude<ExtArgs> | null
    /**
     * Filter which Supplier to delete.
     */
    where: SupplierWhereUniqueInput
  }

  /**
   * Supplier deleteMany
   */
  export type SupplierDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Suppliers to delete
     */
    where?: SupplierWhereInput
    /**
     * Limit how many Suppliers to delete.
     */
    limit?: number
  }

  /**
   * Supplier.products
   */
  export type Supplier$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSupplier
     */
    select?: ProductSupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSupplier
     */
    omit?: ProductSupplierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSupplierInclude<ExtArgs> | null
    where?: ProductSupplierWhereInput
    orderBy?: ProductSupplierOrderByWithRelationInput | ProductSupplierOrderByWithRelationInput[]
    cursor?: ProductSupplierWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductSupplierScalarFieldEnum | ProductSupplierScalarFieldEnum[]
  }

  /**
   * Supplier.purchaseOrders
   */
  export type Supplier$purchaseOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrder
     */
    select?: PurchaseOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrder
     */
    omit?: PurchaseOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderInclude<ExtArgs> | null
    where?: PurchaseOrderWhereInput
    orderBy?: PurchaseOrderOrderByWithRelationInput | PurchaseOrderOrderByWithRelationInput[]
    cursor?: PurchaseOrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PurchaseOrderScalarFieldEnum | PurchaseOrderScalarFieldEnum[]
  }

  /**
   * Supplier.invoices
   */
  export type Supplier$invoicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierInvoice
     */
    select?: SupplierInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierInvoice
     */
    omit?: SupplierInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInvoiceInclude<ExtArgs> | null
    where?: SupplierInvoiceWhereInput
    orderBy?: SupplierInvoiceOrderByWithRelationInput | SupplierInvoiceOrderByWithRelationInput[]
    cursor?: SupplierInvoiceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SupplierInvoiceScalarFieldEnum | SupplierInvoiceScalarFieldEnum[]
  }

  /**
   * Supplier.contacts
   */
  export type Supplier$contactsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierContact
     */
    select?: SupplierContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierContact
     */
    omit?: SupplierContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierContactInclude<ExtArgs> | null
    where?: SupplierContactWhereInput
    orderBy?: SupplierContactOrderByWithRelationInput | SupplierContactOrderByWithRelationInput[]
    cursor?: SupplierContactWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SupplierContactScalarFieldEnum | SupplierContactScalarFieldEnum[]
  }

  /**
   * Supplier.documents
   */
  export type Supplier$documentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierDocument
     */
    select?: SupplierDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierDocument
     */
    omit?: SupplierDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierDocumentInclude<ExtArgs> | null
    where?: SupplierDocumentWhereInput
    orderBy?: SupplierDocumentOrderByWithRelationInput | SupplierDocumentOrderByWithRelationInput[]
    cursor?: SupplierDocumentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SupplierDocumentScalarFieldEnum | SupplierDocumentScalarFieldEnum[]
  }

  /**
   * Supplier without action
   */
  export type SupplierDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInclude<ExtArgs> | null
  }


  /**
   * Model ProductSupplier
   */

  export type AggregateProductSupplier = {
    _count: ProductSupplierCountAggregateOutputType | null
    _avg: ProductSupplierAvgAggregateOutputType | null
    _sum: ProductSupplierSumAggregateOutputType | null
    _min: ProductSupplierMinAggregateOutputType | null
    _max: ProductSupplierMaxAggregateOutputType | null
  }

  export type ProductSupplierAvgAggregateOutputType = {
    unitCost: Decimal | null
    minOrderQty: number | null
    maxOrderQty: number | null
    leadTimeDays: number | null
  }

  export type ProductSupplierSumAggregateOutputType = {
    unitCost: Decimal | null
    minOrderQty: number | null
    maxOrderQty: number | null
    leadTimeDays: number | null
  }

  export type ProductSupplierMinAggregateOutputType = {
    id: string | null
    productId: string | null
    supplierId: string | null
    supplierSku: string | null
    supplierName: string | null
    unitCost: Decimal | null
    currency: string | null
    minOrderQty: number | null
    maxOrderQty: number | null
    leadTimeDays: number | null
    isPreferred: boolean | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductSupplierMaxAggregateOutputType = {
    id: string | null
    productId: string | null
    supplierId: string | null
    supplierSku: string | null
    supplierName: string | null
    unitCost: Decimal | null
    currency: string | null
    minOrderQty: number | null
    maxOrderQty: number | null
    leadTimeDays: number | null
    isPreferred: boolean | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductSupplierCountAggregateOutputType = {
    id: number
    productId: number
    supplierId: number
    supplierSku: number
    supplierName: number
    unitCost: number
    currency: number
    minOrderQty: number
    maxOrderQty: number
    leadTimeDays: number
    isPreferred: number
    isActive: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ProductSupplierAvgAggregateInputType = {
    unitCost?: true
    minOrderQty?: true
    maxOrderQty?: true
    leadTimeDays?: true
  }

  export type ProductSupplierSumAggregateInputType = {
    unitCost?: true
    minOrderQty?: true
    maxOrderQty?: true
    leadTimeDays?: true
  }

  export type ProductSupplierMinAggregateInputType = {
    id?: true
    productId?: true
    supplierId?: true
    supplierSku?: true
    supplierName?: true
    unitCost?: true
    currency?: true
    minOrderQty?: true
    maxOrderQty?: true
    leadTimeDays?: true
    isPreferred?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductSupplierMaxAggregateInputType = {
    id?: true
    productId?: true
    supplierId?: true
    supplierSku?: true
    supplierName?: true
    unitCost?: true
    currency?: true
    minOrderQty?: true
    maxOrderQty?: true
    leadTimeDays?: true
    isPreferred?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductSupplierCountAggregateInputType = {
    id?: true
    productId?: true
    supplierId?: true
    supplierSku?: true
    supplierName?: true
    unitCost?: true
    currency?: true
    minOrderQty?: true
    maxOrderQty?: true
    leadTimeDays?: true
    isPreferred?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ProductSupplierAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductSupplier to aggregate.
     */
    where?: ProductSupplierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductSuppliers to fetch.
     */
    orderBy?: ProductSupplierOrderByWithRelationInput | ProductSupplierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductSupplierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductSuppliers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductSuppliers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductSuppliers
    **/
    _count?: true | ProductSupplierCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductSupplierAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductSupplierSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductSupplierMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductSupplierMaxAggregateInputType
  }

  export type GetProductSupplierAggregateType<T extends ProductSupplierAggregateArgs> = {
        [P in keyof T & keyof AggregateProductSupplier]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductSupplier[P]>
      : GetScalarType<T[P], AggregateProductSupplier[P]>
  }




  export type ProductSupplierGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductSupplierWhereInput
    orderBy?: ProductSupplierOrderByWithAggregationInput | ProductSupplierOrderByWithAggregationInput[]
    by: ProductSupplierScalarFieldEnum[] | ProductSupplierScalarFieldEnum
    having?: ProductSupplierScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductSupplierCountAggregateInputType | true
    _avg?: ProductSupplierAvgAggregateInputType
    _sum?: ProductSupplierSumAggregateInputType
    _min?: ProductSupplierMinAggregateInputType
    _max?: ProductSupplierMaxAggregateInputType
  }

  export type ProductSupplierGroupByOutputType = {
    id: string
    productId: string
    supplierId: string
    supplierSku: string | null
    supplierName: string | null
    unitCost: Decimal
    currency: string
    minOrderQty: number | null
    maxOrderQty: number | null
    leadTimeDays: number | null
    isPreferred: boolean
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    _count: ProductSupplierCountAggregateOutputType | null
    _avg: ProductSupplierAvgAggregateOutputType | null
    _sum: ProductSupplierSumAggregateOutputType | null
    _min: ProductSupplierMinAggregateOutputType | null
    _max: ProductSupplierMaxAggregateOutputType | null
  }

  type GetProductSupplierGroupByPayload<T extends ProductSupplierGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductSupplierGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductSupplierGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductSupplierGroupByOutputType[P]>
            : GetScalarType<T[P], ProductSupplierGroupByOutputType[P]>
        }
      >
    >


  export type ProductSupplierSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    supplierId?: boolean
    supplierSku?: boolean
    supplierName?: boolean
    unitCost?: boolean
    currency?: boolean
    minOrderQty?: boolean
    maxOrderQty?: boolean
    leadTimeDays?: boolean
    isPreferred?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    supplier?: boolean | SupplierDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productSupplier"]>

  export type ProductSupplierSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    supplierId?: boolean
    supplierSku?: boolean
    supplierName?: boolean
    unitCost?: boolean
    currency?: boolean
    minOrderQty?: boolean
    maxOrderQty?: boolean
    leadTimeDays?: boolean
    isPreferred?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    supplier?: boolean | SupplierDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productSupplier"]>

  export type ProductSupplierSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    supplierId?: boolean
    supplierSku?: boolean
    supplierName?: boolean
    unitCost?: boolean
    currency?: boolean
    minOrderQty?: boolean
    maxOrderQty?: boolean
    leadTimeDays?: boolean
    isPreferred?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    supplier?: boolean | SupplierDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productSupplier"]>

  export type ProductSupplierSelectScalar = {
    id?: boolean
    productId?: boolean
    supplierId?: boolean
    supplierSku?: boolean
    supplierName?: boolean
    unitCost?: boolean
    currency?: boolean
    minOrderQty?: boolean
    maxOrderQty?: boolean
    leadTimeDays?: boolean
    isPreferred?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ProductSupplierOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "productId" | "supplierId" | "supplierSku" | "supplierName" | "unitCost" | "currency" | "minOrderQty" | "maxOrderQty" | "leadTimeDays" | "isPreferred" | "isActive" | "createdAt" | "updatedAt", ExtArgs["result"]["productSupplier"]>
  export type ProductSupplierInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    supplier?: boolean | SupplierDefaultArgs<ExtArgs>
  }
  export type ProductSupplierIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    supplier?: boolean | SupplierDefaultArgs<ExtArgs>
  }
  export type ProductSupplierIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    supplier?: boolean | SupplierDefaultArgs<ExtArgs>
  }

  export type $ProductSupplierPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductSupplier"
    objects: {
      product: Prisma.$ProductPayload<ExtArgs>
      supplier: Prisma.$SupplierPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      productId: string
      supplierId: string
      supplierSku: string | null
      supplierName: string | null
      unitCost: Prisma.Decimal
      currency: string
      minOrderQty: number | null
      maxOrderQty: number | null
      leadTimeDays: number | null
      isPreferred: boolean
      isActive: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["productSupplier"]>
    composites: {}
  }

  type ProductSupplierGetPayload<S extends boolean | null | undefined | ProductSupplierDefaultArgs> = $Result.GetResult<Prisma.$ProductSupplierPayload, S>

  type ProductSupplierCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductSupplierFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductSupplierCountAggregateInputType | true
    }

  export interface ProductSupplierDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductSupplier'], meta: { name: 'ProductSupplier' } }
    /**
     * Find zero or one ProductSupplier that matches the filter.
     * @param {ProductSupplierFindUniqueArgs} args - Arguments to find a ProductSupplier
     * @example
     * // Get one ProductSupplier
     * const productSupplier = await prisma.productSupplier.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductSupplierFindUniqueArgs>(args: SelectSubset<T, ProductSupplierFindUniqueArgs<ExtArgs>>): Prisma__ProductSupplierClient<$Result.GetResult<Prisma.$ProductSupplierPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProductSupplier that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductSupplierFindUniqueOrThrowArgs} args - Arguments to find a ProductSupplier
     * @example
     * // Get one ProductSupplier
     * const productSupplier = await prisma.productSupplier.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductSupplierFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductSupplierFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductSupplierClient<$Result.GetResult<Prisma.$ProductSupplierPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductSupplier that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductSupplierFindFirstArgs} args - Arguments to find a ProductSupplier
     * @example
     * // Get one ProductSupplier
     * const productSupplier = await prisma.productSupplier.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductSupplierFindFirstArgs>(args?: SelectSubset<T, ProductSupplierFindFirstArgs<ExtArgs>>): Prisma__ProductSupplierClient<$Result.GetResult<Prisma.$ProductSupplierPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductSupplier that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductSupplierFindFirstOrThrowArgs} args - Arguments to find a ProductSupplier
     * @example
     * // Get one ProductSupplier
     * const productSupplier = await prisma.productSupplier.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductSupplierFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductSupplierFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductSupplierClient<$Result.GetResult<Prisma.$ProductSupplierPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProductSuppliers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductSupplierFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductSuppliers
     * const productSuppliers = await prisma.productSupplier.findMany()
     * 
     * // Get first 10 ProductSuppliers
     * const productSuppliers = await prisma.productSupplier.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productSupplierWithIdOnly = await prisma.productSupplier.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductSupplierFindManyArgs>(args?: SelectSubset<T, ProductSupplierFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductSupplierPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProductSupplier.
     * @param {ProductSupplierCreateArgs} args - Arguments to create a ProductSupplier.
     * @example
     * // Create one ProductSupplier
     * const ProductSupplier = await prisma.productSupplier.create({
     *   data: {
     *     // ... data to create a ProductSupplier
     *   }
     * })
     * 
     */
    create<T extends ProductSupplierCreateArgs>(args: SelectSubset<T, ProductSupplierCreateArgs<ExtArgs>>): Prisma__ProductSupplierClient<$Result.GetResult<Prisma.$ProductSupplierPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProductSuppliers.
     * @param {ProductSupplierCreateManyArgs} args - Arguments to create many ProductSuppliers.
     * @example
     * // Create many ProductSuppliers
     * const productSupplier = await prisma.productSupplier.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductSupplierCreateManyArgs>(args?: SelectSubset<T, ProductSupplierCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductSuppliers and returns the data saved in the database.
     * @param {ProductSupplierCreateManyAndReturnArgs} args - Arguments to create many ProductSuppliers.
     * @example
     * // Create many ProductSuppliers
     * const productSupplier = await prisma.productSupplier.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductSuppliers and only return the `id`
     * const productSupplierWithIdOnly = await prisma.productSupplier.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductSupplierCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductSupplierCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductSupplierPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProductSupplier.
     * @param {ProductSupplierDeleteArgs} args - Arguments to delete one ProductSupplier.
     * @example
     * // Delete one ProductSupplier
     * const ProductSupplier = await prisma.productSupplier.delete({
     *   where: {
     *     // ... filter to delete one ProductSupplier
     *   }
     * })
     * 
     */
    delete<T extends ProductSupplierDeleteArgs>(args: SelectSubset<T, ProductSupplierDeleteArgs<ExtArgs>>): Prisma__ProductSupplierClient<$Result.GetResult<Prisma.$ProductSupplierPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProductSupplier.
     * @param {ProductSupplierUpdateArgs} args - Arguments to update one ProductSupplier.
     * @example
     * // Update one ProductSupplier
     * const productSupplier = await prisma.productSupplier.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductSupplierUpdateArgs>(args: SelectSubset<T, ProductSupplierUpdateArgs<ExtArgs>>): Prisma__ProductSupplierClient<$Result.GetResult<Prisma.$ProductSupplierPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProductSuppliers.
     * @param {ProductSupplierDeleteManyArgs} args - Arguments to filter ProductSuppliers to delete.
     * @example
     * // Delete a few ProductSuppliers
     * const { count } = await prisma.productSupplier.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductSupplierDeleteManyArgs>(args?: SelectSubset<T, ProductSupplierDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductSuppliers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductSupplierUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductSuppliers
     * const productSupplier = await prisma.productSupplier.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductSupplierUpdateManyArgs>(args: SelectSubset<T, ProductSupplierUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductSuppliers and returns the data updated in the database.
     * @param {ProductSupplierUpdateManyAndReturnArgs} args - Arguments to update many ProductSuppliers.
     * @example
     * // Update many ProductSuppliers
     * const productSupplier = await prisma.productSupplier.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProductSuppliers and only return the `id`
     * const productSupplierWithIdOnly = await prisma.productSupplier.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductSupplierUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductSupplierUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductSupplierPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProductSupplier.
     * @param {ProductSupplierUpsertArgs} args - Arguments to update or create a ProductSupplier.
     * @example
     * // Update or create a ProductSupplier
     * const productSupplier = await prisma.productSupplier.upsert({
     *   create: {
     *     // ... data to create a ProductSupplier
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductSupplier we want to update
     *   }
     * })
     */
    upsert<T extends ProductSupplierUpsertArgs>(args: SelectSubset<T, ProductSupplierUpsertArgs<ExtArgs>>): Prisma__ProductSupplierClient<$Result.GetResult<Prisma.$ProductSupplierPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProductSuppliers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductSupplierCountArgs} args - Arguments to filter ProductSuppliers to count.
     * @example
     * // Count the number of ProductSuppliers
     * const count = await prisma.productSupplier.count({
     *   where: {
     *     // ... the filter for the ProductSuppliers we want to count
     *   }
     * })
    **/
    count<T extends ProductSupplierCountArgs>(
      args?: Subset<T, ProductSupplierCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductSupplierCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductSupplier.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductSupplierAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductSupplierAggregateArgs>(args: Subset<T, ProductSupplierAggregateArgs>): Prisma.PrismaPromise<GetProductSupplierAggregateType<T>>

    /**
     * Group by ProductSupplier.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductSupplierGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductSupplierGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductSupplierGroupByArgs['orderBy'] }
        : { orderBy?: ProductSupplierGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductSupplierGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductSupplierGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductSupplier model
   */
  readonly fields: ProductSupplierFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductSupplier.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductSupplierClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    supplier<T extends SupplierDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SupplierDefaultArgs<ExtArgs>>): Prisma__SupplierClient<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductSupplier model
   */
  interface ProductSupplierFieldRefs {
    readonly id: FieldRef<"ProductSupplier", 'String'>
    readonly productId: FieldRef<"ProductSupplier", 'String'>
    readonly supplierId: FieldRef<"ProductSupplier", 'String'>
    readonly supplierSku: FieldRef<"ProductSupplier", 'String'>
    readonly supplierName: FieldRef<"ProductSupplier", 'String'>
    readonly unitCost: FieldRef<"ProductSupplier", 'Decimal'>
    readonly currency: FieldRef<"ProductSupplier", 'String'>
    readonly minOrderQty: FieldRef<"ProductSupplier", 'Int'>
    readonly maxOrderQty: FieldRef<"ProductSupplier", 'Int'>
    readonly leadTimeDays: FieldRef<"ProductSupplier", 'Int'>
    readonly isPreferred: FieldRef<"ProductSupplier", 'Boolean'>
    readonly isActive: FieldRef<"ProductSupplier", 'Boolean'>
    readonly createdAt: FieldRef<"ProductSupplier", 'DateTime'>
    readonly updatedAt: FieldRef<"ProductSupplier", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ProductSupplier findUnique
   */
  export type ProductSupplierFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSupplier
     */
    select?: ProductSupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSupplier
     */
    omit?: ProductSupplierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSupplierInclude<ExtArgs> | null
    /**
     * Filter, which ProductSupplier to fetch.
     */
    where: ProductSupplierWhereUniqueInput
  }

  /**
   * ProductSupplier findUniqueOrThrow
   */
  export type ProductSupplierFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSupplier
     */
    select?: ProductSupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSupplier
     */
    omit?: ProductSupplierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSupplierInclude<ExtArgs> | null
    /**
     * Filter, which ProductSupplier to fetch.
     */
    where: ProductSupplierWhereUniqueInput
  }

  /**
   * ProductSupplier findFirst
   */
  export type ProductSupplierFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSupplier
     */
    select?: ProductSupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSupplier
     */
    omit?: ProductSupplierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSupplierInclude<ExtArgs> | null
    /**
     * Filter, which ProductSupplier to fetch.
     */
    where?: ProductSupplierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductSuppliers to fetch.
     */
    orderBy?: ProductSupplierOrderByWithRelationInput | ProductSupplierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductSuppliers.
     */
    cursor?: ProductSupplierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductSuppliers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductSuppliers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductSuppliers.
     */
    distinct?: ProductSupplierScalarFieldEnum | ProductSupplierScalarFieldEnum[]
  }

  /**
   * ProductSupplier findFirstOrThrow
   */
  export type ProductSupplierFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSupplier
     */
    select?: ProductSupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSupplier
     */
    omit?: ProductSupplierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSupplierInclude<ExtArgs> | null
    /**
     * Filter, which ProductSupplier to fetch.
     */
    where?: ProductSupplierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductSuppliers to fetch.
     */
    orderBy?: ProductSupplierOrderByWithRelationInput | ProductSupplierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductSuppliers.
     */
    cursor?: ProductSupplierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductSuppliers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductSuppliers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductSuppliers.
     */
    distinct?: ProductSupplierScalarFieldEnum | ProductSupplierScalarFieldEnum[]
  }

  /**
   * ProductSupplier findMany
   */
  export type ProductSupplierFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSupplier
     */
    select?: ProductSupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSupplier
     */
    omit?: ProductSupplierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSupplierInclude<ExtArgs> | null
    /**
     * Filter, which ProductSuppliers to fetch.
     */
    where?: ProductSupplierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductSuppliers to fetch.
     */
    orderBy?: ProductSupplierOrderByWithRelationInput | ProductSupplierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductSuppliers.
     */
    cursor?: ProductSupplierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductSuppliers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductSuppliers.
     */
    skip?: number
    distinct?: ProductSupplierScalarFieldEnum | ProductSupplierScalarFieldEnum[]
  }

  /**
   * ProductSupplier create
   */
  export type ProductSupplierCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSupplier
     */
    select?: ProductSupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSupplier
     */
    omit?: ProductSupplierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSupplierInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductSupplier.
     */
    data: XOR<ProductSupplierCreateInput, ProductSupplierUncheckedCreateInput>
  }

  /**
   * ProductSupplier createMany
   */
  export type ProductSupplierCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductSuppliers.
     */
    data: ProductSupplierCreateManyInput | ProductSupplierCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductSupplier createManyAndReturn
   */
  export type ProductSupplierCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSupplier
     */
    select?: ProductSupplierSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSupplier
     */
    omit?: ProductSupplierOmit<ExtArgs> | null
    /**
     * The data used to create many ProductSuppliers.
     */
    data: ProductSupplierCreateManyInput | ProductSupplierCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSupplierIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductSupplier update
   */
  export type ProductSupplierUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSupplier
     */
    select?: ProductSupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSupplier
     */
    omit?: ProductSupplierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSupplierInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductSupplier.
     */
    data: XOR<ProductSupplierUpdateInput, ProductSupplierUncheckedUpdateInput>
    /**
     * Choose, which ProductSupplier to update.
     */
    where: ProductSupplierWhereUniqueInput
  }

  /**
   * ProductSupplier updateMany
   */
  export type ProductSupplierUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductSuppliers.
     */
    data: XOR<ProductSupplierUpdateManyMutationInput, ProductSupplierUncheckedUpdateManyInput>
    /**
     * Filter which ProductSuppliers to update
     */
    where?: ProductSupplierWhereInput
    /**
     * Limit how many ProductSuppliers to update.
     */
    limit?: number
  }

  /**
   * ProductSupplier updateManyAndReturn
   */
  export type ProductSupplierUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSupplier
     */
    select?: ProductSupplierSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSupplier
     */
    omit?: ProductSupplierOmit<ExtArgs> | null
    /**
     * The data used to update ProductSuppliers.
     */
    data: XOR<ProductSupplierUpdateManyMutationInput, ProductSupplierUncheckedUpdateManyInput>
    /**
     * Filter which ProductSuppliers to update
     */
    where?: ProductSupplierWhereInput
    /**
     * Limit how many ProductSuppliers to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSupplierIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductSupplier upsert
   */
  export type ProductSupplierUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSupplier
     */
    select?: ProductSupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSupplier
     */
    omit?: ProductSupplierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSupplierInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductSupplier to update in case it exists.
     */
    where: ProductSupplierWhereUniqueInput
    /**
     * In case the ProductSupplier found by the `where` argument doesn't exist, create a new ProductSupplier with this data.
     */
    create: XOR<ProductSupplierCreateInput, ProductSupplierUncheckedCreateInput>
    /**
     * In case the ProductSupplier was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductSupplierUpdateInput, ProductSupplierUncheckedUpdateInput>
  }

  /**
   * ProductSupplier delete
   */
  export type ProductSupplierDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSupplier
     */
    select?: ProductSupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSupplier
     */
    omit?: ProductSupplierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSupplierInclude<ExtArgs> | null
    /**
     * Filter which ProductSupplier to delete.
     */
    where: ProductSupplierWhereUniqueInput
  }

  /**
   * ProductSupplier deleteMany
   */
  export type ProductSupplierDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductSuppliers to delete
     */
    where?: ProductSupplierWhereInput
    /**
     * Limit how many ProductSuppliers to delete.
     */
    limit?: number
  }

  /**
   * ProductSupplier without action
   */
  export type ProductSupplierDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSupplier
     */
    select?: ProductSupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSupplier
     */
    omit?: ProductSupplierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSupplierInclude<ExtArgs> | null
  }


  /**
   * Model SupplierContact
   */

  export type AggregateSupplierContact = {
    _count: SupplierContactCountAggregateOutputType | null
    _min: SupplierContactMinAggregateOutputType | null
    _max: SupplierContactMaxAggregateOutputType | null
  }

  export type SupplierContactMinAggregateOutputType = {
    id: string | null
    supplierId: string | null
    name: string | null
    title: string | null
    email: string | null
    phone: string | null
    mobile: string | null
    isPrimary: boolean | null
    department: string | null
    isActive: boolean | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SupplierContactMaxAggregateOutputType = {
    id: string | null
    supplierId: string | null
    name: string | null
    title: string | null
    email: string | null
    phone: string | null
    mobile: string | null
    isPrimary: boolean | null
    department: string | null
    isActive: boolean | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SupplierContactCountAggregateOutputType = {
    id: number
    supplierId: number
    name: number
    title: number
    email: number
    phone: number
    mobile: number
    isPrimary: number
    department: number
    isActive: number
    notes: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SupplierContactMinAggregateInputType = {
    id?: true
    supplierId?: true
    name?: true
    title?: true
    email?: true
    phone?: true
    mobile?: true
    isPrimary?: true
    department?: true
    isActive?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SupplierContactMaxAggregateInputType = {
    id?: true
    supplierId?: true
    name?: true
    title?: true
    email?: true
    phone?: true
    mobile?: true
    isPrimary?: true
    department?: true
    isActive?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SupplierContactCountAggregateInputType = {
    id?: true
    supplierId?: true
    name?: true
    title?: true
    email?: true
    phone?: true
    mobile?: true
    isPrimary?: true
    department?: true
    isActive?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SupplierContactAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SupplierContact to aggregate.
     */
    where?: SupplierContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplierContacts to fetch.
     */
    orderBy?: SupplierContactOrderByWithRelationInput | SupplierContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SupplierContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplierContacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplierContacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SupplierContacts
    **/
    _count?: true | SupplierContactCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SupplierContactMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SupplierContactMaxAggregateInputType
  }

  export type GetSupplierContactAggregateType<T extends SupplierContactAggregateArgs> = {
        [P in keyof T & keyof AggregateSupplierContact]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSupplierContact[P]>
      : GetScalarType<T[P], AggregateSupplierContact[P]>
  }




  export type SupplierContactGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupplierContactWhereInput
    orderBy?: SupplierContactOrderByWithAggregationInput | SupplierContactOrderByWithAggregationInput[]
    by: SupplierContactScalarFieldEnum[] | SupplierContactScalarFieldEnum
    having?: SupplierContactScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SupplierContactCountAggregateInputType | true
    _min?: SupplierContactMinAggregateInputType
    _max?: SupplierContactMaxAggregateInputType
  }

  export type SupplierContactGroupByOutputType = {
    id: string
    supplierId: string
    name: string
    title: string | null
    email: string | null
    phone: string | null
    mobile: string | null
    isPrimary: boolean
    department: string | null
    isActive: boolean
    notes: string | null
    createdAt: Date
    updatedAt: Date
    _count: SupplierContactCountAggregateOutputType | null
    _min: SupplierContactMinAggregateOutputType | null
    _max: SupplierContactMaxAggregateOutputType | null
  }

  type GetSupplierContactGroupByPayload<T extends SupplierContactGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SupplierContactGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SupplierContactGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SupplierContactGroupByOutputType[P]>
            : GetScalarType<T[P], SupplierContactGroupByOutputType[P]>
        }
      >
    >


  export type SupplierContactSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    supplierId?: boolean
    name?: boolean
    title?: boolean
    email?: boolean
    phone?: boolean
    mobile?: boolean
    isPrimary?: boolean
    department?: boolean
    isActive?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    supplier?: boolean | SupplierDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["supplierContact"]>

  export type SupplierContactSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    supplierId?: boolean
    name?: boolean
    title?: boolean
    email?: boolean
    phone?: boolean
    mobile?: boolean
    isPrimary?: boolean
    department?: boolean
    isActive?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    supplier?: boolean | SupplierDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["supplierContact"]>

  export type SupplierContactSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    supplierId?: boolean
    name?: boolean
    title?: boolean
    email?: boolean
    phone?: boolean
    mobile?: boolean
    isPrimary?: boolean
    department?: boolean
    isActive?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    supplier?: boolean | SupplierDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["supplierContact"]>

  export type SupplierContactSelectScalar = {
    id?: boolean
    supplierId?: boolean
    name?: boolean
    title?: boolean
    email?: boolean
    phone?: boolean
    mobile?: boolean
    isPrimary?: boolean
    department?: boolean
    isActive?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type SupplierContactOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "supplierId" | "name" | "title" | "email" | "phone" | "mobile" | "isPrimary" | "department" | "isActive" | "notes" | "createdAt" | "updatedAt", ExtArgs["result"]["supplierContact"]>
  export type SupplierContactInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supplier?: boolean | SupplierDefaultArgs<ExtArgs>
  }
  export type SupplierContactIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supplier?: boolean | SupplierDefaultArgs<ExtArgs>
  }
  export type SupplierContactIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supplier?: boolean | SupplierDefaultArgs<ExtArgs>
  }

  export type $SupplierContactPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SupplierContact"
    objects: {
      supplier: Prisma.$SupplierPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      supplierId: string
      name: string
      title: string | null
      email: string | null
      phone: string | null
      mobile: string | null
      isPrimary: boolean
      department: string | null
      isActive: boolean
      notes: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["supplierContact"]>
    composites: {}
  }

  type SupplierContactGetPayload<S extends boolean | null | undefined | SupplierContactDefaultArgs> = $Result.GetResult<Prisma.$SupplierContactPayload, S>

  type SupplierContactCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SupplierContactFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SupplierContactCountAggregateInputType | true
    }

  export interface SupplierContactDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SupplierContact'], meta: { name: 'SupplierContact' } }
    /**
     * Find zero or one SupplierContact that matches the filter.
     * @param {SupplierContactFindUniqueArgs} args - Arguments to find a SupplierContact
     * @example
     * // Get one SupplierContact
     * const supplierContact = await prisma.supplierContact.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SupplierContactFindUniqueArgs>(args: SelectSubset<T, SupplierContactFindUniqueArgs<ExtArgs>>): Prisma__SupplierContactClient<$Result.GetResult<Prisma.$SupplierContactPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SupplierContact that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SupplierContactFindUniqueOrThrowArgs} args - Arguments to find a SupplierContact
     * @example
     * // Get one SupplierContact
     * const supplierContact = await prisma.supplierContact.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SupplierContactFindUniqueOrThrowArgs>(args: SelectSubset<T, SupplierContactFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SupplierContactClient<$Result.GetResult<Prisma.$SupplierContactPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SupplierContact that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierContactFindFirstArgs} args - Arguments to find a SupplierContact
     * @example
     * // Get one SupplierContact
     * const supplierContact = await prisma.supplierContact.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SupplierContactFindFirstArgs>(args?: SelectSubset<T, SupplierContactFindFirstArgs<ExtArgs>>): Prisma__SupplierContactClient<$Result.GetResult<Prisma.$SupplierContactPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SupplierContact that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierContactFindFirstOrThrowArgs} args - Arguments to find a SupplierContact
     * @example
     * // Get one SupplierContact
     * const supplierContact = await prisma.supplierContact.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SupplierContactFindFirstOrThrowArgs>(args?: SelectSubset<T, SupplierContactFindFirstOrThrowArgs<ExtArgs>>): Prisma__SupplierContactClient<$Result.GetResult<Prisma.$SupplierContactPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SupplierContacts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierContactFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SupplierContacts
     * const supplierContacts = await prisma.supplierContact.findMany()
     * 
     * // Get first 10 SupplierContacts
     * const supplierContacts = await prisma.supplierContact.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const supplierContactWithIdOnly = await prisma.supplierContact.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SupplierContactFindManyArgs>(args?: SelectSubset<T, SupplierContactFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplierContactPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SupplierContact.
     * @param {SupplierContactCreateArgs} args - Arguments to create a SupplierContact.
     * @example
     * // Create one SupplierContact
     * const SupplierContact = await prisma.supplierContact.create({
     *   data: {
     *     // ... data to create a SupplierContact
     *   }
     * })
     * 
     */
    create<T extends SupplierContactCreateArgs>(args: SelectSubset<T, SupplierContactCreateArgs<ExtArgs>>): Prisma__SupplierContactClient<$Result.GetResult<Prisma.$SupplierContactPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SupplierContacts.
     * @param {SupplierContactCreateManyArgs} args - Arguments to create many SupplierContacts.
     * @example
     * // Create many SupplierContacts
     * const supplierContact = await prisma.supplierContact.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SupplierContactCreateManyArgs>(args?: SelectSubset<T, SupplierContactCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SupplierContacts and returns the data saved in the database.
     * @param {SupplierContactCreateManyAndReturnArgs} args - Arguments to create many SupplierContacts.
     * @example
     * // Create many SupplierContacts
     * const supplierContact = await prisma.supplierContact.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SupplierContacts and only return the `id`
     * const supplierContactWithIdOnly = await prisma.supplierContact.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SupplierContactCreateManyAndReturnArgs>(args?: SelectSubset<T, SupplierContactCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplierContactPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SupplierContact.
     * @param {SupplierContactDeleteArgs} args - Arguments to delete one SupplierContact.
     * @example
     * // Delete one SupplierContact
     * const SupplierContact = await prisma.supplierContact.delete({
     *   where: {
     *     // ... filter to delete one SupplierContact
     *   }
     * })
     * 
     */
    delete<T extends SupplierContactDeleteArgs>(args: SelectSubset<T, SupplierContactDeleteArgs<ExtArgs>>): Prisma__SupplierContactClient<$Result.GetResult<Prisma.$SupplierContactPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SupplierContact.
     * @param {SupplierContactUpdateArgs} args - Arguments to update one SupplierContact.
     * @example
     * // Update one SupplierContact
     * const supplierContact = await prisma.supplierContact.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SupplierContactUpdateArgs>(args: SelectSubset<T, SupplierContactUpdateArgs<ExtArgs>>): Prisma__SupplierContactClient<$Result.GetResult<Prisma.$SupplierContactPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SupplierContacts.
     * @param {SupplierContactDeleteManyArgs} args - Arguments to filter SupplierContacts to delete.
     * @example
     * // Delete a few SupplierContacts
     * const { count } = await prisma.supplierContact.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SupplierContactDeleteManyArgs>(args?: SelectSubset<T, SupplierContactDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SupplierContacts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierContactUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SupplierContacts
     * const supplierContact = await prisma.supplierContact.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SupplierContactUpdateManyArgs>(args: SelectSubset<T, SupplierContactUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SupplierContacts and returns the data updated in the database.
     * @param {SupplierContactUpdateManyAndReturnArgs} args - Arguments to update many SupplierContacts.
     * @example
     * // Update many SupplierContacts
     * const supplierContact = await prisma.supplierContact.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SupplierContacts and only return the `id`
     * const supplierContactWithIdOnly = await prisma.supplierContact.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SupplierContactUpdateManyAndReturnArgs>(args: SelectSubset<T, SupplierContactUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplierContactPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SupplierContact.
     * @param {SupplierContactUpsertArgs} args - Arguments to update or create a SupplierContact.
     * @example
     * // Update or create a SupplierContact
     * const supplierContact = await prisma.supplierContact.upsert({
     *   create: {
     *     // ... data to create a SupplierContact
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SupplierContact we want to update
     *   }
     * })
     */
    upsert<T extends SupplierContactUpsertArgs>(args: SelectSubset<T, SupplierContactUpsertArgs<ExtArgs>>): Prisma__SupplierContactClient<$Result.GetResult<Prisma.$SupplierContactPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SupplierContacts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierContactCountArgs} args - Arguments to filter SupplierContacts to count.
     * @example
     * // Count the number of SupplierContacts
     * const count = await prisma.supplierContact.count({
     *   where: {
     *     // ... the filter for the SupplierContacts we want to count
     *   }
     * })
    **/
    count<T extends SupplierContactCountArgs>(
      args?: Subset<T, SupplierContactCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SupplierContactCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SupplierContact.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierContactAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SupplierContactAggregateArgs>(args: Subset<T, SupplierContactAggregateArgs>): Prisma.PrismaPromise<GetSupplierContactAggregateType<T>>

    /**
     * Group by SupplierContact.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierContactGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SupplierContactGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SupplierContactGroupByArgs['orderBy'] }
        : { orderBy?: SupplierContactGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SupplierContactGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSupplierContactGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SupplierContact model
   */
  readonly fields: SupplierContactFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SupplierContact.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SupplierContactClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    supplier<T extends SupplierDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SupplierDefaultArgs<ExtArgs>>): Prisma__SupplierClient<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SupplierContact model
   */
  interface SupplierContactFieldRefs {
    readonly id: FieldRef<"SupplierContact", 'String'>
    readonly supplierId: FieldRef<"SupplierContact", 'String'>
    readonly name: FieldRef<"SupplierContact", 'String'>
    readonly title: FieldRef<"SupplierContact", 'String'>
    readonly email: FieldRef<"SupplierContact", 'String'>
    readonly phone: FieldRef<"SupplierContact", 'String'>
    readonly mobile: FieldRef<"SupplierContact", 'String'>
    readonly isPrimary: FieldRef<"SupplierContact", 'Boolean'>
    readonly department: FieldRef<"SupplierContact", 'String'>
    readonly isActive: FieldRef<"SupplierContact", 'Boolean'>
    readonly notes: FieldRef<"SupplierContact", 'String'>
    readonly createdAt: FieldRef<"SupplierContact", 'DateTime'>
    readonly updatedAt: FieldRef<"SupplierContact", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SupplierContact findUnique
   */
  export type SupplierContactFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierContact
     */
    select?: SupplierContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierContact
     */
    omit?: SupplierContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierContactInclude<ExtArgs> | null
    /**
     * Filter, which SupplierContact to fetch.
     */
    where: SupplierContactWhereUniqueInput
  }

  /**
   * SupplierContact findUniqueOrThrow
   */
  export type SupplierContactFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierContact
     */
    select?: SupplierContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierContact
     */
    omit?: SupplierContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierContactInclude<ExtArgs> | null
    /**
     * Filter, which SupplierContact to fetch.
     */
    where: SupplierContactWhereUniqueInput
  }

  /**
   * SupplierContact findFirst
   */
  export type SupplierContactFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierContact
     */
    select?: SupplierContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierContact
     */
    omit?: SupplierContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierContactInclude<ExtArgs> | null
    /**
     * Filter, which SupplierContact to fetch.
     */
    where?: SupplierContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplierContacts to fetch.
     */
    orderBy?: SupplierContactOrderByWithRelationInput | SupplierContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SupplierContacts.
     */
    cursor?: SupplierContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplierContacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplierContacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SupplierContacts.
     */
    distinct?: SupplierContactScalarFieldEnum | SupplierContactScalarFieldEnum[]
  }

  /**
   * SupplierContact findFirstOrThrow
   */
  export type SupplierContactFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierContact
     */
    select?: SupplierContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierContact
     */
    omit?: SupplierContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierContactInclude<ExtArgs> | null
    /**
     * Filter, which SupplierContact to fetch.
     */
    where?: SupplierContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplierContacts to fetch.
     */
    orderBy?: SupplierContactOrderByWithRelationInput | SupplierContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SupplierContacts.
     */
    cursor?: SupplierContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplierContacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplierContacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SupplierContacts.
     */
    distinct?: SupplierContactScalarFieldEnum | SupplierContactScalarFieldEnum[]
  }

  /**
   * SupplierContact findMany
   */
  export type SupplierContactFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierContact
     */
    select?: SupplierContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierContact
     */
    omit?: SupplierContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierContactInclude<ExtArgs> | null
    /**
     * Filter, which SupplierContacts to fetch.
     */
    where?: SupplierContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplierContacts to fetch.
     */
    orderBy?: SupplierContactOrderByWithRelationInput | SupplierContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SupplierContacts.
     */
    cursor?: SupplierContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplierContacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplierContacts.
     */
    skip?: number
    distinct?: SupplierContactScalarFieldEnum | SupplierContactScalarFieldEnum[]
  }

  /**
   * SupplierContact create
   */
  export type SupplierContactCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierContact
     */
    select?: SupplierContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierContact
     */
    omit?: SupplierContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierContactInclude<ExtArgs> | null
    /**
     * The data needed to create a SupplierContact.
     */
    data: XOR<SupplierContactCreateInput, SupplierContactUncheckedCreateInput>
  }

  /**
   * SupplierContact createMany
   */
  export type SupplierContactCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SupplierContacts.
     */
    data: SupplierContactCreateManyInput | SupplierContactCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SupplierContact createManyAndReturn
   */
  export type SupplierContactCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierContact
     */
    select?: SupplierContactSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierContact
     */
    omit?: SupplierContactOmit<ExtArgs> | null
    /**
     * The data used to create many SupplierContacts.
     */
    data: SupplierContactCreateManyInput | SupplierContactCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierContactIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SupplierContact update
   */
  export type SupplierContactUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierContact
     */
    select?: SupplierContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierContact
     */
    omit?: SupplierContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierContactInclude<ExtArgs> | null
    /**
     * The data needed to update a SupplierContact.
     */
    data: XOR<SupplierContactUpdateInput, SupplierContactUncheckedUpdateInput>
    /**
     * Choose, which SupplierContact to update.
     */
    where: SupplierContactWhereUniqueInput
  }

  /**
   * SupplierContact updateMany
   */
  export type SupplierContactUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SupplierContacts.
     */
    data: XOR<SupplierContactUpdateManyMutationInput, SupplierContactUncheckedUpdateManyInput>
    /**
     * Filter which SupplierContacts to update
     */
    where?: SupplierContactWhereInput
    /**
     * Limit how many SupplierContacts to update.
     */
    limit?: number
  }

  /**
   * SupplierContact updateManyAndReturn
   */
  export type SupplierContactUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierContact
     */
    select?: SupplierContactSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierContact
     */
    omit?: SupplierContactOmit<ExtArgs> | null
    /**
     * The data used to update SupplierContacts.
     */
    data: XOR<SupplierContactUpdateManyMutationInput, SupplierContactUncheckedUpdateManyInput>
    /**
     * Filter which SupplierContacts to update
     */
    where?: SupplierContactWhereInput
    /**
     * Limit how many SupplierContacts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierContactIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SupplierContact upsert
   */
  export type SupplierContactUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierContact
     */
    select?: SupplierContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierContact
     */
    omit?: SupplierContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierContactInclude<ExtArgs> | null
    /**
     * The filter to search for the SupplierContact to update in case it exists.
     */
    where: SupplierContactWhereUniqueInput
    /**
     * In case the SupplierContact found by the `where` argument doesn't exist, create a new SupplierContact with this data.
     */
    create: XOR<SupplierContactCreateInput, SupplierContactUncheckedCreateInput>
    /**
     * In case the SupplierContact was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SupplierContactUpdateInput, SupplierContactUncheckedUpdateInput>
  }

  /**
   * SupplierContact delete
   */
  export type SupplierContactDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierContact
     */
    select?: SupplierContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierContact
     */
    omit?: SupplierContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierContactInclude<ExtArgs> | null
    /**
     * Filter which SupplierContact to delete.
     */
    where: SupplierContactWhereUniqueInput
  }

  /**
   * SupplierContact deleteMany
   */
  export type SupplierContactDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SupplierContacts to delete
     */
    where?: SupplierContactWhereInput
    /**
     * Limit how many SupplierContacts to delete.
     */
    limit?: number
  }

  /**
   * SupplierContact without action
   */
  export type SupplierContactDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierContact
     */
    select?: SupplierContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierContact
     */
    omit?: SupplierContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierContactInclude<ExtArgs> | null
  }


  /**
   * Model SupplierDocument
   */

  export type AggregateSupplierDocument = {
    _count: SupplierDocumentCountAggregateOutputType | null
    _avg: SupplierDocumentAvgAggregateOutputType | null
    _sum: SupplierDocumentSumAggregateOutputType | null
    _min: SupplierDocumentMinAggregateOutputType | null
    _max: SupplierDocumentMaxAggregateOutputType | null
  }

  export type SupplierDocumentAvgAggregateOutputType = {
    fileSize: number | null
  }

  export type SupplierDocumentSumAggregateOutputType = {
    fileSize: number | null
  }

  export type SupplierDocumentMinAggregateOutputType = {
    id: string | null
    supplierId: string | null
    name: string | null
    type: $Enums.DocumentType | null
    category: string | null
    fileName: string | null
    fileSize: number | null
    fileType: string | null
    filePath: string | null
    uploadedBy: string | null
    uploadedAt: Date | null
    expiresAt: Date | null
    isActive: boolean | null
  }

  export type SupplierDocumentMaxAggregateOutputType = {
    id: string | null
    supplierId: string | null
    name: string | null
    type: $Enums.DocumentType | null
    category: string | null
    fileName: string | null
    fileSize: number | null
    fileType: string | null
    filePath: string | null
    uploadedBy: string | null
    uploadedAt: Date | null
    expiresAt: Date | null
    isActive: boolean | null
  }

  export type SupplierDocumentCountAggregateOutputType = {
    id: number
    supplierId: number
    name: number
    type: number
    category: number
    fileName: number
    fileSize: number
    fileType: number
    filePath: number
    uploadedBy: number
    uploadedAt: number
    expiresAt: number
    isActive: number
    _all: number
  }


  export type SupplierDocumentAvgAggregateInputType = {
    fileSize?: true
  }

  export type SupplierDocumentSumAggregateInputType = {
    fileSize?: true
  }

  export type SupplierDocumentMinAggregateInputType = {
    id?: true
    supplierId?: true
    name?: true
    type?: true
    category?: true
    fileName?: true
    fileSize?: true
    fileType?: true
    filePath?: true
    uploadedBy?: true
    uploadedAt?: true
    expiresAt?: true
    isActive?: true
  }

  export type SupplierDocumentMaxAggregateInputType = {
    id?: true
    supplierId?: true
    name?: true
    type?: true
    category?: true
    fileName?: true
    fileSize?: true
    fileType?: true
    filePath?: true
    uploadedBy?: true
    uploadedAt?: true
    expiresAt?: true
    isActive?: true
  }

  export type SupplierDocumentCountAggregateInputType = {
    id?: true
    supplierId?: true
    name?: true
    type?: true
    category?: true
    fileName?: true
    fileSize?: true
    fileType?: true
    filePath?: true
    uploadedBy?: true
    uploadedAt?: true
    expiresAt?: true
    isActive?: true
    _all?: true
  }

  export type SupplierDocumentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SupplierDocument to aggregate.
     */
    where?: SupplierDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplierDocuments to fetch.
     */
    orderBy?: SupplierDocumentOrderByWithRelationInput | SupplierDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SupplierDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplierDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplierDocuments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SupplierDocuments
    **/
    _count?: true | SupplierDocumentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SupplierDocumentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SupplierDocumentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SupplierDocumentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SupplierDocumentMaxAggregateInputType
  }

  export type GetSupplierDocumentAggregateType<T extends SupplierDocumentAggregateArgs> = {
        [P in keyof T & keyof AggregateSupplierDocument]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSupplierDocument[P]>
      : GetScalarType<T[P], AggregateSupplierDocument[P]>
  }




  export type SupplierDocumentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupplierDocumentWhereInput
    orderBy?: SupplierDocumentOrderByWithAggregationInput | SupplierDocumentOrderByWithAggregationInput[]
    by: SupplierDocumentScalarFieldEnum[] | SupplierDocumentScalarFieldEnum
    having?: SupplierDocumentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SupplierDocumentCountAggregateInputType | true
    _avg?: SupplierDocumentAvgAggregateInputType
    _sum?: SupplierDocumentSumAggregateInputType
    _min?: SupplierDocumentMinAggregateInputType
    _max?: SupplierDocumentMaxAggregateInputType
  }

  export type SupplierDocumentGroupByOutputType = {
    id: string
    supplierId: string
    name: string
    type: $Enums.DocumentType
    category: string | null
    fileName: string
    fileSize: number | null
    fileType: string | null
    filePath: string
    uploadedBy: string
    uploadedAt: Date
    expiresAt: Date | null
    isActive: boolean
    _count: SupplierDocumentCountAggregateOutputType | null
    _avg: SupplierDocumentAvgAggregateOutputType | null
    _sum: SupplierDocumentSumAggregateOutputType | null
    _min: SupplierDocumentMinAggregateOutputType | null
    _max: SupplierDocumentMaxAggregateOutputType | null
  }

  type GetSupplierDocumentGroupByPayload<T extends SupplierDocumentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SupplierDocumentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SupplierDocumentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SupplierDocumentGroupByOutputType[P]>
            : GetScalarType<T[P], SupplierDocumentGroupByOutputType[P]>
        }
      >
    >


  export type SupplierDocumentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    supplierId?: boolean
    name?: boolean
    type?: boolean
    category?: boolean
    fileName?: boolean
    fileSize?: boolean
    fileType?: boolean
    filePath?: boolean
    uploadedBy?: boolean
    uploadedAt?: boolean
    expiresAt?: boolean
    isActive?: boolean
    supplier?: boolean | SupplierDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["supplierDocument"]>

  export type SupplierDocumentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    supplierId?: boolean
    name?: boolean
    type?: boolean
    category?: boolean
    fileName?: boolean
    fileSize?: boolean
    fileType?: boolean
    filePath?: boolean
    uploadedBy?: boolean
    uploadedAt?: boolean
    expiresAt?: boolean
    isActive?: boolean
    supplier?: boolean | SupplierDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["supplierDocument"]>

  export type SupplierDocumentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    supplierId?: boolean
    name?: boolean
    type?: boolean
    category?: boolean
    fileName?: boolean
    fileSize?: boolean
    fileType?: boolean
    filePath?: boolean
    uploadedBy?: boolean
    uploadedAt?: boolean
    expiresAt?: boolean
    isActive?: boolean
    supplier?: boolean | SupplierDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["supplierDocument"]>

  export type SupplierDocumentSelectScalar = {
    id?: boolean
    supplierId?: boolean
    name?: boolean
    type?: boolean
    category?: boolean
    fileName?: boolean
    fileSize?: boolean
    fileType?: boolean
    filePath?: boolean
    uploadedBy?: boolean
    uploadedAt?: boolean
    expiresAt?: boolean
    isActive?: boolean
  }

  export type SupplierDocumentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "supplierId" | "name" | "type" | "category" | "fileName" | "fileSize" | "fileType" | "filePath" | "uploadedBy" | "uploadedAt" | "expiresAt" | "isActive", ExtArgs["result"]["supplierDocument"]>
  export type SupplierDocumentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supplier?: boolean | SupplierDefaultArgs<ExtArgs>
  }
  export type SupplierDocumentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supplier?: boolean | SupplierDefaultArgs<ExtArgs>
  }
  export type SupplierDocumentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supplier?: boolean | SupplierDefaultArgs<ExtArgs>
  }

  export type $SupplierDocumentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SupplierDocument"
    objects: {
      supplier: Prisma.$SupplierPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      supplierId: string
      name: string
      type: $Enums.DocumentType
      category: string | null
      fileName: string
      fileSize: number | null
      fileType: string | null
      filePath: string
      uploadedBy: string
      uploadedAt: Date
      expiresAt: Date | null
      isActive: boolean
    }, ExtArgs["result"]["supplierDocument"]>
    composites: {}
  }

  type SupplierDocumentGetPayload<S extends boolean | null | undefined | SupplierDocumentDefaultArgs> = $Result.GetResult<Prisma.$SupplierDocumentPayload, S>

  type SupplierDocumentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SupplierDocumentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SupplierDocumentCountAggregateInputType | true
    }

  export interface SupplierDocumentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SupplierDocument'], meta: { name: 'SupplierDocument' } }
    /**
     * Find zero or one SupplierDocument that matches the filter.
     * @param {SupplierDocumentFindUniqueArgs} args - Arguments to find a SupplierDocument
     * @example
     * // Get one SupplierDocument
     * const supplierDocument = await prisma.supplierDocument.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SupplierDocumentFindUniqueArgs>(args: SelectSubset<T, SupplierDocumentFindUniqueArgs<ExtArgs>>): Prisma__SupplierDocumentClient<$Result.GetResult<Prisma.$SupplierDocumentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SupplierDocument that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SupplierDocumentFindUniqueOrThrowArgs} args - Arguments to find a SupplierDocument
     * @example
     * // Get one SupplierDocument
     * const supplierDocument = await prisma.supplierDocument.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SupplierDocumentFindUniqueOrThrowArgs>(args: SelectSubset<T, SupplierDocumentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SupplierDocumentClient<$Result.GetResult<Prisma.$SupplierDocumentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SupplierDocument that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierDocumentFindFirstArgs} args - Arguments to find a SupplierDocument
     * @example
     * // Get one SupplierDocument
     * const supplierDocument = await prisma.supplierDocument.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SupplierDocumentFindFirstArgs>(args?: SelectSubset<T, SupplierDocumentFindFirstArgs<ExtArgs>>): Prisma__SupplierDocumentClient<$Result.GetResult<Prisma.$SupplierDocumentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SupplierDocument that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierDocumentFindFirstOrThrowArgs} args - Arguments to find a SupplierDocument
     * @example
     * // Get one SupplierDocument
     * const supplierDocument = await prisma.supplierDocument.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SupplierDocumentFindFirstOrThrowArgs>(args?: SelectSubset<T, SupplierDocumentFindFirstOrThrowArgs<ExtArgs>>): Prisma__SupplierDocumentClient<$Result.GetResult<Prisma.$SupplierDocumentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SupplierDocuments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierDocumentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SupplierDocuments
     * const supplierDocuments = await prisma.supplierDocument.findMany()
     * 
     * // Get first 10 SupplierDocuments
     * const supplierDocuments = await prisma.supplierDocument.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const supplierDocumentWithIdOnly = await prisma.supplierDocument.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SupplierDocumentFindManyArgs>(args?: SelectSubset<T, SupplierDocumentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplierDocumentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SupplierDocument.
     * @param {SupplierDocumentCreateArgs} args - Arguments to create a SupplierDocument.
     * @example
     * // Create one SupplierDocument
     * const SupplierDocument = await prisma.supplierDocument.create({
     *   data: {
     *     // ... data to create a SupplierDocument
     *   }
     * })
     * 
     */
    create<T extends SupplierDocumentCreateArgs>(args: SelectSubset<T, SupplierDocumentCreateArgs<ExtArgs>>): Prisma__SupplierDocumentClient<$Result.GetResult<Prisma.$SupplierDocumentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SupplierDocuments.
     * @param {SupplierDocumentCreateManyArgs} args - Arguments to create many SupplierDocuments.
     * @example
     * // Create many SupplierDocuments
     * const supplierDocument = await prisma.supplierDocument.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SupplierDocumentCreateManyArgs>(args?: SelectSubset<T, SupplierDocumentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SupplierDocuments and returns the data saved in the database.
     * @param {SupplierDocumentCreateManyAndReturnArgs} args - Arguments to create many SupplierDocuments.
     * @example
     * // Create many SupplierDocuments
     * const supplierDocument = await prisma.supplierDocument.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SupplierDocuments and only return the `id`
     * const supplierDocumentWithIdOnly = await prisma.supplierDocument.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SupplierDocumentCreateManyAndReturnArgs>(args?: SelectSubset<T, SupplierDocumentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplierDocumentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SupplierDocument.
     * @param {SupplierDocumentDeleteArgs} args - Arguments to delete one SupplierDocument.
     * @example
     * // Delete one SupplierDocument
     * const SupplierDocument = await prisma.supplierDocument.delete({
     *   where: {
     *     // ... filter to delete one SupplierDocument
     *   }
     * })
     * 
     */
    delete<T extends SupplierDocumentDeleteArgs>(args: SelectSubset<T, SupplierDocumentDeleteArgs<ExtArgs>>): Prisma__SupplierDocumentClient<$Result.GetResult<Prisma.$SupplierDocumentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SupplierDocument.
     * @param {SupplierDocumentUpdateArgs} args - Arguments to update one SupplierDocument.
     * @example
     * // Update one SupplierDocument
     * const supplierDocument = await prisma.supplierDocument.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SupplierDocumentUpdateArgs>(args: SelectSubset<T, SupplierDocumentUpdateArgs<ExtArgs>>): Prisma__SupplierDocumentClient<$Result.GetResult<Prisma.$SupplierDocumentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SupplierDocuments.
     * @param {SupplierDocumentDeleteManyArgs} args - Arguments to filter SupplierDocuments to delete.
     * @example
     * // Delete a few SupplierDocuments
     * const { count } = await prisma.supplierDocument.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SupplierDocumentDeleteManyArgs>(args?: SelectSubset<T, SupplierDocumentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SupplierDocuments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierDocumentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SupplierDocuments
     * const supplierDocument = await prisma.supplierDocument.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SupplierDocumentUpdateManyArgs>(args: SelectSubset<T, SupplierDocumentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SupplierDocuments and returns the data updated in the database.
     * @param {SupplierDocumentUpdateManyAndReturnArgs} args - Arguments to update many SupplierDocuments.
     * @example
     * // Update many SupplierDocuments
     * const supplierDocument = await prisma.supplierDocument.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SupplierDocuments and only return the `id`
     * const supplierDocumentWithIdOnly = await prisma.supplierDocument.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SupplierDocumentUpdateManyAndReturnArgs>(args: SelectSubset<T, SupplierDocumentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplierDocumentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SupplierDocument.
     * @param {SupplierDocumentUpsertArgs} args - Arguments to update or create a SupplierDocument.
     * @example
     * // Update or create a SupplierDocument
     * const supplierDocument = await prisma.supplierDocument.upsert({
     *   create: {
     *     // ... data to create a SupplierDocument
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SupplierDocument we want to update
     *   }
     * })
     */
    upsert<T extends SupplierDocumentUpsertArgs>(args: SelectSubset<T, SupplierDocumentUpsertArgs<ExtArgs>>): Prisma__SupplierDocumentClient<$Result.GetResult<Prisma.$SupplierDocumentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SupplierDocuments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierDocumentCountArgs} args - Arguments to filter SupplierDocuments to count.
     * @example
     * // Count the number of SupplierDocuments
     * const count = await prisma.supplierDocument.count({
     *   where: {
     *     // ... the filter for the SupplierDocuments we want to count
     *   }
     * })
    **/
    count<T extends SupplierDocumentCountArgs>(
      args?: Subset<T, SupplierDocumentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SupplierDocumentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SupplierDocument.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierDocumentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SupplierDocumentAggregateArgs>(args: Subset<T, SupplierDocumentAggregateArgs>): Prisma.PrismaPromise<GetSupplierDocumentAggregateType<T>>

    /**
     * Group by SupplierDocument.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierDocumentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SupplierDocumentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SupplierDocumentGroupByArgs['orderBy'] }
        : { orderBy?: SupplierDocumentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SupplierDocumentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSupplierDocumentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SupplierDocument model
   */
  readonly fields: SupplierDocumentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SupplierDocument.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SupplierDocumentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    supplier<T extends SupplierDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SupplierDefaultArgs<ExtArgs>>): Prisma__SupplierClient<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SupplierDocument model
   */
  interface SupplierDocumentFieldRefs {
    readonly id: FieldRef<"SupplierDocument", 'String'>
    readonly supplierId: FieldRef<"SupplierDocument", 'String'>
    readonly name: FieldRef<"SupplierDocument", 'String'>
    readonly type: FieldRef<"SupplierDocument", 'DocumentType'>
    readonly category: FieldRef<"SupplierDocument", 'String'>
    readonly fileName: FieldRef<"SupplierDocument", 'String'>
    readonly fileSize: FieldRef<"SupplierDocument", 'Int'>
    readonly fileType: FieldRef<"SupplierDocument", 'String'>
    readonly filePath: FieldRef<"SupplierDocument", 'String'>
    readonly uploadedBy: FieldRef<"SupplierDocument", 'String'>
    readonly uploadedAt: FieldRef<"SupplierDocument", 'DateTime'>
    readonly expiresAt: FieldRef<"SupplierDocument", 'DateTime'>
    readonly isActive: FieldRef<"SupplierDocument", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * SupplierDocument findUnique
   */
  export type SupplierDocumentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierDocument
     */
    select?: SupplierDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierDocument
     */
    omit?: SupplierDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierDocumentInclude<ExtArgs> | null
    /**
     * Filter, which SupplierDocument to fetch.
     */
    where: SupplierDocumentWhereUniqueInput
  }

  /**
   * SupplierDocument findUniqueOrThrow
   */
  export type SupplierDocumentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierDocument
     */
    select?: SupplierDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierDocument
     */
    omit?: SupplierDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierDocumentInclude<ExtArgs> | null
    /**
     * Filter, which SupplierDocument to fetch.
     */
    where: SupplierDocumentWhereUniqueInput
  }

  /**
   * SupplierDocument findFirst
   */
  export type SupplierDocumentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierDocument
     */
    select?: SupplierDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierDocument
     */
    omit?: SupplierDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierDocumentInclude<ExtArgs> | null
    /**
     * Filter, which SupplierDocument to fetch.
     */
    where?: SupplierDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplierDocuments to fetch.
     */
    orderBy?: SupplierDocumentOrderByWithRelationInput | SupplierDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SupplierDocuments.
     */
    cursor?: SupplierDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplierDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplierDocuments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SupplierDocuments.
     */
    distinct?: SupplierDocumentScalarFieldEnum | SupplierDocumentScalarFieldEnum[]
  }

  /**
   * SupplierDocument findFirstOrThrow
   */
  export type SupplierDocumentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierDocument
     */
    select?: SupplierDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierDocument
     */
    omit?: SupplierDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierDocumentInclude<ExtArgs> | null
    /**
     * Filter, which SupplierDocument to fetch.
     */
    where?: SupplierDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplierDocuments to fetch.
     */
    orderBy?: SupplierDocumentOrderByWithRelationInput | SupplierDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SupplierDocuments.
     */
    cursor?: SupplierDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplierDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplierDocuments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SupplierDocuments.
     */
    distinct?: SupplierDocumentScalarFieldEnum | SupplierDocumentScalarFieldEnum[]
  }

  /**
   * SupplierDocument findMany
   */
  export type SupplierDocumentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierDocument
     */
    select?: SupplierDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierDocument
     */
    omit?: SupplierDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierDocumentInclude<ExtArgs> | null
    /**
     * Filter, which SupplierDocuments to fetch.
     */
    where?: SupplierDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplierDocuments to fetch.
     */
    orderBy?: SupplierDocumentOrderByWithRelationInput | SupplierDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SupplierDocuments.
     */
    cursor?: SupplierDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplierDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplierDocuments.
     */
    skip?: number
    distinct?: SupplierDocumentScalarFieldEnum | SupplierDocumentScalarFieldEnum[]
  }

  /**
   * SupplierDocument create
   */
  export type SupplierDocumentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierDocument
     */
    select?: SupplierDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierDocument
     */
    omit?: SupplierDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierDocumentInclude<ExtArgs> | null
    /**
     * The data needed to create a SupplierDocument.
     */
    data: XOR<SupplierDocumentCreateInput, SupplierDocumentUncheckedCreateInput>
  }

  /**
   * SupplierDocument createMany
   */
  export type SupplierDocumentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SupplierDocuments.
     */
    data: SupplierDocumentCreateManyInput | SupplierDocumentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SupplierDocument createManyAndReturn
   */
  export type SupplierDocumentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierDocument
     */
    select?: SupplierDocumentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierDocument
     */
    omit?: SupplierDocumentOmit<ExtArgs> | null
    /**
     * The data used to create many SupplierDocuments.
     */
    data: SupplierDocumentCreateManyInput | SupplierDocumentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierDocumentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SupplierDocument update
   */
  export type SupplierDocumentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierDocument
     */
    select?: SupplierDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierDocument
     */
    omit?: SupplierDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierDocumentInclude<ExtArgs> | null
    /**
     * The data needed to update a SupplierDocument.
     */
    data: XOR<SupplierDocumentUpdateInput, SupplierDocumentUncheckedUpdateInput>
    /**
     * Choose, which SupplierDocument to update.
     */
    where: SupplierDocumentWhereUniqueInput
  }

  /**
   * SupplierDocument updateMany
   */
  export type SupplierDocumentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SupplierDocuments.
     */
    data: XOR<SupplierDocumentUpdateManyMutationInput, SupplierDocumentUncheckedUpdateManyInput>
    /**
     * Filter which SupplierDocuments to update
     */
    where?: SupplierDocumentWhereInput
    /**
     * Limit how many SupplierDocuments to update.
     */
    limit?: number
  }

  /**
   * SupplierDocument updateManyAndReturn
   */
  export type SupplierDocumentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierDocument
     */
    select?: SupplierDocumentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierDocument
     */
    omit?: SupplierDocumentOmit<ExtArgs> | null
    /**
     * The data used to update SupplierDocuments.
     */
    data: XOR<SupplierDocumentUpdateManyMutationInput, SupplierDocumentUncheckedUpdateManyInput>
    /**
     * Filter which SupplierDocuments to update
     */
    where?: SupplierDocumentWhereInput
    /**
     * Limit how many SupplierDocuments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierDocumentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SupplierDocument upsert
   */
  export type SupplierDocumentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierDocument
     */
    select?: SupplierDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierDocument
     */
    omit?: SupplierDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierDocumentInclude<ExtArgs> | null
    /**
     * The filter to search for the SupplierDocument to update in case it exists.
     */
    where: SupplierDocumentWhereUniqueInput
    /**
     * In case the SupplierDocument found by the `where` argument doesn't exist, create a new SupplierDocument with this data.
     */
    create: XOR<SupplierDocumentCreateInput, SupplierDocumentUncheckedCreateInput>
    /**
     * In case the SupplierDocument was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SupplierDocumentUpdateInput, SupplierDocumentUncheckedUpdateInput>
  }

  /**
   * SupplierDocument delete
   */
  export type SupplierDocumentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierDocument
     */
    select?: SupplierDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierDocument
     */
    omit?: SupplierDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierDocumentInclude<ExtArgs> | null
    /**
     * Filter which SupplierDocument to delete.
     */
    where: SupplierDocumentWhereUniqueInput
  }

  /**
   * SupplierDocument deleteMany
   */
  export type SupplierDocumentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SupplierDocuments to delete
     */
    where?: SupplierDocumentWhereInput
    /**
     * Limit how many SupplierDocuments to delete.
     */
    limit?: number
  }

  /**
   * SupplierDocument without action
   */
  export type SupplierDocumentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierDocument
     */
    select?: SupplierDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierDocument
     */
    omit?: SupplierDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierDocumentInclude<ExtArgs> | null
  }


  /**
   * Model PurchaseOrder
   */

  export type AggregatePurchaseOrder = {
    _count: PurchaseOrderCountAggregateOutputType | null
    _avg: PurchaseOrderAvgAggregateOutputType | null
    _sum: PurchaseOrderSumAggregateOutputType | null
    _min: PurchaseOrderMinAggregateOutputType | null
    _max: PurchaseOrderMaxAggregateOutputType | null
  }

  export type PurchaseOrderAvgAggregateOutputType = {
    subtotal: Decimal | null
    taxAmount: Decimal | null
    shippingCost: Decimal | null
    discountAmount: Decimal | null
    totalAmount: Decimal | null
  }

  export type PurchaseOrderSumAggregateOutputType = {
    subtotal: Decimal | null
    taxAmount: Decimal | null
    shippingCost: Decimal | null
    discountAmount: Decimal | null
    totalAmount: Decimal | null
  }

  export type PurchaseOrderMinAggregateOutputType = {
    id: string | null
    orderNumber: string | null
    supplierId: string | null
    warehouseId: string | null
    subtotal: Decimal | null
    taxAmount: Decimal | null
    shippingCost: Decimal | null
    discountAmount: Decimal | null
    totalAmount: Decimal | null
    currency: string | null
    status: $Enums.PurchaseOrderStatus | null
    orderDate: Date | null
    expectedDate: Date | null
    deliveryDate: Date | null
    paymentTerms: string | null
    shippingTerms: string | null
    trackingNumber: string | null
    carrier: string | null
    approvedBy: string | null
    approvedAt: Date | null
    notes: string | null
    internalNotes: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
  }

  export type PurchaseOrderMaxAggregateOutputType = {
    id: string | null
    orderNumber: string | null
    supplierId: string | null
    warehouseId: string | null
    subtotal: Decimal | null
    taxAmount: Decimal | null
    shippingCost: Decimal | null
    discountAmount: Decimal | null
    totalAmount: Decimal | null
    currency: string | null
    status: $Enums.PurchaseOrderStatus | null
    orderDate: Date | null
    expectedDate: Date | null
    deliveryDate: Date | null
    paymentTerms: string | null
    shippingTerms: string | null
    trackingNumber: string | null
    carrier: string | null
    approvedBy: string | null
    approvedAt: Date | null
    notes: string | null
    internalNotes: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
  }

  export type PurchaseOrderCountAggregateOutputType = {
    id: number
    orderNumber: number
    supplierId: number
    warehouseId: number
    subtotal: number
    taxAmount: number
    shippingCost: number
    discountAmount: number
    totalAmount: number
    currency: number
    status: number
    orderDate: number
    expectedDate: number
    deliveryDate: number
    paymentTerms: number
    shippingTerms: number
    trackingNumber: number
    carrier: number
    approvedBy: number
    approvedAt: number
    notes: number
    internalNotes: number
    createdAt: number
    updatedAt: number
    createdBy: number
    _all: number
  }


  export type PurchaseOrderAvgAggregateInputType = {
    subtotal?: true
    taxAmount?: true
    shippingCost?: true
    discountAmount?: true
    totalAmount?: true
  }

  export type PurchaseOrderSumAggregateInputType = {
    subtotal?: true
    taxAmount?: true
    shippingCost?: true
    discountAmount?: true
    totalAmount?: true
  }

  export type PurchaseOrderMinAggregateInputType = {
    id?: true
    orderNumber?: true
    supplierId?: true
    warehouseId?: true
    subtotal?: true
    taxAmount?: true
    shippingCost?: true
    discountAmount?: true
    totalAmount?: true
    currency?: true
    status?: true
    orderDate?: true
    expectedDate?: true
    deliveryDate?: true
    paymentTerms?: true
    shippingTerms?: true
    trackingNumber?: true
    carrier?: true
    approvedBy?: true
    approvedAt?: true
    notes?: true
    internalNotes?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
  }

  export type PurchaseOrderMaxAggregateInputType = {
    id?: true
    orderNumber?: true
    supplierId?: true
    warehouseId?: true
    subtotal?: true
    taxAmount?: true
    shippingCost?: true
    discountAmount?: true
    totalAmount?: true
    currency?: true
    status?: true
    orderDate?: true
    expectedDate?: true
    deliveryDate?: true
    paymentTerms?: true
    shippingTerms?: true
    trackingNumber?: true
    carrier?: true
    approvedBy?: true
    approvedAt?: true
    notes?: true
    internalNotes?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
  }

  export type PurchaseOrderCountAggregateInputType = {
    id?: true
    orderNumber?: true
    supplierId?: true
    warehouseId?: true
    subtotal?: true
    taxAmount?: true
    shippingCost?: true
    discountAmount?: true
    totalAmount?: true
    currency?: true
    status?: true
    orderDate?: true
    expectedDate?: true
    deliveryDate?: true
    paymentTerms?: true
    shippingTerms?: true
    trackingNumber?: true
    carrier?: true
    approvedBy?: true
    approvedAt?: true
    notes?: true
    internalNotes?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    _all?: true
  }

  export type PurchaseOrderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PurchaseOrder to aggregate.
     */
    where?: PurchaseOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PurchaseOrders to fetch.
     */
    orderBy?: PurchaseOrderOrderByWithRelationInput | PurchaseOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PurchaseOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PurchaseOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PurchaseOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PurchaseOrders
    **/
    _count?: true | PurchaseOrderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PurchaseOrderAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PurchaseOrderSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PurchaseOrderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PurchaseOrderMaxAggregateInputType
  }

  export type GetPurchaseOrderAggregateType<T extends PurchaseOrderAggregateArgs> = {
        [P in keyof T & keyof AggregatePurchaseOrder]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePurchaseOrder[P]>
      : GetScalarType<T[P], AggregatePurchaseOrder[P]>
  }




  export type PurchaseOrderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PurchaseOrderWhereInput
    orderBy?: PurchaseOrderOrderByWithAggregationInput | PurchaseOrderOrderByWithAggregationInput[]
    by: PurchaseOrderScalarFieldEnum[] | PurchaseOrderScalarFieldEnum
    having?: PurchaseOrderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PurchaseOrderCountAggregateInputType | true
    _avg?: PurchaseOrderAvgAggregateInputType
    _sum?: PurchaseOrderSumAggregateInputType
    _min?: PurchaseOrderMinAggregateInputType
    _max?: PurchaseOrderMaxAggregateInputType
  }

  export type PurchaseOrderGroupByOutputType = {
    id: string
    orderNumber: string
    supplierId: string
    warehouseId: string | null
    subtotal: Decimal
    taxAmount: Decimal
    shippingCost: Decimal
    discountAmount: Decimal
    totalAmount: Decimal
    currency: string
    status: $Enums.PurchaseOrderStatus
    orderDate: Date
    expectedDate: Date | null
    deliveryDate: Date | null
    paymentTerms: string | null
    shippingTerms: string | null
    trackingNumber: string | null
    carrier: string | null
    approvedBy: string | null
    approvedAt: Date | null
    notes: string | null
    internalNotes: string | null
    createdAt: Date
    updatedAt: Date
    createdBy: string
    _count: PurchaseOrderCountAggregateOutputType | null
    _avg: PurchaseOrderAvgAggregateOutputType | null
    _sum: PurchaseOrderSumAggregateOutputType | null
    _min: PurchaseOrderMinAggregateOutputType | null
    _max: PurchaseOrderMaxAggregateOutputType | null
  }

  type GetPurchaseOrderGroupByPayload<T extends PurchaseOrderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PurchaseOrderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PurchaseOrderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PurchaseOrderGroupByOutputType[P]>
            : GetScalarType<T[P], PurchaseOrderGroupByOutputType[P]>
        }
      >
    >


  export type PurchaseOrderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderNumber?: boolean
    supplierId?: boolean
    warehouseId?: boolean
    subtotal?: boolean
    taxAmount?: boolean
    shippingCost?: boolean
    discountAmount?: boolean
    totalAmount?: boolean
    currency?: boolean
    status?: boolean
    orderDate?: boolean
    expectedDate?: boolean
    deliveryDate?: boolean
    paymentTerms?: boolean
    shippingTerms?: boolean
    trackingNumber?: boolean
    carrier?: boolean
    approvedBy?: boolean
    approvedAt?: boolean
    notes?: boolean
    internalNotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    supplier?: boolean | SupplierDefaultArgs<ExtArgs>
    warehouse?: boolean | PurchaseOrder$warehouseArgs<ExtArgs>
    items?: boolean | PurchaseOrder$itemsArgs<ExtArgs>
    receipts?: boolean | PurchaseOrder$receiptsArgs<ExtArgs>
    invoices?: boolean | PurchaseOrder$invoicesArgs<ExtArgs>
    _count?: boolean | PurchaseOrderCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["purchaseOrder"]>

  export type PurchaseOrderSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderNumber?: boolean
    supplierId?: boolean
    warehouseId?: boolean
    subtotal?: boolean
    taxAmount?: boolean
    shippingCost?: boolean
    discountAmount?: boolean
    totalAmount?: boolean
    currency?: boolean
    status?: boolean
    orderDate?: boolean
    expectedDate?: boolean
    deliveryDate?: boolean
    paymentTerms?: boolean
    shippingTerms?: boolean
    trackingNumber?: boolean
    carrier?: boolean
    approvedBy?: boolean
    approvedAt?: boolean
    notes?: boolean
    internalNotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    supplier?: boolean | SupplierDefaultArgs<ExtArgs>
    warehouse?: boolean | PurchaseOrder$warehouseArgs<ExtArgs>
  }, ExtArgs["result"]["purchaseOrder"]>

  export type PurchaseOrderSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderNumber?: boolean
    supplierId?: boolean
    warehouseId?: boolean
    subtotal?: boolean
    taxAmount?: boolean
    shippingCost?: boolean
    discountAmount?: boolean
    totalAmount?: boolean
    currency?: boolean
    status?: boolean
    orderDate?: boolean
    expectedDate?: boolean
    deliveryDate?: boolean
    paymentTerms?: boolean
    shippingTerms?: boolean
    trackingNumber?: boolean
    carrier?: boolean
    approvedBy?: boolean
    approvedAt?: boolean
    notes?: boolean
    internalNotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    supplier?: boolean | SupplierDefaultArgs<ExtArgs>
    warehouse?: boolean | PurchaseOrder$warehouseArgs<ExtArgs>
  }, ExtArgs["result"]["purchaseOrder"]>

  export type PurchaseOrderSelectScalar = {
    id?: boolean
    orderNumber?: boolean
    supplierId?: boolean
    warehouseId?: boolean
    subtotal?: boolean
    taxAmount?: boolean
    shippingCost?: boolean
    discountAmount?: boolean
    totalAmount?: boolean
    currency?: boolean
    status?: boolean
    orderDate?: boolean
    expectedDate?: boolean
    deliveryDate?: boolean
    paymentTerms?: boolean
    shippingTerms?: boolean
    trackingNumber?: boolean
    carrier?: boolean
    approvedBy?: boolean
    approvedAt?: boolean
    notes?: boolean
    internalNotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
  }

  export type PurchaseOrderOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "orderNumber" | "supplierId" | "warehouseId" | "subtotal" | "taxAmount" | "shippingCost" | "discountAmount" | "totalAmount" | "currency" | "status" | "orderDate" | "expectedDate" | "deliveryDate" | "paymentTerms" | "shippingTerms" | "trackingNumber" | "carrier" | "approvedBy" | "approvedAt" | "notes" | "internalNotes" | "createdAt" | "updatedAt" | "createdBy", ExtArgs["result"]["purchaseOrder"]>
  export type PurchaseOrderInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supplier?: boolean | SupplierDefaultArgs<ExtArgs>
    warehouse?: boolean | PurchaseOrder$warehouseArgs<ExtArgs>
    items?: boolean | PurchaseOrder$itemsArgs<ExtArgs>
    receipts?: boolean | PurchaseOrder$receiptsArgs<ExtArgs>
    invoices?: boolean | PurchaseOrder$invoicesArgs<ExtArgs>
    _count?: boolean | PurchaseOrderCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PurchaseOrderIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supplier?: boolean | SupplierDefaultArgs<ExtArgs>
    warehouse?: boolean | PurchaseOrder$warehouseArgs<ExtArgs>
  }
  export type PurchaseOrderIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supplier?: boolean | SupplierDefaultArgs<ExtArgs>
    warehouse?: boolean | PurchaseOrder$warehouseArgs<ExtArgs>
  }

  export type $PurchaseOrderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PurchaseOrder"
    objects: {
      supplier: Prisma.$SupplierPayload<ExtArgs>
      warehouse: Prisma.$WarehousePayload<ExtArgs> | null
      items: Prisma.$PurchaseOrderItemPayload<ExtArgs>[]
      receipts: Prisma.$GoodsReceiptPayload<ExtArgs>[]
      invoices: Prisma.$SupplierInvoicePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      orderNumber: string
      supplierId: string
      warehouseId: string | null
      subtotal: Prisma.Decimal
      taxAmount: Prisma.Decimal
      shippingCost: Prisma.Decimal
      discountAmount: Prisma.Decimal
      totalAmount: Prisma.Decimal
      currency: string
      status: $Enums.PurchaseOrderStatus
      orderDate: Date
      expectedDate: Date | null
      deliveryDate: Date | null
      paymentTerms: string | null
      shippingTerms: string | null
      trackingNumber: string | null
      carrier: string | null
      approvedBy: string | null
      approvedAt: Date | null
      notes: string | null
      internalNotes: string | null
      createdAt: Date
      updatedAt: Date
      createdBy: string
    }, ExtArgs["result"]["purchaseOrder"]>
    composites: {}
  }

  type PurchaseOrderGetPayload<S extends boolean | null | undefined | PurchaseOrderDefaultArgs> = $Result.GetResult<Prisma.$PurchaseOrderPayload, S>

  type PurchaseOrderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PurchaseOrderFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PurchaseOrderCountAggregateInputType | true
    }

  export interface PurchaseOrderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PurchaseOrder'], meta: { name: 'PurchaseOrder' } }
    /**
     * Find zero or one PurchaseOrder that matches the filter.
     * @param {PurchaseOrderFindUniqueArgs} args - Arguments to find a PurchaseOrder
     * @example
     * // Get one PurchaseOrder
     * const purchaseOrder = await prisma.purchaseOrder.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PurchaseOrderFindUniqueArgs>(args: SelectSubset<T, PurchaseOrderFindUniqueArgs<ExtArgs>>): Prisma__PurchaseOrderClient<$Result.GetResult<Prisma.$PurchaseOrderPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PurchaseOrder that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PurchaseOrderFindUniqueOrThrowArgs} args - Arguments to find a PurchaseOrder
     * @example
     * // Get one PurchaseOrder
     * const purchaseOrder = await prisma.purchaseOrder.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PurchaseOrderFindUniqueOrThrowArgs>(args: SelectSubset<T, PurchaseOrderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PurchaseOrderClient<$Result.GetResult<Prisma.$PurchaseOrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PurchaseOrder that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PurchaseOrderFindFirstArgs} args - Arguments to find a PurchaseOrder
     * @example
     * // Get one PurchaseOrder
     * const purchaseOrder = await prisma.purchaseOrder.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PurchaseOrderFindFirstArgs>(args?: SelectSubset<T, PurchaseOrderFindFirstArgs<ExtArgs>>): Prisma__PurchaseOrderClient<$Result.GetResult<Prisma.$PurchaseOrderPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PurchaseOrder that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PurchaseOrderFindFirstOrThrowArgs} args - Arguments to find a PurchaseOrder
     * @example
     * // Get one PurchaseOrder
     * const purchaseOrder = await prisma.purchaseOrder.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PurchaseOrderFindFirstOrThrowArgs>(args?: SelectSubset<T, PurchaseOrderFindFirstOrThrowArgs<ExtArgs>>): Prisma__PurchaseOrderClient<$Result.GetResult<Prisma.$PurchaseOrderPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PurchaseOrders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PurchaseOrderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PurchaseOrders
     * const purchaseOrders = await prisma.purchaseOrder.findMany()
     * 
     * // Get first 10 PurchaseOrders
     * const purchaseOrders = await prisma.purchaseOrder.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const purchaseOrderWithIdOnly = await prisma.purchaseOrder.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PurchaseOrderFindManyArgs>(args?: SelectSubset<T, PurchaseOrderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PurchaseOrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PurchaseOrder.
     * @param {PurchaseOrderCreateArgs} args - Arguments to create a PurchaseOrder.
     * @example
     * // Create one PurchaseOrder
     * const PurchaseOrder = await prisma.purchaseOrder.create({
     *   data: {
     *     // ... data to create a PurchaseOrder
     *   }
     * })
     * 
     */
    create<T extends PurchaseOrderCreateArgs>(args: SelectSubset<T, PurchaseOrderCreateArgs<ExtArgs>>): Prisma__PurchaseOrderClient<$Result.GetResult<Prisma.$PurchaseOrderPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PurchaseOrders.
     * @param {PurchaseOrderCreateManyArgs} args - Arguments to create many PurchaseOrders.
     * @example
     * // Create many PurchaseOrders
     * const purchaseOrder = await prisma.purchaseOrder.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PurchaseOrderCreateManyArgs>(args?: SelectSubset<T, PurchaseOrderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PurchaseOrders and returns the data saved in the database.
     * @param {PurchaseOrderCreateManyAndReturnArgs} args - Arguments to create many PurchaseOrders.
     * @example
     * // Create many PurchaseOrders
     * const purchaseOrder = await prisma.purchaseOrder.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PurchaseOrders and only return the `id`
     * const purchaseOrderWithIdOnly = await prisma.purchaseOrder.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PurchaseOrderCreateManyAndReturnArgs>(args?: SelectSubset<T, PurchaseOrderCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PurchaseOrderPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PurchaseOrder.
     * @param {PurchaseOrderDeleteArgs} args - Arguments to delete one PurchaseOrder.
     * @example
     * // Delete one PurchaseOrder
     * const PurchaseOrder = await prisma.purchaseOrder.delete({
     *   where: {
     *     // ... filter to delete one PurchaseOrder
     *   }
     * })
     * 
     */
    delete<T extends PurchaseOrderDeleteArgs>(args: SelectSubset<T, PurchaseOrderDeleteArgs<ExtArgs>>): Prisma__PurchaseOrderClient<$Result.GetResult<Prisma.$PurchaseOrderPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PurchaseOrder.
     * @param {PurchaseOrderUpdateArgs} args - Arguments to update one PurchaseOrder.
     * @example
     * // Update one PurchaseOrder
     * const purchaseOrder = await prisma.purchaseOrder.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PurchaseOrderUpdateArgs>(args: SelectSubset<T, PurchaseOrderUpdateArgs<ExtArgs>>): Prisma__PurchaseOrderClient<$Result.GetResult<Prisma.$PurchaseOrderPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PurchaseOrders.
     * @param {PurchaseOrderDeleteManyArgs} args - Arguments to filter PurchaseOrders to delete.
     * @example
     * // Delete a few PurchaseOrders
     * const { count } = await prisma.purchaseOrder.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PurchaseOrderDeleteManyArgs>(args?: SelectSubset<T, PurchaseOrderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PurchaseOrders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PurchaseOrderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PurchaseOrders
     * const purchaseOrder = await prisma.purchaseOrder.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PurchaseOrderUpdateManyArgs>(args: SelectSubset<T, PurchaseOrderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PurchaseOrders and returns the data updated in the database.
     * @param {PurchaseOrderUpdateManyAndReturnArgs} args - Arguments to update many PurchaseOrders.
     * @example
     * // Update many PurchaseOrders
     * const purchaseOrder = await prisma.purchaseOrder.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PurchaseOrders and only return the `id`
     * const purchaseOrderWithIdOnly = await prisma.purchaseOrder.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PurchaseOrderUpdateManyAndReturnArgs>(args: SelectSubset<T, PurchaseOrderUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PurchaseOrderPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PurchaseOrder.
     * @param {PurchaseOrderUpsertArgs} args - Arguments to update or create a PurchaseOrder.
     * @example
     * // Update or create a PurchaseOrder
     * const purchaseOrder = await prisma.purchaseOrder.upsert({
     *   create: {
     *     // ... data to create a PurchaseOrder
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PurchaseOrder we want to update
     *   }
     * })
     */
    upsert<T extends PurchaseOrderUpsertArgs>(args: SelectSubset<T, PurchaseOrderUpsertArgs<ExtArgs>>): Prisma__PurchaseOrderClient<$Result.GetResult<Prisma.$PurchaseOrderPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PurchaseOrders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PurchaseOrderCountArgs} args - Arguments to filter PurchaseOrders to count.
     * @example
     * // Count the number of PurchaseOrders
     * const count = await prisma.purchaseOrder.count({
     *   where: {
     *     // ... the filter for the PurchaseOrders we want to count
     *   }
     * })
    **/
    count<T extends PurchaseOrderCountArgs>(
      args?: Subset<T, PurchaseOrderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PurchaseOrderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PurchaseOrder.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PurchaseOrderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PurchaseOrderAggregateArgs>(args: Subset<T, PurchaseOrderAggregateArgs>): Prisma.PrismaPromise<GetPurchaseOrderAggregateType<T>>

    /**
     * Group by PurchaseOrder.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PurchaseOrderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PurchaseOrderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PurchaseOrderGroupByArgs['orderBy'] }
        : { orderBy?: PurchaseOrderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PurchaseOrderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPurchaseOrderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PurchaseOrder model
   */
  readonly fields: PurchaseOrderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PurchaseOrder.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PurchaseOrderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    supplier<T extends SupplierDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SupplierDefaultArgs<ExtArgs>>): Prisma__SupplierClient<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    warehouse<T extends PurchaseOrder$warehouseArgs<ExtArgs> = {}>(args?: Subset<T, PurchaseOrder$warehouseArgs<ExtArgs>>): Prisma__WarehouseClient<$Result.GetResult<Prisma.$WarehousePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    items<T extends PurchaseOrder$itemsArgs<ExtArgs> = {}>(args?: Subset<T, PurchaseOrder$itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    receipts<T extends PurchaseOrder$receiptsArgs<ExtArgs> = {}>(args?: Subset<T, PurchaseOrder$receiptsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GoodsReceiptPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    invoices<T extends PurchaseOrder$invoicesArgs<ExtArgs> = {}>(args?: Subset<T, PurchaseOrder$invoicesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplierInvoicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PurchaseOrder model
   */
  interface PurchaseOrderFieldRefs {
    readonly id: FieldRef<"PurchaseOrder", 'String'>
    readonly orderNumber: FieldRef<"PurchaseOrder", 'String'>
    readonly supplierId: FieldRef<"PurchaseOrder", 'String'>
    readonly warehouseId: FieldRef<"PurchaseOrder", 'String'>
    readonly subtotal: FieldRef<"PurchaseOrder", 'Decimal'>
    readonly taxAmount: FieldRef<"PurchaseOrder", 'Decimal'>
    readonly shippingCost: FieldRef<"PurchaseOrder", 'Decimal'>
    readonly discountAmount: FieldRef<"PurchaseOrder", 'Decimal'>
    readonly totalAmount: FieldRef<"PurchaseOrder", 'Decimal'>
    readonly currency: FieldRef<"PurchaseOrder", 'String'>
    readonly status: FieldRef<"PurchaseOrder", 'PurchaseOrderStatus'>
    readonly orderDate: FieldRef<"PurchaseOrder", 'DateTime'>
    readonly expectedDate: FieldRef<"PurchaseOrder", 'DateTime'>
    readonly deliveryDate: FieldRef<"PurchaseOrder", 'DateTime'>
    readonly paymentTerms: FieldRef<"PurchaseOrder", 'String'>
    readonly shippingTerms: FieldRef<"PurchaseOrder", 'String'>
    readonly trackingNumber: FieldRef<"PurchaseOrder", 'String'>
    readonly carrier: FieldRef<"PurchaseOrder", 'String'>
    readonly approvedBy: FieldRef<"PurchaseOrder", 'String'>
    readonly approvedAt: FieldRef<"PurchaseOrder", 'DateTime'>
    readonly notes: FieldRef<"PurchaseOrder", 'String'>
    readonly internalNotes: FieldRef<"PurchaseOrder", 'String'>
    readonly createdAt: FieldRef<"PurchaseOrder", 'DateTime'>
    readonly updatedAt: FieldRef<"PurchaseOrder", 'DateTime'>
    readonly createdBy: FieldRef<"PurchaseOrder", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PurchaseOrder findUnique
   */
  export type PurchaseOrderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrder
     */
    select?: PurchaseOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrder
     */
    omit?: PurchaseOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderInclude<ExtArgs> | null
    /**
     * Filter, which PurchaseOrder to fetch.
     */
    where: PurchaseOrderWhereUniqueInput
  }

  /**
   * PurchaseOrder findUniqueOrThrow
   */
  export type PurchaseOrderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrder
     */
    select?: PurchaseOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrder
     */
    omit?: PurchaseOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderInclude<ExtArgs> | null
    /**
     * Filter, which PurchaseOrder to fetch.
     */
    where: PurchaseOrderWhereUniqueInput
  }

  /**
   * PurchaseOrder findFirst
   */
  export type PurchaseOrderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrder
     */
    select?: PurchaseOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrder
     */
    omit?: PurchaseOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderInclude<ExtArgs> | null
    /**
     * Filter, which PurchaseOrder to fetch.
     */
    where?: PurchaseOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PurchaseOrders to fetch.
     */
    orderBy?: PurchaseOrderOrderByWithRelationInput | PurchaseOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PurchaseOrders.
     */
    cursor?: PurchaseOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PurchaseOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PurchaseOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PurchaseOrders.
     */
    distinct?: PurchaseOrderScalarFieldEnum | PurchaseOrderScalarFieldEnum[]
  }

  /**
   * PurchaseOrder findFirstOrThrow
   */
  export type PurchaseOrderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrder
     */
    select?: PurchaseOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrder
     */
    omit?: PurchaseOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderInclude<ExtArgs> | null
    /**
     * Filter, which PurchaseOrder to fetch.
     */
    where?: PurchaseOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PurchaseOrders to fetch.
     */
    orderBy?: PurchaseOrderOrderByWithRelationInput | PurchaseOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PurchaseOrders.
     */
    cursor?: PurchaseOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PurchaseOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PurchaseOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PurchaseOrders.
     */
    distinct?: PurchaseOrderScalarFieldEnum | PurchaseOrderScalarFieldEnum[]
  }

  /**
   * PurchaseOrder findMany
   */
  export type PurchaseOrderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrder
     */
    select?: PurchaseOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrder
     */
    omit?: PurchaseOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderInclude<ExtArgs> | null
    /**
     * Filter, which PurchaseOrders to fetch.
     */
    where?: PurchaseOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PurchaseOrders to fetch.
     */
    orderBy?: PurchaseOrderOrderByWithRelationInput | PurchaseOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PurchaseOrders.
     */
    cursor?: PurchaseOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PurchaseOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PurchaseOrders.
     */
    skip?: number
    distinct?: PurchaseOrderScalarFieldEnum | PurchaseOrderScalarFieldEnum[]
  }

  /**
   * PurchaseOrder create
   */
  export type PurchaseOrderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrder
     */
    select?: PurchaseOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrder
     */
    omit?: PurchaseOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderInclude<ExtArgs> | null
    /**
     * The data needed to create a PurchaseOrder.
     */
    data: XOR<PurchaseOrderCreateInput, PurchaseOrderUncheckedCreateInput>
  }

  /**
   * PurchaseOrder createMany
   */
  export type PurchaseOrderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PurchaseOrders.
     */
    data: PurchaseOrderCreateManyInput | PurchaseOrderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PurchaseOrder createManyAndReturn
   */
  export type PurchaseOrderCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrder
     */
    select?: PurchaseOrderSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrder
     */
    omit?: PurchaseOrderOmit<ExtArgs> | null
    /**
     * The data used to create many PurchaseOrders.
     */
    data: PurchaseOrderCreateManyInput | PurchaseOrderCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PurchaseOrder update
   */
  export type PurchaseOrderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrder
     */
    select?: PurchaseOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrder
     */
    omit?: PurchaseOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderInclude<ExtArgs> | null
    /**
     * The data needed to update a PurchaseOrder.
     */
    data: XOR<PurchaseOrderUpdateInput, PurchaseOrderUncheckedUpdateInput>
    /**
     * Choose, which PurchaseOrder to update.
     */
    where: PurchaseOrderWhereUniqueInput
  }

  /**
   * PurchaseOrder updateMany
   */
  export type PurchaseOrderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PurchaseOrders.
     */
    data: XOR<PurchaseOrderUpdateManyMutationInput, PurchaseOrderUncheckedUpdateManyInput>
    /**
     * Filter which PurchaseOrders to update
     */
    where?: PurchaseOrderWhereInput
    /**
     * Limit how many PurchaseOrders to update.
     */
    limit?: number
  }

  /**
   * PurchaseOrder updateManyAndReturn
   */
  export type PurchaseOrderUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrder
     */
    select?: PurchaseOrderSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrder
     */
    omit?: PurchaseOrderOmit<ExtArgs> | null
    /**
     * The data used to update PurchaseOrders.
     */
    data: XOR<PurchaseOrderUpdateManyMutationInput, PurchaseOrderUncheckedUpdateManyInput>
    /**
     * Filter which PurchaseOrders to update
     */
    where?: PurchaseOrderWhereInput
    /**
     * Limit how many PurchaseOrders to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PurchaseOrder upsert
   */
  export type PurchaseOrderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrder
     */
    select?: PurchaseOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrder
     */
    omit?: PurchaseOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderInclude<ExtArgs> | null
    /**
     * The filter to search for the PurchaseOrder to update in case it exists.
     */
    where: PurchaseOrderWhereUniqueInput
    /**
     * In case the PurchaseOrder found by the `where` argument doesn't exist, create a new PurchaseOrder with this data.
     */
    create: XOR<PurchaseOrderCreateInput, PurchaseOrderUncheckedCreateInput>
    /**
     * In case the PurchaseOrder was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PurchaseOrderUpdateInput, PurchaseOrderUncheckedUpdateInput>
  }

  /**
   * PurchaseOrder delete
   */
  export type PurchaseOrderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrder
     */
    select?: PurchaseOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrder
     */
    omit?: PurchaseOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderInclude<ExtArgs> | null
    /**
     * Filter which PurchaseOrder to delete.
     */
    where: PurchaseOrderWhereUniqueInput
  }

  /**
   * PurchaseOrder deleteMany
   */
  export type PurchaseOrderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PurchaseOrders to delete
     */
    where?: PurchaseOrderWhereInput
    /**
     * Limit how many PurchaseOrders to delete.
     */
    limit?: number
  }

  /**
   * PurchaseOrder.warehouse
   */
  export type PurchaseOrder$warehouseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Warehouse
     */
    select?: WarehouseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Warehouse
     */
    omit?: WarehouseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WarehouseInclude<ExtArgs> | null
    where?: WarehouseWhereInput
  }

  /**
   * PurchaseOrder.items
   */
  export type PurchaseOrder$itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrderItem
     */
    select?: PurchaseOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrderItem
     */
    omit?: PurchaseOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderItemInclude<ExtArgs> | null
    where?: PurchaseOrderItemWhereInput
    orderBy?: PurchaseOrderItemOrderByWithRelationInput | PurchaseOrderItemOrderByWithRelationInput[]
    cursor?: PurchaseOrderItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PurchaseOrderItemScalarFieldEnum | PurchaseOrderItemScalarFieldEnum[]
  }

  /**
   * PurchaseOrder.receipts
   */
  export type PurchaseOrder$receiptsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoodsReceipt
     */
    select?: GoodsReceiptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GoodsReceipt
     */
    omit?: GoodsReceiptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoodsReceiptInclude<ExtArgs> | null
    where?: GoodsReceiptWhereInput
    orderBy?: GoodsReceiptOrderByWithRelationInput | GoodsReceiptOrderByWithRelationInput[]
    cursor?: GoodsReceiptWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GoodsReceiptScalarFieldEnum | GoodsReceiptScalarFieldEnum[]
  }

  /**
   * PurchaseOrder.invoices
   */
  export type PurchaseOrder$invoicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierInvoice
     */
    select?: SupplierInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierInvoice
     */
    omit?: SupplierInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInvoiceInclude<ExtArgs> | null
    where?: SupplierInvoiceWhereInput
    orderBy?: SupplierInvoiceOrderByWithRelationInput | SupplierInvoiceOrderByWithRelationInput[]
    cursor?: SupplierInvoiceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SupplierInvoiceScalarFieldEnum | SupplierInvoiceScalarFieldEnum[]
  }

  /**
   * PurchaseOrder without action
   */
  export type PurchaseOrderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrder
     */
    select?: PurchaseOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrder
     */
    omit?: PurchaseOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderInclude<ExtArgs> | null
  }


  /**
   * Model PurchaseOrderItem
   */

  export type AggregatePurchaseOrderItem = {
    _count: PurchaseOrderItemCountAggregateOutputType | null
    _avg: PurchaseOrderItemAvgAggregateOutputType | null
    _sum: PurchaseOrderItemSumAggregateOutputType | null
    _min: PurchaseOrderItemMinAggregateOutputType | null
    _max: PurchaseOrderItemMaxAggregateOutputType | null
  }

  export type PurchaseOrderItemAvgAggregateOutputType = {
    orderedQty: number | null
    receivedQty: number | null
    remainingQty: number | null
    unitCost: Decimal | null
    totalCost: Decimal | null
  }

  export type PurchaseOrderItemSumAggregateOutputType = {
    orderedQty: number | null
    receivedQty: number | null
    remainingQty: number | null
    unitCost: Decimal | null
    totalCost: Decimal | null
  }

  export type PurchaseOrderItemMinAggregateOutputType = {
    id: string | null
    purchaseOrderId: string | null
    productId: string | null
    variantId: string | null
    orderedQty: number | null
    receivedQty: number | null
    remainingQty: number | null
    unitCost: Decimal | null
    totalCost: Decimal | null
    productName: string | null
    productSku: string | null
    supplierSku: string | null
    expectedDate: Date | null
    status: $Enums.PurchaseItemStatus | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PurchaseOrderItemMaxAggregateOutputType = {
    id: string | null
    purchaseOrderId: string | null
    productId: string | null
    variantId: string | null
    orderedQty: number | null
    receivedQty: number | null
    remainingQty: number | null
    unitCost: Decimal | null
    totalCost: Decimal | null
    productName: string | null
    productSku: string | null
    supplierSku: string | null
    expectedDate: Date | null
    status: $Enums.PurchaseItemStatus | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PurchaseOrderItemCountAggregateOutputType = {
    id: number
    purchaseOrderId: number
    productId: number
    variantId: number
    orderedQty: number
    receivedQty: number
    remainingQty: number
    unitCost: number
    totalCost: number
    productName: number
    productSku: number
    supplierSku: number
    expectedDate: number
    status: number
    notes: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type PurchaseOrderItemAvgAggregateInputType = {
    orderedQty?: true
    receivedQty?: true
    remainingQty?: true
    unitCost?: true
    totalCost?: true
  }

  export type PurchaseOrderItemSumAggregateInputType = {
    orderedQty?: true
    receivedQty?: true
    remainingQty?: true
    unitCost?: true
    totalCost?: true
  }

  export type PurchaseOrderItemMinAggregateInputType = {
    id?: true
    purchaseOrderId?: true
    productId?: true
    variantId?: true
    orderedQty?: true
    receivedQty?: true
    remainingQty?: true
    unitCost?: true
    totalCost?: true
    productName?: true
    productSku?: true
    supplierSku?: true
    expectedDate?: true
    status?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PurchaseOrderItemMaxAggregateInputType = {
    id?: true
    purchaseOrderId?: true
    productId?: true
    variantId?: true
    orderedQty?: true
    receivedQty?: true
    remainingQty?: true
    unitCost?: true
    totalCost?: true
    productName?: true
    productSku?: true
    supplierSku?: true
    expectedDate?: true
    status?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PurchaseOrderItemCountAggregateInputType = {
    id?: true
    purchaseOrderId?: true
    productId?: true
    variantId?: true
    orderedQty?: true
    receivedQty?: true
    remainingQty?: true
    unitCost?: true
    totalCost?: true
    productName?: true
    productSku?: true
    supplierSku?: true
    expectedDate?: true
    status?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type PurchaseOrderItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PurchaseOrderItem to aggregate.
     */
    where?: PurchaseOrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PurchaseOrderItems to fetch.
     */
    orderBy?: PurchaseOrderItemOrderByWithRelationInput | PurchaseOrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PurchaseOrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PurchaseOrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PurchaseOrderItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PurchaseOrderItems
    **/
    _count?: true | PurchaseOrderItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PurchaseOrderItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PurchaseOrderItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PurchaseOrderItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PurchaseOrderItemMaxAggregateInputType
  }

  export type GetPurchaseOrderItemAggregateType<T extends PurchaseOrderItemAggregateArgs> = {
        [P in keyof T & keyof AggregatePurchaseOrderItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePurchaseOrderItem[P]>
      : GetScalarType<T[P], AggregatePurchaseOrderItem[P]>
  }




  export type PurchaseOrderItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PurchaseOrderItemWhereInput
    orderBy?: PurchaseOrderItemOrderByWithAggregationInput | PurchaseOrderItemOrderByWithAggregationInput[]
    by: PurchaseOrderItemScalarFieldEnum[] | PurchaseOrderItemScalarFieldEnum
    having?: PurchaseOrderItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PurchaseOrderItemCountAggregateInputType | true
    _avg?: PurchaseOrderItemAvgAggregateInputType
    _sum?: PurchaseOrderItemSumAggregateInputType
    _min?: PurchaseOrderItemMinAggregateInputType
    _max?: PurchaseOrderItemMaxAggregateInputType
  }

  export type PurchaseOrderItemGroupByOutputType = {
    id: string
    purchaseOrderId: string
    productId: string
    variantId: string | null
    orderedQty: number
    receivedQty: number
    remainingQty: number
    unitCost: Decimal
    totalCost: Decimal
    productName: string
    productSku: string
    supplierSku: string | null
    expectedDate: Date | null
    status: $Enums.PurchaseItemStatus
    notes: string | null
    createdAt: Date
    updatedAt: Date
    _count: PurchaseOrderItemCountAggregateOutputType | null
    _avg: PurchaseOrderItemAvgAggregateOutputType | null
    _sum: PurchaseOrderItemSumAggregateOutputType | null
    _min: PurchaseOrderItemMinAggregateOutputType | null
    _max: PurchaseOrderItemMaxAggregateOutputType | null
  }

  type GetPurchaseOrderItemGroupByPayload<T extends PurchaseOrderItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PurchaseOrderItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PurchaseOrderItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PurchaseOrderItemGroupByOutputType[P]>
            : GetScalarType<T[P], PurchaseOrderItemGroupByOutputType[P]>
        }
      >
    >


  export type PurchaseOrderItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    purchaseOrderId?: boolean
    productId?: boolean
    variantId?: boolean
    orderedQty?: boolean
    receivedQty?: boolean
    remainingQty?: boolean
    unitCost?: boolean
    totalCost?: boolean
    productName?: boolean
    productSku?: boolean
    supplierSku?: boolean
    expectedDate?: boolean
    status?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    purchaseOrder?: boolean | PurchaseOrderDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | PurchaseOrderItem$variantArgs<ExtArgs>
  }, ExtArgs["result"]["purchaseOrderItem"]>

  export type PurchaseOrderItemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    purchaseOrderId?: boolean
    productId?: boolean
    variantId?: boolean
    orderedQty?: boolean
    receivedQty?: boolean
    remainingQty?: boolean
    unitCost?: boolean
    totalCost?: boolean
    productName?: boolean
    productSku?: boolean
    supplierSku?: boolean
    expectedDate?: boolean
    status?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    purchaseOrder?: boolean | PurchaseOrderDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | PurchaseOrderItem$variantArgs<ExtArgs>
  }, ExtArgs["result"]["purchaseOrderItem"]>

  export type PurchaseOrderItemSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    purchaseOrderId?: boolean
    productId?: boolean
    variantId?: boolean
    orderedQty?: boolean
    receivedQty?: boolean
    remainingQty?: boolean
    unitCost?: boolean
    totalCost?: boolean
    productName?: boolean
    productSku?: boolean
    supplierSku?: boolean
    expectedDate?: boolean
    status?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    purchaseOrder?: boolean | PurchaseOrderDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | PurchaseOrderItem$variantArgs<ExtArgs>
  }, ExtArgs["result"]["purchaseOrderItem"]>

  export type PurchaseOrderItemSelectScalar = {
    id?: boolean
    purchaseOrderId?: boolean
    productId?: boolean
    variantId?: boolean
    orderedQty?: boolean
    receivedQty?: boolean
    remainingQty?: boolean
    unitCost?: boolean
    totalCost?: boolean
    productName?: boolean
    productSku?: boolean
    supplierSku?: boolean
    expectedDate?: boolean
    status?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type PurchaseOrderItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "purchaseOrderId" | "productId" | "variantId" | "orderedQty" | "receivedQty" | "remainingQty" | "unitCost" | "totalCost" | "productName" | "productSku" | "supplierSku" | "expectedDate" | "status" | "notes" | "createdAt" | "updatedAt", ExtArgs["result"]["purchaseOrderItem"]>
  export type PurchaseOrderItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    purchaseOrder?: boolean | PurchaseOrderDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | PurchaseOrderItem$variantArgs<ExtArgs>
  }
  export type PurchaseOrderItemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    purchaseOrder?: boolean | PurchaseOrderDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | PurchaseOrderItem$variantArgs<ExtArgs>
  }
  export type PurchaseOrderItemIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    purchaseOrder?: boolean | PurchaseOrderDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | PurchaseOrderItem$variantArgs<ExtArgs>
  }

  export type $PurchaseOrderItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PurchaseOrderItem"
    objects: {
      purchaseOrder: Prisma.$PurchaseOrderPayload<ExtArgs>
      product: Prisma.$ProductPayload<ExtArgs>
      variant: Prisma.$ProductVariantPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      purchaseOrderId: string
      productId: string
      variantId: string | null
      orderedQty: number
      receivedQty: number
      remainingQty: number
      unitCost: Prisma.Decimal
      totalCost: Prisma.Decimal
      productName: string
      productSku: string
      supplierSku: string | null
      expectedDate: Date | null
      status: $Enums.PurchaseItemStatus
      notes: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["purchaseOrderItem"]>
    composites: {}
  }

  type PurchaseOrderItemGetPayload<S extends boolean | null | undefined | PurchaseOrderItemDefaultArgs> = $Result.GetResult<Prisma.$PurchaseOrderItemPayload, S>

  type PurchaseOrderItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PurchaseOrderItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PurchaseOrderItemCountAggregateInputType | true
    }

  export interface PurchaseOrderItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PurchaseOrderItem'], meta: { name: 'PurchaseOrderItem' } }
    /**
     * Find zero or one PurchaseOrderItem that matches the filter.
     * @param {PurchaseOrderItemFindUniqueArgs} args - Arguments to find a PurchaseOrderItem
     * @example
     * // Get one PurchaseOrderItem
     * const purchaseOrderItem = await prisma.purchaseOrderItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PurchaseOrderItemFindUniqueArgs>(args: SelectSubset<T, PurchaseOrderItemFindUniqueArgs<ExtArgs>>): Prisma__PurchaseOrderItemClient<$Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PurchaseOrderItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PurchaseOrderItemFindUniqueOrThrowArgs} args - Arguments to find a PurchaseOrderItem
     * @example
     * // Get one PurchaseOrderItem
     * const purchaseOrderItem = await prisma.purchaseOrderItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PurchaseOrderItemFindUniqueOrThrowArgs>(args: SelectSubset<T, PurchaseOrderItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PurchaseOrderItemClient<$Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PurchaseOrderItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PurchaseOrderItemFindFirstArgs} args - Arguments to find a PurchaseOrderItem
     * @example
     * // Get one PurchaseOrderItem
     * const purchaseOrderItem = await prisma.purchaseOrderItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PurchaseOrderItemFindFirstArgs>(args?: SelectSubset<T, PurchaseOrderItemFindFirstArgs<ExtArgs>>): Prisma__PurchaseOrderItemClient<$Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PurchaseOrderItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PurchaseOrderItemFindFirstOrThrowArgs} args - Arguments to find a PurchaseOrderItem
     * @example
     * // Get one PurchaseOrderItem
     * const purchaseOrderItem = await prisma.purchaseOrderItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PurchaseOrderItemFindFirstOrThrowArgs>(args?: SelectSubset<T, PurchaseOrderItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__PurchaseOrderItemClient<$Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PurchaseOrderItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PurchaseOrderItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PurchaseOrderItems
     * const purchaseOrderItems = await prisma.purchaseOrderItem.findMany()
     * 
     * // Get first 10 PurchaseOrderItems
     * const purchaseOrderItems = await prisma.purchaseOrderItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const purchaseOrderItemWithIdOnly = await prisma.purchaseOrderItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PurchaseOrderItemFindManyArgs>(args?: SelectSubset<T, PurchaseOrderItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PurchaseOrderItem.
     * @param {PurchaseOrderItemCreateArgs} args - Arguments to create a PurchaseOrderItem.
     * @example
     * // Create one PurchaseOrderItem
     * const PurchaseOrderItem = await prisma.purchaseOrderItem.create({
     *   data: {
     *     // ... data to create a PurchaseOrderItem
     *   }
     * })
     * 
     */
    create<T extends PurchaseOrderItemCreateArgs>(args: SelectSubset<T, PurchaseOrderItemCreateArgs<ExtArgs>>): Prisma__PurchaseOrderItemClient<$Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PurchaseOrderItems.
     * @param {PurchaseOrderItemCreateManyArgs} args - Arguments to create many PurchaseOrderItems.
     * @example
     * // Create many PurchaseOrderItems
     * const purchaseOrderItem = await prisma.purchaseOrderItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PurchaseOrderItemCreateManyArgs>(args?: SelectSubset<T, PurchaseOrderItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PurchaseOrderItems and returns the data saved in the database.
     * @param {PurchaseOrderItemCreateManyAndReturnArgs} args - Arguments to create many PurchaseOrderItems.
     * @example
     * // Create many PurchaseOrderItems
     * const purchaseOrderItem = await prisma.purchaseOrderItem.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PurchaseOrderItems and only return the `id`
     * const purchaseOrderItemWithIdOnly = await prisma.purchaseOrderItem.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PurchaseOrderItemCreateManyAndReturnArgs>(args?: SelectSubset<T, PurchaseOrderItemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PurchaseOrderItem.
     * @param {PurchaseOrderItemDeleteArgs} args - Arguments to delete one PurchaseOrderItem.
     * @example
     * // Delete one PurchaseOrderItem
     * const PurchaseOrderItem = await prisma.purchaseOrderItem.delete({
     *   where: {
     *     // ... filter to delete one PurchaseOrderItem
     *   }
     * })
     * 
     */
    delete<T extends PurchaseOrderItemDeleteArgs>(args: SelectSubset<T, PurchaseOrderItemDeleteArgs<ExtArgs>>): Prisma__PurchaseOrderItemClient<$Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PurchaseOrderItem.
     * @param {PurchaseOrderItemUpdateArgs} args - Arguments to update one PurchaseOrderItem.
     * @example
     * // Update one PurchaseOrderItem
     * const purchaseOrderItem = await prisma.purchaseOrderItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PurchaseOrderItemUpdateArgs>(args: SelectSubset<T, PurchaseOrderItemUpdateArgs<ExtArgs>>): Prisma__PurchaseOrderItemClient<$Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PurchaseOrderItems.
     * @param {PurchaseOrderItemDeleteManyArgs} args - Arguments to filter PurchaseOrderItems to delete.
     * @example
     * // Delete a few PurchaseOrderItems
     * const { count } = await prisma.purchaseOrderItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PurchaseOrderItemDeleteManyArgs>(args?: SelectSubset<T, PurchaseOrderItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PurchaseOrderItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PurchaseOrderItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PurchaseOrderItems
     * const purchaseOrderItem = await prisma.purchaseOrderItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PurchaseOrderItemUpdateManyArgs>(args: SelectSubset<T, PurchaseOrderItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PurchaseOrderItems and returns the data updated in the database.
     * @param {PurchaseOrderItemUpdateManyAndReturnArgs} args - Arguments to update many PurchaseOrderItems.
     * @example
     * // Update many PurchaseOrderItems
     * const purchaseOrderItem = await prisma.purchaseOrderItem.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PurchaseOrderItems and only return the `id`
     * const purchaseOrderItemWithIdOnly = await prisma.purchaseOrderItem.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PurchaseOrderItemUpdateManyAndReturnArgs>(args: SelectSubset<T, PurchaseOrderItemUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PurchaseOrderItem.
     * @param {PurchaseOrderItemUpsertArgs} args - Arguments to update or create a PurchaseOrderItem.
     * @example
     * // Update or create a PurchaseOrderItem
     * const purchaseOrderItem = await prisma.purchaseOrderItem.upsert({
     *   create: {
     *     // ... data to create a PurchaseOrderItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PurchaseOrderItem we want to update
     *   }
     * })
     */
    upsert<T extends PurchaseOrderItemUpsertArgs>(args: SelectSubset<T, PurchaseOrderItemUpsertArgs<ExtArgs>>): Prisma__PurchaseOrderItemClient<$Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PurchaseOrderItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PurchaseOrderItemCountArgs} args - Arguments to filter PurchaseOrderItems to count.
     * @example
     * // Count the number of PurchaseOrderItems
     * const count = await prisma.purchaseOrderItem.count({
     *   where: {
     *     // ... the filter for the PurchaseOrderItems we want to count
     *   }
     * })
    **/
    count<T extends PurchaseOrderItemCountArgs>(
      args?: Subset<T, PurchaseOrderItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PurchaseOrderItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PurchaseOrderItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PurchaseOrderItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PurchaseOrderItemAggregateArgs>(args: Subset<T, PurchaseOrderItemAggregateArgs>): Prisma.PrismaPromise<GetPurchaseOrderItemAggregateType<T>>

    /**
     * Group by PurchaseOrderItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PurchaseOrderItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PurchaseOrderItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PurchaseOrderItemGroupByArgs['orderBy'] }
        : { orderBy?: PurchaseOrderItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PurchaseOrderItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPurchaseOrderItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PurchaseOrderItem model
   */
  readonly fields: PurchaseOrderItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PurchaseOrderItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PurchaseOrderItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    purchaseOrder<T extends PurchaseOrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PurchaseOrderDefaultArgs<ExtArgs>>): Prisma__PurchaseOrderClient<$Result.GetResult<Prisma.$PurchaseOrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    variant<T extends PurchaseOrderItem$variantArgs<ExtArgs> = {}>(args?: Subset<T, PurchaseOrderItem$variantArgs<ExtArgs>>): Prisma__ProductVariantClient<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PurchaseOrderItem model
   */
  interface PurchaseOrderItemFieldRefs {
    readonly id: FieldRef<"PurchaseOrderItem", 'String'>
    readonly purchaseOrderId: FieldRef<"PurchaseOrderItem", 'String'>
    readonly productId: FieldRef<"PurchaseOrderItem", 'String'>
    readonly variantId: FieldRef<"PurchaseOrderItem", 'String'>
    readonly orderedQty: FieldRef<"PurchaseOrderItem", 'Int'>
    readonly receivedQty: FieldRef<"PurchaseOrderItem", 'Int'>
    readonly remainingQty: FieldRef<"PurchaseOrderItem", 'Int'>
    readonly unitCost: FieldRef<"PurchaseOrderItem", 'Decimal'>
    readonly totalCost: FieldRef<"PurchaseOrderItem", 'Decimal'>
    readonly productName: FieldRef<"PurchaseOrderItem", 'String'>
    readonly productSku: FieldRef<"PurchaseOrderItem", 'String'>
    readonly supplierSku: FieldRef<"PurchaseOrderItem", 'String'>
    readonly expectedDate: FieldRef<"PurchaseOrderItem", 'DateTime'>
    readonly status: FieldRef<"PurchaseOrderItem", 'PurchaseItemStatus'>
    readonly notes: FieldRef<"PurchaseOrderItem", 'String'>
    readonly createdAt: FieldRef<"PurchaseOrderItem", 'DateTime'>
    readonly updatedAt: FieldRef<"PurchaseOrderItem", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PurchaseOrderItem findUnique
   */
  export type PurchaseOrderItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrderItem
     */
    select?: PurchaseOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrderItem
     */
    omit?: PurchaseOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderItemInclude<ExtArgs> | null
    /**
     * Filter, which PurchaseOrderItem to fetch.
     */
    where: PurchaseOrderItemWhereUniqueInput
  }

  /**
   * PurchaseOrderItem findUniqueOrThrow
   */
  export type PurchaseOrderItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrderItem
     */
    select?: PurchaseOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrderItem
     */
    omit?: PurchaseOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderItemInclude<ExtArgs> | null
    /**
     * Filter, which PurchaseOrderItem to fetch.
     */
    where: PurchaseOrderItemWhereUniqueInput
  }

  /**
   * PurchaseOrderItem findFirst
   */
  export type PurchaseOrderItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrderItem
     */
    select?: PurchaseOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrderItem
     */
    omit?: PurchaseOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderItemInclude<ExtArgs> | null
    /**
     * Filter, which PurchaseOrderItem to fetch.
     */
    where?: PurchaseOrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PurchaseOrderItems to fetch.
     */
    orderBy?: PurchaseOrderItemOrderByWithRelationInput | PurchaseOrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PurchaseOrderItems.
     */
    cursor?: PurchaseOrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PurchaseOrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PurchaseOrderItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PurchaseOrderItems.
     */
    distinct?: PurchaseOrderItemScalarFieldEnum | PurchaseOrderItemScalarFieldEnum[]
  }

  /**
   * PurchaseOrderItem findFirstOrThrow
   */
  export type PurchaseOrderItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrderItem
     */
    select?: PurchaseOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrderItem
     */
    omit?: PurchaseOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderItemInclude<ExtArgs> | null
    /**
     * Filter, which PurchaseOrderItem to fetch.
     */
    where?: PurchaseOrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PurchaseOrderItems to fetch.
     */
    orderBy?: PurchaseOrderItemOrderByWithRelationInput | PurchaseOrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PurchaseOrderItems.
     */
    cursor?: PurchaseOrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PurchaseOrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PurchaseOrderItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PurchaseOrderItems.
     */
    distinct?: PurchaseOrderItemScalarFieldEnum | PurchaseOrderItemScalarFieldEnum[]
  }

  /**
   * PurchaseOrderItem findMany
   */
  export type PurchaseOrderItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrderItem
     */
    select?: PurchaseOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrderItem
     */
    omit?: PurchaseOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderItemInclude<ExtArgs> | null
    /**
     * Filter, which PurchaseOrderItems to fetch.
     */
    where?: PurchaseOrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PurchaseOrderItems to fetch.
     */
    orderBy?: PurchaseOrderItemOrderByWithRelationInput | PurchaseOrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PurchaseOrderItems.
     */
    cursor?: PurchaseOrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PurchaseOrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PurchaseOrderItems.
     */
    skip?: number
    distinct?: PurchaseOrderItemScalarFieldEnum | PurchaseOrderItemScalarFieldEnum[]
  }

  /**
   * PurchaseOrderItem create
   */
  export type PurchaseOrderItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrderItem
     */
    select?: PurchaseOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrderItem
     */
    omit?: PurchaseOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderItemInclude<ExtArgs> | null
    /**
     * The data needed to create a PurchaseOrderItem.
     */
    data: XOR<PurchaseOrderItemCreateInput, PurchaseOrderItemUncheckedCreateInput>
  }

  /**
   * PurchaseOrderItem createMany
   */
  export type PurchaseOrderItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PurchaseOrderItems.
     */
    data: PurchaseOrderItemCreateManyInput | PurchaseOrderItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PurchaseOrderItem createManyAndReturn
   */
  export type PurchaseOrderItemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrderItem
     */
    select?: PurchaseOrderItemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrderItem
     */
    omit?: PurchaseOrderItemOmit<ExtArgs> | null
    /**
     * The data used to create many PurchaseOrderItems.
     */
    data: PurchaseOrderItemCreateManyInput | PurchaseOrderItemCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderItemIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PurchaseOrderItem update
   */
  export type PurchaseOrderItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrderItem
     */
    select?: PurchaseOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrderItem
     */
    omit?: PurchaseOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderItemInclude<ExtArgs> | null
    /**
     * The data needed to update a PurchaseOrderItem.
     */
    data: XOR<PurchaseOrderItemUpdateInput, PurchaseOrderItemUncheckedUpdateInput>
    /**
     * Choose, which PurchaseOrderItem to update.
     */
    where: PurchaseOrderItemWhereUniqueInput
  }

  /**
   * PurchaseOrderItem updateMany
   */
  export type PurchaseOrderItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PurchaseOrderItems.
     */
    data: XOR<PurchaseOrderItemUpdateManyMutationInput, PurchaseOrderItemUncheckedUpdateManyInput>
    /**
     * Filter which PurchaseOrderItems to update
     */
    where?: PurchaseOrderItemWhereInput
    /**
     * Limit how many PurchaseOrderItems to update.
     */
    limit?: number
  }

  /**
   * PurchaseOrderItem updateManyAndReturn
   */
  export type PurchaseOrderItemUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrderItem
     */
    select?: PurchaseOrderItemSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrderItem
     */
    omit?: PurchaseOrderItemOmit<ExtArgs> | null
    /**
     * The data used to update PurchaseOrderItems.
     */
    data: XOR<PurchaseOrderItemUpdateManyMutationInput, PurchaseOrderItemUncheckedUpdateManyInput>
    /**
     * Filter which PurchaseOrderItems to update
     */
    where?: PurchaseOrderItemWhereInput
    /**
     * Limit how many PurchaseOrderItems to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderItemIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PurchaseOrderItem upsert
   */
  export type PurchaseOrderItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrderItem
     */
    select?: PurchaseOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrderItem
     */
    omit?: PurchaseOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderItemInclude<ExtArgs> | null
    /**
     * The filter to search for the PurchaseOrderItem to update in case it exists.
     */
    where: PurchaseOrderItemWhereUniqueInput
    /**
     * In case the PurchaseOrderItem found by the `where` argument doesn't exist, create a new PurchaseOrderItem with this data.
     */
    create: XOR<PurchaseOrderItemCreateInput, PurchaseOrderItemUncheckedCreateInput>
    /**
     * In case the PurchaseOrderItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PurchaseOrderItemUpdateInput, PurchaseOrderItemUncheckedUpdateInput>
  }

  /**
   * PurchaseOrderItem delete
   */
  export type PurchaseOrderItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrderItem
     */
    select?: PurchaseOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrderItem
     */
    omit?: PurchaseOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderItemInclude<ExtArgs> | null
    /**
     * Filter which PurchaseOrderItem to delete.
     */
    where: PurchaseOrderItemWhereUniqueInput
  }

  /**
   * PurchaseOrderItem deleteMany
   */
  export type PurchaseOrderItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PurchaseOrderItems to delete
     */
    where?: PurchaseOrderItemWhereInput
    /**
     * Limit how many PurchaseOrderItems to delete.
     */
    limit?: number
  }

  /**
   * PurchaseOrderItem.variant
   */
  export type PurchaseOrderItem$variantArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductVariant
     */
    omit?: ProductVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    where?: ProductVariantWhereInput
  }

  /**
   * PurchaseOrderItem without action
   */
  export type PurchaseOrderItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrderItem
     */
    select?: PurchaseOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrderItem
     */
    omit?: PurchaseOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderItemInclude<ExtArgs> | null
  }


  /**
   * Model GoodsReceipt
   */

  export type AggregateGoodsReceipt = {
    _count: GoodsReceiptCountAggregateOutputType | null
    _min: GoodsReceiptMinAggregateOutputType | null
    _max: GoodsReceiptMaxAggregateOutputType | null
  }

  export type GoodsReceiptMinAggregateOutputType = {
    id: string | null
    purchaseOrderId: string | null
    warehouseId: string | null
    receiptNumber: string | null
    receivedDate: Date | null
    qcStatus: $Enums.QualityStatus | null
    qcNotes: string | null
    qcBy: string | null
    qcDate: Date | null
    status: $Enums.ReceiptStatus | null
    notes: string | null
    receivedBy: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type GoodsReceiptMaxAggregateOutputType = {
    id: string | null
    purchaseOrderId: string | null
    warehouseId: string | null
    receiptNumber: string | null
    receivedDate: Date | null
    qcStatus: $Enums.QualityStatus | null
    qcNotes: string | null
    qcBy: string | null
    qcDate: Date | null
    status: $Enums.ReceiptStatus | null
    notes: string | null
    receivedBy: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type GoodsReceiptCountAggregateOutputType = {
    id: number
    purchaseOrderId: number
    warehouseId: number
    receiptNumber: number
    receivedDate: number
    qcStatus: number
    qcNotes: number
    qcBy: number
    qcDate: number
    status: number
    notes: number
    receivedBy: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type GoodsReceiptMinAggregateInputType = {
    id?: true
    purchaseOrderId?: true
    warehouseId?: true
    receiptNumber?: true
    receivedDate?: true
    qcStatus?: true
    qcNotes?: true
    qcBy?: true
    qcDate?: true
    status?: true
    notes?: true
    receivedBy?: true
    createdAt?: true
    updatedAt?: true
  }

  export type GoodsReceiptMaxAggregateInputType = {
    id?: true
    purchaseOrderId?: true
    warehouseId?: true
    receiptNumber?: true
    receivedDate?: true
    qcStatus?: true
    qcNotes?: true
    qcBy?: true
    qcDate?: true
    status?: true
    notes?: true
    receivedBy?: true
    createdAt?: true
    updatedAt?: true
  }

  export type GoodsReceiptCountAggregateInputType = {
    id?: true
    purchaseOrderId?: true
    warehouseId?: true
    receiptNumber?: true
    receivedDate?: true
    qcStatus?: true
    qcNotes?: true
    qcBy?: true
    qcDate?: true
    status?: true
    notes?: true
    receivedBy?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type GoodsReceiptAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which GoodsReceipt to aggregate.
     */
    where?: GoodsReceiptWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GoodsReceipts to fetch.
     */
    orderBy?: GoodsReceiptOrderByWithRelationInput | GoodsReceiptOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: GoodsReceiptWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GoodsReceipts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GoodsReceipts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned GoodsReceipts
    **/
    _count?: true | GoodsReceiptCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: GoodsReceiptMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: GoodsReceiptMaxAggregateInputType
  }

  export type GetGoodsReceiptAggregateType<T extends GoodsReceiptAggregateArgs> = {
        [P in keyof T & keyof AggregateGoodsReceipt]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGoodsReceipt[P]>
      : GetScalarType<T[P], AggregateGoodsReceipt[P]>
  }




  export type GoodsReceiptGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GoodsReceiptWhereInput
    orderBy?: GoodsReceiptOrderByWithAggregationInput | GoodsReceiptOrderByWithAggregationInput[]
    by: GoodsReceiptScalarFieldEnum[] | GoodsReceiptScalarFieldEnum
    having?: GoodsReceiptScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: GoodsReceiptCountAggregateInputType | true
    _min?: GoodsReceiptMinAggregateInputType
    _max?: GoodsReceiptMaxAggregateInputType
  }

  export type GoodsReceiptGroupByOutputType = {
    id: string
    purchaseOrderId: string
    warehouseId: string
    receiptNumber: string
    receivedDate: Date
    qcStatus: $Enums.QualityStatus
    qcNotes: string | null
    qcBy: string | null
    qcDate: Date | null
    status: $Enums.ReceiptStatus
    notes: string | null
    receivedBy: string
    createdAt: Date
    updatedAt: Date
    _count: GoodsReceiptCountAggregateOutputType | null
    _min: GoodsReceiptMinAggregateOutputType | null
    _max: GoodsReceiptMaxAggregateOutputType | null
  }

  type GetGoodsReceiptGroupByPayload<T extends GoodsReceiptGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<GoodsReceiptGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof GoodsReceiptGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], GoodsReceiptGroupByOutputType[P]>
            : GetScalarType<T[P], GoodsReceiptGroupByOutputType[P]>
        }
      >
    >


  export type GoodsReceiptSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    purchaseOrderId?: boolean
    warehouseId?: boolean
    receiptNumber?: boolean
    receivedDate?: boolean
    qcStatus?: boolean
    qcNotes?: boolean
    qcBy?: boolean
    qcDate?: boolean
    status?: boolean
    notes?: boolean
    receivedBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    purchaseOrder?: boolean | PurchaseOrderDefaultArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
    items?: boolean | GoodsReceipt$itemsArgs<ExtArgs>
    _count?: boolean | GoodsReceiptCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["goodsReceipt"]>

  export type GoodsReceiptSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    purchaseOrderId?: boolean
    warehouseId?: boolean
    receiptNumber?: boolean
    receivedDate?: boolean
    qcStatus?: boolean
    qcNotes?: boolean
    qcBy?: boolean
    qcDate?: boolean
    status?: boolean
    notes?: boolean
    receivedBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    purchaseOrder?: boolean | PurchaseOrderDefaultArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["goodsReceipt"]>

  export type GoodsReceiptSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    purchaseOrderId?: boolean
    warehouseId?: boolean
    receiptNumber?: boolean
    receivedDate?: boolean
    qcStatus?: boolean
    qcNotes?: boolean
    qcBy?: boolean
    qcDate?: boolean
    status?: boolean
    notes?: boolean
    receivedBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    purchaseOrder?: boolean | PurchaseOrderDefaultArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["goodsReceipt"]>

  export type GoodsReceiptSelectScalar = {
    id?: boolean
    purchaseOrderId?: boolean
    warehouseId?: boolean
    receiptNumber?: boolean
    receivedDate?: boolean
    qcStatus?: boolean
    qcNotes?: boolean
    qcBy?: boolean
    qcDate?: boolean
    status?: boolean
    notes?: boolean
    receivedBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type GoodsReceiptOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "purchaseOrderId" | "warehouseId" | "receiptNumber" | "receivedDate" | "qcStatus" | "qcNotes" | "qcBy" | "qcDate" | "status" | "notes" | "receivedBy" | "createdAt" | "updatedAt", ExtArgs["result"]["goodsReceipt"]>
  export type GoodsReceiptInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    purchaseOrder?: boolean | PurchaseOrderDefaultArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
    items?: boolean | GoodsReceipt$itemsArgs<ExtArgs>
    _count?: boolean | GoodsReceiptCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type GoodsReceiptIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    purchaseOrder?: boolean | PurchaseOrderDefaultArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
  }
  export type GoodsReceiptIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    purchaseOrder?: boolean | PurchaseOrderDefaultArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
  }

  export type $GoodsReceiptPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "GoodsReceipt"
    objects: {
      purchaseOrder: Prisma.$PurchaseOrderPayload<ExtArgs>
      warehouse: Prisma.$WarehousePayload<ExtArgs>
      items: Prisma.$GoodsReceiptItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      purchaseOrderId: string
      warehouseId: string
      receiptNumber: string
      receivedDate: Date
      qcStatus: $Enums.QualityStatus
      qcNotes: string | null
      qcBy: string | null
      qcDate: Date | null
      status: $Enums.ReceiptStatus
      notes: string | null
      receivedBy: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["goodsReceipt"]>
    composites: {}
  }

  type GoodsReceiptGetPayload<S extends boolean | null | undefined | GoodsReceiptDefaultArgs> = $Result.GetResult<Prisma.$GoodsReceiptPayload, S>

  type GoodsReceiptCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<GoodsReceiptFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: GoodsReceiptCountAggregateInputType | true
    }

  export interface GoodsReceiptDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['GoodsReceipt'], meta: { name: 'GoodsReceipt' } }
    /**
     * Find zero or one GoodsReceipt that matches the filter.
     * @param {GoodsReceiptFindUniqueArgs} args - Arguments to find a GoodsReceipt
     * @example
     * // Get one GoodsReceipt
     * const goodsReceipt = await prisma.goodsReceipt.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends GoodsReceiptFindUniqueArgs>(args: SelectSubset<T, GoodsReceiptFindUniqueArgs<ExtArgs>>): Prisma__GoodsReceiptClient<$Result.GetResult<Prisma.$GoodsReceiptPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one GoodsReceipt that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {GoodsReceiptFindUniqueOrThrowArgs} args - Arguments to find a GoodsReceipt
     * @example
     * // Get one GoodsReceipt
     * const goodsReceipt = await prisma.goodsReceipt.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends GoodsReceiptFindUniqueOrThrowArgs>(args: SelectSubset<T, GoodsReceiptFindUniqueOrThrowArgs<ExtArgs>>): Prisma__GoodsReceiptClient<$Result.GetResult<Prisma.$GoodsReceiptPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first GoodsReceipt that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoodsReceiptFindFirstArgs} args - Arguments to find a GoodsReceipt
     * @example
     * // Get one GoodsReceipt
     * const goodsReceipt = await prisma.goodsReceipt.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends GoodsReceiptFindFirstArgs>(args?: SelectSubset<T, GoodsReceiptFindFirstArgs<ExtArgs>>): Prisma__GoodsReceiptClient<$Result.GetResult<Prisma.$GoodsReceiptPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first GoodsReceipt that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoodsReceiptFindFirstOrThrowArgs} args - Arguments to find a GoodsReceipt
     * @example
     * // Get one GoodsReceipt
     * const goodsReceipt = await prisma.goodsReceipt.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends GoodsReceiptFindFirstOrThrowArgs>(args?: SelectSubset<T, GoodsReceiptFindFirstOrThrowArgs<ExtArgs>>): Prisma__GoodsReceiptClient<$Result.GetResult<Prisma.$GoodsReceiptPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more GoodsReceipts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoodsReceiptFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all GoodsReceipts
     * const goodsReceipts = await prisma.goodsReceipt.findMany()
     * 
     * // Get first 10 GoodsReceipts
     * const goodsReceipts = await prisma.goodsReceipt.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const goodsReceiptWithIdOnly = await prisma.goodsReceipt.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends GoodsReceiptFindManyArgs>(args?: SelectSubset<T, GoodsReceiptFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GoodsReceiptPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a GoodsReceipt.
     * @param {GoodsReceiptCreateArgs} args - Arguments to create a GoodsReceipt.
     * @example
     * // Create one GoodsReceipt
     * const GoodsReceipt = await prisma.goodsReceipt.create({
     *   data: {
     *     // ... data to create a GoodsReceipt
     *   }
     * })
     * 
     */
    create<T extends GoodsReceiptCreateArgs>(args: SelectSubset<T, GoodsReceiptCreateArgs<ExtArgs>>): Prisma__GoodsReceiptClient<$Result.GetResult<Prisma.$GoodsReceiptPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many GoodsReceipts.
     * @param {GoodsReceiptCreateManyArgs} args - Arguments to create many GoodsReceipts.
     * @example
     * // Create many GoodsReceipts
     * const goodsReceipt = await prisma.goodsReceipt.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends GoodsReceiptCreateManyArgs>(args?: SelectSubset<T, GoodsReceiptCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many GoodsReceipts and returns the data saved in the database.
     * @param {GoodsReceiptCreateManyAndReturnArgs} args - Arguments to create many GoodsReceipts.
     * @example
     * // Create many GoodsReceipts
     * const goodsReceipt = await prisma.goodsReceipt.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many GoodsReceipts and only return the `id`
     * const goodsReceiptWithIdOnly = await prisma.goodsReceipt.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends GoodsReceiptCreateManyAndReturnArgs>(args?: SelectSubset<T, GoodsReceiptCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GoodsReceiptPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a GoodsReceipt.
     * @param {GoodsReceiptDeleteArgs} args - Arguments to delete one GoodsReceipt.
     * @example
     * // Delete one GoodsReceipt
     * const GoodsReceipt = await prisma.goodsReceipt.delete({
     *   where: {
     *     // ... filter to delete one GoodsReceipt
     *   }
     * })
     * 
     */
    delete<T extends GoodsReceiptDeleteArgs>(args: SelectSubset<T, GoodsReceiptDeleteArgs<ExtArgs>>): Prisma__GoodsReceiptClient<$Result.GetResult<Prisma.$GoodsReceiptPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one GoodsReceipt.
     * @param {GoodsReceiptUpdateArgs} args - Arguments to update one GoodsReceipt.
     * @example
     * // Update one GoodsReceipt
     * const goodsReceipt = await prisma.goodsReceipt.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends GoodsReceiptUpdateArgs>(args: SelectSubset<T, GoodsReceiptUpdateArgs<ExtArgs>>): Prisma__GoodsReceiptClient<$Result.GetResult<Prisma.$GoodsReceiptPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more GoodsReceipts.
     * @param {GoodsReceiptDeleteManyArgs} args - Arguments to filter GoodsReceipts to delete.
     * @example
     * // Delete a few GoodsReceipts
     * const { count } = await prisma.goodsReceipt.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends GoodsReceiptDeleteManyArgs>(args?: SelectSubset<T, GoodsReceiptDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more GoodsReceipts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoodsReceiptUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many GoodsReceipts
     * const goodsReceipt = await prisma.goodsReceipt.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends GoodsReceiptUpdateManyArgs>(args: SelectSubset<T, GoodsReceiptUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more GoodsReceipts and returns the data updated in the database.
     * @param {GoodsReceiptUpdateManyAndReturnArgs} args - Arguments to update many GoodsReceipts.
     * @example
     * // Update many GoodsReceipts
     * const goodsReceipt = await prisma.goodsReceipt.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more GoodsReceipts and only return the `id`
     * const goodsReceiptWithIdOnly = await prisma.goodsReceipt.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends GoodsReceiptUpdateManyAndReturnArgs>(args: SelectSubset<T, GoodsReceiptUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GoodsReceiptPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one GoodsReceipt.
     * @param {GoodsReceiptUpsertArgs} args - Arguments to update or create a GoodsReceipt.
     * @example
     * // Update or create a GoodsReceipt
     * const goodsReceipt = await prisma.goodsReceipt.upsert({
     *   create: {
     *     // ... data to create a GoodsReceipt
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the GoodsReceipt we want to update
     *   }
     * })
     */
    upsert<T extends GoodsReceiptUpsertArgs>(args: SelectSubset<T, GoodsReceiptUpsertArgs<ExtArgs>>): Prisma__GoodsReceiptClient<$Result.GetResult<Prisma.$GoodsReceiptPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of GoodsReceipts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoodsReceiptCountArgs} args - Arguments to filter GoodsReceipts to count.
     * @example
     * // Count the number of GoodsReceipts
     * const count = await prisma.goodsReceipt.count({
     *   where: {
     *     // ... the filter for the GoodsReceipts we want to count
     *   }
     * })
    **/
    count<T extends GoodsReceiptCountArgs>(
      args?: Subset<T, GoodsReceiptCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], GoodsReceiptCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a GoodsReceipt.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoodsReceiptAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends GoodsReceiptAggregateArgs>(args: Subset<T, GoodsReceiptAggregateArgs>): Prisma.PrismaPromise<GetGoodsReceiptAggregateType<T>>

    /**
     * Group by GoodsReceipt.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoodsReceiptGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends GoodsReceiptGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: GoodsReceiptGroupByArgs['orderBy'] }
        : { orderBy?: GoodsReceiptGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, GoodsReceiptGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGoodsReceiptGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the GoodsReceipt model
   */
  readonly fields: GoodsReceiptFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for GoodsReceipt.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__GoodsReceiptClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    purchaseOrder<T extends PurchaseOrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PurchaseOrderDefaultArgs<ExtArgs>>): Prisma__PurchaseOrderClient<$Result.GetResult<Prisma.$PurchaseOrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    warehouse<T extends WarehouseDefaultArgs<ExtArgs> = {}>(args?: Subset<T, WarehouseDefaultArgs<ExtArgs>>): Prisma__WarehouseClient<$Result.GetResult<Prisma.$WarehousePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    items<T extends GoodsReceipt$itemsArgs<ExtArgs> = {}>(args?: Subset<T, GoodsReceipt$itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GoodsReceiptItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the GoodsReceipt model
   */
  interface GoodsReceiptFieldRefs {
    readonly id: FieldRef<"GoodsReceipt", 'String'>
    readonly purchaseOrderId: FieldRef<"GoodsReceipt", 'String'>
    readonly warehouseId: FieldRef<"GoodsReceipt", 'String'>
    readonly receiptNumber: FieldRef<"GoodsReceipt", 'String'>
    readonly receivedDate: FieldRef<"GoodsReceipt", 'DateTime'>
    readonly qcStatus: FieldRef<"GoodsReceipt", 'QualityStatus'>
    readonly qcNotes: FieldRef<"GoodsReceipt", 'String'>
    readonly qcBy: FieldRef<"GoodsReceipt", 'String'>
    readonly qcDate: FieldRef<"GoodsReceipt", 'DateTime'>
    readonly status: FieldRef<"GoodsReceipt", 'ReceiptStatus'>
    readonly notes: FieldRef<"GoodsReceipt", 'String'>
    readonly receivedBy: FieldRef<"GoodsReceipt", 'String'>
    readonly createdAt: FieldRef<"GoodsReceipt", 'DateTime'>
    readonly updatedAt: FieldRef<"GoodsReceipt", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * GoodsReceipt findUnique
   */
  export type GoodsReceiptFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoodsReceipt
     */
    select?: GoodsReceiptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GoodsReceipt
     */
    omit?: GoodsReceiptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoodsReceiptInclude<ExtArgs> | null
    /**
     * Filter, which GoodsReceipt to fetch.
     */
    where: GoodsReceiptWhereUniqueInput
  }

  /**
   * GoodsReceipt findUniqueOrThrow
   */
  export type GoodsReceiptFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoodsReceipt
     */
    select?: GoodsReceiptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GoodsReceipt
     */
    omit?: GoodsReceiptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoodsReceiptInclude<ExtArgs> | null
    /**
     * Filter, which GoodsReceipt to fetch.
     */
    where: GoodsReceiptWhereUniqueInput
  }

  /**
   * GoodsReceipt findFirst
   */
  export type GoodsReceiptFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoodsReceipt
     */
    select?: GoodsReceiptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GoodsReceipt
     */
    omit?: GoodsReceiptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoodsReceiptInclude<ExtArgs> | null
    /**
     * Filter, which GoodsReceipt to fetch.
     */
    where?: GoodsReceiptWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GoodsReceipts to fetch.
     */
    orderBy?: GoodsReceiptOrderByWithRelationInput | GoodsReceiptOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for GoodsReceipts.
     */
    cursor?: GoodsReceiptWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GoodsReceipts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GoodsReceipts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of GoodsReceipts.
     */
    distinct?: GoodsReceiptScalarFieldEnum | GoodsReceiptScalarFieldEnum[]
  }

  /**
   * GoodsReceipt findFirstOrThrow
   */
  export type GoodsReceiptFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoodsReceipt
     */
    select?: GoodsReceiptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GoodsReceipt
     */
    omit?: GoodsReceiptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoodsReceiptInclude<ExtArgs> | null
    /**
     * Filter, which GoodsReceipt to fetch.
     */
    where?: GoodsReceiptWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GoodsReceipts to fetch.
     */
    orderBy?: GoodsReceiptOrderByWithRelationInput | GoodsReceiptOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for GoodsReceipts.
     */
    cursor?: GoodsReceiptWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GoodsReceipts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GoodsReceipts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of GoodsReceipts.
     */
    distinct?: GoodsReceiptScalarFieldEnum | GoodsReceiptScalarFieldEnum[]
  }

  /**
   * GoodsReceipt findMany
   */
  export type GoodsReceiptFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoodsReceipt
     */
    select?: GoodsReceiptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GoodsReceipt
     */
    omit?: GoodsReceiptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoodsReceiptInclude<ExtArgs> | null
    /**
     * Filter, which GoodsReceipts to fetch.
     */
    where?: GoodsReceiptWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GoodsReceipts to fetch.
     */
    orderBy?: GoodsReceiptOrderByWithRelationInput | GoodsReceiptOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing GoodsReceipts.
     */
    cursor?: GoodsReceiptWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GoodsReceipts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GoodsReceipts.
     */
    skip?: number
    distinct?: GoodsReceiptScalarFieldEnum | GoodsReceiptScalarFieldEnum[]
  }

  /**
   * GoodsReceipt create
   */
  export type GoodsReceiptCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoodsReceipt
     */
    select?: GoodsReceiptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GoodsReceipt
     */
    omit?: GoodsReceiptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoodsReceiptInclude<ExtArgs> | null
    /**
     * The data needed to create a GoodsReceipt.
     */
    data: XOR<GoodsReceiptCreateInput, GoodsReceiptUncheckedCreateInput>
  }

  /**
   * GoodsReceipt createMany
   */
  export type GoodsReceiptCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many GoodsReceipts.
     */
    data: GoodsReceiptCreateManyInput | GoodsReceiptCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * GoodsReceipt createManyAndReturn
   */
  export type GoodsReceiptCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoodsReceipt
     */
    select?: GoodsReceiptSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the GoodsReceipt
     */
    omit?: GoodsReceiptOmit<ExtArgs> | null
    /**
     * The data used to create many GoodsReceipts.
     */
    data: GoodsReceiptCreateManyInput | GoodsReceiptCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoodsReceiptIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * GoodsReceipt update
   */
  export type GoodsReceiptUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoodsReceipt
     */
    select?: GoodsReceiptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GoodsReceipt
     */
    omit?: GoodsReceiptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoodsReceiptInclude<ExtArgs> | null
    /**
     * The data needed to update a GoodsReceipt.
     */
    data: XOR<GoodsReceiptUpdateInput, GoodsReceiptUncheckedUpdateInput>
    /**
     * Choose, which GoodsReceipt to update.
     */
    where: GoodsReceiptWhereUniqueInput
  }

  /**
   * GoodsReceipt updateMany
   */
  export type GoodsReceiptUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update GoodsReceipts.
     */
    data: XOR<GoodsReceiptUpdateManyMutationInput, GoodsReceiptUncheckedUpdateManyInput>
    /**
     * Filter which GoodsReceipts to update
     */
    where?: GoodsReceiptWhereInput
    /**
     * Limit how many GoodsReceipts to update.
     */
    limit?: number
  }

  /**
   * GoodsReceipt updateManyAndReturn
   */
  export type GoodsReceiptUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoodsReceipt
     */
    select?: GoodsReceiptSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the GoodsReceipt
     */
    omit?: GoodsReceiptOmit<ExtArgs> | null
    /**
     * The data used to update GoodsReceipts.
     */
    data: XOR<GoodsReceiptUpdateManyMutationInput, GoodsReceiptUncheckedUpdateManyInput>
    /**
     * Filter which GoodsReceipts to update
     */
    where?: GoodsReceiptWhereInput
    /**
     * Limit how many GoodsReceipts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoodsReceiptIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * GoodsReceipt upsert
   */
  export type GoodsReceiptUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoodsReceipt
     */
    select?: GoodsReceiptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GoodsReceipt
     */
    omit?: GoodsReceiptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoodsReceiptInclude<ExtArgs> | null
    /**
     * The filter to search for the GoodsReceipt to update in case it exists.
     */
    where: GoodsReceiptWhereUniqueInput
    /**
     * In case the GoodsReceipt found by the `where` argument doesn't exist, create a new GoodsReceipt with this data.
     */
    create: XOR<GoodsReceiptCreateInput, GoodsReceiptUncheckedCreateInput>
    /**
     * In case the GoodsReceipt was found with the provided `where` argument, update it with this data.
     */
    update: XOR<GoodsReceiptUpdateInput, GoodsReceiptUncheckedUpdateInput>
  }

  /**
   * GoodsReceipt delete
   */
  export type GoodsReceiptDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoodsReceipt
     */
    select?: GoodsReceiptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GoodsReceipt
     */
    omit?: GoodsReceiptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoodsReceiptInclude<ExtArgs> | null
    /**
     * Filter which GoodsReceipt to delete.
     */
    where: GoodsReceiptWhereUniqueInput
  }

  /**
   * GoodsReceipt deleteMany
   */
  export type GoodsReceiptDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which GoodsReceipts to delete
     */
    where?: GoodsReceiptWhereInput
    /**
     * Limit how many GoodsReceipts to delete.
     */
    limit?: number
  }

  /**
   * GoodsReceipt.items
   */
  export type GoodsReceipt$itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoodsReceiptItem
     */
    select?: GoodsReceiptItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GoodsReceiptItem
     */
    omit?: GoodsReceiptItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoodsReceiptItemInclude<ExtArgs> | null
    where?: GoodsReceiptItemWhereInput
    orderBy?: GoodsReceiptItemOrderByWithRelationInput | GoodsReceiptItemOrderByWithRelationInput[]
    cursor?: GoodsReceiptItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GoodsReceiptItemScalarFieldEnum | GoodsReceiptItemScalarFieldEnum[]
  }

  /**
   * GoodsReceipt without action
   */
  export type GoodsReceiptDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoodsReceipt
     */
    select?: GoodsReceiptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GoodsReceipt
     */
    omit?: GoodsReceiptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoodsReceiptInclude<ExtArgs> | null
  }


  /**
   * Model GoodsReceiptItem
   */

  export type AggregateGoodsReceiptItem = {
    _count: GoodsReceiptItemCountAggregateOutputType | null
    _avg: GoodsReceiptItemAvgAggregateOutputType | null
    _sum: GoodsReceiptItemSumAggregateOutputType | null
    _min: GoodsReceiptItemMinAggregateOutputType | null
    _max: GoodsReceiptItemMaxAggregateOutputType | null
  }

  export type GoodsReceiptItemAvgAggregateOutputType = {
    expectedQty: number | null
    receivedQty: number | null
    acceptedQty: number | null
    rejectedQty: number | null
  }

  export type GoodsReceiptItemSumAggregateOutputType = {
    expectedQty: number | null
    receivedQty: number | null
    acceptedQty: number | null
    rejectedQty: number | null
  }

  export type GoodsReceiptItemMinAggregateOutputType = {
    id: string | null
    goodsReceiptId: string | null
    productId: string | null
    variantId: string | null
    expectedQty: number | null
    receivedQty: number | null
    acceptedQty: number | null
    rejectedQty: number | null
    qcStatus: $Enums.QualityStatus | null
    qcNotes: string | null
    rejectionReason: string | null
    lotNumber: string | null
    batchNumber: string | null
    expiryDate: Date | null
    receivedLocation: string | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type GoodsReceiptItemMaxAggregateOutputType = {
    id: string | null
    goodsReceiptId: string | null
    productId: string | null
    variantId: string | null
    expectedQty: number | null
    receivedQty: number | null
    acceptedQty: number | null
    rejectedQty: number | null
    qcStatus: $Enums.QualityStatus | null
    qcNotes: string | null
    rejectionReason: string | null
    lotNumber: string | null
    batchNumber: string | null
    expiryDate: Date | null
    receivedLocation: string | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type GoodsReceiptItemCountAggregateOutputType = {
    id: number
    goodsReceiptId: number
    productId: number
    variantId: number
    expectedQty: number
    receivedQty: number
    acceptedQty: number
    rejectedQty: number
    qcStatus: number
    qcNotes: number
    rejectionReason: number
    lotNumber: number
    batchNumber: number
    expiryDate: number
    serialNumbers: number
    receivedLocation: number
    notes: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type GoodsReceiptItemAvgAggregateInputType = {
    expectedQty?: true
    receivedQty?: true
    acceptedQty?: true
    rejectedQty?: true
  }

  export type GoodsReceiptItemSumAggregateInputType = {
    expectedQty?: true
    receivedQty?: true
    acceptedQty?: true
    rejectedQty?: true
  }

  export type GoodsReceiptItemMinAggregateInputType = {
    id?: true
    goodsReceiptId?: true
    productId?: true
    variantId?: true
    expectedQty?: true
    receivedQty?: true
    acceptedQty?: true
    rejectedQty?: true
    qcStatus?: true
    qcNotes?: true
    rejectionReason?: true
    lotNumber?: true
    batchNumber?: true
    expiryDate?: true
    receivedLocation?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type GoodsReceiptItemMaxAggregateInputType = {
    id?: true
    goodsReceiptId?: true
    productId?: true
    variantId?: true
    expectedQty?: true
    receivedQty?: true
    acceptedQty?: true
    rejectedQty?: true
    qcStatus?: true
    qcNotes?: true
    rejectionReason?: true
    lotNumber?: true
    batchNumber?: true
    expiryDate?: true
    receivedLocation?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type GoodsReceiptItemCountAggregateInputType = {
    id?: true
    goodsReceiptId?: true
    productId?: true
    variantId?: true
    expectedQty?: true
    receivedQty?: true
    acceptedQty?: true
    rejectedQty?: true
    qcStatus?: true
    qcNotes?: true
    rejectionReason?: true
    lotNumber?: true
    batchNumber?: true
    expiryDate?: true
    serialNumbers?: true
    receivedLocation?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type GoodsReceiptItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which GoodsReceiptItem to aggregate.
     */
    where?: GoodsReceiptItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GoodsReceiptItems to fetch.
     */
    orderBy?: GoodsReceiptItemOrderByWithRelationInput | GoodsReceiptItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: GoodsReceiptItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GoodsReceiptItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GoodsReceiptItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned GoodsReceiptItems
    **/
    _count?: true | GoodsReceiptItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: GoodsReceiptItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: GoodsReceiptItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: GoodsReceiptItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: GoodsReceiptItemMaxAggregateInputType
  }

  export type GetGoodsReceiptItemAggregateType<T extends GoodsReceiptItemAggregateArgs> = {
        [P in keyof T & keyof AggregateGoodsReceiptItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGoodsReceiptItem[P]>
      : GetScalarType<T[P], AggregateGoodsReceiptItem[P]>
  }




  export type GoodsReceiptItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GoodsReceiptItemWhereInput
    orderBy?: GoodsReceiptItemOrderByWithAggregationInput | GoodsReceiptItemOrderByWithAggregationInput[]
    by: GoodsReceiptItemScalarFieldEnum[] | GoodsReceiptItemScalarFieldEnum
    having?: GoodsReceiptItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: GoodsReceiptItemCountAggregateInputType | true
    _avg?: GoodsReceiptItemAvgAggregateInputType
    _sum?: GoodsReceiptItemSumAggregateInputType
    _min?: GoodsReceiptItemMinAggregateInputType
    _max?: GoodsReceiptItemMaxAggregateInputType
  }

  export type GoodsReceiptItemGroupByOutputType = {
    id: string
    goodsReceiptId: string
    productId: string
    variantId: string | null
    expectedQty: number
    receivedQty: number
    acceptedQty: number
    rejectedQty: number
    qcStatus: $Enums.QualityStatus
    qcNotes: string | null
    rejectionReason: string | null
    lotNumber: string | null
    batchNumber: string | null
    expiryDate: Date | null
    serialNumbers: JsonValue | null
    receivedLocation: string | null
    notes: string | null
    createdAt: Date
    updatedAt: Date
    _count: GoodsReceiptItemCountAggregateOutputType | null
    _avg: GoodsReceiptItemAvgAggregateOutputType | null
    _sum: GoodsReceiptItemSumAggregateOutputType | null
    _min: GoodsReceiptItemMinAggregateOutputType | null
    _max: GoodsReceiptItemMaxAggregateOutputType | null
  }

  type GetGoodsReceiptItemGroupByPayload<T extends GoodsReceiptItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<GoodsReceiptItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof GoodsReceiptItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], GoodsReceiptItemGroupByOutputType[P]>
            : GetScalarType<T[P], GoodsReceiptItemGroupByOutputType[P]>
        }
      >
    >


  export type GoodsReceiptItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    goodsReceiptId?: boolean
    productId?: boolean
    variantId?: boolean
    expectedQty?: boolean
    receivedQty?: boolean
    acceptedQty?: boolean
    rejectedQty?: boolean
    qcStatus?: boolean
    qcNotes?: boolean
    rejectionReason?: boolean
    lotNumber?: boolean
    batchNumber?: boolean
    expiryDate?: boolean
    serialNumbers?: boolean
    receivedLocation?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    goodsReceipt?: boolean | GoodsReceiptDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | GoodsReceiptItem$variantArgs<ExtArgs>
  }, ExtArgs["result"]["goodsReceiptItem"]>

  export type GoodsReceiptItemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    goodsReceiptId?: boolean
    productId?: boolean
    variantId?: boolean
    expectedQty?: boolean
    receivedQty?: boolean
    acceptedQty?: boolean
    rejectedQty?: boolean
    qcStatus?: boolean
    qcNotes?: boolean
    rejectionReason?: boolean
    lotNumber?: boolean
    batchNumber?: boolean
    expiryDate?: boolean
    serialNumbers?: boolean
    receivedLocation?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    goodsReceipt?: boolean | GoodsReceiptDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | GoodsReceiptItem$variantArgs<ExtArgs>
  }, ExtArgs["result"]["goodsReceiptItem"]>

  export type GoodsReceiptItemSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    goodsReceiptId?: boolean
    productId?: boolean
    variantId?: boolean
    expectedQty?: boolean
    receivedQty?: boolean
    acceptedQty?: boolean
    rejectedQty?: boolean
    qcStatus?: boolean
    qcNotes?: boolean
    rejectionReason?: boolean
    lotNumber?: boolean
    batchNumber?: boolean
    expiryDate?: boolean
    serialNumbers?: boolean
    receivedLocation?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    goodsReceipt?: boolean | GoodsReceiptDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | GoodsReceiptItem$variantArgs<ExtArgs>
  }, ExtArgs["result"]["goodsReceiptItem"]>

  export type GoodsReceiptItemSelectScalar = {
    id?: boolean
    goodsReceiptId?: boolean
    productId?: boolean
    variantId?: boolean
    expectedQty?: boolean
    receivedQty?: boolean
    acceptedQty?: boolean
    rejectedQty?: boolean
    qcStatus?: boolean
    qcNotes?: boolean
    rejectionReason?: boolean
    lotNumber?: boolean
    batchNumber?: boolean
    expiryDate?: boolean
    serialNumbers?: boolean
    receivedLocation?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type GoodsReceiptItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "goodsReceiptId" | "productId" | "variantId" | "expectedQty" | "receivedQty" | "acceptedQty" | "rejectedQty" | "qcStatus" | "qcNotes" | "rejectionReason" | "lotNumber" | "batchNumber" | "expiryDate" | "serialNumbers" | "receivedLocation" | "notes" | "createdAt" | "updatedAt", ExtArgs["result"]["goodsReceiptItem"]>
  export type GoodsReceiptItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    goodsReceipt?: boolean | GoodsReceiptDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | GoodsReceiptItem$variantArgs<ExtArgs>
  }
  export type GoodsReceiptItemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    goodsReceipt?: boolean | GoodsReceiptDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | GoodsReceiptItem$variantArgs<ExtArgs>
  }
  export type GoodsReceiptItemIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    goodsReceipt?: boolean | GoodsReceiptDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | GoodsReceiptItem$variantArgs<ExtArgs>
  }

  export type $GoodsReceiptItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "GoodsReceiptItem"
    objects: {
      goodsReceipt: Prisma.$GoodsReceiptPayload<ExtArgs>
      product: Prisma.$ProductPayload<ExtArgs>
      variant: Prisma.$ProductVariantPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      goodsReceiptId: string
      productId: string
      variantId: string | null
      expectedQty: number
      receivedQty: number
      acceptedQty: number
      rejectedQty: number
      qcStatus: $Enums.QualityStatus
      qcNotes: string | null
      rejectionReason: string | null
      lotNumber: string | null
      batchNumber: string | null
      expiryDate: Date | null
      serialNumbers: Prisma.JsonValue | null
      receivedLocation: string | null
      notes: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["goodsReceiptItem"]>
    composites: {}
  }

  type GoodsReceiptItemGetPayload<S extends boolean | null | undefined | GoodsReceiptItemDefaultArgs> = $Result.GetResult<Prisma.$GoodsReceiptItemPayload, S>

  type GoodsReceiptItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<GoodsReceiptItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: GoodsReceiptItemCountAggregateInputType | true
    }

  export interface GoodsReceiptItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['GoodsReceiptItem'], meta: { name: 'GoodsReceiptItem' } }
    /**
     * Find zero or one GoodsReceiptItem that matches the filter.
     * @param {GoodsReceiptItemFindUniqueArgs} args - Arguments to find a GoodsReceiptItem
     * @example
     * // Get one GoodsReceiptItem
     * const goodsReceiptItem = await prisma.goodsReceiptItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends GoodsReceiptItemFindUniqueArgs>(args: SelectSubset<T, GoodsReceiptItemFindUniqueArgs<ExtArgs>>): Prisma__GoodsReceiptItemClient<$Result.GetResult<Prisma.$GoodsReceiptItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one GoodsReceiptItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {GoodsReceiptItemFindUniqueOrThrowArgs} args - Arguments to find a GoodsReceiptItem
     * @example
     * // Get one GoodsReceiptItem
     * const goodsReceiptItem = await prisma.goodsReceiptItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends GoodsReceiptItemFindUniqueOrThrowArgs>(args: SelectSubset<T, GoodsReceiptItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__GoodsReceiptItemClient<$Result.GetResult<Prisma.$GoodsReceiptItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first GoodsReceiptItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoodsReceiptItemFindFirstArgs} args - Arguments to find a GoodsReceiptItem
     * @example
     * // Get one GoodsReceiptItem
     * const goodsReceiptItem = await prisma.goodsReceiptItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends GoodsReceiptItemFindFirstArgs>(args?: SelectSubset<T, GoodsReceiptItemFindFirstArgs<ExtArgs>>): Prisma__GoodsReceiptItemClient<$Result.GetResult<Prisma.$GoodsReceiptItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first GoodsReceiptItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoodsReceiptItemFindFirstOrThrowArgs} args - Arguments to find a GoodsReceiptItem
     * @example
     * // Get one GoodsReceiptItem
     * const goodsReceiptItem = await prisma.goodsReceiptItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends GoodsReceiptItemFindFirstOrThrowArgs>(args?: SelectSubset<T, GoodsReceiptItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__GoodsReceiptItemClient<$Result.GetResult<Prisma.$GoodsReceiptItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more GoodsReceiptItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoodsReceiptItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all GoodsReceiptItems
     * const goodsReceiptItems = await prisma.goodsReceiptItem.findMany()
     * 
     * // Get first 10 GoodsReceiptItems
     * const goodsReceiptItems = await prisma.goodsReceiptItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const goodsReceiptItemWithIdOnly = await prisma.goodsReceiptItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends GoodsReceiptItemFindManyArgs>(args?: SelectSubset<T, GoodsReceiptItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GoodsReceiptItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a GoodsReceiptItem.
     * @param {GoodsReceiptItemCreateArgs} args - Arguments to create a GoodsReceiptItem.
     * @example
     * // Create one GoodsReceiptItem
     * const GoodsReceiptItem = await prisma.goodsReceiptItem.create({
     *   data: {
     *     // ... data to create a GoodsReceiptItem
     *   }
     * })
     * 
     */
    create<T extends GoodsReceiptItemCreateArgs>(args: SelectSubset<T, GoodsReceiptItemCreateArgs<ExtArgs>>): Prisma__GoodsReceiptItemClient<$Result.GetResult<Prisma.$GoodsReceiptItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many GoodsReceiptItems.
     * @param {GoodsReceiptItemCreateManyArgs} args - Arguments to create many GoodsReceiptItems.
     * @example
     * // Create many GoodsReceiptItems
     * const goodsReceiptItem = await prisma.goodsReceiptItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends GoodsReceiptItemCreateManyArgs>(args?: SelectSubset<T, GoodsReceiptItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many GoodsReceiptItems and returns the data saved in the database.
     * @param {GoodsReceiptItemCreateManyAndReturnArgs} args - Arguments to create many GoodsReceiptItems.
     * @example
     * // Create many GoodsReceiptItems
     * const goodsReceiptItem = await prisma.goodsReceiptItem.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many GoodsReceiptItems and only return the `id`
     * const goodsReceiptItemWithIdOnly = await prisma.goodsReceiptItem.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends GoodsReceiptItemCreateManyAndReturnArgs>(args?: SelectSubset<T, GoodsReceiptItemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GoodsReceiptItemPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a GoodsReceiptItem.
     * @param {GoodsReceiptItemDeleteArgs} args - Arguments to delete one GoodsReceiptItem.
     * @example
     * // Delete one GoodsReceiptItem
     * const GoodsReceiptItem = await prisma.goodsReceiptItem.delete({
     *   where: {
     *     // ... filter to delete one GoodsReceiptItem
     *   }
     * })
     * 
     */
    delete<T extends GoodsReceiptItemDeleteArgs>(args: SelectSubset<T, GoodsReceiptItemDeleteArgs<ExtArgs>>): Prisma__GoodsReceiptItemClient<$Result.GetResult<Prisma.$GoodsReceiptItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one GoodsReceiptItem.
     * @param {GoodsReceiptItemUpdateArgs} args - Arguments to update one GoodsReceiptItem.
     * @example
     * // Update one GoodsReceiptItem
     * const goodsReceiptItem = await prisma.goodsReceiptItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends GoodsReceiptItemUpdateArgs>(args: SelectSubset<T, GoodsReceiptItemUpdateArgs<ExtArgs>>): Prisma__GoodsReceiptItemClient<$Result.GetResult<Prisma.$GoodsReceiptItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more GoodsReceiptItems.
     * @param {GoodsReceiptItemDeleteManyArgs} args - Arguments to filter GoodsReceiptItems to delete.
     * @example
     * // Delete a few GoodsReceiptItems
     * const { count } = await prisma.goodsReceiptItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends GoodsReceiptItemDeleteManyArgs>(args?: SelectSubset<T, GoodsReceiptItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more GoodsReceiptItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoodsReceiptItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many GoodsReceiptItems
     * const goodsReceiptItem = await prisma.goodsReceiptItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends GoodsReceiptItemUpdateManyArgs>(args: SelectSubset<T, GoodsReceiptItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more GoodsReceiptItems and returns the data updated in the database.
     * @param {GoodsReceiptItemUpdateManyAndReturnArgs} args - Arguments to update many GoodsReceiptItems.
     * @example
     * // Update many GoodsReceiptItems
     * const goodsReceiptItem = await prisma.goodsReceiptItem.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more GoodsReceiptItems and only return the `id`
     * const goodsReceiptItemWithIdOnly = await prisma.goodsReceiptItem.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends GoodsReceiptItemUpdateManyAndReturnArgs>(args: SelectSubset<T, GoodsReceiptItemUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GoodsReceiptItemPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one GoodsReceiptItem.
     * @param {GoodsReceiptItemUpsertArgs} args - Arguments to update or create a GoodsReceiptItem.
     * @example
     * // Update or create a GoodsReceiptItem
     * const goodsReceiptItem = await prisma.goodsReceiptItem.upsert({
     *   create: {
     *     // ... data to create a GoodsReceiptItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the GoodsReceiptItem we want to update
     *   }
     * })
     */
    upsert<T extends GoodsReceiptItemUpsertArgs>(args: SelectSubset<T, GoodsReceiptItemUpsertArgs<ExtArgs>>): Prisma__GoodsReceiptItemClient<$Result.GetResult<Prisma.$GoodsReceiptItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of GoodsReceiptItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoodsReceiptItemCountArgs} args - Arguments to filter GoodsReceiptItems to count.
     * @example
     * // Count the number of GoodsReceiptItems
     * const count = await prisma.goodsReceiptItem.count({
     *   where: {
     *     // ... the filter for the GoodsReceiptItems we want to count
     *   }
     * })
    **/
    count<T extends GoodsReceiptItemCountArgs>(
      args?: Subset<T, GoodsReceiptItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], GoodsReceiptItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a GoodsReceiptItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoodsReceiptItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends GoodsReceiptItemAggregateArgs>(args: Subset<T, GoodsReceiptItemAggregateArgs>): Prisma.PrismaPromise<GetGoodsReceiptItemAggregateType<T>>

    /**
     * Group by GoodsReceiptItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoodsReceiptItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends GoodsReceiptItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: GoodsReceiptItemGroupByArgs['orderBy'] }
        : { orderBy?: GoodsReceiptItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, GoodsReceiptItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGoodsReceiptItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the GoodsReceiptItem model
   */
  readonly fields: GoodsReceiptItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for GoodsReceiptItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__GoodsReceiptItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    goodsReceipt<T extends GoodsReceiptDefaultArgs<ExtArgs> = {}>(args?: Subset<T, GoodsReceiptDefaultArgs<ExtArgs>>): Prisma__GoodsReceiptClient<$Result.GetResult<Prisma.$GoodsReceiptPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    variant<T extends GoodsReceiptItem$variantArgs<ExtArgs> = {}>(args?: Subset<T, GoodsReceiptItem$variantArgs<ExtArgs>>): Prisma__ProductVariantClient<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the GoodsReceiptItem model
   */
  interface GoodsReceiptItemFieldRefs {
    readonly id: FieldRef<"GoodsReceiptItem", 'String'>
    readonly goodsReceiptId: FieldRef<"GoodsReceiptItem", 'String'>
    readonly productId: FieldRef<"GoodsReceiptItem", 'String'>
    readonly variantId: FieldRef<"GoodsReceiptItem", 'String'>
    readonly expectedQty: FieldRef<"GoodsReceiptItem", 'Int'>
    readonly receivedQty: FieldRef<"GoodsReceiptItem", 'Int'>
    readonly acceptedQty: FieldRef<"GoodsReceiptItem", 'Int'>
    readonly rejectedQty: FieldRef<"GoodsReceiptItem", 'Int'>
    readonly qcStatus: FieldRef<"GoodsReceiptItem", 'QualityStatus'>
    readonly qcNotes: FieldRef<"GoodsReceiptItem", 'String'>
    readonly rejectionReason: FieldRef<"GoodsReceiptItem", 'String'>
    readonly lotNumber: FieldRef<"GoodsReceiptItem", 'String'>
    readonly batchNumber: FieldRef<"GoodsReceiptItem", 'String'>
    readonly expiryDate: FieldRef<"GoodsReceiptItem", 'DateTime'>
    readonly serialNumbers: FieldRef<"GoodsReceiptItem", 'Json'>
    readonly receivedLocation: FieldRef<"GoodsReceiptItem", 'String'>
    readonly notes: FieldRef<"GoodsReceiptItem", 'String'>
    readonly createdAt: FieldRef<"GoodsReceiptItem", 'DateTime'>
    readonly updatedAt: FieldRef<"GoodsReceiptItem", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * GoodsReceiptItem findUnique
   */
  export type GoodsReceiptItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoodsReceiptItem
     */
    select?: GoodsReceiptItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GoodsReceiptItem
     */
    omit?: GoodsReceiptItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoodsReceiptItemInclude<ExtArgs> | null
    /**
     * Filter, which GoodsReceiptItem to fetch.
     */
    where: GoodsReceiptItemWhereUniqueInput
  }

  /**
   * GoodsReceiptItem findUniqueOrThrow
   */
  export type GoodsReceiptItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoodsReceiptItem
     */
    select?: GoodsReceiptItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GoodsReceiptItem
     */
    omit?: GoodsReceiptItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoodsReceiptItemInclude<ExtArgs> | null
    /**
     * Filter, which GoodsReceiptItem to fetch.
     */
    where: GoodsReceiptItemWhereUniqueInput
  }

  /**
   * GoodsReceiptItem findFirst
   */
  export type GoodsReceiptItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoodsReceiptItem
     */
    select?: GoodsReceiptItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GoodsReceiptItem
     */
    omit?: GoodsReceiptItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoodsReceiptItemInclude<ExtArgs> | null
    /**
     * Filter, which GoodsReceiptItem to fetch.
     */
    where?: GoodsReceiptItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GoodsReceiptItems to fetch.
     */
    orderBy?: GoodsReceiptItemOrderByWithRelationInput | GoodsReceiptItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for GoodsReceiptItems.
     */
    cursor?: GoodsReceiptItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GoodsReceiptItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GoodsReceiptItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of GoodsReceiptItems.
     */
    distinct?: GoodsReceiptItemScalarFieldEnum | GoodsReceiptItemScalarFieldEnum[]
  }

  /**
   * GoodsReceiptItem findFirstOrThrow
   */
  export type GoodsReceiptItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoodsReceiptItem
     */
    select?: GoodsReceiptItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GoodsReceiptItem
     */
    omit?: GoodsReceiptItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoodsReceiptItemInclude<ExtArgs> | null
    /**
     * Filter, which GoodsReceiptItem to fetch.
     */
    where?: GoodsReceiptItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GoodsReceiptItems to fetch.
     */
    orderBy?: GoodsReceiptItemOrderByWithRelationInput | GoodsReceiptItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for GoodsReceiptItems.
     */
    cursor?: GoodsReceiptItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GoodsReceiptItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GoodsReceiptItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of GoodsReceiptItems.
     */
    distinct?: GoodsReceiptItemScalarFieldEnum | GoodsReceiptItemScalarFieldEnum[]
  }

  /**
   * GoodsReceiptItem findMany
   */
  export type GoodsReceiptItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoodsReceiptItem
     */
    select?: GoodsReceiptItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GoodsReceiptItem
     */
    omit?: GoodsReceiptItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoodsReceiptItemInclude<ExtArgs> | null
    /**
     * Filter, which GoodsReceiptItems to fetch.
     */
    where?: GoodsReceiptItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GoodsReceiptItems to fetch.
     */
    orderBy?: GoodsReceiptItemOrderByWithRelationInput | GoodsReceiptItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing GoodsReceiptItems.
     */
    cursor?: GoodsReceiptItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GoodsReceiptItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GoodsReceiptItems.
     */
    skip?: number
    distinct?: GoodsReceiptItemScalarFieldEnum | GoodsReceiptItemScalarFieldEnum[]
  }

  /**
   * GoodsReceiptItem create
   */
  export type GoodsReceiptItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoodsReceiptItem
     */
    select?: GoodsReceiptItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GoodsReceiptItem
     */
    omit?: GoodsReceiptItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoodsReceiptItemInclude<ExtArgs> | null
    /**
     * The data needed to create a GoodsReceiptItem.
     */
    data: XOR<GoodsReceiptItemCreateInput, GoodsReceiptItemUncheckedCreateInput>
  }

  /**
   * GoodsReceiptItem createMany
   */
  export type GoodsReceiptItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many GoodsReceiptItems.
     */
    data: GoodsReceiptItemCreateManyInput | GoodsReceiptItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * GoodsReceiptItem createManyAndReturn
   */
  export type GoodsReceiptItemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoodsReceiptItem
     */
    select?: GoodsReceiptItemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the GoodsReceiptItem
     */
    omit?: GoodsReceiptItemOmit<ExtArgs> | null
    /**
     * The data used to create many GoodsReceiptItems.
     */
    data: GoodsReceiptItemCreateManyInput | GoodsReceiptItemCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoodsReceiptItemIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * GoodsReceiptItem update
   */
  export type GoodsReceiptItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoodsReceiptItem
     */
    select?: GoodsReceiptItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GoodsReceiptItem
     */
    omit?: GoodsReceiptItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoodsReceiptItemInclude<ExtArgs> | null
    /**
     * The data needed to update a GoodsReceiptItem.
     */
    data: XOR<GoodsReceiptItemUpdateInput, GoodsReceiptItemUncheckedUpdateInput>
    /**
     * Choose, which GoodsReceiptItem to update.
     */
    where: GoodsReceiptItemWhereUniqueInput
  }

  /**
   * GoodsReceiptItem updateMany
   */
  export type GoodsReceiptItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update GoodsReceiptItems.
     */
    data: XOR<GoodsReceiptItemUpdateManyMutationInput, GoodsReceiptItemUncheckedUpdateManyInput>
    /**
     * Filter which GoodsReceiptItems to update
     */
    where?: GoodsReceiptItemWhereInput
    /**
     * Limit how many GoodsReceiptItems to update.
     */
    limit?: number
  }

  /**
   * GoodsReceiptItem updateManyAndReturn
   */
  export type GoodsReceiptItemUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoodsReceiptItem
     */
    select?: GoodsReceiptItemSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the GoodsReceiptItem
     */
    omit?: GoodsReceiptItemOmit<ExtArgs> | null
    /**
     * The data used to update GoodsReceiptItems.
     */
    data: XOR<GoodsReceiptItemUpdateManyMutationInput, GoodsReceiptItemUncheckedUpdateManyInput>
    /**
     * Filter which GoodsReceiptItems to update
     */
    where?: GoodsReceiptItemWhereInput
    /**
     * Limit how many GoodsReceiptItems to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoodsReceiptItemIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * GoodsReceiptItem upsert
   */
  export type GoodsReceiptItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoodsReceiptItem
     */
    select?: GoodsReceiptItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GoodsReceiptItem
     */
    omit?: GoodsReceiptItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoodsReceiptItemInclude<ExtArgs> | null
    /**
     * The filter to search for the GoodsReceiptItem to update in case it exists.
     */
    where: GoodsReceiptItemWhereUniqueInput
    /**
     * In case the GoodsReceiptItem found by the `where` argument doesn't exist, create a new GoodsReceiptItem with this data.
     */
    create: XOR<GoodsReceiptItemCreateInput, GoodsReceiptItemUncheckedCreateInput>
    /**
     * In case the GoodsReceiptItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<GoodsReceiptItemUpdateInput, GoodsReceiptItemUncheckedUpdateInput>
  }

  /**
   * GoodsReceiptItem delete
   */
  export type GoodsReceiptItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoodsReceiptItem
     */
    select?: GoodsReceiptItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GoodsReceiptItem
     */
    omit?: GoodsReceiptItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoodsReceiptItemInclude<ExtArgs> | null
    /**
     * Filter which GoodsReceiptItem to delete.
     */
    where: GoodsReceiptItemWhereUniqueInput
  }

  /**
   * GoodsReceiptItem deleteMany
   */
  export type GoodsReceiptItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which GoodsReceiptItems to delete
     */
    where?: GoodsReceiptItemWhereInput
    /**
     * Limit how many GoodsReceiptItems to delete.
     */
    limit?: number
  }

  /**
   * GoodsReceiptItem.variant
   */
  export type GoodsReceiptItem$variantArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductVariant
     */
    omit?: ProductVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    where?: ProductVariantWhereInput
  }

  /**
   * GoodsReceiptItem without action
   */
  export type GoodsReceiptItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoodsReceiptItem
     */
    select?: GoodsReceiptItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GoodsReceiptItem
     */
    omit?: GoodsReceiptItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoodsReceiptItemInclude<ExtArgs> | null
  }


  /**
   * Model Customer
   */

  export type AggregateCustomer = {
    _count: CustomerCountAggregateOutputType | null
    _avg: CustomerAvgAggregateOutputType | null
    _sum: CustomerSumAggregateOutputType | null
    _min: CustomerMinAggregateOutputType | null
    _max: CustomerMaxAggregateOutputType | null
  }

  export type CustomerAvgAggregateOutputType = {
    creditLimit: Decimal | null
  }

  export type CustomerSumAggregateOutputType = {
    creditLimit: Decimal | null
  }

  export type CustomerMinAggregateOutputType = {
    id: string | null
    customerNumber: string | null
    type: $Enums.CustomerType | null
    firstName: string | null
    lastName: string | null
    companyName: string | null
    taxId: string | null
    email: string | null
    phone: string | null
    mobile: string | null
    creditLimit: Decimal | null
    paymentTerms: string | null
    currency: string | null
    preferredLanguage: string | null
    timezone: string | null
    allowMarketing: boolean | null
    source: string | null
    status: $Enums.CustomerStatus | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
  }

  export type CustomerMaxAggregateOutputType = {
    id: string | null
    customerNumber: string | null
    type: $Enums.CustomerType | null
    firstName: string | null
    lastName: string | null
    companyName: string | null
    taxId: string | null
    email: string | null
    phone: string | null
    mobile: string | null
    creditLimit: Decimal | null
    paymentTerms: string | null
    currency: string | null
    preferredLanguage: string | null
    timezone: string | null
    allowMarketing: boolean | null
    source: string | null
    status: $Enums.CustomerStatus | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
  }

  export type CustomerCountAggregateOutputType = {
    id: number
    customerNumber: number
    type: number
    firstName: number
    lastName: number
    companyName: number
    taxId: number
    email: number
    phone: number
    mobile: number
    billingAddress: number
    shippingAddress: number
    creditLimit: number
    paymentTerms: number
    currency: number
    preferredLanguage: number
    timezone: number
    allowMarketing: number
    source: number
    status: number
    notes: number
    createdAt: number
    updatedAt: number
    createdBy: number
    _all: number
  }


  export type CustomerAvgAggregateInputType = {
    creditLimit?: true
  }

  export type CustomerSumAggregateInputType = {
    creditLimit?: true
  }

  export type CustomerMinAggregateInputType = {
    id?: true
    customerNumber?: true
    type?: true
    firstName?: true
    lastName?: true
    companyName?: true
    taxId?: true
    email?: true
    phone?: true
    mobile?: true
    creditLimit?: true
    paymentTerms?: true
    currency?: true
    preferredLanguage?: true
    timezone?: true
    allowMarketing?: true
    source?: true
    status?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
  }

  export type CustomerMaxAggregateInputType = {
    id?: true
    customerNumber?: true
    type?: true
    firstName?: true
    lastName?: true
    companyName?: true
    taxId?: true
    email?: true
    phone?: true
    mobile?: true
    creditLimit?: true
    paymentTerms?: true
    currency?: true
    preferredLanguage?: true
    timezone?: true
    allowMarketing?: true
    source?: true
    status?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
  }

  export type CustomerCountAggregateInputType = {
    id?: true
    customerNumber?: true
    type?: true
    firstName?: true
    lastName?: true
    companyName?: true
    taxId?: true
    email?: true
    phone?: true
    mobile?: true
    billingAddress?: true
    shippingAddress?: true
    creditLimit?: true
    paymentTerms?: true
    currency?: true
    preferredLanguage?: true
    timezone?: true
    allowMarketing?: true
    source?: true
    status?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    _all?: true
  }

  export type CustomerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Customer to aggregate.
     */
    where?: CustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Customers to fetch.
     */
    orderBy?: CustomerOrderByWithRelationInput | CustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Customers
    **/
    _count?: true | CustomerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CustomerAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CustomerSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CustomerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CustomerMaxAggregateInputType
  }

  export type GetCustomerAggregateType<T extends CustomerAggregateArgs> = {
        [P in keyof T & keyof AggregateCustomer]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCustomer[P]>
      : GetScalarType<T[P], AggregateCustomer[P]>
  }




  export type CustomerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CustomerWhereInput
    orderBy?: CustomerOrderByWithAggregationInput | CustomerOrderByWithAggregationInput[]
    by: CustomerScalarFieldEnum[] | CustomerScalarFieldEnum
    having?: CustomerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CustomerCountAggregateInputType | true
    _avg?: CustomerAvgAggregateInputType
    _sum?: CustomerSumAggregateInputType
    _min?: CustomerMinAggregateInputType
    _max?: CustomerMaxAggregateInputType
  }

  export type CustomerGroupByOutputType = {
    id: string
    customerNumber: string
    type: $Enums.CustomerType
    firstName: string | null
    lastName: string | null
    companyName: string | null
    taxId: string | null
    email: string | null
    phone: string | null
    mobile: string | null
    billingAddress: JsonValue | null
    shippingAddress: JsonValue | null
    creditLimit: Decimal | null
    paymentTerms: string | null
    currency: string
    preferredLanguage: string | null
    timezone: string | null
    allowMarketing: boolean
    source: string | null
    status: $Enums.CustomerStatus
    notes: string | null
    createdAt: Date
    updatedAt: Date
    createdBy: string
    _count: CustomerCountAggregateOutputType | null
    _avg: CustomerAvgAggregateOutputType | null
    _sum: CustomerSumAggregateOutputType | null
    _min: CustomerMinAggregateOutputType | null
    _max: CustomerMaxAggregateOutputType | null
  }

  type GetCustomerGroupByPayload<T extends CustomerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CustomerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CustomerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CustomerGroupByOutputType[P]>
            : GetScalarType<T[P], CustomerGroupByOutputType[P]>
        }
      >
    >


  export type CustomerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerNumber?: boolean
    type?: boolean
    firstName?: boolean
    lastName?: boolean
    companyName?: boolean
    taxId?: boolean
    email?: boolean
    phone?: boolean
    mobile?: boolean
    billingAddress?: boolean
    shippingAddress?: boolean
    creditLimit?: boolean
    paymentTerms?: boolean
    currency?: boolean
    preferredLanguage?: boolean
    timezone?: boolean
    allowMarketing?: boolean
    source?: boolean
    status?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    orders?: boolean | Customer$ordersArgs<ExtArgs>
    invoices?: boolean | Customer$invoicesArgs<ExtArgs>
    contacts?: boolean | Customer$contactsArgs<ExtArgs>
    _count?: boolean | CustomerCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["customer"]>

  export type CustomerSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerNumber?: boolean
    type?: boolean
    firstName?: boolean
    lastName?: boolean
    companyName?: boolean
    taxId?: boolean
    email?: boolean
    phone?: boolean
    mobile?: boolean
    billingAddress?: boolean
    shippingAddress?: boolean
    creditLimit?: boolean
    paymentTerms?: boolean
    currency?: boolean
    preferredLanguage?: boolean
    timezone?: boolean
    allowMarketing?: boolean
    source?: boolean
    status?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
  }, ExtArgs["result"]["customer"]>

  export type CustomerSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerNumber?: boolean
    type?: boolean
    firstName?: boolean
    lastName?: boolean
    companyName?: boolean
    taxId?: boolean
    email?: boolean
    phone?: boolean
    mobile?: boolean
    billingAddress?: boolean
    shippingAddress?: boolean
    creditLimit?: boolean
    paymentTerms?: boolean
    currency?: boolean
    preferredLanguage?: boolean
    timezone?: boolean
    allowMarketing?: boolean
    source?: boolean
    status?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
  }, ExtArgs["result"]["customer"]>

  export type CustomerSelectScalar = {
    id?: boolean
    customerNumber?: boolean
    type?: boolean
    firstName?: boolean
    lastName?: boolean
    companyName?: boolean
    taxId?: boolean
    email?: boolean
    phone?: boolean
    mobile?: boolean
    billingAddress?: boolean
    shippingAddress?: boolean
    creditLimit?: boolean
    paymentTerms?: boolean
    currency?: boolean
    preferredLanguage?: boolean
    timezone?: boolean
    allowMarketing?: boolean
    source?: boolean
    status?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
  }

  export type CustomerOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "customerNumber" | "type" | "firstName" | "lastName" | "companyName" | "taxId" | "email" | "phone" | "mobile" | "billingAddress" | "shippingAddress" | "creditLimit" | "paymentTerms" | "currency" | "preferredLanguage" | "timezone" | "allowMarketing" | "source" | "status" | "notes" | "createdAt" | "updatedAt" | "createdBy", ExtArgs["result"]["customer"]>
  export type CustomerInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | Customer$ordersArgs<ExtArgs>
    invoices?: boolean | Customer$invoicesArgs<ExtArgs>
    contacts?: boolean | Customer$contactsArgs<ExtArgs>
    _count?: boolean | CustomerCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CustomerIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type CustomerIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $CustomerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Customer"
    objects: {
      orders: Prisma.$OrderPayload<ExtArgs>[]
      invoices: Prisma.$CustomerInvoicePayload<ExtArgs>[]
      contacts: Prisma.$CustomerContactPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      customerNumber: string
      type: $Enums.CustomerType
      firstName: string | null
      lastName: string | null
      companyName: string | null
      taxId: string | null
      email: string | null
      phone: string | null
      mobile: string | null
      billingAddress: Prisma.JsonValue | null
      shippingAddress: Prisma.JsonValue | null
      creditLimit: Prisma.Decimal | null
      paymentTerms: string | null
      currency: string
      preferredLanguage: string | null
      timezone: string | null
      allowMarketing: boolean
      source: string | null
      status: $Enums.CustomerStatus
      notes: string | null
      createdAt: Date
      updatedAt: Date
      createdBy: string
    }, ExtArgs["result"]["customer"]>
    composites: {}
  }

  type CustomerGetPayload<S extends boolean | null | undefined | CustomerDefaultArgs> = $Result.GetResult<Prisma.$CustomerPayload, S>

  type CustomerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CustomerFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CustomerCountAggregateInputType | true
    }

  export interface CustomerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Customer'], meta: { name: 'Customer' } }
    /**
     * Find zero or one Customer that matches the filter.
     * @param {CustomerFindUniqueArgs} args - Arguments to find a Customer
     * @example
     * // Get one Customer
     * const customer = await prisma.customer.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CustomerFindUniqueArgs>(args: SelectSubset<T, CustomerFindUniqueArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Customer that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CustomerFindUniqueOrThrowArgs} args - Arguments to find a Customer
     * @example
     * // Get one Customer
     * const customer = await prisma.customer.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CustomerFindUniqueOrThrowArgs>(args: SelectSubset<T, CustomerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Customer that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerFindFirstArgs} args - Arguments to find a Customer
     * @example
     * // Get one Customer
     * const customer = await prisma.customer.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CustomerFindFirstArgs>(args?: SelectSubset<T, CustomerFindFirstArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Customer that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerFindFirstOrThrowArgs} args - Arguments to find a Customer
     * @example
     * // Get one Customer
     * const customer = await prisma.customer.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CustomerFindFirstOrThrowArgs>(args?: SelectSubset<T, CustomerFindFirstOrThrowArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Customers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Customers
     * const customers = await prisma.customer.findMany()
     * 
     * // Get first 10 Customers
     * const customers = await prisma.customer.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const customerWithIdOnly = await prisma.customer.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CustomerFindManyArgs>(args?: SelectSubset<T, CustomerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Customer.
     * @param {CustomerCreateArgs} args - Arguments to create a Customer.
     * @example
     * // Create one Customer
     * const Customer = await prisma.customer.create({
     *   data: {
     *     // ... data to create a Customer
     *   }
     * })
     * 
     */
    create<T extends CustomerCreateArgs>(args: SelectSubset<T, CustomerCreateArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Customers.
     * @param {CustomerCreateManyArgs} args - Arguments to create many Customers.
     * @example
     * // Create many Customers
     * const customer = await prisma.customer.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CustomerCreateManyArgs>(args?: SelectSubset<T, CustomerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Customers and returns the data saved in the database.
     * @param {CustomerCreateManyAndReturnArgs} args - Arguments to create many Customers.
     * @example
     * // Create many Customers
     * const customer = await prisma.customer.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Customers and only return the `id`
     * const customerWithIdOnly = await prisma.customer.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CustomerCreateManyAndReturnArgs>(args?: SelectSubset<T, CustomerCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Customer.
     * @param {CustomerDeleteArgs} args - Arguments to delete one Customer.
     * @example
     * // Delete one Customer
     * const Customer = await prisma.customer.delete({
     *   where: {
     *     // ... filter to delete one Customer
     *   }
     * })
     * 
     */
    delete<T extends CustomerDeleteArgs>(args: SelectSubset<T, CustomerDeleteArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Customer.
     * @param {CustomerUpdateArgs} args - Arguments to update one Customer.
     * @example
     * // Update one Customer
     * const customer = await prisma.customer.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CustomerUpdateArgs>(args: SelectSubset<T, CustomerUpdateArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Customers.
     * @param {CustomerDeleteManyArgs} args - Arguments to filter Customers to delete.
     * @example
     * // Delete a few Customers
     * const { count } = await prisma.customer.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CustomerDeleteManyArgs>(args?: SelectSubset<T, CustomerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Customers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Customers
     * const customer = await prisma.customer.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CustomerUpdateManyArgs>(args: SelectSubset<T, CustomerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Customers and returns the data updated in the database.
     * @param {CustomerUpdateManyAndReturnArgs} args - Arguments to update many Customers.
     * @example
     * // Update many Customers
     * const customer = await prisma.customer.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Customers and only return the `id`
     * const customerWithIdOnly = await prisma.customer.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CustomerUpdateManyAndReturnArgs>(args: SelectSubset<T, CustomerUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Customer.
     * @param {CustomerUpsertArgs} args - Arguments to update or create a Customer.
     * @example
     * // Update or create a Customer
     * const customer = await prisma.customer.upsert({
     *   create: {
     *     // ... data to create a Customer
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Customer we want to update
     *   }
     * })
     */
    upsert<T extends CustomerUpsertArgs>(args: SelectSubset<T, CustomerUpsertArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Customers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerCountArgs} args - Arguments to filter Customers to count.
     * @example
     * // Count the number of Customers
     * const count = await prisma.customer.count({
     *   where: {
     *     // ... the filter for the Customers we want to count
     *   }
     * })
    **/
    count<T extends CustomerCountArgs>(
      args?: Subset<T, CustomerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CustomerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Customer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CustomerAggregateArgs>(args: Subset<T, CustomerAggregateArgs>): Prisma.PrismaPromise<GetCustomerAggregateType<T>>

    /**
     * Group by Customer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CustomerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CustomerGroupByArgs['orderBy'] }
        : { orderBy?: CustomerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CustomerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCustomerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Customer model
   */
  readonly fields: CustomerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Customer.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CustomerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    orders<T extends Customer$ordersArgs<ExtArgs> = {}>(args?: Subset<T, Customer$ordersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    invoices<T extends Customer$invoicesArgs<ExtArgs> = {}>(args?: Subset<T, Customer$invoicesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerInvoicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    contacts<T extends Customer$contactsArgs<ExtArgs> = {}>(args?: Subset<T, Customer$contactsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerContactPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Customer model
   */
  interface CustomerFieldRefs {
    readonly id: FieldRef<"Customer", 'String'>
    readonly customerNumber: FieldRef<"Customer", 'String'>
    readonly type: FieldRef<"Customer", 'CustomerType'>
    readonly firstName: FieldRef<"Customer", 'String'>
    readonly lastName: FieldRef<"Customer", 'String'>
    readonly companyName: FieldRef<"Customer", 'String'>
    readonly taxId: FieldRef<"Customer", 'String'>
    readonly email: FieldRef<"Customer", 'String'>
    readonly phone: FieldRef<"Customer", 'String'>
    readonly mobile: FieldRef<"Customer", 'String'>
    readonly billingAddress: FieldRef<"Customer", 'Json'>
    readonly shippingAddress: FieldRef<"Customer", 'Json'>
    readonly creditLimit: FieldRef<"Customer", 'Decimal'>
    readonly paymentTerms: FieldRef<"Customer", 'String'>
    readonly currency: FieldRef<"Customer", 'String'>
    readonly preferredLanguage: FieldRef<"Customer", 'String'>
    readonly timezone: FieldRef<"Customer", 'String'>
    readonly allowMarketing: FieldRef<"Customer", 'Boolean'>
    readonly source: FieldRef<"Customer", 'String'>
    readonly status: FieldRef<"Customer", 'CustomerStatus'>
    readonly notes: FieldRef<"Customer", 'String'>
    readonly createdAt: FieldRef<"Customer", 'DateTime'>
    readonly updatedAt: FieldRef<"Customer", 'DateTime'>
    readonly createdBy: FieldRef<"Customer", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Customer findUnique
   */
  export type CustomerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customer to fetch.
     */
    where: CustomerWhereUniqueInput
  }

  /**
   * Customer findUniqueOrThrow
   */
  export type CustomerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customer to fetch.
     */
    where: CustomerWhereUniqueInput
  }

  /**
   * Customer findFirst
   */
  export type CustomerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customer to fetch.
     */
    where?: CustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Customers to fetch.
     */
    orderBy?: CustomerOrderByWithRelationInput | CustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Customers.
     */
    cursor?: CustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Customers.
     */
    distinct?: CustomerScalarFieldEnum | CustomerScalarFieldEnum[]
  }

  /**
   * Customer findFirstOrThrow
   */
  export type CustomerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customer to fetch.
     */
    where?: CustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Customers to fetch.
     */
    orderBy?: CustomerOrderByWithRelationInput | CustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Customers.
     */
    cursor?: CustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Customers.
     */
    distinct?: CustomerScalarFieldEnum | CustomerScalarFieldEnum[]
  }

  /**
   * Customer findMany
   */
  export type CustomerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customers to fetch.
     */
    where?: CustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Customers to fetch.
     */
    orderBy?: CustomerOrderByWithRelationInput | CustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Customers.
     */
    cursor?: CustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Customers.
     */
    skip?: number
    distinct?: CustomerScalarFieldEnum | CustomerScalarFieldEnum[]
  }

  /**
   * Customer create
   */
  export type CustomerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * The data needed to create a Customer.
     */
    data: XOR<CustomerCreateInput, CustomerUncheckedCreateInput>
  }

  /**
   * Customer createMany
   */
  export type CustomerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Customers.
     */
    data: CustomerCreateManyInput | CustomerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Customer createManyAndReturn
   */
  export type CustomerCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * The data used to create many Customers.
     */
    data: CustomerCreateManyInput | CustomerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Customer update
   */
  export type CustomerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * The data needed to update a Customer.
     */
    data: XOR<CustomerUpdateInput, CustomerUncheckedUpdateInput>
    /**
     * Choose, which Customer to update.
     */
    where: CustomerWhereUniqueInput
  }

  /**
   * Customer updateMany
   */
  export type CustomerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Customers.
     */
    data: XOR<CustomerUpdateManyMutationInput, CustomerUncheckedUpdateManyInput>
    /**
     * Filter which Customers to update
     */
    where?: CustomerWhereInput
    /**
     * Limit how many Customers to update.
     */
    limit?: number
  }

  /**
   * Customer updateManyAndReturn
   */
  export type CustomerUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * The data used to update Customers.
     */
    data: XOR<CustomerUpdateManyMutationInput, CustomerUncheckedUpdateManyInput>
    /**
     * Filter which Customers to update
     */
    where?: CustomerWhereInput
    /**
     * Limit how many Customers to update.
     */
    limit?: number
  }

  /**
   * Customer upsert
   */
  export type CustomerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * The filter to search for the Customer to update in case it exists.
     */
    where: CustomerWhereUniqueInput
    /**
     * In case the Customer found by the `where` argument doesn't exist, create a new Customer with this data.
     */
    create: XOR<CustomerCreateInput, CustomerUncheckedCreateInput>
    /**
     * In case the Customer was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CustomerUpdateInput, CustomerUncheckedUpdateInput>
  }

  /**
   * Customer delete
   */
  export type CustomerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter which Customer to delete.
     */
    where: CustomerWhereUniqueInput
  }

  /**
   * Customer deleteMany
   */
  export type CustomerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Customers to delete
     */
    where?: CustomerWhereInput
    /**
     * Limit how many Customers to delete.
     */
    limit?: number
  }

  /**
   * Customer.orders
   */
  export type Customer$ordersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Customer.invoices
   */
  export type Customer$invoicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerInvoice
     */
    select?: CustomerInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerInvoice
     */
    omit?: CustomerInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInvoiceInclude<ExtArgs> | null
    where?: CustomerInvoiceWhereInput
    orderBy?: CustomerInvoiceOrderByWithRelationInput | CustomerInvoiceOrderByWithRelationInput[]
    cursor?: CustomerInvoiceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CustomerInvoiceScalarFieldEnum | CustomerInvoiceScalarFieldEnum[]
  }

  /**
   * Customer.contacts
   */
  export type Customer$contactsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerContact
     */
    select?: CustomerContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerContact
     */
    omit?: CustomerContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerContactInclude<ExtArgs> | null
    where?: CustomerContactWhereInput
    orderBy?: CustomerContactOrderByWithRelationInput | CustomerContactOrderByWithRelationInput[]
    cursor?: CustomerContactWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CustomerContactScalarFieldEnum | CustomerContactScalarFieldEnum[]
  }

  /**
   * Customer without action
   */
  export type CustomerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
  }


  /**
   * Model CustomerContact
   */

  export type AggregateCustomerContact = {
    _count: CustomerContactCountAggregateOutputType | null
    _min: CustomerContactMinAggregateOutputType | null
    _max: CustomerContactMaxAggregateOutputType | null
  }

  export type CustomerContactMinAggregateOutputType = {
    id: string | null
    customerId: string | null
    name: string | null
    title: string | null
    email: string | null
    phone: string | null
    mobile: string | null
    isPrimary: boolean | null
    department: string | null
    isActive: boolean | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CustomerContactMaxAggregateOutputType = {
    id: string | null
    customerId: string | null
    name: string | null
    title: string | null
    email: string | null
    phone: string | null
    mobile: string | null
    isPrimary: boolean | null
    department: string | null
    isActive: boolean | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CustomerContactCountAggregateOutputType = {
    id: number
    customerId: number
    name: number
    title: number
    email: number
    phone: number
    mobile: number
    isPrimary: number
    department: number
    isActive: number
    notes: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CustomerContactMinAggregateInputType = {
    id?: true
    customerId?: true
    name?: true
    title?: true
    email?: true
    phone?: true
    mobile?: true
    isPrimary?: true
    department?: true
    isActive?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CustomerContactMaxAggregateInputType = {
    id?: true
    customerId?: true
    name?: true
    title?: true
    email?: true
    phone?: true
    mobile?: true
    isPrimary?: true
    department?: true
    isActive?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CustomerContactCountAggregateInputType = {
    id?: true
    customerId?: true
    name?: true
    title?: true
    email?: true
    phone?: true
    mobile?: true
    isPrimary?: true
    department?: true
    isActive?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CustomerContactAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CustomerContact to aggregate.
     */
    where?: CustomerContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomerContacts to fetch.
     */
    orderBy?: CustomerContactOrderByWithRelationInput | CustomerContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CustomerContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomerContacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomerContacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CustomerContacts
    **/
    _count?: true | CustomerContactCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CustomerContactMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CustomerContactMaxAggregateInputType
  }

  export type GetCustomerContactAggregateType<T extends CustomerContactAggregateArgs> = {
        [P in keyof T & keyof AggregateCustomerContact]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCustomerContact[P]>
      : GetScalarType<T[P], AggregateCustomerContact[P]>
  }




  export type CustomerContactGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CustomerContactWhereInput
    orderBy?: CustomerContactOrderByWithAggregationInput | CustomerContactOrderByWithAggregationInput[]
    by: CustomerContactScalarFieldEnum[] | CustomerContactScalarFieldEnum
    having?: CustomerContactScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CustomerContactCountAggregateInputType | true
    _min?: CustomerContactMinAggregateInputType
    _max?: CustomerContactMaxAggregateInputType
  }

  export type CustomerContactGroupByOutputType = {
    id: string
    customerId: string
    name: string
    title: string | null
    email: string | null
    phone: string | null
    mobile: string | null
    isPrimary: boolean
    department: string | null
    isActive: boolean
    notes: string | null
    createdAt: Date
    updatedAt: Date
    _count: CustomerContactCountAggregateOutputType | null
    _min: CustomerContactMinAggregateOutputType | null
    _max: CustomerContactMaxAggregateOutputType | null
  }

  type GetCustomerContactGroupByPayload<T extends CustomerContactGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CustomerContactGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CustomerContactGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CustomerContactGroupByOutputType[P]>
            : GetScalarType<T[P], CustomerContactGroupByOutputType[P]>
        }
      >
    >


  export type CustomerContactSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerId?: boolean
    name?: boolean
    title?: boolean
    email?: boolean
    phone?: boolean
    mobile?: boolean
    isPrimary?: boolean
    department?: boolean
    isActive?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    customer?: boolean | CustomerDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["customerContact"]>

  export type CustomerContactSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerId?: boolean
    name?: boolean
    title?: boolean
    email?: boolean
    phone?: boolean
    mobile?: boolean
    isPrimary?: boolean
    department?: boolean
    isActive?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    customer?: boolean | CustomerDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["customerContact"]>

  export type CustomerContactSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerId?: boolean
    name?: boolean
    title?: boolean
    email?: boolean
    phone?: boolean
    mobile?: boolean
    isPrimary?: boolean
    department?: boolean
    isActive?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    customer?: boolean | CustomerDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["customerContact"]>

  export type CustomerContactSelectScalar = {
    id?: boolean
    customerId?: boolean
    name?: boolean
    title?: boolean
    email?: boolean
    phone?: boolean
    mobile?: boolean
    isPrimary?: boolean
    department?: boolean
    isActive?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CustomerContactOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "customerId" | "name" | "title" | "email" | "phone" | "mobile" | "isPrimary" | "department" | "isActive" | "notes" | "createdAt" | "updatedAt", ExtArgs["result"]["customerContact"]>
  export type CustomerContactInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer?: boolean | CustomerDefaultArgs<ExtArgs>
  }
  export type CustomerContactIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer?: boolean | CustomerDefaultArgs<ExtArgs>
  }
  export type CustomerContactIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer?: boolean | CustomerDefaultArgs<ExtArgs>
  }

  export type $CustomerContactPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CustomerContact"
    objects: {
      customer: Prisma.$CustomerPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      customerId: string
      name: string
      title: string | null
      email: string | null
      phone: string | null
      mobile: string | null
      isPrimary: boolean
      department: string | null
      isActive: boolean
      notes: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["customerContact"]>
    composites: {}
  }

  type CustomerContactGetPayload<S extends boolean | null | undefined | CustomerContactDefaultArgs> = $Result.GetResult<Prisma.$CustomerContactPayload, S>

  type CustomerContactCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CustomerContactFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CustomerContactCountAggregateInputType | true
    }

  export interface CustomerContactDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CustomerContact'], meta: { name: 'CustomerContact' } }
    /**
     * Find zero or one CustomerContact that matches the filter.
     * @param {CustomerContactFindUniqueArgs} args - Arguments to find a CustomerContact
     * @example
     * // Get one CustomerContact
     * const customerContact = await prisma.customerContact.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CustomerContactFindUniqueArgs>(args: SelectSubset<T, CustomerContactFindUniqueArgs<ExtArgs>>): Prisma__CustomerContactClient<$Result.GetResult<Prisma.$CustomerContactPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CustomerContact that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CustomerContactFindUniqueOrThrowArgs} args - Arguments to find a CustomerContact
     * @example
     * // Get one CustomerContact
     * const customerContact = await prisma.customerContact.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CustomerContactFindUniqueOrThrowArgs>(args: SelectSubset<T, CustomerContactFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CustomerContactClient<$Result.GetResult<Prisma.$CustomerContactPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CustomerContact that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerContactFindFirstArgs} args - Arguments to find a CustomerContact
     * @example
     * // Get one CustomerContact
     * const customerContact = await prisma.customerContact.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CustomerContactFindFirstArgs>(args?: SelectSubset<T, CustomerContactFindFirstArgs<ExtArgs>>): Prisma__CustomerContactClient<$Result.GetResult<Prisma.$CustomerContactPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CustomerContact that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerContactFindFirstOrThrowArgs} args - Arguments to find a CustomerContact
     * @example
     * // Get one CustomerContact
     * const customerContact = await prisma.customerContact.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CustomerContactFindFirstOrThrowArgs>(args?: SelectSubset<T, CustomerContactFindFirstOrThrowArgs<ExtArgs>>): Prisma__CustomerContactClient<$Result.GetResult<Prisma.$CustomerContactPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CustomerContacts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerContactFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CustomerContacts
     * const customerContacts = await prisma.customerContact.findMany()
     * 
     * // Get first 10 CustomerContacts
     * const customerContacts = await prisma.customerContact.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const customerContactWithIdOnly = await prisma.customerContact.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CustomerContactFindManyArgs>(args?: SelectSubset<T, CustomerContactFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerContactPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CustomerContact.
     * @param {CustomerContactCreateArgs} args - Arguments to create a CustomerContact.
     * @example
     * // Create one CustomerContact
     * const CustomerContact = await prisma.customerContact.create({
     *   data: {
     *     // ... data to create a CustomerContact
     *   }
     * })
     * 
     */
    create<T extends CustomerContactCreateArgs>(args: SelectSubset<T, CustomerContactCreateArgs<ExtArgs>>): Prisma__CustomerContactClient<$Result.GetResult<Prisma.$CustomerContactPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CustomerContacts.
     * @param {CustomerContactCreateManyArgs} args - Arguments to create many CustomerContacts.
     * @example
     * // Create many CustomerContacts
     * const customerContact = await prisma.customerContact.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CustomerContactCreateManyArgs>(args?: SelectSubset<T, CustomerContactCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CustomerContacts and returns the data saved in the database.
     * @param {CustomerContactCreateManyAndReturnArgs} args - Arguments to create many CustomerContacts.
     * @example
     * // Create many CustomerContacts
     * const customerContact = await prisma.customerContact.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CustomerContacts and only return the `id`
     * const customerContactWithIdOnly = await prisma.customerContact.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CustomerContactCreateManyAndReturnArgs>(args?: SelectSubset<T, CustomerContactCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerContactPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CustomerContact.
     * @param {CustomerContactDeleteArgs} args - Arguments to delete one CustomerContact.
     * @example
     * // Delete one CustomerContact
     * const CustomerContact = await prisma.customerContact.delete({
     *   where: {
     *     // ... filter to delete one CustomerContact
     *   }
     * })
     * 
     */
    delete<T extends CustomerContactDeleteArgs>(args: SelectSubset<T, CustomerContactDeleteArgs<ExtArgs>>): Prisma__CustomerContactClient<$Result.GetResult<Prisma.$CustomerContactPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CustomerContact.
     * @param {CustomerContactUpdateArgs} args - Arguments to update one CustomerContact.
     * @example
     * // Update one CustomerContact
     * const customerContact = await prisma.customerContact.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CustomerContactUpdateArgs>(args: SelectSubset<T, CustomerContactUpdateArgs<ExtArgs>>): Prisma__CustomerContactClient<$Result.GetResult<Prisma.$CustomerContactPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CustomerContacts.
     * @param {CustomerContactDeleteManyArgs} args - Arguments to filter CustomerContacts to delete.
     * @example
     * // Delete a few CustomerContacts
     * const { count } = await prisma.customerContact.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CustomerContactDeleteManyArgs>(args?: SelectSubset<T, CustomerContactDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CustomerContacts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerContactUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CustomerContacts
     * const customerContact = await prisma.customerContact.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CustomerContactUpdateManyArgs>(args: SelectSubset<T, CustomerContactUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CustomerContacts and returns the data updated in the database.
     * @param {CustomerContactUpdateManyAndReturnArgs} args - Arguments to update many CustomerContacts.
     * @example
     * // Update many CustomerContacts
     * const customerContact = await prisma.customerContact.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CustomerContacts and only return the `id`
     * const customerContactWithIdOnly = await prisma.customerContact.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CustomerContactUpdateManyAndReturnArgs>(args: SelectSubset<T, CustomerContactUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerContactPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CustomerContact.
     * @param {CustomerContactUpsertArgs} args - Arguments to update or create a CustomerContact.
     * @example
     * // Update or create a CustomerContact
     * const customerContact = await prisma.customerContact.upsert({
     *   create: {
     *     // ... data to create a CustomerContact
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CustomerContact we want to update
     *   }
     * })
     */
    upsert<T extends CustomerContactUpsertArgs>(args: SelectSubset<T, CustomerContactUpsertArgs<ExtArgs>>): Prisma__CustomerContactClient<$Result.GetResult<Prisma.$CustomerContactPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CustomerContacts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerContactCountArgs} args - Arguments to filter CustomerContacts to count.
     * @example
     * // Count the number of CustomerContacts
     * const count = await prisma.customerContact.count({
     *   where: {
     *     // ... the filter for the CustomerContacts we want to count
     *   }
     * })
    **/
    count<T extends CustomerContactCountArgs>(
      args?: Subset<T, CustomerContactCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CustomerContactCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CustomerContact.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerContactAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CustomerContactAggregateArgs>(args: Subset<T, CustomerContactAggregateArgs>): Prisma.PrismaPromise<GetCustomerContactAggregateType<T>>

    /**
     * Group by CustomerContact.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerContactGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CustomerContactGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CustomerContactGroupByArgs['orderBy'] }
        : { orderBy?: CustomerContactGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CustomerContactGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCustomerContactGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CustomerContact model
   */
  readonly fields: CustomerContactFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CustomerContact.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CustomerContactClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    customer<T extends CustomerDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CustomerDefaultArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CustomerContact model
   */
  interface CustomerContactFieldRefs {
    readonly id: FieldRef<"CustomerContact", 'String'>
    readonly customerId: FieldRef<"CustomerContact", 'String'>
    readonly name: FieldRef<"CustomerContact", 'String'>
    readonly title: FieldRef<"CustomerContact", 'String'>
    readonly email: FieldRef<"CustomerContact", 'String'>
    readonly phone: FieldRef<"CustomerContact", 'String'>
    readonly mobile: FieldRef<"CustomerContact", 'String'>
    readonly isPrimary: FieldRef<"CustomerContact", 'Boolean'>
    readonly department: FieldRef<"CustomerContact", 'String'>
    readonly isActive: FieldRef<"CustomerContact", 'Boolean'>
    readonly notes: FieldRef<"CustomerContact", 'String'>
    readonly createdAt: FieldRef<"CustomerContact", 'DateTime'>
    readonly updatedAt: FieldRef<"CustomerContact", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CustomerContact findUnique
   */
  export type CustomerContactFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerContact
     */
    select?: CustomerContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerContact
     */
    omit?: CustomerContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerContactInclude<ExtArgs> | null
    /**
     * Filter, which CustomerContact to fetch.
     */
    where: CustomerContactWhereUniqueInput
  }

  /**
   * CustomerContact findUniqueOrThrow
   */
  export type CustomerContactFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerContact
     */
    select?: CustomerContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerContact
     */
    omit?: CustomerContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerContactInclude<ExtArgs> | null
    /**
     * Filter, which CustomerContact to fetch.
     */
    where: CustomerContactWhereUniqueInput
  }

  /**
   * CustomerContact findFirst
   */
  export type CustomerContactFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerContact
     */
    select?: CustomerContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerContact
     */
    omit?: CustomerContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerContactInclude<ExtArgs> | null
    /**
     * Filter, which CustomerContact to fetch.
     */
    where?: CustomerContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomerContacts to fetch.
     */
    orderBy?: CustomerContactOrderByWithRelationInput | CustomerContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CustomerContacts.
     */
    cursor?: CustomerContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomerContacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomerContacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CustomerContacts.
     */
    distinct?: CustomerContactScalarFieldEnum | CustomerContactScalarFieldEnum[]
  }

  /**
   * CustomerContact findFirstOrThrow
   */
  export type CustomerContactFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerContact
     */
    select?: CustomerContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerContact
     */
    omit?: CustomerContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerContactInclude<ExtArgs> | null
    /**
     * Filter, which CustomerContact to fetch.
     */
    where?: CustomerContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomerContacts to fetch.
     */
    orderBy?: CustomerContactOrderByWithRelationInput | CustomerContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CustomerContacts.
     */
    cursor?: CustomerContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomerContacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomerContacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CustomerContacts.
     */
    distinct?: CustomerContactScalarFieldEnum | CustomerContactScalarFieldEnum[]
  }

  /**
   * CustomerContact findMany
   */
  export type CustomerContactFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerContact
     */
    select?: CustomerContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerContact
     */
    omit?: CustomerContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerContactInclude<ExtArgs> | null
    /**
     * Filter, which CustomerContacts to fetch.
     */
    where?: CustomerContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomerContacts to fetch.
     */
    orderBy?: CustomerContactOrderByWithRelationInput | CustomerContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CustomerContacts.
     */
    cursor?: CustomerContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomerContacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomerContacts.
     */
    skip?: number
    distinct?: CustomerContactScalarFieldEnum | CustomerContactScalarFieldEnum[]
  }

  /**
   * CustomerContact create
   */
  export type CustomerContactCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerContact
     */
    select?: CustomerContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerContact
     */
    omit?: CustomerContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerContactInclude<ExtArgs> | null
    /**
     * The data needed to create a CustomerContact.
     */
    data: XOR<CustomerContactCreateInput, CustomerContactUncheckedCreateInput>
  }

  /**
   * CustomerContact createMany
   */
  export type CustomerContactCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CustomerContacts.
     */
    data: CustomerContactCreateManyInput | CustomerContactCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CustomerContact createManyAndReturn
   */
  export type CustomerContactCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerContact
     */
    select?: CustomerContactSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerContact
     */
    omit?: CustomerContactOmit<ExtArgs> | null
    /**
     * The data used to create many CustomerContacts.
     */
    data: CustomerContactCreateManyInput | CustomerContactCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerContactIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CustomerContact update
   */
  export type CustomerContactUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerContact
     */
    select?: CustomerContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerContact
     */
    omit?: CustomerContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerContactInclude<ExtArgs> | null
    /**
     * The data needed to update a CustomerContact.
     */
    data: XOR<CustomerContactUpdateInput, CustomerContactUncheckedUpdateInput>
    /**
     * Choose, which CustomerContact to update.
     */
    where: CustomerContactWhereUniqueInput
  }

  /**
   * CustomerContact updateMany
   */
  export type CustomerContactUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CustomerContacts.
     */
    data: XOR<CustomerContactUpdateManyMutationInput, CustomerContactUncheckedUpdateManyInput>
    /**
     * Filter which CustomerContacts to update
     */
    where?: CustomerContactWhereInput
    /**
     * Limit how many CustomerContacts to update.
     */
    limit?: number
  }

  /**
   * CustomerContact updateManyAndReturn
   */
  export type CustomerContactUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerContact
     */
    select?: CustomerContactSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerContact
     */
    omit?: CustomerContactOmit<ExtArgs> | null
    /**
     * The data used to update CustomerContacts.
     */
    data: XOR<CustomerContactUpdateManyMutationInput, CustomerContactUncheckedUpdateManyInput>
    /**
     * Filter which CustomerContacts to update
     */
    where?: CustomerContactWhereInput
    /**
     * Limit how many CustomerContacts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerContactIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CustomerContact upsert
   */
  export type CustomerContactUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerContact
     */
    select?: CustomerContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerContact
     */
    omit?: CustomerContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerContactInclude<ExtArgs> | null
    /**
     * The filter to search for the CustomerContact to update in case it exists.
     */
    where: CustomerContactWhereUniqueInput
    /**
     * In case the CustomerContact found by the `where` argument doesn't exist, create a new CustomerContact with this data.
     */
    create: XOR<CustomerContactCreateInput, CustomerContactUncheckedCreateInput>
    /**
     * In case the CustomerContact was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CustomerContactUpdateInput, CustomerContactUncheckedUpdateInput>
  }

  /**
   * CustomerContact delete
   */
  export type CustomerContactDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerContact
     */
    select?: CustomerContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerContact
     */
    omit?: CustomerContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerContactInclude<ExtArgs> | null
    /**
     * Filter which CustomerContact to delete.
     */
    where: CustomerContactWhereUniqueInput
  }

  /**
   * CustomerContact deleteMany
   */
  export type CustomerContactDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CustomerContacts to delete
     */
    where?: CustomerContactWhereInput
    /**
     * Limit how many CustomerContacts to delete.
     */
    limit?: number
  }

  /**
   * CustomerContact without action
   */
  export type CustomerContactDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerContact
     */
    select?: CustomerContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerContact
     */
    omit?: CustomerContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerContactInclude<ExtArgs> | null
  }


  /**
   * Model Order
   */

  export type AggregateOrder = {
    _count: OrderCountAggregateOutputType | null
    _avg: OrderAvgAggregateOutputType | null
    _sum: OrderSumAggregateOutputType | null
    _min: OrderMinAggregateOutputType | null
    _max: OrderMaxAggregateOutputType | null
  }

  export type OrderAvgAggregateOutputType = {
    subtotal: Decimal | null
    taxAmount: Decimal | null
    shippingCost: Decimal | null
    discountAmount: Decimal | null
    totalAmount: Decimal | null
  }

  export type OrderSumAggregateOutputType = {
    subtotal: Decimal | null
    taxAmount: Decimal | null
    shippingCost: Decimal | null
    discountAmount: Decimal | null
    totalAmount: Decimal | null
  }

  export type OrderMinAggregateOutputType = {
    id: string | null
    orderNumber: string | null
    customerId: string | null
    warehouseId: string | null
    type: $Enums.OrderType | null
    channel: $Enums.OrderChannel | null
    subtotal: Decimal | null
    taxAmount: Decimal | null
    shippingCost: Decimal | null
    discountAmount: Decimal | null
    totalAmount: Decimal | null
    currency: string | null
    status: $Enums.OrderStatus | null
    fulfillmentStatus: $Enums.FulfillmentStatus | null
    paymentStatus: $Enums.PaymentStatus | null
    orderDate: Date | null
    requiredDate: Date | null
    promisedDate: Date | null
    shippedDate: Date | null
    deliveredDate: Date | null
    shippingMethod: string | null
    trackingNumber: string | null
    carrier: string | null
    priority: $Enums.OrderPriority | null
    rushOrder: boolean | null
    notes: string | null
    internalNotes: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
  }

  export type OrderMaxAggregateOutputType = {
    id: string | null
    orderNumber: string | null
    customerId: string | null
    warehouseId: string | null
    type: $Enums.OrderType | null
    channel: $Enums.OrderChannel | null
    subtotal: Decimal | null
    taxAmount: Decimal | null
    shippingCost: Decimal | null
    discountAmount: Decimal | null
    totalAmount: Decimal | null
    currency: string | null
    status: $Enums.OrderStatus | null
    fulfillmentStatus: $Enums.FulfillmentStatus | null
    paymentStatus: $Enums.PaymentStatus | null
    orderDate: Date | null
    requiredDate: Date | null
    promisedDate: Date | null
    shippedDate: Date | null
    deliveredDate: Date | null
    shippingMethod: string | null
    trackingNumber: string | null
    carrier: string | null
    priority: $Enums.OrderPriority | null
    rushOrder: boolean | null
    notes: string | null
    internalNotes: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
  }

  export type OrderCountAggregateOutputType = {
    id: number
    orderNumber: number
    customerId: number
    warehouseId: number
    type: number
    channel: number
    subtotal: number
    taxAmount: number
    shippingCost: number
    discountAmount: number
    totalAmount: number
    currency: number
    status: number
    fulfillmentStatus: number
    paymentStatus: number
    orderDate: number
    requiredDate: number
    promisedDate: number
    shippedDate: number
    deliveredDate: number
    shippingMethod: number
    trackingNumber: number
    carrier: number
    shippingAddress: number
    priority: number
    rushOrder: number
    notes: number
    internalNotes: number
    createdAt: number
    updatedAt: number
    createdBy: number
    _all: number
  }


  export type OrderAvgAggregateInputType = {
    subtotal?: true
    taxAmount?: true
    shippingCost?: true
    discountAmount?: true
    totalAmount?: true
  }

  export type OrderSumAggregateInputType = {
    subtotal?: true
    taxAmount?: true
    shippingCost?: true
    discountAmount?: true
    totalAmount?: true
  }

  export type OrderMinAggregateInputType = {
    id?: true
    orderNumber?: true
    customerId?: true
    warehouseId?: true
    type?: true
    channel?: true
    subtotal?: true
    taxAmount?: true
    shippingCost?: true
    discountAmount?: true
    totalAmount?: true
    currency?: true
    status?: true
    fulfillmentStatus?: true
    paymentStatus?: true
    orderDate?: true
    requiredDate?: true
    promisedDate?: true
    shippedDate?: true
    deliveredDate?: true
    shippingMethod?: true
    trackingNumber?: true
    carrier?: true
    priority?: true
    rushOrder?: true
    notes?: true
    internalNotes?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
  }

  export type OrderMaxAggregateInputType = {
    id?: true
    orderNumber?: true
    customerId?: true
    warehouseId?: true
    type?: true
    channel?: true
    subtotal?: true
    taxAmount?: true
    shippingCost?: true
    discountAmount?: true
    totalAmount?: true
    currency?: true
    status?: true
    fulfillmentStatus?: true
    paymentStatus?: true
    orderDate?: true
    requiredDate?: true
    promisedDate?: true
    shippedDate?: true
    deliveredDate?: true
    shippingMethod?: true
    trackingNumber?: true
    carrier?: true
    priority?: true
    rushOrder?: true
    notes?: true
    internalNotes?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
  }

  export type OrderCountAggregateInputType = {
    id?: true
    orderNumber?: true
    customerId?: true
    warehouseId?: true
    type?: true
    channel?: true
    subtotal?: true
    taxAmount?: true
    shippingCost?: true
    discountAmount?: true
    totalAmount?: true
    currency?: true
    status?: true
    fulfillmentStatus?: true
    paymentStatus?: true
    orderDate?: true
    requiredDate?: true
    promisedDate?: true
    shippedDate?: true
    deliveredDate?: true
    shippingMethod?: true
    trackingNumber?: true
    carrier?: true
    shippingAddress?: true
    priority?: true
    rushOrder?: true
    notes?: true
    internalNotes?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    _all?: true
  }

  export type OrderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Order to aggregate.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Orders
    **/
    _count?: true | OrderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrderAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrderSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderMaxAggregateInputType
  }

  export type GetOrderAggregateType<T extends OrderAggregateArgs> = {
        [P in keyof T & keyof AggregateOrder]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrder[P]>
      : GetScalarType<T[P], AggregateOrder[P]>
  }




  export type OrderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithAggregationInput | OrderOrderByWithAggregationInput[]
    by: OrderScalarFieldEnum[] | OrderScalarFieldEnum
    having?: OrderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderCountAggregateInputType | true
    _avg?: OrderAvgAggregateInputType
    _sum?: OrderSumAggregateInputType
    _min?: OrderMinAggregateInputType
    _max?: OrderMaxAggregateInputType
  }

  export type OrderGroupByOutputType = {
    id: string
    orderNumber: string
    customerId: string
    warehouseId: string
    type: $Enums.OrderType
    channel: $Enums.OrderChannel
    subtotal: Decimal
    taxAmount: Decimal
    shippingCost: Decimal
    discountAmount: Decimal
    totalAmount: Decimal
    currency: string
    status: $Enums.OrderStatus
    fulfillmentStatus: $Enums.FulfillmentStatus
    paymentStatus: $Enums.PaymentStatus
    orderDate: Date
    requiredDate: Date | null
    promisedDate: Date | null
    shippedDate: Date | null
    deliveredDate: Date | null
    shippingMethod: string | null
    trackingNumber: string | null
    carrier: string | null
    shippingAddress: JsonValue | null
    priority: $Enums.OrderPriority
    rushOrder: boolean
    notes: string | null
    internalNotes: string | null
    createdAt: Date
    updatedAt: Date
    createdBy: string
    _count: OrderCountAggregateOutputType | null
    _avg: OrderAvgAggregateOutputType | null
    _sum: OrderSumAggregateOutputType | null
    _min: OrderMinAggregateOutputType | null
    _max: OrderMaxAggregateOutputType | null
  }

  type GetOrderGroupByPayload<T extends OrderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderGroupByOutputType[P]>
            : GetScalarType<T[P], OrderGroupByOutputType[P]>
        }
      >
    >


  export type OrderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderNumber?: boolean
    customerId?: boolean
    warehouseId?: boolean
    type?: boolean
    channel?: boolean
    subtotal?: boolean
    taxAmount?: boolean
    shippingCost?: boolean
    discountAmount?: boolean
    totalAmount?: boolean
    currency?: boolean
    status?: boolean
    fulfillmentStatus?: boolean
    paymentStatus?: boolean
    orderDate?: boolean
    requiredDate?: boolean
    promisedDate?: boolean
    shippedDate?: boolean
    deliveredDate?: boolean
    shippingMethod?: boolean
    trackingNumber?: boolean
    carrier?: boolean
    shippingAddress?: boolean
    priority?: boolean
    rushOrder?: boolean
    notes?: boolean
    internalNotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    customer?: boolean | CustomerDefaultArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
    items?: boolean | Order$itemsArgs<ExtArgs>
    shipments?: boolean | Order$shipmentsArgs<ExtArgs>
    invoices?: boolean | Order$invoicesArgs<ExtArgs>
    _count?: boolean | OrderCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order"]>

  export type OrderSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderNumber?: boolean
    customerId?: boolean
    warehouseId?: boolean
    type?: boolean
    channel?: boolean
    subtotal?: boolean
    taxAmount?: boolean
    shippingCost?: boolean
    discountAmount?: boolean
    totalAmount?: boolean
    currency?: boolean
    status?: boolean
    fulfillmentStatus?: boolean
    paymentStatus?: boolean
    orderDate?: boolean
    requiredDate?: boolean
    promisedDate?: boolean
    shippedDate?: boolean
    deliveredDate?: boolean
    shippingMethod?: boolean
    trackingNumber?: boolean
    carrier?: boolean
    shippingAddress?: boolean
    priority?: boolean
    rushOrder?: boolean
    notes?: boolean
    internalNotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    customer?: boolean | CustomerDefaultArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order"]>

  export type OrderSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderNumber?: boolean
    customerId?: boolean
    warehouseId?: boolean
    type?: boolean
    channel?: boolean
    subtotal?: boolean
    taxAmount?: boolean
    shippingCost?: boolean
    discountAmount?: boolean
    totalAmount?: boolean
    currency?: boolean
    status?: boolean
    fulfillmentStatus?: boolean
    paymentStatus?: boolean
    orderDate?: boolean
    requiredDate?: boolean
    promisedDate?: boolean
    shippedDate?: boolean
    deliveredDate?: boolean
    shippingMethod?: boolean
    trackingNumber?: boolean
    carrier?: boolean
    shippingAddress?: boolean
    priority?: boolean
    rushOrder?: boolean
    notes?: boolean
    internalNotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    customer?: boolean | CustomerDefaultArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order"]>

  export type OrderSelectScalar = {
    id?: boolean
    orderNumber?: boolean
    customerId?: boolean
    warehouseId?: boolean
    type?: boolean
    channel?: boolean
    subtotal?: boolean
    taxAmount?: boolean
    shippingCost?: boolean
    discountAmount?: boolean
    totalAmount?: boolean
    currency?: boolean
    status?: boolean
    fulfillmentStatus?: boolean
    paymentStatus?: boolean
    orderDate?: boolean
    requiredDate?: boolean
    promisedDate?: boolean
    shippedDate?: boolean
    deliveredDate?: boolean
    shippingMethod?: boolean
    trackingNumber?: boolean
    carrier?: boolean
    shippingAddress?: boolean
    priority?: boolean
    rushOrder?: boolean
    notes?: boolean
    internalNotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
  }

  export type OrderOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "orderNumber" | "customerId" | "warehouseId" | "type" | "channel" | "subtotal" | "taxAmount" | "shippingCost" | "discountAmount" | "totalAmount" | "currency" | "status" | "fulfillmentStatus" | "paymentStatus" | "orderDate" | "requiredDate" | "promisedDate" | "shippedDate" | "deliveredDate" | "shippingMethod" | "trackingNumber" | "carrier" | "shippingAddress" | "priority" | "rushOrder" | "notes" | "internalNotes" | "createdAt" | "updatedAt" | "createdBy", ExtArgs["result"]["order"]>
  export type OrderInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer?: boolean | CustomerDefaultArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
    items?: boolean | Order$itemsArgs<ExtArgs>
    shipments?: boolean | Order$shipmentsArgs<ExtArgs>
    invoices?: boolean | Order$invoicesArgs<ExtArgs>
    _count?: boolean | OrderCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type OrderIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer?: boolean | CustomerDefaultArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
  }
  export type OrderIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer?: boolean | CustomerDefaultArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
  }

  export type $OrderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Order"
    objects: {
      customer: Prisma.$CustomerPayload<ExtArgs>
      warehouse: Prisma.$WarehousePayload<ExtArgs>
      items: Prisma.$OrderItemPayload<ExtArgs>[]
      shipments: Prisma.$ShipmentPayload<ExtArgs>[]
      invoices: Prisma.$CustomerInvoicePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      orderNumber: string
      customerId: string
      warehouseId: string
      type: $Enums.OrderType
      channel: $Enums.OrderChannel
      subtotal: Prisma.Decimal
      taxAmount: Prisma.Decimal
      shippingCost: Prisma.Decimal
      discountAmount: Prisma.Decimal
      totalAmount: Prisma.Decimal
      currency: string
      status: $Enums.OrderStatus
      fulfillmentStatus: $Enums.FulfillmentStatus
      paymentStatus: $Enums.PaymentStatus
      orderDate: Date
      requiredDate: Date | null
      promisedDate: Date | null
      shippedDate: Date | null
      deliveredDate: Date | null
      shippingMethod: string | null
      trackingNumber: string | null
      carrier: string | null
      shippingAddress: Prisma.JsonValue | null
      priority: $Enums.OrderPriority
      rushOrder: boolean
      notes: string | null
      internalNotes: string | null
      createdAt: Date
      updatedAt: Date
      createdBy: string
    }, ExtArgs["result"]["order"]>
    composites: {}
  }

  type OrderGetPayload<S extends boolean | null | undefined | OrderDefaultArgs> = $Result.GetResult<Prisma.$OrderPayload, S>

  type OrderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrderFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrderCountAggregateInputType | true
    }

  export interface OrderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Order'], meta: { name: 'Order' } }
    /**
     * Find zero or one Order that matches the filter.
     * @param {OrderFindUniqueArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderFindUniqueArgs>(args: SelectSubset<T, OrderFindUniqueArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Order that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrderFindUniqueOrThrowArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Order that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindFirstArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderFindFirstArgs>(args?: SelectSubset<T, OrderFindFirstArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Order that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindFirstOrThrowArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Orders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Orders
     * const orders = await prisma.order.findMany()
     * 
     * // Get first 10 Orders
     * const orders = await prisma.order.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orderWithIdOnly = await prisma.order.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrderFindManyArgs>(args?: SelectSubset<T, OrderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Order.
     * @param {OrderCreateArgs} args - Arguments to create a Order.
     * @example
     * // Create one Order
     * const Order = await prisma.order.create({
     *   data: {
     *     // ... data to create a Order
     *   }
     * })
     * 
     */
    create<T extends OrderCreateArgs>(args: SelectSubset<T, OrderCreateArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Orders.
     * @param {OrderCreateManyArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const order = await prisma.order.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderCreateManyArgs>(args?: SelectSubset<T, OrderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Orders and returns the data saved in the database.
     * @param {OrderCreateManyAndReturnArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const order = await prisma.order.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Orders and only return the `id`
     * const orderWithIdOnly = await prisma.order.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrderCreateManyAndReturnArgs>(args?: SelectSubset<T, OrderCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Order.
     * @param {OrderDeleteArgs} args - Arguments to delete one Order.
     * @example
     * // Delete one Order
     * const Order = await prisma.order.delete({
     *   where: {
     *     // ... filter to delete one Order
     *   }
     * })
     * 
     */
    delete<T extends OrderDeleteArgs>(args: SelectSubset<T, OrderDeleteArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Order.
     * @param {OrderUpdateArgs} args - Arguments to update one Order.
     * @example
     * // Update one Order
     * const order = await prisma.order.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderUpdateArgs>(args: SelectSubset<T, OrderUpdateArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Orders.
     * @param {OrderDeleteManyArgs} args - Arguments to filter Orders to delete.
     * @example
     * // Delete a few Orders
     * const { count } = await prisma.order.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderDeleteManyArgs>(args?: SelectSubset<T, OrderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Orders
     * const order = await prisma.order.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderUpdateManyArgs>(args: SelectSubset<T, OrderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Orders and returns the data updated in the database.
     * @param {OrderUpdateManyAndReturnArgs} args - Arguments to update many Orders.
     * @example
     * // Update many Orders
     * const order = await prisma.order.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Orders and only return the `id`
     * const orderWithIdOnly = await prisma.order.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OrderUpdateManyAndReturnArgs>(args: SelectSubset<T, OrderUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Order.
     * @param {OrderUpsertArgs} args - Arguments to update or create a Order.
     * @example
     * // Update or create a Order
     * const order = await prisma.order.upsert({
     *   create: {
     *     // ... data to create a Order
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Order we want to update
     *   }
     * })
     */
    upsert<T extends OrderUpsertArgs>(args: SelectSubset<T, OrderUpsertArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderCountArgs} args - Arguments to filter Orders to count.
     * @example
     * // Count the number of Orders
     * const count = await prisma.order.count({
     *   where: {
     *     // ... the filter for the Orders we want to count
     *   }
     * })
    **/
    count<T extends OrderCountArgs>(
      args?: Subset<T, OrderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Order.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderAggregateArgs>(args: Subset<T, OrderAggregateArgs>): Prisma.PrismaPromise<GetOrderAggregateType<T>>

    /**
     * Group by Order.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderGroupByArgs['orderBy'] }
        : { orderBy?: OrderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Order model
   */
  readonly fields: OrderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Order.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    customer<T extends CustomerDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CustomerDefaultArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    warehouse<T extends WarehouseDefaultArgs<ExtArgs> = {}>(args?: Subset<T, WarehouseDefaultArgs<ExtArgs>>): Prisma__WarehouseClient<$Result.GetResult<Prisma.$WarehousePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    items<T extends Order$itemsArgs<ExtArgs> = {}>(args?: Subset<T, Order$itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    shipments<T extends Order$shipmentsArgs<ExtArgs> = {}>(args?: Subset<T, Order$shipmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    invoices<T extends Order$invoicesArgs<ExtArgs> = {}>(args?: Subset<T, Order$invoicesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerInvoicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Order model
   */
  interface OrderFieldRefs {
    readonly id: FieldRef<"Order", 'String'>
    readonly orderNumber: FieldRef<"Order", 'String'>
    readonly customerId: FieldRef<"Order", 'String'>
    readonly warehouseId: FieldRef<"Order", 'String'>
    readonly type: FieldRef<"Order", 'OrderType'>
    readonly channel: FieldRef<"Order", 'OrderChannel'>
    readonly subtotal: FieldRef<"Order", 'Decimal'>
    readonly taxAmount: FieldRef<"Order", 'Decimal'>
    readonly shippingCost: FieldRef<"Order", 'Decimal'>
    readonly discountAmount: FieldRef<"Order", 'Decimal'>
    readonly totalAmount: FieldRef<"Order", 'Decimal'>
    readonly currency: FieldRef<"Order", 'String'>
    readonly status: FieldRef<"Order", 'OrderStatus'>
    readonly fulfillmentStatus: FieldRef<"Order", 'FulfillmentStatus'>
    readonly paymentStatus: FieldRef<"Order", 'PaymentStatus'>
    readonly orderDate: FieldRef<"Order", 'DateTime'>
    readonly requiredDate: FieldRef<"Order", 'DateTime'>
    readonly promisedDate: FieldRef<"Order", 'DateTime'>
    readonly shippedDate: FieldRef<"Order", 'DateTime'>
    readonly deliveredDate: FieldRef<"Order", 'DateTime'>
    readonly shippingMethod: FieldRef<"Order", 'String'>
    readonly trackingNumber: FieldRef<"Order", 'String'>
    readonly carrier: FieldRef<"Order", 'String'>
    readonly shippingAddress: FieldRef<"Order", 'Json'>
    readonly priority: FieldRef<"Order", 'OrderPriority'>
    readonly rushOrder: FieldRef<"Order", 'Boolean'>
    readonly notes: FieldRef<"Order", 'String'>
    readonly internalNotes: FieldRef<"Order", 'String'>
    readonly createdAt: FieldRef<"Order", 'DateTime'>
    readonly updatedAt: FieldRef<"Order", 'DateTime'>
    readonly createdBy: FieldRef<"Order", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Order findUnique
   */
  export type OrderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order findUniqueOrThrow
   */
  export type OrderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order findFirst
   */
  export type OrderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Orders.
     */
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order findFirstOrThrow
   */
  export type OrderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Orders.
     */
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order findMany
   */
  export type OrderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Orders to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order create
   */
  export type OrderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The data needed to create a Order.
     */
    data: XOR<OrderCreateInput, OrderUncheckedCreateInput>
  }

  /**
   * Order createMany
   */
  export type OrderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Orders.
     */
    data: OrderCreateManyInput | OrderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Order createManyAndReturn
   */
  export type OrderCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * The data used to create many Orders.
     */
    data: OrderCreateManyInput | OrderCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Order update
   */
  export type OrderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The data needed to update a Order.
     */
    data: XOR<OrderUpdateInput, OrderUncheckedUpdateInput>
    /**
     * Choose, which Order to update.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order updateMany
   */
  export type OrderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Orders.
     */
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyInput>
    /**
     * Filter which Orders to update
     */
    where?: OrderWhereInput
    /**
     * Limit how many Orders to update.
     */
    limit?: number
  }

  /**
   * Order updateManyAndReturn
   */
  export type OrderUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * The data used to update Orders.
     */
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyInput>
    /**
     * Filter which Orders to update
     */
    where?: OrderWhereInput
    /**
     * Limit how many Orders to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Order upsert
   */
  export type OrderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The filter to search for the Order to update in case it exists.
     */
    where: OrderWhereUniqueInput
    /**
     * In case the Order found by the `where` argument doesn't exist, create a new Order with this data.
     */
    create: XOR<OrderCreateInput, OrderUncheckedCreateInput>
    /**
     * In case the Order was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderUpdateInput, OrderUncheckedUpdateInput>
  }

  /**
   * Order delete
   */
  export type OrderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter which Order to delete.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order deleteMany
   */
  export type OrderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Orders to delete
     */
    where?: OrderWhereInput
    /**
     * Limit how many Orders to delete.
     */
    limit?: number
  }

  /**
   * Order.items
   */
  export type Order$itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    where?: OrderItemWhereInput
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    cursor?: OrderItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * Order.shipments
   */
  export type Order$shipmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Shipment
     */
    select?: ShipmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Shipment
     */
    omit?: ShipmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentInclude<ExtArgs> | null
    where?: ShipmentWhereInput
    orderBy?: ShipmentOrderByWithRelationInput | ShipmentOrderByWithRelationInput[]
    cursor?: ShipmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ShipmentScalarFieldEnum | ShipmentScalarFieldEnum[]
  }

  /**
   * Order.invoices
   */
  export type Order$invoicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerInvoice
     */
    select?: CustomerInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerInvoice
     */
    omit?: CustomerInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInvoiceInclude<ExtArgs> | null
    where?: CustomerInvoiceWhereInput
    orderBy?: CustomerInvoiceOrderByWithRelationInput | CustomerInvoiceOrderByWithRelationInput[]
    cursor?: CustomerInvoiceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CustomerInvoiceScalarFieldEnum | CustomerInvoiceScalarFieldEnum[]
  }

  /**
   * Order without action
   */
  export type OrderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
  }


  /**
   * Model OrderItem
   */

  export type AggregateOrderItem = {
    _count: OrderItemCountAggregateOutputType | null
    _avg: OrderItemAvgAggregateOutputType | null
    _sum: OrderItemSumAggregateOutputType | null
    _min: OrderItemMinAggregateOutputType | null
    _max: OrderItemMaxAggregateOutputType | null
  }

  export type OrderItemAvgAggregateOutputType = {
    orderedQty: number | null
    shippedQty: number | null
    remainingQty: number | null
    unitPrice: Decimal | null
    totalPrice: Decimal | null
    discountAmount: Decimal | null
  }

  export type OrderItemSumAggregateOutputType = {
    orderedQty: number | null
    shippedQty: number | null
    remainingQty: number | null
    unitPrice: Decimal | null
    totalPrice: Decimal | null
    discountAmount: Decimal | null
  }

  export type OrderItemMinAggregateOutputType = {
    id: string | null
    orderId: string | null
    productId: string | null
    variantId: string | null
    orderedQty: number | null
    shippedQty: number | null
    remainingQty: number | null
    unitPrice: Decimal | null
    totalPrice: Decimal | null
    discountAmount: Decimal | null
    productName: string | null
    productSku: string | null
    status: $Enums.OrderItemStatus | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type OrderItemMaxAggregateOutputType = {
    id: string | null
    orderId: string | null
    productId: string | null
    variantId: string | null
    orderedQty: number | null
    shippedQty: number | null
    remainingQty: number | null
    unitPrice: Decimal | null
    totalPrice: Decimal | null
    discountAmount: Decimal | null
    productName: string | null
    productSku: string | null
    status: $Enums.OrderItemStatus | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type OrderItemCountAggregateOutputType = {
    id: number
    orderId: number
    productId: number
    variantId: number
    orderedQty: number
    shippedQty: number
    remainingQty: number
    unitPrice: number
    totalPrice: number
    discountAmount: number
    productName: number
    productSku: number
    status: number
    notes: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type OrderItemAvgAggregateInputType = {
    orderedQty?: true
    shippedQty?: true
    remainingQty?: true
    unitPrice?: true
    totalPrice?: true
    discountAmount?: true
  }

  export type OrderItemSumAggregateInputType = {
    orderedQty?: true
    shippedQty?: true
    remainingQty?: true
    unitPrice?: true
    totalPrice?: true
    discountAmount?: true
  }

  export type OrderItemMinAggregateInputType = {
    id?: true
    orderId?: true
    productId?: true
    variantId?: true
    orderedQty?: true
    shippedQty?: true
    remainingQty?: true
    unitPrice?: true
    totalPrice?: true
    discountAmount?: true
    productName?: true
    productSku?: true
    status?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type OrderItemMaxAggregateInputType = {
    id?: true
    orderId?: true
    productId?: true
    variantId?: true
    orderedQty?: true
    shippedQty?: true
    remainingQty?: true
    unitPrice?: true
    totalPrice?: true
    discountAmount?: true
    productName?: true
    productSku?: true
    status?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type OrderItemCountAggregateInputType = {
    id?: true
    orderId?: true
    productId?: true
    variantId?: true
    orderedQty?: true
    shippedQty?: true
    remainingQty?: true
    unitPrice?: true
    totalPrice?: true
    discountAmount?: true
    productName?: true
    productSku?: true
    status?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type OrderItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderItem to aggregate.
     */
    where?: OrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItems to fetch.
     */
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OrderItems
    **/
    _count?: true | OrderItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrderItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrderItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderItemMaxAggregateInputType
  }

  export type GetOrderItemAggregateType<T extends OrderItemAggregateArgs> = {
        [P in keyof T & keyof AggregateOrderItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrderItem[P]>
      : GetScalarType<T[P], AggregateOrderItem[P]>
  }




  export type OrderItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderItemWhereInput
    orderBy?: OrderItemOrderByWithAggregationInput | OrderItemOrderByWithAggregationInput[]
    by: OrderItemScalarFieldEnum[] | OrderItemScalarFieldEnum
    having?: OrderItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderItemCountAggregateInputType | true
    _avg?: OrderItemAvgAggregateInputType
    _sum?: OrderItemSumAggregateInputType
    _min?: OrderItemMinAggregateInputType
    _max?: OrderItemMaxAggregateInputType
  }

  export type OrderItemGroupByOutputType = {
    id: string
    orderId: string
    productId: string
    variantId: string | null
    orderedQty: number
    shippedQty: number
    remainingQty: number
    unitPrice: Decimal
    totalPrice: Decimal
    discountAmount: Decimal
    productName: string
    productSku: string
    status: $Enums.OrderItemStatus
    notes: string | null
    createdAt: Date
    updatedAt: Date
    _count: OrderItemCountAggregateOutputType | null
    _avg: OrderItemAvgAggregateOutputType | null
    _sum: OrderItemSumAggregateOutputType | null
    _min: OrderItemMinAggregateOutputType | null
    _max: OrderItemMaxAggregateOutputType | null
  }

  type GetOrderItemGroupByPayload<T extends OrderItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderItemGroupByOutputType[P]>
            : GetScalarType<T[P], OrderItemGroupByOutputType[P]>
        }
      >
    >


  export type OrderItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    productId?: boolean
    variantId?: boolean
    orderedQty?: boolean
    shippedQty?: boolean
    remainingQty?: boolean
    unitPrice?: boolean
    totalPrice?: boolean
    discountAmount?: boolean
    productName?: boolean
    productSku?: boolean
    status?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | OrderItem$variantArgs<ExtArgs>
  }, ExtArgs["result"]["orderItem"]>

  export type OrderItemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    productId?: boolean
    variantId?: boolean
    orderedQty?: boolean
    shippedQty?: boolean
    remainingQty?: boolean
    unitPrice?: boolean
    totalPrice?: boolean
    discountAmount?: boolean
    productName?: boolean
    productSku?: boolean
    status?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | OrderItem$variantArgs<ExtArgs>
  }, ExtArgs["result"]["orderItem"]>

  export type OrderItemSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    productId?: boolean
    variantId?: boolean
    orderedQty?: boolean
    shippedQty?: boolean
    remainingQty?: boolean
    unitPrice?: boolean
    totalPrice?: boolean
    discountAmount?: boolean
    productName?: boolean
    productSku?: boolean
    status?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | OrderItem$variantArgs<ExtArgs>
  }, ExtArgs["result"]["orderItem"]>

  export type OrderItemSelectScalar = {
    id?: boolean
    orderId?: boolean
    productId?: boolean
    variantId?: boolean
    orderedQty?: boolean
    shippedQty?: boolean
    remainingQty?: boolean
    unitPrice?: boolean
    totalPrice?: boolean
    discountAmount?: boolean
    productName?: boolean
    productSku?: boolean
    status?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type OrderItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "orderId" | "productId" | "variantId" | "orderedQty" | "shippedQty" | "remainingQty" | "unitPrice" | "totalPrice" | "discountAmount" | "productName" | "productSku" | "status" | "notes" | "createdAt" | "updatedAt", ExtArgs["result"]["orderItem"]>
  export type OrderItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | OrderItem$variantArgs<ExtArgs>
  }
  export type OrderItemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | OrderItem$variantArgs<ExtArgs>
  }
  export type OrderItemIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | OrderItem$variantArgs<ExtArgs>
  }

  export type $OrderItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OrderItem"
    objects: {
      order: Prisma.$OrderPayload<ExtArgs>
      product: Prisma.$ProductPayload<ExtArgs>
      variant: Prisma.$ProductVariantPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      orderId: string
      productId: string
      variantId: string | null
      orderedQty: number
      shippedQty: number
      remainingQty: number
      unitPrice: Prisma.Decimal
      totalPrice: Prisma.Decimal
      discountAmount: Prisma.Decimal
      productName: string
      productSku: string
      status: $Enums.OrderItemStatus
      notes: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["orderItem"]>
    composites: {}
  }

  type OrderItemGetPayload<S extends boolean | null | undefined | OrderItemDefaultArgs> = $Result.GetResult<Prisma.$OrderItemPayload, S>

  type OrderItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrderItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrderItemCountAggregateInputType | true
    }

  export interface OrderItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OrderItem'], meta: { name: 'OrderItem' } }
    /**
     * Find zero or one OrderItem that matches the filter.
     * @param {OrderItemFindUniqueArgs} args - Arguments to find a OrderItem
     * @example
     * // Get one OrderItem
     * const orderItem = await prisma.orderItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderItemFindUniqueArgs>(args: SelectSubset<T, OrderItemFindUniqueArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one OrderItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrderItemFindUniqueOrThrowArgs} args - Arguments to find a OrderItem
     * @example
     * // Get one OrderItem
     * const orderItem = await prisma.orderItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderItemFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemFindFirstArgs} args - Arguments to find a OrderItem
     * @example
     * // Get one OrderItem
     * const orderItem = await prisma.orderItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderItemFindFirstArgs>(args?: SelectSubset<T, OrderItemFindFirstArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemFindFirstOrThrowArgs} args - Arguments to find a OrderItem
     * @example
     * // Get one OrderItem
     * const orderItem = await prisma.orderItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderItemFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more OrderItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OrderItems
     * const orderItems = await prisma.orderItem.findMany()
     * 
     * // Get first 10 OrderItems
     * const orderItems = await prisma.orderItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orderItemWithIdOnly = await prisma.orderItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrderItemFindManyArgs>(args?: SelectSubset<T, OrderItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a OrderItem.
     * @param {OrderItemCreateArgs} args - Arguments to create a OrderItem.
     * @example
     * // Create one OrderItem
     * const OrderItem = await prisma.orderItem.create({
     *   data: {
     *     // ... data to create a OrderItem
     *   }
     * })
     * 
     */
    create<T extends OrderItemCreateArgs>(args: SelectSubset<T, OrderItemCreateArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many OrderItems.
     * @param {OrderItemCreateManyArgs} args - Arguments to create many OrderItems.
     * @example
     * // Create many OrderItems
     * const orderItem = await prisma.orderItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderItemCreateManyArgs>(args?: SelectSubset<T, OrderItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OrderItems and returns the data saved in the database.
     * @param {OrderItemCreateManyAndReturnArgs} args - Arguments to create many OrderItems.
     * @example
     * // Create many OrderItems
     * const orderItem = await prisma.orderItem.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OrderItems and only return the `id`
     * const orderItemWithIdOnly = await prisma.orderItem.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrderItemCreateManyAndReturnArgs>(args?: SelectSubset<T, OrderItemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a OrderItem.
     * @param {OrderItemDeleteArgs} args - Arguments to delete one OrderItem.
     * @example
     * // Delete one OrderItem
     * const OrderItem = await prisma.orderItem.delete({
     *   where: {
     *     // ... filter to delete one OrderItem
     *   }
     * })
     * 
     */
    delete<T extends OrderItemDeleteArgs>(args: SelectSubset<T, OrderItemDeleteArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one OrderItem.
     * @param {OrderItemUpdateArgs} args - Arguments to update one OrderItem.
     * @example
     * // Update one OrderItem
     * const orderItem = await prisma.orderItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderItemUpdateArgs>(args: SelectSubset<T, OrderItemUpdateArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more OrderItems.
     * @param {OrderItemDeleteManyArgs} args - Arguments to filter OrderItems to delete.
     * @example
     * // Delete a few OrderItems
     * const { count } = await prisma.orderItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderItemDeleteManyArgs>(args?: SelectSubset<T, OrderItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OrderItems
     * const orderItem = await prisma.orderItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderItemUpdateManyArgs>(args: SelectSubset<T, OrderItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderItems and returns the data updated in the database.
     * @param {OrderItemUpdateManyAndReturnArgs} args - Arguments to update many OrderItems.
     * @example
     * // Update many OrderItems
     * const orderItem = await prisma.orderItem.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more OrderItems and only return the `id`
     * const orderItemWithIdOnly = await prisma.orderItem.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OrderItemUpdateManyAndReturnArgs>(args: SelectSubset<T, OrderItemUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one OrderItem.
     * @param {OrderItemUpsertArgs} args - Arguments to update or create a OrderItem.
     * @example
     * // Update or create a OrderItem
     * const orderItem = await prisma.orderItem.upsert({
     *   create: {
     *     // ... data to create a OrderItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OrderItem we want to update
     *   }
     * })
     */
    upsert<T extends OrderItemUpsertArgs>(args: SelectSubset<T, OrderItemUpsertArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of OrderItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemCountArgs} args - Arguments to filter OrderItems to count.
     * @example
     * // Count the number of OrderItems
     * const count = await prisma.orderItem.count({
     *   where: {
     *     // ... the filter for the OrderItems we want to count
     *   }
     * })
    **/
    count<T extends OrderItemCountArgs>(
      args?: Subset<T, OrderItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OrderItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderItemAggregateArgs>(args: Subset<T, OrderItemAggregateArgs>): Prisma.PrismaPromise<GetOrderItemAggregateType<T>>

    /**
     * Group by OrderItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderItemGroupByArgs['orderBy'] }
        : { orderBy?: OrderItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OrderItem model
   */
  readonly fields: OrderItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OrderItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends OrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderDefaultArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    variant<T extends OrderItem$variantArgs<ExtArgs> = {}>(args?: Subset<T, OrderItem$variantArgs<ExtArgs>>): Prisma__ProductVariantClient<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OrderItem model
   */
  interface OrderItemFieldRefs {
    readonly id: FieldRef<"OrderItem", 'String'>
    readonly orderId: FieldRef<"OrderItem", 'String'>
    readonly productId: FieldRef<"OrderItem", 'String'>
    readonly variantId: FieldRef<"OrderItem", 'String'>
    readonly orderedQty: FieldRef<"OrderItem", 'Int'>
    readonly shippedQty: FieldRef<"OrderItem", 'Int'>
    readonly remainingQty: FieldRef<"OrderItem", 'Int'>
    readonly unitPrice: FieldRef<"OrderItem", 'Decimal'>
    readonly totalPrice: FieldRef<"OrderItem", 'Decimal'>
    readonly discountAmount: FieldRef<"OrderItem", 'Decimal'>
    readonly productName: FieldRef<"OrderItem", 'String'>
    readonly productSku: FieldRef<"OrderItem", 'String'>
    readonly status: FieldRef<"OrderItem", 'OrderItemStatus'>
    readonly notes: FieldRef<"OrderItem", 'String'>
    readonly createdAt: FieldRef<"OrderItem", 'DateTime'>
    readonly updatedAt: FieldRef<"OrderItem", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * OrderItem findUnique
   */
  export type OrderItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItem to fetch.
     */
    where: OrderItemWhereUniqueInput
  }

  /**
   * OrderItem findUniqueOrThrow
   */
  export type OrderItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItem to fetch.
     */
    where: OrderItemWhereUniqueInput
  }

  /**
   * OrderItem findFirst
   */
  export type OrderItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItem to fetch.
     */
    where?: OrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItems to fetch.
     */
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderItems.
     */
    cursor?: OrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderItems.
     */
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * OrderItem findFirstOrThrow
   */
  export type OrderItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItem to fetch.
     */
    where?: OrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItems to fetch.
     */
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderItems.
     */
    cursor?: OrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderItems.
     */
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * OrderItem findMany
   */
  export type OrderItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItems to fetch.
     */
    where?: OrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItems to fetch.
     */
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OrderItems.
     */
    cursor?: OrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItems.
     */
    skip?: number
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * OrderItem create
   */
  export type OrderItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * The data needed to create a OrderItem.
     */
    data: XOR<OrderItemCreateInput, OrderItemUncheckedCreateInput>
  }

  /**
   * OrderItem createMany
   */
  export type OrderItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OrderItems.
     */
    data: OrderItemCreateManyInput | OrderItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OrderItem createManyAndReturn
   */
  export type OrderItemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * The data used to create many OrderItems.
     */
    data: OrderItemCreateManyInput | OrderItemCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderItem update
   */
  export type OrderItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * The data needed to update a OrderItem.
     */
    data: XOR<OrderItemUpdateInput, OrderItemUncheckedUpdateInput>
    /**
     * Choose, which OrderItem to update.
     */
    where: OrderItemWhereUniqueInput
  }

  /**
   * OrderItem updateMany
   */
  export type OrderItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OrderItems.
     */
    data: XOR<OrderItemUpdateManyMutationInput, OrderItemUncheckedUpdateManyInput>
    /**
     * Filter which OrderItems to update
     */
    where?: OrderItemWhereInput
    /**
     * Limit how many OrderItems to update.
     */
    limit?: number
  }

  /**
   * OrderItem updateManyAndReturn
   */
  export type OrderItemUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * The data used to update OrderItems.
     */
    data: XOR<OrderItemUpdateManyMutationInput, OrderItemUncheckedUpdateManyInput>
    /**
     * Filter which OrderItems to update
     */
    where?: OrderItemWhereInput
    /**
     * Limit how many OrderItems to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderItem upsert
   */
  export type OrderItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * The filter to search for the OrderItem to update in case it exists.
     */
    where: OrderItemWhereUniqueInput
    /**
     * In case the OrderItem found by the `where` argument doesn't exist, create a new OrderItem with this data.
     */
    create: XOR<OrderItemCreateInput, OrderItemUncheckedCreateInput>
    /**
     * In case the OrderItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderItemUpdateInput, OrderItemUncheckedUpdateInput>
  }

  /**
   * OrderItem delete
   */
  export type OrderItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter which OrderItem to delete.
     */
    where: OrderItemWhereUniqueInput
  }

  /**
   * OrderItem deleteMany
   */
  export type OrderItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderItems to delete
     */
    where?: OrderItemWhereInput
    /**
     * Limit how many OrderItems to delete.
     */
    limit?: number
  }

  /**
   * OrderItem.variant
   */
  export type OrderItem$variantArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductVariant
     */
    omit?: ProductVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    where?: ProductVariantWhereInput
  }

  /**
   * OrderItem without action
   */
  export type OrderItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
  }


  /**
   * Model Shipment
   */

  export type AggregateShipment = {
    _count: ShipmentCountAggregateOutputType | null
    _avg: ShipmentAvgAggregateOutputType | null
    _sum: ShipmentSumAggregateOutputType | null
    _min: ShipmentMinAggregateOutputType | null
    _max: ShipmentMaxAggregateOutputType | null
  }

  export type ShipmentAvgAggregateOutputType = {
    packageCount: number | null
    weight: Decimal | null
    shippingCost: Decimal | null
    insuranceValue: Decimal | null
  }

  export type ShipmentSumAggregateOutputType = {
    packageCount: number | null
    weight: Decimal | null
    shippingCost: Decimal | null
    insuranceValue: Decimal | null
  }

  export type ShipmentMinAggregateOutputType = {
    id: string | null
    shipmentNumber: string | null
    orderId: string | null
    warehouseId: string | null
    carrier: string | null
    service: string | null
    trackingNumber: string | null
    packageCount: number | null
    weight: Decimal | null
    shippingCost: Decimal | null
    insuranceValue: Decimal | null
    status: $Enums.ShipmentStatus | null
    shipDate: Date | null
    estimatedDelivery: Date | null
    actualDelivery: Date | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
  }

  export type ShipmentMaxAggregateOutputType = {
    id: string | null
    shipmentNumber: string | null
    orderId: string | null
    warehouseId: string | null
    carrier: string | null
    service: string | null
    trackingNumber: string | null
    packageCount: number | null
    weight: Decimal | null
    shippingCost: Decimal | null
    insuranceValue: Decimal | null
    status: $Enums.ShipmentStatus | null
    shipDate: Date | null
    estimatedDelivery: Date | null
    actualDelivery: Date | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
  }

  export type ShipmentCountAggregateOutputType = {
    id: number
    shipmentNumber: number
    orderId: number
    warehouseId: number
    carrier: number
    service: number
    trackingNumber: number
    fromAddress: number
    toAddress: number
    packageCount: number
    weight: number
    dimensions: number
    shippingCost: number
    insuranceValue: number
    status: number
    shipDate: number
    estimatedDelivery: number
    actualDelivery: number
    notes: number
    createdAt: number
    updatedAt: number
    createdBy: number
    _all: number
  }


  export type ShipmentAvgAggregateInputType = {
    packageCount?: true
    weight?: true
    shippingCost?: true
    insuranceValue?: true
  }

  export type ShipmentSumAggregateInputType = {
    packageCount?: true
    weight?: true
    shippingCost?: true
    insuranceValue?: true
  }

  export type ShipmentMinAggregateInputType = {
    id?: true
    shipmentNumber?: true
    orderId?: true
    warehouseId?: true
    carrier?: true
    service?: true
    trackingNumber?: true
    packageCount?: true
    weight?: true
    shippingCost?: true
    insuranceValue?: true
    status?: true
    shipDate?: true
    estimatedDelivery?: true
    actualDelivery?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
  }

  export type ShipmentMaxAggregateInputType = {
    id?: true
    shipmentNumber?: true
    orderId?: true
    warehouseId?: true
    carrier?: true
    service?: true
    trackingNumber?: true
    packageCount?: true
    weight?: true
    shippingCost?: true
    insuranceValue?: true
    status?: true
    shipDate?: true
    estimatedDelivery?: true
    actualDelivery?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
  }

  export type ShipmentCountAggregateInputType = {
    id?: true
    shipmentNumber?: true
    orderId?: true
    warehouseId?: true
    carrier?: true
    service?: true
    trackingNumber?: true
    fromAddress?: true
    toAddress?: true
    packageCount?: true
    weight?: true
    dimensions?: true
    shippingCost?: true
    insuranceValue?: true
    status?: true
    shipDate?: true
    estimatedDelivery?: true
    actualDelivery?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    _all?: true
  }

  export type ShipmentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Shipment to aggregate.
     */
    where?: ShipmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Shipments to fetch.
     */
    orderBy?: ShipmentOrderByWithRelationInput | ShipmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ShipmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Shipments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Shipments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Shipments
    **/
    _count?: true | ShipmentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ShipmentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ShipmentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ShipmentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ShipmentMaxAggregateInputType
  }

  export type GetShipmentAggregateType<T extends ShipmentAggregateArgs> = {
        [P in keyof T & keyof AggregateShipment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateShipment[P]>
      : GetScalarType<T[P], AggregateShipment[P]>
  }




  export type ShipmentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShipmentWhereInput
    orderBy?: ShipmentOrderByWithAggregationInput | ShipmentOrderByWithAggregationInput[]
    by: ShipmentScalarFieldEnum[] | ShipmentScalarFieldEnum
    having?: ShipmentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ShipmentCountAggregateInputType | true
    _avg?: ShipmentAvgAggregateInputType
    _sum?: ShipmentSumAggregateInputType
    _min?: ShipmentMinAggregateInputType
    _max?: ShipmentMaxAggregateInputType
  }

  export type ShipmentGroupByOutputType = {
    id: string
    shipmentNumber: string
    orderId: string | null
    warehouseId: string
    carrier: string
    service: string | null
    trackingNumber: string | null
    fromAddress: JsonValue
    toAddress: JsonValue
    packageCount: number
    weight: Decimal | null
    dimensions: JsonValue | null
    shippingCost: Decimal | null
    insuranceValue: Decimal | null
    status: $Enums.ShipmentStatus
    shipDate: Date | null
    estimatedDelivery: Date | null
    actualDelivery: Date | null
    notes: string | null
    createdAt: Date
    updatedAt: Date
    createdBy: string
    _count: ShipmentCountAggregateOutputType | null
    _avg: ShipmentAvgAggregateOutputType | null
    _sum: ShipmentSumAggregateOutputType | null
    _min: ShipmentMinAggregateOutputType | null
    _max: ShipmentMaxAggregateOutputType | null
  }

  type GetShipmentGroupByPayload<T extends ShipmentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ShipmentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ShipmentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ShipmentGroupByOutputType[P]>
            : GetScalarType<T[P], ShipmentGroupByOutputType[P]>
        }
      >
    >


  export type ShipmentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    shipmentNumber?: boolean
    orderId?: boolean
    warehouseId?: boolean
    carrier?: boolean
    service?: boolean
    trackingNumber?: boolean
    fromAddress?: boolean
    toAddress?: boolean
    packageCount?: boolean
    weight?: boolean
    dimensions?: boolean
    shippingCost?: boolean
    insuranceValue?: boolean
    status?: boolean
    shipDate?: boolean
    estimatedDelivery?: boolean
    actualDelivery?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    order?: boolean | Shipment$orderArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
    packages?: boolean | Shipment$packagesArgs<ExtArgs>
    tracking?: boolean | Shipment$trackingArgs<ExtArgs>
    _count?: boolean | ShipmentCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["shipment"]>

  export type ShipmentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    shipmentNumber?: boolean
    orderId?: boolean
    warehouseId?: boolean
    carrier?: boolean
    service?: boolean
    trackingNumber?: boolean
    fromAddress?: boolean
    toAddress?: boolean
    packageCount?: boolean
    weight?: boolean
    dimensions?: boolean
    shippingCost?: boolean
    insuranceValue?: boolean
    status?: boolean
    shipDate?: boolean
    estimatedDelivery?: boolean
    actualDelivery?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    order?: boolean | Shipment$orderArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["shipment"]>

  export type ShipmentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    shipmentNumber?: boolean
    orderId?: boolean
    warehouseId?: boolean
    carrier?: boolean
    service?: boolean
    trackingNumber?: boolean
    fromAddress?: boolean
    toAddress?: boolean
    packageCount?: boolean
    weight?: boolean
    dimensions?: boolean
    shippingCost?: boolean
    insuranceValue?: boolean
    status?: boolean
    shipDate?: boolean
    estimatedDelivery?: boolean
    actualDelivery?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    order?: boolean | Shipment$orderArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["shipment"]>

  export type ShipmentSelectScalar = {
    id?: boolean
    shipmentNumber?: boolean
    orderId?: boolean
    warehouseId?: boolean
    carrier?: boolean
    service?: boolean
    trackingNumber?: boolean
    fromAddress?: boolean
    toAddress?: boolean
    packageCount?: boolean
    weight?: boolean
    dimensions?: boolean
    shippingCost?: boolean
    insuranceValue?: boolean
    status?: boolean
    shipDate?: boolean
    estimatedDelivery?: boolean
    actualDelivery?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
  }

  export type ShipmentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "shipmentNumber" | "orderId" | "warehouseId" | "carrier" | "service" | "trackingNumber" | "fromAddress" | "toAddress" | "packageCount" | "weight" | "dimensions" | "shippingCost" | "insuranceValue" | "status" | "shipDate" | "estimatedDelivery" | "actualDelivery" | "notes" | "createdAt" | "updatedAt" | "createdBy", ExtArgs["result"]["shipment"]>
  export type ShipmentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | Shipment$orderArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
    packages?: boolean | Shipment$packagesArgs<ExtArgs>
    tracking?: boolean | Shipment$trackingArgs<ExtArgs>
    _count?: boolean | ShipmentCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ShipmentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | Shipment$orderArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
  }
  export type ShipmentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | Shipment$orderArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
  }

  export type $ShipmentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Shipment"
    objects: {
      order: Prisma.$OrderPayload<ExtArgs> | null
      warehouse: Prisma.$WarehousePayload<ExtArgs>
      packages: Prisma.$ShipmentPackagePayload<ExtArgs>[]
      tracking: Prisma.$ShipmentTrackingPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      shipmentNumber: string
      orderId: string | null
      warehouseId: string
      carrier: string
      service: string | null
      trackingNumber: string | null
      fromAddress: Prisma.JsonValue
      toAddress: Prisma.JsonValue
      packageCount: number
      weight: Prisma.Decimal | null
      dimensions: Prisma.JsonValue | null
      shippingCost: Prisma.Decimal | null
      insuranceValue: Prisma.Decimal | null
      status: $Enums.ShipmentStatus
      shipDate: Date | null
      estimatedDelivery: Date | null
      actualDelivery: Date | null
      notes: string | null
      createdAt: Date
      updatedAt: Date
      createdBy: string
    }, ExtArgs["result"]["shipment"]>
    composites: {}
  }

  type ShipmentGetPayload<S extends boolean | null | undefined | ShipmentDefaultArgs> = $Result.GetResult<Prisma.$ShipmentPayload, S>

  type ShipmentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ShipmentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ShipmentCountAggregateInputType | true
    }

  export interface ShipmentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Shipment'], meta: { name: 'Shipment' } }
    /**
     * Find zero or one Shipment that matches the filter.
     * @param {ShipmentFindUniqueArgs} args - Arguments to find a Shipment
     * @example
     * // Get one Shipment
     * const shipment = await prisma.shipment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ShipmentFindUniqueArgs>(args: SelectSubset<T, ShipmentFindUniqueArgs<ExtArgs>>): Prisma__ShipmentClient<$Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Shipment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ShipmentFindUniqueOrThrowArgs} args - Arguments to find a Shipment
     * @example
     * // Get one Shipment
     * const shipment = await prisma.shipment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ShipmentFindUniqueOrThrowArgs>(args: SelectSubset<T, ShipmentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ShipmentClient<$Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Shipment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentFindFirstArgs} args - Arguments to find a Shipment
     * @example
     * // Get one Shipment
     * const shipment = await prisma.shipment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ShipmentFindFirstArgs>(args?: SelectSubset<T, ShipmentFindFirstArgs<ExtArgs>>): Prisma__ShipmentClient<$Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Shipment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentFindFirstOrThrowArgs} args - Arguments to find a Shipment
     * @example
     * // Get one Shipment
     * const shipment = await prisma.shipment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ShipmentFindFirstOrThrowArgs>(args?: SelectSubset<T, ShipmentFindFirstOrThrowArgs<ExtArgs>>): Prisma__ShipmentClient<$Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Shipments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Shipments
     * const shipments = await prisma.shipment.findMany()
     * 
     * // Get first 10 Shipments
     * const shipments = await prisma.shipment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const shipmentWithIdOnly = await prisma.shipment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ShipmentFindManyArgs>(args?: SelectSubset<T, ShipmentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Shipment.
     * @param {ShipmentCreateArgs} args - Arguments to create a Shipment.
     * @example
     * // Create one Shipment
     * const Shipment = await prisma.shipment.create({
     *   data: {
     *     // ... data to create a Shipment
     *   }
     * })
     * 
     */
    create<T extends ShipmentCreateArgs>(args: SelectSubset<T, ShipmentCreateArgs<ExtArgs>>): Prisma__ShipmentClient<$Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Shipments.
     * @param {ShipmentCreateManyArgs} args - Arguments to create many Shipments.
     * @example
     * // Create many Shipments
     * const shipment = await prisma.shipment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ShipmentCreateManyArgs>(args?: SelectSubset<T, ShipmentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Shipments and returns the data saved in the database.
     * @param {ShipmentCreateManyAndReturnArgs} args - Arguments to create many Shipments.
     * @example
     * // Create many Shipments
     * const shipment = await prisma.shipment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Shipments and only return the `id`
     * const shipmentWithIdOnly = await prisma.shipment.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ShipmentCreateManyAndReturnArgs>(args?: SelectSubset<T, ShipmentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Shipment.
     * @param {ShipmentDeleteArgs} args - Arguments to delete one Shipment.
     * @example
     * // Delete one Shipment
     * const Shipment = await prisma.shipment.delete({
     *   where: {
     *     // ... filter to delete one Shipment
     *   }
     * })
     * 
     */
    delete<T extends ShipmentDeleteArgs>(args: SelectSubset<T, ShipmentDeleteArgs<ExtArgs>>): Prisma__ShipmentClient<$Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Shipment.
     * @param {ShipmentUpdateArgs} args - Arguments to update one Shipment.
     * @example
     * // Update one Shipment
     * const shipment = await prisma.shipment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ShipmentUpdateArgs>(args: SelectSubset<T, ShipmentUpdateArgs<ExtArgs>>): Prisma__ShipmentClient<$Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Shipments.
     * @param {ShipmentDeleteManyArgs} args - Arguments to filter Shipments to delete.
     * @example
     * // Delete a few Shipments
     * const { count } = await prisma.shipment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ShipmentDeleteManyArgs>(args?: SelectSubset<T, ShipmentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Shipments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Shipments
     * const shipment = await prisma.shipment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ShipmentUpdateManyArgs>(args: SelectSubset<T, ShipmentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Shipments and returns the data updated in the database.
     * @param {ShipmentUpdateManyAndReturnArgs} args - Arguments to update many Shipments.
     * @example
     * // Update many Shipments
     * const shipment = await prisma.shipment.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Shipments and only return the `id`
     * const shipmentWithIdOnly = await prisma.shipment.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ShipmentUpdateManyAndReturnArgs>(args: SelectSubset<T, ShipmentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Shipment.
     * @param {ShipmentUpsertArgs} args - Arguments to update or create a Shipment.
     * @example
     * // Update or create a Shipment
     * const shipment = await prisma.shipment.upsert({
     *   create: {
     *     // ... data to create a Shipment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Shipment we want to update
     *   }
     * })
     */
    upsert<T extends ShipmentUpsertArgs>(args: SelectSubset<T, ShipmentUpsertArgs<ExtArgs>>): Prisma__ShipmentClient<$Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Shipments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentCountArgs} args - Arguments to filter Shipments to count.
     * @example
     * // Count the number of Shipments
     * const count = await prisma.shipment.count({
     *   where: {
     *     // ... the filter for the Shipments we want to count
     *   }
     * })
    **/
    count<T extends ShipmentCountArgs>(
      args?: Subset<T, ShipmentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ShipmentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Shipment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ShipmentAggregateArgs>(args: Subset<T, ShipmentAggregateArgs>): Prisma.PrismaPromise<GetShipmentAggregateType<T>>

    /**
     * Group by Shipment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ShipmentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ShipmentGroupByArgs['orderBy'] }
        : { orderBy?: ShipmentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ShipmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetShipmentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Shipment model
   */
  readonly fields: ShipmentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Shipment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ShipmentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends Shipment$orderArgs<ExtArgs> = {}>(args?: Subset<T, Shipment$orderArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    warehouse<T extends WarehouseDefaultArgs<ExtArgs> = {}>(args?: Subset<T, WarehouseDefaultArgs<ExtArgs>>): Prisma__WarehouseClient<$Result.GetResult<Prisma.$WarehousePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    packages<T extends Shipment$packagesArgs<ExtArgs> = {}>(args?: Subset<T, Shipment$packagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShipmentPackagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tracking<T extends Shipment$trackingArgs<ExtArgs> = {}>(args?: Subset<T, Shipment$trackingArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShipmentTrackingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Shipment model
   */
  interface ShipmentFieldRefs {
    readonly id: FieldRef<"Shipment", 'String'>
    readonly shipmentNumber: FieldRef<"Shipment", 'String'>
    readonly orderId: FieldRef<"Shipment", 'String'>
    readonly warehouseId: FieldRef<"Shipment", 'String'>
    readonly carrier: FieldRef<"Shipment", 'String'>
    readonly service: FieldRef<"Shipment", 'String'>
    readonly trackingNumber: FieldRef<"Shipment", 'String'>
    readonly fromAddress: FieldRef<"Shipment", 'Json'>
    readonly toAddress: FieldRef<"Shipment", 'Json'>
    readonly packageCount: FieldRef<"Shipment", 'Int'>
    readonly weight: FieldRef<"Shipment", 'Decimal'>
    readonly dimensions: FieldRef<"Shipment", 'Json'>
    readonly shippingCost: FieldRef<"Shipment", 'Decimal'>
    readonly insuranceValue: FieldRef<"Shipment", 'Decimal'>
    readonly status: FieldRef<"Shipment", 'ShipmentStatus'>
    readonly shipDate: FieldRef<"Shipment", 'DateTime'>
    readonly estimatedDelivery: FieldRef<"Shipment", 'DateTime'>
    readonly actualDelivery: FieldRef<"Shipment", 'DateTime'>
    readonly notes: FieldRef<"Shipment", 'String'>
    readonly createdAt: FieldRef<"Shipment", 'DateTime'>
    readonly updatedAt: FieldRef<"Shipment", 'DateTime'>
    readonly createdBy: FieldRef<"Shipment", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Shipment findUnique
   */
  export type ShipmentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Shipment
     */
    select?: ShipmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Shipment
     */
    omit?: ShipmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentInclude<ExtArgs> | null
    /**
     * Filter, which Shipment to fetch.
     */
    where: ShipmentWhereUniqueInput
  }

  /**
   * Shipment findUniqueOrThrow
   */
  export type ShipmentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Shipment
     */
    select?: ShipmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Shipment
     */
    omit?: ShipmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentInclude<ExtArgs> | null
    /**
     * Filter, which Shipment to fetch.
     */
    where: ShipmentWhereUniqueInput
  }

  /**
   * Shipment findFirst
   */
  export type ShipmentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Shipment
     */
    select?: ShipmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Shipment
     */
    omit?: ShipmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentInclude<ExtArgs> | null
    /**
     * Filter, which Shipment to fetch.
     */
    where?: ShipmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Shipments to fetch.
     */
    orderBy?: ShipmentOrderByWithRelationInput | ShipmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Shipments.
     */
    cursor?: ShipmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Shipments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Shipments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Shipments.
     */
    distinct?: ShipmentScalarFieldEnum | ShipmentScalarFieldEnum[]
  }

  /**
   * Shipment findFirstOrThrow
   */
  export type ShipmentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Shipment
     */
    select?: ShipmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Shipment
     */
    omit?: ShipmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentInclude<ExtArgs> | null
    /**
     * Filter, which Shipment to fetch.
     */
    where?: ShipmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Shipments to fetch.
     */
    orderBy?: ShipmentOrderByWithRelationInput | ShipmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Shipments.
     */
    cursor?: ShipmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Shipments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Shipments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Shipments.
     */
    distinct?: ShipmentScalarFieldEnum | ShipmentScalarFieldEnum[]
  }

  /**
   * Shipment findMany
   */
  export type ShipmentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Shipment
     */
    select?: ShipmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Shipment
     */
    omit?: ShipmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentInclude<ExtArgs> | null
    /**
     * Filter, which Shipments to fetch.
     */
    where?: ShipmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Shipments to fetch.
     */
    orderBy?: ShipmentOrderByWithRelationInput | ShipmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Shipments.
     */
    cursor?: ShipmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Shipments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Shipments.
     */
    skip?: number
    distinct?: ShipmentScalarFieldEnum | ShipmentScalarFieldEnum[]
  }

  /**
   * Shipment create
   */
  export type ShipmentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Shipment
     */
    select?: ShipmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Shipment
     */
    omit?: ShipmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentInclude<ExtArgs> | null
    /**
     * The data needed to create a Shipment.
     */
    data: XOR<ShipmentCreateInput, ShipmentUncheckedCreateInput>
  }

  /**
   * Shipment createMany
   */
  export type ShipmentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Shipments.
     */
    data: ShipmentCreateManyInput | ShipmentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Shipment createManyAndReturn
   */
  export type ShipmentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Shipment
     */
    select?: ShipmentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Shipment
     */
    omit?: ShipmentOmit<ExtArgs> | null
    /**
     * The data used to create many Shipments.
     */
    data: ShipmentCreateManyInput | ShipmentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Shipment update
   */
  export type ShipmentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Shipment
     */
    select?: ShipmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Shipment
     */
    omit?: ShipmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentInclude<ExtArgs> | null
    /**
     * The data needed to update a Shipment.
     */
    data: XOR<ShipmentUpdateInput, ShipmentUncheckedUpdateInput>
    /**
     * Choose, which Shipment to update.
     */
    where: ShipmentWhereUniqueInput
  }

  /**
   * Shipment updateMany
   */
  export type ShipmentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Shipments.
     */
    data: XOR<ShipmentUpdateManyMutationInput, ShipmentUncheckedUpdateManyInput>
    /**
     * Filter which Shipments to update
     */
    where?: ShipmentWhereInput
    /**
     * Limit how many Shipments to update.
     */
    limit?: number
  }

  /**
   * Shipment updateManyAndReturn
   */
  export type ShipmentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Shipment
     */
    select?: ShipmentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Shipment
     */
    omit?: ShipmentOmit<ExtArgs> | null
    /**
     * The data used to update Shipments.
     */
    data: XOR<ShipmentUpdateManyMutationInput, ShipmentUncheckedUpdateManyInput>
    /**
     * Filter which Shipments to update
     */
    where?: ShipmentWhereInput
    /**
     * Limit how many Shipments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Shipment upsert
   */
  export type ShipmentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Shipment
     */
    select?: ShipmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Shipment
     */
    omit?: ShipmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentInclude<ExtArgs> | null
    /**
     * The filter to search for the Shipment to update in case it exists.
     */
    where: ShipmentWhereUniqueInput
    /**
     * In case the Shipment found by the `where` argument doesn't exist, create a new Shipment with this data.
     */
    create: XOR<ShipmentCreateInput, ShipmentUncheckedCreateInput>
    /**
     * In case the Shipment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ShipmentUpdateInput, ShipmentUncheckedUpdateInput>
  }

  /**
   * Shipment delete
   */
  export type ShipmentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Shipment
     */
    select?: ShipmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Shipment
     */
    omit?: ShipmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentInclude<ExtArgs> | null
    /**
     * Filter which Shipment to delete.
     */
    where: ShipmentWhereUniqueInput
  }

  /**
   * Shipment deleteMany
   */
  export type ShipmentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Shipments to delete
     */
    where?: ShipmentWhereInput
    /**
     * Limit how many Shipments to delete.
     */
    limit?: number
  }

  /**
   * Shipment.order
   */
  export type Shipment$orderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
  }

  /**
   * Shipment.packages
   */
  export type Shipment$packagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentPackage
     */
    select?: ShipmentPackageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShipmentPackage
     */
    omit?: ShipmentPackageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentPackageInclude<ExtArgs> | null
    where?: ShipmentPackageWhereInput
    orderBy?: ShipmentPackageOrderByWithRelationInput | ShipmentPackageOrderByWithRelationInput[]
    cursor?: ShipmentPackageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ShipmentPackageScalarFieldEnum | ShipmentPackageScalarFieldEnum[]
  }

  /**
   * Shipment.tracking
   */
  export type Shipment$trackingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentTracking
     */
    select?: ShipmentTrackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShipmentTracking
     */
    omit?: ShipmentTrackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentTrackingInclude<ExtArgs> | null
    where?: ShipmentTrackingWhereInput
    orderBy?: ShipmentTrackingOrderByWithRelationInput | ShipmentTrackingOrderByWithRelationInput[]
    cursor?: ShipmentTrackingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ShipmentTrackingScalarFieldEnum | ShipmentTrackingScalarFieldEnum[]
  }

  /**
   * Shipment without action
   */
  export type ShipmentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Shipment
     */
    select?: ShipmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Shipment
     */
    omit?: ShipmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentInclude<ExtArgs> | null
  }


  /**
   * Model ShipmentPackage
   */

  export type AggregateShipmentPackage = {
    _count: ShipmentPackageCountAggregateOutputType | null
    _avg: ShipmentPackageAvgAggregateOutputType | null
    _sum: ShipmentPackageSumAggregateOutputType | null
    _min: ShipmentPackageMinAggregateOutputType | null
    _max: ShipmentPackageMaxAggregateOutputType | null
  }

  export type ShipmentPackageAvgAggregateOutputType = {
    weight: Decimal | null
  }

  export type ShipmentPackageSumAggregateOutputType = {
    weight: Decimal | null
  }

  export type ShipmentPackageMinAggregateOutputType = {
    id: string | null
    shipmentId: string | null
    packageNumber: string | null
    trackingNumber: string | null
    weight: Decimal | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ShipmentPackageMaxAggregateOutputType = {
    id: string | null
    shipmentId: string | null
    packageNumber: string | null
    trackingNumber: string | null
    weight: Decimal | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ShipmentPackageCountAggregateOutputType = {
    id: number
    shipmentId: number
    packageNumber: number
    trackingNumber: number
    weight: number
    dimensions: number
    contents: number
    status: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ShipmentPackageAvgAggregateInputType = {
    weight?: true
  }

  export type ShipmentPackageSumAggregateInputType = {
    weight?: true
  }

  export type ShipmentPackageMinAggregateInputType = {
    id?: true
    shipmentId?: true
    packageNumber?: true
    trackingNumber?: true
    weight?: true
    status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ShipmentPackageMaxAggregateInputType = {
    id?: true
    shipmentId?: true
    packageNumber?: true
    trackingNumber?: true
    weight?: true
    status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ShipmentPackageCountAggregateInputType = {
    id?: true
    shipmentId?: true
    packageNumber?: true
    trackingNumber?: true
    weight?: true
    dimensions?: true
    contents?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ShipmentPackageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ShipmentPackage to aggregate.
     */
    where?: ShipmentPackageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShipmentPackages to fetch.
     */
    orderBy?: ShipmentPackageOrderByWithRelationInput | ShipmentPackageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ShipmentPackageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShipmentPackages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShipmentPackages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ShipmentPackages
    **/
    _count?: true | ShipmentPackageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ShipmentPackageAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ShipmentPackageSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ShipmentPackageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ShipmentPackageMaxAggregateInputType
  }

  export type GetShipmentPackageAggregateType<T extends ShipmentPackageAggregateArgs> = {
        [P in keyof T & keyof AggregateShipmentPackage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateShipmentPackage[P]>
      : GetScalarType<T[P], AggregateShipmentPackage[P]>
  }




  export type ShipmentPackageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShipmentPackageWhereInput
    orderBy?: ShipmentPackageOrderByWithAggregationInput | ShipmentPackageOrderByWithAggregationInput[]
    by: ShipmentPackageScalarFieldEnum[] | ShipmentPackageScalarFieldEnum
    having?: ShipmentPackageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ShipmentPackageCountAggregateInputType | true
    _avg?: ShipmentPackageAvgAggregateInputType
    _sum?: ShipmentPackageSumAggregateInputType
    _min?: ShipmentPackageMinAggregateInputType
    _max?: ShipmentPackageMaxAggregateInputType
  }

  export type ShipmentPackageGroupByOutputType = {
    id: string
    shipmentId: string
    packageNumber: string
    trackingNumber: string | null
    weight: Decimal | null
    dimensions: JsonValue | null
    contents: JsonValue | null
    status: string | null
    createdAt: Date
    updatedAt: Date
    _count: ShipmentPackageCountAggregateOutputType | null
    _avg: ShipmentPackageAvgAggregateOutputType | null
    _sum: ShipmentPackageSumAggregateOutputType | null
    _min: ShipmentPackageMinAggregateOutputType | null
    _max: ShipmentPackageMaxAggregateOutputType | null
  }

  type GetShipmentPackageGroupByPayload<T extends ShipmentPackageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ShipmentPackageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ShipmentPackageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ShipmentPackageGroupByOutputType[P]>
            : GetScalarType<T[P], ShipmentPackageGroupByOutputType[P]>
        }
      >
    >


  export type ShipmentPackageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    shipmentId?: boolean
    packageNumber?: boolean
    trackingNumber?: boolean
    weight?: boolean
    dimensions?: boolean
    contents?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    shipment?: boolean | ShipmentDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["shipmentPackage"]>

  export type ShipmentPackageSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    shipmentId?: boolean
    packageNumber?: boolean
    trackingNumber?: boolean
    weight?: boolean
    dimensions?: boolean
    contents?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    shipment?: boolean | ShipmentDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["shipmentPackage"]>

  export type ShipmentPackageSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    shipmentId?: boolean
    packageNumber?: boolean
    trackingNumber?: boolean
    weight?: boolean
    dimensions?: boolean
    contents?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    shipment?: boolean | ShipmentDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["shipmentPackage"]>

  export type ShipmentPackageSelectScalar = {
    id?: boolean
    shipmentId?: boolean
    packageNumber?: boolean
    trackingNumber?: boolean
    weight?: boolean
    dimensions?: boolean
    contents?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ShipmentPackageOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "shipmentId" | "packageNumber" | "trackingNumber" | "weight" | "dimensions" | "contents" | "status" | "createdAt" | "updatedAt", ExtArgs["result"]["shipmentPackage"]>
  export type ShipmentPackageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    shipment?: boolean | ShipmentDefaultArgs<ExtArgs>
  }
  export type ShipmentPackageIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    shipment?: boolean | ShipmentDefaultArgs<ExtArgs>
  }
  export type ShipmentPackageIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    shipment?: boolean | ShipmentDefaultArgs<ExtArgs>
  }

  export type $ShipmentPackagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ShipmentPackage"
    objects: {
      shipment: Prisma.$ShipmentPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      shipmentId: string
      packageNumber: string
      trackingNumber: string | null
      weight: Prisma.Decimal | null
      dimensions: Prisma.JsonValue | null
      contents: Prisma.JsonValue | null
      status: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["shipmentPackage"]>
    composites: {}
  }

  type ShipmentPackageGetPayload<S extends boolean | null | undefined | ShipmentPackageDefaultArgs> = $Result.GetResult<Prisma.$ShipmentPackagePayload, S>

  type ShipmentPackageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ShipmentPackageFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ShipmentPackageCountAggregateInputType | true
    }

  export interface ShipmentPackageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ShipmentPackage'], meta: { name: 'ShipmentPackage' } }
    /**
     * Find zero or one ShipmentPackage that matches the filter.
     * @param {ShipmentPackageFindUniqueArgs} args - Arguments to find a ShipmentPackage
     * @example
     * // Get one ShipmentPackage
     * const shipmentPackage = await prisma.shipmentPackage.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ShipmentPackageFindUniqueArgs>(args: SelectSubset<T, ShipmentPackageFindUniqueArgs<ExtArgs>>): Prisma__ShipmentPackageClient<$Result.GetResult<Prisma.$ShipmentPackagePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ShipmentPackage that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ShipmentPackageFindUniqueOrThrowArgs} args - Arguments to find a ShipmentPackage
     * @example
     * // Get one ShipmentPackage
     * const shipmentPackage = await prisma.shipmentPackage.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ShipmentPackageFindUniqueOrThrowArgs>(args: SelectSubset<T, ShipmentPackageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ShipmentPackageClient<$Result.GetResult<Prisma.$ShipmentPackagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ShipmentPackage that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentPackageFindFirstArgs} args - Arguments to find a ShipmentPackage
     * @example
     * // Get one ShipmentPackage
     * const shipmentPackage = await prisma.shipmentPackage.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ShipmentPackageFindFirstArgs>(args?: SelectSubset<T, ShipmentPackageFindFirstArgs<ExtArgs>>): Prisma__ShipmentPackageClient<$Result.GetResult<Prisma.$ShipmentPackagePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ShipmentPackage that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentPackageFindFirstOrThrowArgs} args - Arguments to find a ShipmentPackage
     * @example
     * // Get one ShipmentPackage
     * const shipmentPackage = await prisma.shipmentPackage.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ShipmentPackageFindFirstOrThrowArgs>(args?: SelectSubset<T, ShipmentPackageFindFirstOrThrowArgs<ExtArgs>>): Prisma__ShipmentPackageClient<$Result.GetResult<Prisma.$ShipmentPackagePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ShipmentPackages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentPackageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ShipmentPackages
     * const shipmentPackages = await prisma.shipmentPackage.findMany()
     * 
     * // Get first 10 ShipmentPackages
     * const shipmentPackages = await prisma.shipmentPackage.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const shipmentPackageWithIdOnly = await prisma.shipmentPackage.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ShipmentPackageFindManyArgs>(args?: SelectSubset<T, ShipmentPackageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShipmentPackagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ShipmentPackage.
     * @param {ShipmentPackageCreateArgs} args - Arguments to create a ShipmentPackage.
     * @example
     * // Create one ShipmentPackage
     * const ShipmentPackage = await prisma.shipmentPackage.create({
     *   data: {
     *     // ... data to create a ShipmentPackage
     *   }
     * })
     * 
     */
    create<T extends ShipmentPackageCreateArgs>(args: SelectSubset<T, ShipmentPackageCreateArgs<ExtArgs>>): Prisma__ShipmentPackageClient<$Result.GetResult<Prisma.$ShipmentPackagePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ShipmentPackages.
     * @param {ShipmentPackageCreateManyArgs} args - Arguments to create many ShipmentPackages.
     * @example
     * // Create many ShipmentPackages
     * const shipmentPackage = await prisma.shipmentPackage.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ShipmentPackageCreateManyArgs>(args?: SelectSubset<T, ShipmentPackageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ShipmentPackages and returns the data saved in the database.
     * @param {ShipmentPackageCreateManyAndReturnArgs} args - Arguments to create many ShipmentPackages.
     * @example
     * // Create many ShipmentPackages
     * const shipmentPackage = await prisma.shipmentPackage.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ShipmentPackages and only return the `id`
     * const shipmentPackageWithIdOnly = await prisma.shipmentPackage.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ShipmentPackageCreateManyAndReturnArgs>(args?: SelectSubset<T, ShipmentPackageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShipmentPackagePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ShipmentPackage.
     * @param {ShipmentPackageDeleteArgs} args - Arguments to delete one ShipmentPackage.
     * @example
     * // Delete one ShipmentPackage
     * const ShipmentPackage = await prisma.shipmentPackage.delete({
     *   where: {
     *     // ... filter to delete one ShipmentPackage
     *   }
     * })
     * 
     */
    delete<T extends ShipmentPackageDeleteArgs>(args: SelectSubset<T, ShipmentPackageDeleteArgs<ExtArgs>>): Prisma__ShipmentPackageClient<$Result.GetResult<Prisma.$ShipmentPackagePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ShipmentPackage.
     * @param {ShipmentPackageUpdateArgs} args - Arguments to update one ShipmentPackage.
     * @example
     * // Update one ShipmentPackage
     * const shipmentPackage = await prisma.shipmentPackage.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ShipmentPackageUpdateArgs>(args: SelectSubset<T, ShipmentPackageUpdateArgs<ExtArgs>>): Prisma__ShipmentPackageClient<$Result.GetResult<Prisma.$ShipmentPackagePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ShipmentPackages.
     * @param {ShipmentPackageDeleteManyArgs} args - Arguments to filter ShipmentPackages to delete.
     * @example
     * // Delete a few ShipmentPackages
     * const { count } = await prisma.shipmentPackage.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ShipmentPackageDeleteManyArgs>(args?: SelectSubset<T, ShipmentPackageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ShipmentPackages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentPackageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ShipmentPackages
     * const shipmentPackage = await prisma.shipmentPackage.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ShipmentPackageUpdateManyArgs>(args: SelectSubset<T, ShipmentPackageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ShipmentPackages and returns the data updated in the database.
     * @param {ShipmentPackageUpdateManyAndReturnArgs} args - Arguments to update many ShipmentPackages.
     * @example
     * // Update many ShipmentPackages
     * const shipmentPackage = await prisma.shipmentPackage.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ShipmentPackages and only return the `id`
     * const shipmentPackageWithIdOnly = await prisma.shipmentPackage.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ShipmentPackageUpdateManyAndReturnArgs>(args: SelectSubset<T, ShipmentPackageUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShipmentPackagePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ShipmentPackage.
     * @param {ShipmentPackageUpsertArgs} args - Arguments to update or create a ShipmentPackage.
     * @example
     * // Update or create a ShipmentPackage
     * const shipmentPackage = await prisma.shipmentPackage.upsert({
     *   create: {
     *     // ... data to create a ShipmentPackage
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ShipmentPackage we want to update
     *   }
     * })
     */
    upsert<T extends ShipmentPackageUpsertArgs>(args: SelectSubset<T, ShipmentPackageUpsertArgs<ExtArgs>>): Prisma__ShipmentPackageClient<$Result.GetResult<Prisma.$ShipmentPackagePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ShipmentPackages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentPackageCountArgs} args - Arguments to filter ShipmentPackages to count.
     * @example
     * // Count the number of ShipmentPackages
     * const count = await prisma.shipmentPackage.count({
     *   where: {
     *     // ... the filter for the ShipmentPackages we want to count
     *   }
     * })
    **/
    count<T extends ShipmentPackageCountArgs>(
      args?: Subset<T, ShipmentPackageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ShipmentPackageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ShipmentPackage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentPackageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ShipmentPackageAggregateArgs>(args: Subset<T, ShipmentPackageAggregateArgs>): Prisma.PrismaPromise<GetShipmentPackageAggregateType<T>>

    /**
     * Group by ShipmentPackage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentPackageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ShipmentPackageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ShipmentPackageGroupByArgs['orderBy'] }
        : { orderBy?: ShipmentPackageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ShipmentPackageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetShipmentPackageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ShipmentPackage model
   */
  readonly fields: ShipmentPackageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ShipmentPackage.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ShipmentPackageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    shipment<T extends ShipmentDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ShipmentDefaultArgs<ExtArgs>>): Prisma__ShipmentClient<$Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ShipmentPackage model
   */
  interface ShipmentPackageFieldRefs {
    readonly id: FieldRef<"ShipmentPackage", 'String'>
    readonly shipmentId: FieldRef<"ShipmentPackage", 'String'>
    readonly packageNumber: FieldRef<"ShipmentPackage", 'String'>
    readonly trackingNumber: FieldRef<"ShipmentPackage", 'String'>
    readonly weight: FieldRef<"ShipmentPackage", 'Decimal'>
    readonly dimensions: FieldRef<"ShipmentPackage", 'Json'>
    readonly contents: FieldRef<"ShipmentPackage", 'Json'>
    readonly status: FieldRef<"ShipmentPackage", 'String'>
    readonly createdAt: FieldRef<"ShipmentPackage", 'DateTime'>
    readonly updatedAt: FieldRef<"ShipmentPackage", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ShipmentPackage findUnique
   */
  export type ShipmentPackageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentPackage
     */
    select?: ShipmentPackageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShipmentPackage
     */
    omit?: ShipmentPackageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentPackageInclude<ExtArgs> | null
    /**
     * Filter, which ShipmentPackage to fetch.
     */
    where: ShipmentPackageWhereUniqueInput
  }

  /**
   * ShipmentPackage findUniqueOrThrow
   */
  export type ShipmentPackageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentPackage
     */
    select?: ShipmentPackageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShipmentPackage
     */
    omit?: ShipmentPackageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentPackageInclude<ExtArgs> | null
    /**
     * Filter, which ShipmentPackage to fetch.
     */
    where: ShipmentPackageWhereUniqueInput
  }

  /**
   * ShipmentPackage findFirst
   */
  export type ShipmentPackageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentPackage
     */
    select?: ShipmentPackageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShipmentPackage
     */
    omit?: ShipmentPackageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentPackageInclude<ExtArgs> | null
    /**
     * Filter, which ShipmentPackage to fetch.
     */
    where?: ShipmentPackageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShipmentPackages to fetch.
     */
    orderBy?: ShipmentPackageOrderByWithRelationInput | ShipmentPackageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ShipmentPackages.
     */
    cursor?: ShipmentPackageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShipmentPackages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShipmentPackages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ShipmentPackages.
     */
    distinct?: ShipmentPackageScalarFieldEnum | ShipmentPackageScalarFieldEnum[]
  }

  /**
   * ShipmentPackage findFirstOrThrow
   */
  export type ShipmentPackageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentPackage
     */
    select?: ShipmentPackageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShipmentPackage
     */
    omit?: ShipmentPackageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentPackageInclude<ExtArgs> | null
    /**
     * Filter, which ShipmentPackage to fetch.
     */
    where?: ShipmentPackageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShipmentPackages to fetch.
     */
    orderBy?: ShipmentPackageOrderByWithRelationInput | ShipmentPackageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ShipmentPackages.
     */
    cursor?: ShipmentPackageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShipmentPackages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShipmentPackages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ShipmentPackages.
     */
    distinct?: ShipmentPackageScalarFieldEnum | ShipmentPackageScalarFieldEnum[]
  }

  /**
   * ShipmentPackage findMany
   */
  export type ShipmentPackageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentPackage
     */
    select?: ShipmentPackageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShipmentPackage
     */
    omit?: ShipmentPackageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentPackageInclude<ExtArgs> | null
    /**
     * Filter, which ShipmentPackages to fetch.
     */
    where?: ShipmentPackageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShipmentPackages to fetch.
     */
    orderBy?: ShipmentPackageOrderByWithRelationInput | ShipmentPackageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ShipmentPackages.
     */
    cursor?: ShipmentPackageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShipmentPackages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShipmentPackages.
     */
    skip?: number
    distinct?: ShipmentPackageScalarFieldEnum | ShipmentPackageScalarFieldEnum[]
  }

  /**
   * ShipmentPackage create
   */
  export type ShipmentPackageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentPackage
     */
    select?: ShipmentPackageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShipmentPackage
     */
    omit?: ShipmentPackageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentPackageInclude<ExtArgs> | null
    /**
     * The data needed to create a ShipmentPackage.
     */
    data: XOR<ShipmentPackageCreateInput, ShipmentPackageUncheckedCreateInput>
  }

  /**
   * ShipmentPackage createMany
   */
  export type ShipmentPackageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ShipmentPackages.
     */
    data: ShipmentPackageCreateManyInput | ShipmentPackageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ShipmentPackage createManyAndReturn
   */
  export type ShipmentPackageCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentPackage
     */
    select?: ShipmentPackageSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ShipmentPackage
     */
    omit?: ShipmentPackageOmit<ExtArgs> | null
    /**
     * The data used to create many ShipmentPackages.
     */
    data: ShipmentPackageCreateManyInput | ShipmentPackageCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentPackageIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ShipmentPackage update
   */
  export type ShipmentPackageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentPackage
     */
    select?: ShipmentPackageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShipmentPackage
     */
    omit?: ShipmentPackageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentPackageInclude<ExtArgs> | null
    /**
     * The data needed to update a ShipmentPackage.
     */
    data: XOR<ShipmentPackageUpdateInput, ShipmentPackageUncheckedUpdateInput>
    /**
     * Choose, which ShipmentPackage to update.
     */
    where: ShipmentPackageWhereUniqueInput
  }

  /**
   * ShipmentPackage updateMany
   */
  export type ShipmentPackageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ShipmentPackages.
     */
    data: XOR<ShipmentPackageUpdateManyMutationInput, ShipmentPackageUncheckedUpdateManyInput>
    /**
     * Filter which ShipmentPackages to update
     */
    where?: ShipmentPackageWhereInput
    /**
     * Limit how many ShipmentPackages to update.
     */
    limit?: number
  }

  /**
   * ShipmentPackage updateManyAndReturn
   */
  export type ShipmentPackageUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentPackage
     */
    select?: ShipmentPackageSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ShipmentPackage
     */
    omit?: ShipmentPackageOmit<ExtArgs> | null
    /**
     * The data used to update ShipmentPackages.
     */
    data: XOR<ShipmentPackageUpdateManyMutationInput, ShipmentPackageUncheckedUpdateManyInput>
    /**
     * Filter which ShipmentPackages to update
     */
    where?: ShipmentPackageWhereInput
    /**
     * Limit how many ShipmentPackages to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentPackageIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ShipmentPackage upsert
   */
  export type ShipmentPackageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentPackage
     */
    select?: ShipmentPackageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShipmentPackage
     */
    omit?: ShipmentPackageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentPackageInclude<ExtArgs> | null
    /**
     * The filter to search for the ShipmentPackage to update in case it exists.
     */
    where: ShipmentPackageWhereUniqueInput
    /**
     * In case the ShipmentPackage found by the `where` argument doesn't exist, create a new ShipmentPackage with this data.
     */
    create: XOR<ShipmentPackageCreateInput, ShipmentPackageUncheckedCreateInput>
    /**
     * In case the ShipmentPackage was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ShipmentPackageUpdateInput, ShipmentPackageUncheckedUpdateInput>
  }

  /**
   * ShipmentPackage delete
   */
  export type ShipmentPackageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentPackage
     */
    select?: ShipmentPackageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShipmentPackage
     */
    omit?: ShipmentPackageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentPackageInclude<ExtArgs> | null
    /**
     * Filter which ShipmentPackage to delete.
     */
    where: ShipmentPackageWhereUniqueInput
  }

  /**
   * ShipmentPackage deleteMany
   */
  export type ShipmentPackageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ShipmentPackages to delete
     */
    where?: ShipmentPackageWhereInput
    /**
     * Limit how many ShipmentPackages to delete.
     */
    limit?: number
  }

  /**
   * ShipmentPackage without action
   */
  export type ShipmentPackageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentPackage
     */
    select?: ShipmentPackageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShipmentPackage
     */
    omit?: ShipmentPackageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentPackageInclude<ExtArgs> | null
  }


  /**
   * Model ShipmentTracking
   */

  export type AggregateShipmentTracking = {
    _count: ShipmentTrackingCountAggregateOutputType | null
    _min: ShipmentTrackingMinAggregateOutputType | null
    _max: ShipmentTrackingMaxAggregateOutputType | null
  }

  export type ShipmentTrackingMinAggregateOutputType = {
    id: string | null
    shipmentId: string | null
    status: string | null
    description: string | null
    location: string | null
    eventDate: Date | null
    createdAt: Date | null
  }

  export type ShipmentTrackingMaxAggregateOutputType = {
    id: string | null
    shipmentId: string | null
    status: string | null
    description: string | null
    location: string | null
    eventDate: Date | null
    createdAt: Date | null
  }

  export type ShipmentTrackingCountAggregateOutputType = {
    id: number
    shipmentId: number
    status: number
    description: number
    location: number
    eventDate: number
    rawData: number
    createdAt: number
    _all: number
  }


  export type ShipmentTrackingMinAggregateInputType = {
    id?: true
    shipmentId?: true
    status?: true
    description?: true
    location?: true
    eventDate?: true
    createdAt?: true
  }

  export type ShipmentTrackingMaxAggregateInputType = {
    id?: true
    shipmentId?: true
    status?: true
    description?: true
    location?: true
    eventDate?: true
    createdAt?: true
  }

  export type ShipmentTrackingCountAggregateInputType = {
    id?: true
    shipmentId?: true
    status?: true
    description?: true
    location?: true
    eventDate?: true
    rawData?: true
    createdAt?: true
    _all?: true
  }

  export type ShipmentTrackingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ShipmentTracking to aggregate.
     */
    where?: ShipmentTrackingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShipmentTrackings to fetch.
     */
    orderBy?: ShipmentTrackingOrderByWithRelationInput | ShipmentTrackingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ShipmentTrackingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShipmentTrackings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShipmentTrackings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ShipmentTrackings
    **/
    _count?: true | ShipmentTrackingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ShipmentTrackingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ShipmentTrackingMaxAggregateInputType
  }

  export type GetShipmentTrackingAggregateType<T extends ShipmentTrackingAggregateArgs> = {
        [P in keyof T & keyof AggregateShipmentTracking]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateShipmentTracking[P]>
      : GetScalarType<T[P], AggregateShipmentTracking[P]>
  }




  export type ShipmentTrackingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShipmentTrackingWhereInput
    orderBy?: ShipmentTrackingOrderByWithAggregationInput | ShipmentTrackingOrderByWithAggregationInput[]
    by: ShipmentTrackingScalarFieldEnum[] | ShipmentTrackingScalarFieldEnum
    having?: ShipmentTrackingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ShipmentTrackingCountAggregateInputType | true
    _min?: ShipmentTrackingMinAggregateInputType
    _max?: ShipmentTrackingMaxAggregateInputType
  }

  export type ShipmentTrackingGroupByOutputType = {
    id: string
    shipmentId: string
    status: string
    description: string | null
    location: string | null
    eventDate: Date
    rawData: JsonValue | null
    createdAt: Date
    _count: ShipmentTrackingCountAggregateOutputType | null
    _min: ShipmentTrackingMinAggregateOutputType | null
    _max: ShipmentTrackingMaxAggregateOutputType | null
  }

  type GetShipmentTrackingGroupByPayload<T extends ShipmentTrackingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ShipmentTrackingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ShipmentTrackingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ShipmentTrackingGroupByOutputType[P]>
            : GetScalarType<T[P], ShipmentTrackingGroupByOutputType[P]>
        }
      >
    >


  export type ShipmentTrackingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    shipmentId?: boolean
    status?: boolean
    description?: boolean
    location?: boolean
    eventDate?: boolean
    rawData?: boolean
    createdAt?: boolean
    shipment?: boolean | ShipmentDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["shipmentTracking"]>

  export type ShipmentTrackingSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    shipmentId?: boolean
    status?: boolean
    description?: boolean
    location?: boolean
    eventDate?: boolean
    rawData?: boolean
    createdAt?: boolean
    shipment?: boolean | ShipmentDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["shipmentTracking"]>

  export type ShipmentTrackingSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    shipmentId?: boolean
    status?: boolean
    description?: boolean
    location?: boolean
    eventDate?: boolean
    rawData?: boolean
    createdAt?: boolean
    shipment?: boolean | ShipmentDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["shipmentTracking"]>

  export type ShipmentTrackingSelectScalar = {
    id?: boolean
    shipmentId?: boolean
    status?: boolean
    description?: boolean
    location?: boolean
    eventDate?: boolean
    rawData?: boolean
    createdAt?: boolean
  }

  export type ShipmentTrackingOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "shipmentId" | "status" | "description" | "location" | "eventDate" | "rawData" | "createdAt", ExtArgs["result"]["shipmentTracking"]>
  export type ShipmentTrackingInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    shipment?: boolean | ShipmentDefaultArgs<ExtArgs>
  }
  export type ShipmentTrackingIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    shipment?: boolean | ShipmentDefaultArgs<ExtArgs>
  }
  export type ShipmentTrackingIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    shipment?: boolean | ShipmentDefaultArgs<ExtArgs>
  }

  export type $ShipmentTrackingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ShipmentTracking"
    objects: {
      shipment: Prisma.$ShipmentPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      shipmentId: string
      status: string
      description: string | null
      location: string | null
      eventDate: Date
      rawData: Prisma.JsonValue | null
      createdAt: Date
    }, ExtArgs["result"]["shipmentTracking"]>
    composites: {}
  }

  type ShipmentTrackingGetPayload<S extends boolean | null | undefined | ShipmentTrackingDefaultArgs> = $Result.GetResult<Prisma.$ShipmentTrackingPayload, S>

  type ShipmentTrackingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ShipmentTrackingFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ShipmentTrackingCountAggregateInputType | true
    }

  export interface ShipmentTrackingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ShipmentTracking'], meta: { name: 'ShipmentTracking' } }
    /**
     * Find zero or one ShipmentTracking that matches the filter.
     * @param {ShipmentTrackingFindUniqueArgs} args - Arguments to find a ShipmentTracking
     * @example
     * // Get one ShipmentTracking
     * const shipmentTracking = await prisma.shipmentTracking.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ShipmentTrackingFindUniqueArgs>(args: SelectSubset<T, ShipmentTrackingFindUniqueArgs<ExtArgs>>): Prisma__ShipmentTrackingClient<$Result.GetResult<Prisma.$ShipmentTrackingPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ShipmentTracking that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ShipmentTrackingFindUniqueOrThrowArgs} args - Arguments to find a ShipmentTracking
     * @example
     * // Get one ShipmentTracking
     * const shipmentTracking = await prisma.shipmentTracking.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ShipmentTrackingFindUniqueOrThrowArgs>(args: SelectSubset<T, ShipmentTrackingFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ShipmentTrackingClient<$Result.GetResult<Prisma.$ShipmentTrackingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ShipmentTracking that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentTrackingFindFirstArgs} args - Arguments to find a ShipmentTracking
     * @example
     * // Get one ShipmentTracking
     * const shipmentTracking = await prisma.shipmentTracking.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ShipmentTrackingFindFirstArgs>(args?: SelectSubset<T, ShipmentTrackingFindFirstArgs<ExtArgs>>): Prisma__ShipmentTrackingClient<$Result.GetResult<Prisma.$ShipmentTrackingPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ShipmentTracking that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentTrackingFindFirstOrThrowArgs} args - Arguments to find a ShipmentTracking
     * @example
     * // Get one ShipmentTracking
     * const shipmentTracking = await prisma.shipmentTracking.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ShipmentTrackingFindFirstOrThrowArgs>(args?: SelectSubset<T, ShipmentTrackingFindFirstOrThrowArgs<ExtArgs>>): Prisma__ShipmentTrackingClient<$Result.GetResult<Prisma.$ShipmentTrackingPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ShipmentTrackings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentTrackingFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ShipmentTrackings
     * const shipmentTrackings = await prisma.shipmentTracking.findMany()
     * 
     * // Get first 10 ShipmentTrackings
     * const shipmentTrackings = await prisma.shipmentTracking.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const shipmentTrackingWithIdOnly = await prisma.shipmentTracking.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ShipmentTrackingFindManyArgs>(args?: SelectSubset<T, ShipmentTrackingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShipmentTrackingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ShipmentTracking.
     * @param {ShipmentTrackingCreateArgs} args - Arguments to create a ShipmentTracking.
     * @example
     * // Create one ShipmentTracking
     * const ShipmentTracking = await prisma.shipmentTracking.create({
     *   data: {
     *     // ... data to create a ShipmentTracking
     *   }
     * })
     * 
     */
    create<T extends ShipmentTrackingCreateArgs>(args: SelectSubset<T, ShipmentTrackingCreateArgs<ExtArgs>>): Prisma__ShipmentTrackingClient<$Result.GetResult<Prisma.$ShipmentTrackingPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ShipmentTrackings.
     * @param {ShipmentTrackingCreateManyArgs} args - Arguments to create many ShipmentTrackings.
     * @example
     * // Create many ShipmentTrackings
     * const shipmentTracking = await prisma.shipmentTracking.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ShipmentTrackingCreateManyArgs>(args?: SelectSubset<T, ShipmentTrackingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ShipmentTrackings and returns the data saved in the database.
     * @param {ShipmentTrackingCreateManyAndReturnArgs} args - Arguments to create many ShipmentTrackings.
     * @example
     * // Create many ShipmentTrackings
     * const shipmentTracking = await prisma.shipmentTracking.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ShipmentTrackings and only return the `id`
     * const shipmentTrackingWithIdOnly = await prisma.shipmentTracking.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ShipmentTrackingCreateManyAndReturnArgs>(args?: SelectSubset<T, ShipmentTrackingCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShipmentTrackingPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ShipmentTracking.
     * @param {ShipmentTrackingDeleteArgs} args - Arguments to delete one ShipmentTracking.
     * @example
     * // Delete one ShipmentTracking
     * const ShipmentTracking = await prisma.shipmentTracking.delete({
     *   where: {
     *     // ... filter to delete one ShipmentTracking
     *   }
     * })
     * 
     */
    delete<T extends ShipmentTrackingDeleteArgs>(args: SelectSubset<T, ShipmentTrackingDeleteArgs<ExtArgs>>): Prisma__ShipmentTrackingClient<$Result.GetResult<Prisma.$ShipmentTrackingPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ShipmentTracking.
     * @param {ShipmentTrackingUpdateArgs} args - Arguments to update one ShipmentTracking.
     * @example
     * // Update one ShipmentTracking
     * const shipmentTracking = await prisma.shipmentTracking.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ShipmentTrackingUpdateArgs>(args: SelectSubset<T, ShipmentTrackingUpdateArgs<ExtArgs>>): Prisma__ShipmentTrackingClient<$Result.GetResult<Prisma.$ShipmentTrackingPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ShipmentTrackings.
     * @param {ShipmentTrackingDeleteManyArgs} args - Arguments to filter ShipmentTrackings to delete.
     * @example
     * // Delete a few ShipmentTrackings
     * const { count } = await prisma.shipmentTracking.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ShipmentTrackingDeleteManyArgs>(args?: SelectSubset<T, ShipmentTrackingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ShipmentTrackings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentTrackingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ShipmentTrackings
     * const shipmentTracking = await prisma.shipmentTracking.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ShipmentTrackingUpdateManyArgs>(args: SelectSubset<T, ShipmentTrackingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ShipmentTrackings and returns the data updated in the database.
     * @param {ShipmentTrackingUpdateManyAndReturnArgs} args - Arguments to update many ShipmentTrackings.
     * @example
     * // Update many ShipmentTrackings
     * const shipmentTracking = await prisma.shipmentTracking.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ShipmentTrackings and only return the `id`
     * const shipmentTrackingWithIdOnly = await prisma.shipmentTracking.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ShipmentTrackingUpdateManyAndReturnArgs>(args: SelectSubset<T, ShipmentTrackingUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShipmentTrackingPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ShipmentTracking.
     * @param {ShipmentTrackingUpsertArgs} args - Arguments to update or create a ShipmentTracking.
     * @example
     * // Update or create a ShipmentTracking
     * const shipmentTracking = await prisma.shipmentTracking.upsert({
     *   create: {
     *     // ... data to create a ShipmentTracking
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ShipmentTracking we want to update
     *   }
     * })
     */
    upsert<T extends ShipmentTrackingUpsertArgs>(args: SelectSubset<T, ShipmentTrackingUpsertArgs<ExtArgs>>): Prisma__ShipmentTrackingClient<$Result.GetResult<Prisma.$ShipmentTrackingPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ShipmentTrackings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentTrackingCountArgs} args - Arguments to filter ShipmentTrackings to count.
     * @example
     * // Count the number of ShipmentTrackings
     * const count = await prisma.shipmentTracking.count({
     *   where: {
     *     // ... the filter for the ShipmentTrackings we want to count
     *   }
     * })
    **/
    count<T extends ShipmentTrackingCountArgs>(
      args?: Subset<T, ShipmentTrackingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ShipmentTrackingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ShipmentTracking.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentTrackingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ShipmentTrackingAggregateArgs>(args: Subset<T, ShipmentTrackingAggregateArgs>): Prisma.PrismaPromise<GetShipmentTrackingAggregateType<T>>

    /**
     * Group by ShipmentTracking.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentTrackingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ShipmentTrackingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ShipmentTrackingGroupByArgs['orderBy'] }
        : { orderBy?: ShipmentTrackingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ShipmentTrackingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetShipmentTrackingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ShipmentTracking model
   */
  readonly fields: ShipmentTrackingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ShipmentTracking.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ShipmentTrackingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    shipment<T extends ShipmentDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ShipmentDefaultArgs<ExtArgs>>): Prisma__ShipmentClient<$Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ShipmentTracking model
   */
  interface ShipmentTrackingFieldRefs {
    readonly id: FieldRef<"ShipmentTracking", 'String'>
    readonly shipmentId: FieldRef<"ShipmentTracking", 'String'>
    readonly status: FieldRef<"ShipmentTracking", 'String'>
    readonly description: FieldRef<"ShipmentTracking", 'String'>
    readonly location: FieldRef<"ShipmentTracking", 'String'>
    readonly eventDate: FieldRef<"ShipmentTracking", 'DateTime'>
    readonly rawData: FieldRef<"ShipmentTracking", 'Json'>
    readonly createdAt: FieldRef<"ShipmentTracking", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ShipmentTracking findUnique
   */
  export type ShipmentTrackingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentTracking
     */
    select?: ShipmentTrackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShipmentTracking
     */
    omit?: ShipmentTrackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentTrackingInclude<ExtArgs> | null
    /**
     * Filter, which ShipmentTracking to fetch.
     */
    where: ShipmentTrackingWhereUniqueInput
  }

  /**
   * ShipmentTracking findUniqueOrThrow
   */
  export type ShipmentTrackingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentTracking
     */
    select?: ShipmentTrackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShipmentTracking
     */
    omit?: ShipmentTrackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentTrackingInclude<ExtArgs> | null
    /**
     * Filter, which ShipmentTracking to fetch.
     */
    where: ShipmentTrackingWhereUniqueInput
  }

  /**
   * ShipmentTracking findFirst
   */
  export type ShipmentTrackingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentTracking
     */
    select?: ShipmentTrackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShipmentTracking
     */
    omit?: ShipmentTrackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentTrackingInclude<ExtArgs> | null
    /**
     * Filter, which ShipmentTracking to fetch.
     */
    where?: ShipmentTrackingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShipmentTrackings to fetch.
     */
    orderBy?: ShipmentTrackingOrderByWithRelationInput | ShipmentTrackingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ShipmentTrackings.
     */
    cursor?: ShipmentTrackingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShipmentTrackings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShipmentTrackings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ShipmentTrackings.
     */
    distinct?: ShipmentTrackingScalarFieldEnum | ShipmentTrackingScalarFieldEnum[]
  }

  /**
   * ShipmentTracking findFirstOrThrow
   */
  export type ShipmentTrackingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentTracking
     */
    select?: ShipmentTrackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShipmentTracking
     */
    omit?: ShipmentTrackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentTrackingInclude<ExtArgs> | null
    /**
     * Filter, which ShipmentTracking to fetch.
     */
    where?: ShipmentTrackingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShipmentTrackings to fetch.
     */
    orderBy?: ShipmentTrackingOrderByWithRelationInput | ShipmentTrackingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ShipmentTrackings.
     */
    cursor?: ShipmentTrackingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShipmentTrackings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShipmentTrackings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ShipmentTrackings.
     */
    distinct?: ShipmentTrackingScalarFieldEnum | ShipmentTrackingScalarFieldEnum[]
  }

  /**
   * ShipmentTracking findMany
   */
  export type ShipmentTrackingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentTracking
     */
    select?: ShipmentTrackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShipmentTracking
     */
    omit?: ShipmentTrackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentTrackingInclude<ExtArgs> | null
    /**
     * Filter, which ShipmentTrackings to fetch.
     */
    where?: ShipmentTrackingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShipmentTrackings to fetch.
     */
    orderBy?: ShipmentTrackingOrderByWithRelationInput | ShipmentTrackingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ShipmentTrackings.
     */
    cursor?: ShipmentTrackingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShipmentTrackings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShipmentTrackings.
     */
    skip?: number
    distinct?: ShipmentTrackingScalarFieldEnum | ShipmentTrackingScalarFieldEnum[]
  }

  /**
   * ShipmentTracking create
   */
  export type ShipmentTrackingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentTracking
     */
    select?: ShipmentTrackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShipmentTracking
     */
    omit?: ShipmentTrackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentTrackingInclude<ExtArgs> | null
    /**
     * The data needed to create a ShipmentTracking.
     */
    data: XOR<ShipmentTrackingCreateInput, ShipmentTrackingUncheckedCreateInput>
  }

  /**
   * ShipmentTracking createMany
   */
  export type ShipmentTrackingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ShipmentTrackings.
     */
    data: ShipmentTrackingCreateManyInput | ShipmentTrackingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ShipmentTracking createManyAndReturn
   */
  export type ShipmentTrackingCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentTracking
     */
    select?: ShipmentTrackingSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ShipmentTracking
     */
    omit?: ShipmentTrackingOmit<ExtArgs> | null
    /**
     * The data used to create many ShipmentTrackings.
     */
    data: ShipmentTrackingCreateManyInput | ShipmentTrackingCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentTrackingIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ShipmentTracking update
   */
  export type ShipmentTrackingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentTracking
     */
    select?: ShipmentTrackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShipmentTracking
     */
    omit?: ShipmentTrackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentTrackingInclude<ExtArgs> | null
    /**
     * The data needed to update a ShipmentTracking.
     */
    data: XOR<ShipmentTrackingUpdateInput, ShipmentTrackingUncheckedUpdateInput>
    /**
     * Choose, which ShipmentTracking to update.
     */
    where: ShipmentTrackingWhereUniqueInput
  }

  /**
   * ShipmentTracking updateMany
   */
  export type ShipmentTrackingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ShipmentTrackings.
     */
    data: XOR<ShipmentTrackingUpdateManyMutationInput, ShipmentTrackingUncheckedUpdateManyInput>
    /**
     * Filter which ShipmentTrackings to update
     */
    where?: ShipmentTrackingWhereInput
    /**
     * Limit how many ShipmentTrackings to update.
     */
    limit?: number
  }

  /**
   * ShipmentTracking updateManyAndReturn
   */
  export type ShipmentTrackingUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentTracking
     */
    select?: ShipmentTrackingSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ShipmentTracking
     */
    omit?: ShipmentTrackingOmit<ExtArgs> | null
    /**
     * The data used to update ShipmentTrackings.
     */
    data: XOR<ShipmentTrackingUpdateManyMutationInput, ShipmentTrackingUncheckedUpdateManyInput>
    /**
     * Filter which ShipmentTrackings to update
     */
    where?: ShipmentTrackingWhereInput
    /**
     * Limit how many ShipmentTrackings to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentTrackingIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ShipmentTracking upsert
   */
  export type ShipmentTrackingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentTracking
     */
    select?: ShipmentTrackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShipmentTracking
     */
    omit?: ShipmentTrackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentTrackingInclude<ExtArgs> | null
    /**
     * The filter to search for the ShipmentTracking to update in case it exists.
     */
    where: ShipmentTrackingWhereUniqueInput
    /**
     * In case the ShipmentTracking found by the `where` argument doesn't exist, create a new ShipmentTracking with this data.
     */
    create: XOR<ShipmentTrackingCreateInput, ShipmentTrackingUncheckedCreateInput>
    /**
     * In case the ShipmentTracking was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ShipmentTrackingUpdateInput, ShipmentTrackingUncheckedUpdateInput>
  }

  /**
   * ShipmentTracking delete
   */
  export type ShipmentTrackingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentTracking
     */
    select?: ShipmentTrackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShipmentTracking
     */
    omit?: ShipmentTrackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentTrackingInclude<ExtArgs> | null
    /**
     * Filter which ShipmentTracking to delete.
     */
    where: ShipmentTrackingWhereUniqueInput
  }

  /**
   * ShipmentTracking deleteMany
   */
  export type ShipmentTrackingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ShipmentTrackings to delete
     */
    where?: ShipmentTrackingWhereInput
    /**
     * Limit how many ShipmentTrackings to delete.
     */
    limit?: number
  }

  /**
   * ShipmentTracking without action
   */
  export type ShipmentTrackingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentTracking
     */
    select?: ShipmentTrackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShipmentTracking
     */
    omit?: ShipmentTrackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentTrackingInclude<ExtArgs> | null
  }


  /**
   * Model StockTransfer
   */

  export type AggregateStockTransfer = {
    _count: StockTransferCountAggregateOutputType | null
    _min: StockTransferMinAggregateOutputType | null
    _max: StockTransferMaxAggregateOutputType | null
  }

  export type StockTransferMinAggregateOutputType = {
    id: string | null
    transferNumber: string | null
    fromWarehouseId: string | null
    toWarehouseId: string | null
    status: $Enums.TransferStatus | null
    requestedDate: Date | null
    shippedDate: Date | null
    receivedDate: Date | null
    approvedBy: string | null
    approvedAt: Date | null
    reason: string | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
  }

  export type StockTransferMaxAggregateOutputType = {
    id: string | null
    transferNumber: string | null
    fromWarehouseId: string | null
    toWarehouseId: string | null
    status: $Enums.TransferStatus | null
    requestedDate: Date | null
    shippedDate: Date | null
    receivedDate: Date | null
    approvedBy: string | null
    approvedAt: Date | null
    reason: string | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
  }

  export type StockTransferCountAggregateOutputType = {
    id: number
    transferNumber: number
    fromWarehouseId: number
    toWarehouseId: number
    status: number
    requestedDate: number
    shippedDate: number
    receivedDate: number
    approvedBy: number
    approvedAt: number
    reason: number
    notes: number
    createdAt: number
    updatedAt: number
    createdBy: number
    _all: number
  }


  export type StockTransferMinAggregateInputType = {
    id?: true
    transferNumber?: true
    fromWarehouseId?: true
    toWarehouseId?: true
    status?: true
    requestedDate?: true
    shippedDate?: true
    receivedDate?: true
    approvedBy?: true
    approvedAt?: true
    reason?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
  }

  export type StockTransferMaxAggregateInputType = {
    id?: true
    transferNumber?: true
    fromWarehouseId?: true
    toWarehouseId?: true
    status?: true
    requestedDate?: true
    shippedDate?: true
    receivedDate?: true
    approvedBy?: true
    approvedAt?: true
    reason?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
  }

  export type StockTransferCountAggregateInputType = {
    id?: true
    transferNumber?: true
    fromWarehouseId?: true
    toWarehouseId?: true
    status?: true
    requestedDate?: true
    shippedDate?: true
    receivedDate?: true
    approvedBy?: true
    approvedAt?: true
    reason?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    _all?: true
  }

  export type StockTransferAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StockTransfer to aggregate.
     */
    where?: StockTransferWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockTransfers to fetch.
     */
    orderBy?: StockTransferOrderByWithRelationInput | StockTransferOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StockTransferWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockTransfers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockTransfers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned StockTransfers
    **/
    _count?: true | StockTransferCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StockTransferMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StockTransferMaxAggregateInputType
  }

  export type GetStockTransferAggregateType<T extends StockTransferAggregateArgs> = {
        [P in keyof T & keyof AggregateStockTransfer]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStockTransfer[P]>
      : GetScalarType<T[P], AggregateStockTransfer[P]>
  }




  export type StockTransferGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockTransferWhereInput
    orderBy?: StockTransferOrderByWithAggregationInput | StockTransferOrderByWithAggregationInput[]
    by: StockTransferScalarFieldEnum[] | StockTransferScalarFieldEnum
    having?: StockTransferScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StockTransferCountAggregateInputType | true
    _min?: StockTransferMinAggregateInputType
    _max?: StockTransferMaxAggregateInputType
  }

  export type StockTransferGroupByOutputType = {
    id: string
    transferNumber: string
    fromWarehouseId: string
    toWarehouseId: string
    status: $Enums.TransferStatus
    requestedDate: Date
    shippedDate: Date | null
    receivedDate: Date | null
    approvedBy: string | null
    approvedAt: Date | null
    reason: string | null
    notes: string | null
    createdAt: Date
    updatedAt: Date
    createdBy: string
    _count: StockTransferCountAggregateOutputType | null
    _min: StockTransferMinAggregateOutputType | null
    _max: StockTransferMaxAggregateOutputType | null
  }

  type GetStockTransferGroupByPayload<T extends StockTransferGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StockTransferGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StockTransferGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StockTransferGroupByOutputType[P]>
            : GetScalarType<T[P], StockTransferGroupByOutputType[P]>
        }
      >
    >


  export type StockTransferSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    transferNumber?: boolean
    fromWarehouseId?: boolean
    toWarehouseId?: boolean
    status?: boolean
    requestedDate?: boolean
    shippedDate?: boolean
    receivedDate?: boolean
    approvedBy?: boolean
    approvedAt?: boolean
    reason?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    fromWarehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
    toWarehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
    items?: boolean | StockTransfer$itemsArgs<ExtArgs>
    _count?: boolean | StockTransferCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stockTransfer"]>

  export type StockTransferSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    transferNumber?: boolean
    fromWarehouseId?: boolean
    toWarehouseId?: boolean
    status?: boolean
    requestedDate?: boolean
    shippedDate?: boolean
    receivedDate?: boolean
    approvedBy?: boolean
    approvedAt?: boolean
    reason?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    fromWarehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
    toWarehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stockTransfer"]>

  export type StockTransferSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    transferNumber?: boolean
    fromWarehouseId?: boolean
    toWarehouseId?: boolean
    status?: boolean
    requestedDate?: boolean
    shippedDate?: boolean
    receivedDate?: boolean
    approvedBy?: boolean
    approvedAt?: boolean
    reason?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    fromWarehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
    toWarehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stockTransfer"]>

  export type StockTransferSelectScalar = {
    id?: boolean
    transferNumber?: boolean
    fromWarehouseId?: boolean
    toWarehouseId?: boolean
    status?: boolean
    requestedDate?: boolean
    shippedDate?: boolean
    receivedDate?: boolean
    approvedBy?: boolean
    approvedAt?: boolean
    reason?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
  }

  export type StockTransferOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "transferNumber" | "fromWarehouseId" | "toWarehouseId" | "status" | "requestedDate" | "shippedDate" | "receivedDate" | "approvedBy" | "approvedAt" | "reason" | "notes" | "createdAt" | "updatedAt" | "createdBy", ExtArgs["result"]["stockTransfer"]>
  export type StockTransferInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    fromWarehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
    toWarehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
    items?: boolean | StockTransfer$itemsArgs<ExtArgs>
    _count?: boolean | StockTransferCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type StockTransferIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    fromWarehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
    toWarehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
  }
  export type StockTransferIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    fromWarehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
    toWarehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
  }

  export type $StockTransferPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "StockTransfer"
    objects: {
      fromWarehouse: Prisma.$WarehousePayload<ExtArgs>
      toWarehouse: Prisma.$WarehousePayload<ExtArgs>
      items: Prisma.$StockTransferItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      transferNumber: string
      fromWarehouseId: string
      toWarehouseId: string
      status: $Enums.TransferStatus
      requestedDate: Date
      shippedDate: Date | null
      receivedDate: Date | null
      approvedBy: string | null
      approvedAt: Date | null
      reason: string | null
      notes: string | null
      createdAt: Date
      updatedAt: Date
      createdBy: string
    }, ExtArgs["result"]["stockTransfer"]>
    composites: {}
  }

  type StockTransferGetPayload<S extends boolean | null | undefined | StockTransferDefaultArgs> = $Result.GetResult<Prisma.$StockTransferPayload, S>

  type StockTransferCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<StockTransferFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: StockTransferCountAggregateInputType | true
    }

  export interface StockTransferDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['StockTransfer'], meta: { name: 'StockTransfer' } }
    /**
     * Find zero or one StockTransfer that matches the filter.
     * @param {StockTransferFindUniqueArgs} args - Arguments to find a StockTransfer
     * @example
     * // Get one StockTransfer
     * const stockTransfer = await prisma.stockTransfer.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StockTransferFindUniqueArgs>(args: SelectSubset<T, StockTransferFindUniqueArgs<ExtArgs>>): Prisma__StockTransferClient<$Result.GetResult<Prisma.$StockTransferPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one StockTransfer that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {StockTransferFindUniqueOrThrowArgs} args - Arguments to find a StockTransfer
     * @example
     * // Get one StockTransfer
     * const stockTransfer = await prisma.stockTransfer.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StockTransferFindUniqueOrThrowArgs>(args: SelectSubset<T, StockTransferFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StockTransferClient<$Result.GetResult<Prisma.$StockTransferPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first StockTransfer that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockTransferFindFirstArgs} args - Arguments to find a StockTransfer
     * @example
     * // Get one StockTransfer
     * const stockTransfer = await prisma.stockTransfer.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StockTransferFindFirstArgs>(args?: SelectSubset<T, StockTransferFindFirstArgs<ExtArgs>>): Prisma__StockTransferClient<$Result.GetResult<Prisma.$StockTransferPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first StockTransfer that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockTransferFindFirstOrThrowArgs} args - Arguments to find a StockTransfer
     * @example
     * // Get one StockTransfer
     * const stockTransfer = await prisma.stockTransfer.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StockTransferFindFirstOrThrowArgs>(args?: SelectSubset<T, StockTransferFindFirstOrThrowArgs<ExtArgs>>): Prisma__StockTransferClient<$Result.GetResult<Prisma.$StockTransferPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more StockTransfers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockTransferFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all StockTransfers
     * const stockTransfers = await prisma.stockTransfer.findMany()
     * 
     * // Get first 10 StockTransfers
     * const stockTransfers = await prisma.stockTransfer.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const stockTransferWithIdOnly = await prisma.stockTransfer.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends StockTransferFindManyArgs>(args?: SelectSubset<T, StockTransferFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockTransferPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a StockTransfer.
     * @param {StockTransferCreateArgs} args - Arguments to create a StockTransfer.
     * @example
     * // Create one StockTransfer
     * const StockTransfer = await prisma.stockTransfer.create({
     *   data: {
     *     // ... data to create a StockTransfer
     *   }
     * })
     * 
     */
    create<T extends StockTransferCreateArgs>(args: SelectSubset<T, StockTransferCreateArgs<ExtArgs>>): Prisma__StockTransferClient<$Result.GetResult<Prisma.$StockTransferPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many StockTransfers.
     * @param {StockTransferCreateManyArgs} args - Arguments to create many StockTransfers.
     * @example
     * // Create many StockTransfers
     * const stockTransfer = await prisma.stockTransfer.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StockTransferCreateManyArgs>(args?: SelectSubset<T, StockTransferCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many StockTransfers and returns the data saved in the database.
     * @param {StockTransferCreateManyAndReturnArgs} args - Arguments to create many StockTransfers.
     * @example
     * // Create many StockTransfers
     * const stockTransfer = await prisma.stockTransfer.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many StockTransfers and only return the `id`
     * const stockTransferWithIdOnly = await prisma.stockTransfer.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends StockTransferCreateManyAndReturnArgs>(args?: SelectSubset<T, StockTransferCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockTransferPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a StockTransfer.
     * @param {StockTransferDeleteArgs} args - Arguments to delete one StockTransfer.
     * @example
     * // Delete one StockTransfer
     * const StockTransfer = await prisma.stockTransfer.delete({
     *   where: {
     *     // ... filter to delete one StockTransfer
     *   }
     * })
     * 
     */
    delete<T extends StockTransferDeleteArgs>(args: SelectSubset<T, StockTransferDeleteArgs<ExtArgs>>): Prisma__StockTransferClient<$Result.GetResult<Prisma.$StockTransferPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one StockTransfer.
     * @param {StockTransferUpdateArgs} args - Arguments to update one StockTransfer.
     * @example
     * // Update one StockTransfer
     * const stockTransfer = await prisma.stockTransfer.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StockTransferUpdateArgs>(args: SelectSubset<T, StockTransferUpdateArgs<ExtArgs>>): Prisma__StockTransferClient<$Result.GetResult<Prisma.$StockTransferPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more StockTransfers.
     * @param {StockTransferDeleteManyArgs} args - Arguments to filter StockTransfers to delete.
     * @example
     * // Delete a few StockTransfers
     * const { count } = await prisma.stockTransfer.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StockTransferDeleteManyArgs>(args?: SelectSubset<T, StockTransferDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StockTransfers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockTransferUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many StockTransfers
     * const stockTransfer = await prisma.stockTransfer.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StockTransferUpdateManyArgs>(args: SelectSubset<T, StockTransferUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StockTransfers and returns the data updated in the database.
     * @param {StockTransferUpdateManyAndReturnArgs} args - Arguments to update many StockTransfers.
     * @example
     * // Update many StockTransfers
     * const stockTransfer = await prisma.stockTransfer.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more StockTransfers and only return the `id`
     * const stockTransferWithIdOnly = await prisma.stockTransfer.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends StockTransferUpdateManyAndReturnArgs>(args: SelectSubset<T, StockTransferUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockTransferPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one StockTransfer.
     * @param {StockTransferUpsertArgs} args - Arguments to update or create a StockTransfer.
     * @example
     * // Update or create a StockTransfer
     * const stockTransfer = await prisma.stockTransfer.upsert({
     *   create: {
     *     // ... data to create a StockTransfer
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the StockTransfer we want to update
     *   }
     * })
     */
    upsert<T extends StockTransferUpsertArgs>(args: SelectSubset<T, StockTransferUpsertArgs<ExtArgs>>): Prisma__StockTransferClient<$Result.GetResult<Prisma.$StockTransferPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of StockTransfers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockTransferCountArgs} args - Arguments to filter StockTransfers to count.
     * @example
     * // Count the number of StockTransfers
     * const count = await prisma.stockTransfer.count({
     *   where: {
     *     // ... the filter for the StockTransfers we want to count
     *   }
     * })
    **/
    count<T extends StockTransferCountArgs>(
      args?: Subset<T, StockTransferCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StockTransferCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a StockTransfer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockTransferAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StockTransferAggregateArgs>(args: Subset<T, StockTransferAggregateArgs>): Prisma.PrismaPromise<GetStockTransferAggregateType<T>>

    /**
     * Group by StockTransfer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockTransferGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StockTransferGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StockTransferGroupByArgs['orderBy'] }
        : { orderBy?: StockTransferGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StockTransferGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStockTransferGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the StockTransfer model
   */
  readonly fields: StockTransferFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for StockTransfer.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StockTransferClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    fromWarehouse<T extends WarehouseDefaultArgs<ExtArgs> = {}>(args?: Subset<T, WarehouseDefaultArgs<ExtArgs>>): Prisma__WarehouseClient<$Result.GetResult<Prisma.$WarehousePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    toWarehouse<T extends WarehouseDefaultArgs<ExtArgs> = {}>(args?: Subset<T, WarehouseDefaultArgs<ExtArgs>>): Prisma__WarehouseClient<$Result.GetResult<Prisma.$WarehousePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    items<T extends StockTransfer$itemsArgs<ExtArgs> = {}>(args?: Subset<T, StockTransfer$itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockTransferItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the StockTransfer model
   */
  interface StockTransferFieldRefs {
    readonly id: FieldRef<"StockTransfer", 'String'>
    readonly transferNumber: FieldRef<"StockTransfer", 'String'>
    readonly fromWarehouseId: FieldRef<"StockTransfer", 'String'>
    readonly toWarehouseId: FieldRef<"StockTransfer", 'String'>
    readonly status: FieldRef<"StockTransfer", 'TransferStatus'>
    readonly requestedDate: FieldRef<"StockTransfer", 'DateTime'>
    readonly shippedDate: FieldRef<"StockTransfer", 'DateTime'>
    readonly receivedDate: FieldRef<"StockTransfer", 'DateTime'>
    readonly approvedBy: FieldRef<"StockTransfer", 'String'>
    readonly approvedAt: FieldRef<"StockTransfer", 'DateTime'>
    readonly reason: FieldRef<"StockTransfer", 'String'>
    readonly notes: FieldRef<"StockTransfer", 'String'>
    readonly createdAt: FieldRef<"StockTransfer", 'DateTime'>
    readonly updatedAt: FieldRef<"StockTransfer", 'DateTime'>
    readonly createdBy: FieldRef<"StockTransfer", 'String'>
  }
    

  // Custom InputTypes
  /**
   * StockTransfer findUnique
   */
  export type StockTransferFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockTransfer
     */
    select?: StockTransferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockTransfer
     */
    omit?: StockTransferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockTransferInclude<ExtArgs> | null
    /**
     * Filter, which StockTransfer to fetch.
     */
    where: StockTransferWhereUniqueInput
  }

  /**
   * StockTransfer findUniqueOrThrow
   */
  export type StockTransferFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockTransfer
     */
    select?: StockTransferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockTransfer
     */
    omit?: StockTransferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockTransferInclude<ExtArgs> | null
    /**
     * Filter, which StockTransfer to fetch.
     */
    where: StockTransferWhereUniqueInput
  }

  /**
   * StockTransfer findFirst
   */
  export type StockTransferFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockTransfer
     */
    select?: StockTransferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockTransfer
     */
    omit?: StockTransferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockTransferInclude<ExtArgs> | null
    /**
     * Filter, which StockTransfer to fetch.
     */
    where?: StockTransferWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockTransfers to fetch.
     */
    orderBy?: StockTransferOrderByWithRelationInput | StockTransferOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StockTransfers.
     */
    cursor?: StockTransferWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockTransfers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockTransfers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StockTransfers.
     */
    distinct?: StockTransferScalarFieldEnum | StockTransferScalarFieldEnum[]
  }

  /**
   * StockTransfer findFirstOrThrow
   */
  export type StockTransferFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockTransfer
     */
    select?: StockTransferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockTransfer
     */
    omit?: StockTransferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockTransferInclude<ExtArgs> | null
    /**
     * Filter, which StockTransfer to fetch.
     */
    where?: StockTransferWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockTransfers to fetch.
     */
    orderBy?: StockTransferOrderByWithRelationInput | StockTransferOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StockTransfers.
     */
    cursor?: StockTransferWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockTransfers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockTransfers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StockTransfers.
     */
    distinct?: StockTransferScalarFieldEnum | StockTransferScalarFieldEnum[]
  }

  /**
   * StockTransfer findMany
   */
  export type StockTransferFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockTransfer
     */
    select?: StockTransferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockTransfer
     */
    omit?: StockTransferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockTransferInclude<ExtArgs> | null
    /**
     * Filter, which StockTransfers to fetch.
     */
    where?: StockTransferWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockTransfers to fetch.
     */
    orderBy?: StockTransferOrderByWithRelationInput | StockTransferOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing StockTransfers.
     */
    cursor?: StockTransferWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockTransfers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockTransfers.
     */
    skip?: number
    distinct?: StockTransferScalarFieldEnum | StockTransferScalarFieldEnum[]
  }

  /**
   * StockTransfer create
   */
  export type StockTransferCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockTransfer
     */
    select?: StockTransferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockTransfer
     */
    omit?: StockTransferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockTransferInclude<ExtArgs> | null
    /**
     * The data needed to create a StockTransfer.
     */
    data: XOR<StockTransferCreateInput, StockTransferUncheckedCreateInput>
  }

  /**
   * StockTransfer createMany
   */
  export type StockTransferCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many StockTransfers.
     */
    data: StockTransferCreateManyInput | StockTransferCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * StockTransfer createManyAndReturn
   */
  export type StockTransferCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockTransfer
     */
    select?: StockTransferSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the StockTransfer
     */
    omit?: StockTransferOmit<ExtArgs> | null
    /**
     * The data used to create many StockTransfers.
     */
    data: StockTransferCreateManyInput | StockTransferCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockTransferIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * StockTransfer update
   */
  export type StockTransferUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockTransfer
     */
    select?: StockTransferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockTransfer
     */
    omit?: StockTransferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockTransferInclude<ExtArgs> | null
    /**
     * The data needed to update a StockTransfer.
     */
    data: XOR<StockTransferUpdateInput, StockTransferUncheckedUpdateInput>
    /**
     * Choose, which StockTransfer to update.
     */
    where: StockTransferWhereUniqueInput
  }

  /**
   * StockTransfer updateMany
   */
  export type StockTransferUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update StockTransfers.
     */
    data: XOR<StockTransferUpdateManyMutationInput, StockTransferUncheckedUpdateManyInput>
    /**
     * Filter which StockTransfers to update
     */
    where?: StockTransferWhereInput
    /**
     * Limit how many StockTransfers to update.
     */
    limit?: number
  }

  /**
   * StockTransfer updateManyAndReturn
   */
  export type StockTransferUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockTransfer
     */
    select?: StockTransferSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the StockTransfer
     */
    omit?: StockTransferOmit<ExtArgs> | null
    /**
     * The data used to update StockTransfers.
     */
    data: XOR<StockTransferUpdateManyMutationInput, StockTransferUncheckedUpdateManyInput>
    /**
     * Filter which StockTransfers to update
     */
    where?: StockTransferWhereInput
    /**
     * Limit how many StockTransfers to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockTransferIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * StockTransfer upsert
   */
  export type StockTransferUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockTransfer
     */
    select?: StockTransferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockTransfer
     */
    omit?: StockTransferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockTransferInclude<ExtArgs> | null
    /**
     * The filter to search for the StockTransfer to update in case it exists.
     */
    where: StockTransferWhereUniqueInput
    /**
     * In case the StockTransfer found by the `where` argument doesn't exist, create a new StockTransfer with this data.
     */
    create: XOR<StockTransferCreateInput, StockTransferUncheckedCreateInput>
    /**
     * In case the StockTransfer was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StockTransferUpdateInput, StockTransferUncheckedUpdateInput>
  }

  /**
   * StockTransfer delete
   */
  export type StockTransferDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockTransfer
     */
    select?: StockTransferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockTransfer
     */
    omit?: StockTransferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockTransferInclude<ExtArgs> | null
    /**
     * Filter which StockTransfer to delete.
     */
    where: StockTransferWhereUniqueInput
  }

  /**
   * StockTransfer deleteMany
   */
  export type StockTransferDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StockTransfers to delete
     */
    where?: StockTransferWhereInput
    /**
     * Limit how many StockTransfers to delete.
     */
    limit?: number
  }

  /**
   * StockTransfer.items
   */
  export type StockTransfer$itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockTransferItem
     */
    select?: StockTransferItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockTransferItem
     */
    omit?: StockTransferItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockTransferItemInclude<ExtArgs> | null
    where?: StockTransferItemWhereInput
    orderBy?: StockTransferItemOrderByWithRelationInput | StockTransferItemOrderByWithRelationInput[]
    cursor?: StockTransferItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StockTransferItemScalarFieldEnum | StockTransferItemScalarFieldEnum[]
  }

  /**
   * StockTransfer without action
   */
  export type StockTransferDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockTransfer
     */
    select?: StockTransferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockTransfer
     */
    omit?: StockTransferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockTransferInclude<ExtArgs> | null
  }


  /**
   * Model StockTransferItem
   */

  export type AggregateStockTransferItem = {
    _count: StockTransferItemCountAggregateOutputType | null
    _avg: StockTransferItemAvgAggregateOutputType | null
    _sum: StockTransferItemSumAggregateOutputType | null
    _min: StockTransferItemMinAggregateOutputType | null
    _max: StockTransferItemMaxAggregateOutputType | null
  }

  export type StockTransferItemAvgAggregateOutputType = {
    requestedQty: number | null
    shippedQty: number | null
    receivedQty: number | null
  }

  export type StockTransferItemSumAggregateOutputType = {
    requestedQty: number | null
    shippedQty: number | null
    receivedQty: number | null
  }

  export type StockTransferItemMinAggregateOutputType = {
    id: string | null
    transferId: string | null
    productId: string | null
    variantId: string | null
    requestedQty: number | null
    shippedQty: number | null
    receivedQty: number | null
    productName: string | null
    productSku: string | null
    lotNumber: string | null
    batchNumber: string | null
    status: $Enums.TransferItemStatus | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type StockTransferItemMaxAggregateOutputType = {
    id: string | null
    transferId: string | null
    productId: string | null
    variantId: string | null
    requestedQty: number | null
    shippedQty: number | null
    receivedQty: number | null
    productName: string | null
    productSku: string | null
    lotNumber: string | null
    batchNumber: string | null
    status: $Enums.TransferItemStatus | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type StockTransferItemCountAggregateOutputType = {
    id: number
    transferId: number
    productId: number
    variantId: number
    requestedQty: number
    shippedQty: number
    receivedQty: number
    productName: number
    productSku: number
    lotNumber: number
    batchNumber: number
    status: number
    notes: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type StockTransferItemAvgAggregateInputType = {
    requestedQty?: true
    shippedQty?: true
    receivedQty?: true
  }

  export type StockTransferItemSumAggregateInputType = {
    requestedQty?: true
    shippedQty?: true
    receivedQty?: true
  }

  export type StockTransferItemMinAggregateInputType = {
    id?: true
    transferId?: true
    productId?: true
    variantId?: true
    requestedQty?: true
    shippedQty?: true
    receivedQty?: true
    productName?: true
    productSku?: true
    lotNumber?: true
    batchNumber?: true
    status?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type StockTransferItemMaxAggregateInputType = {
    id?: true
    transferId?: true
    productId?: true
    variantId?: true
    requestedQty?: true
    shippedQty?: true
    receivedQty?: true
    productName?: true
    productSku?: true
    lotNumber?: true
    batchNumber?: true
    status?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type StockTransferItemCountAggregateInputType = {
    id?: true
    transferId?: true
    productId?: true
    variantId?: true
    requestedQty?: true
    shippedQty?: true
    receivedQty?: true
    productName?: true
    productSku?: true
    lotNumber?: true
    batchNumber?: true
    status?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type StockTransferItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StockTransferItem to aggregate.
     */
    where?: StockTransferItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockTransferItems to fetch.
     */
    orderBy?: StockTransferItemOrderByWithRelationInput | StockTransferItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StockTransferItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockTransferItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockTransferItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned StockTransferItems
    **/
    _count?: true | StockTransferItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StockTransferItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StockTransferItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StockTransferItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StockTransferItemMaxAggregateInputType
  }

  export type GetStockTransferItemAggregateType<T extends StockTransferItemAggregateArgs> = {
        [P in keyof T & keyof AggregateStockTransferItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStockTransferItem[P]>
      : GetScalarType<T[P], AggregateStockTransferItem[P]>
  }




  export type StockTransferItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockTransferItemWhereInput
    orderBy?: StockTransferItemOrderByWithAggregationInput | StockTransferItemOrderByWithAggregationInput[]
    by: StockTransferItemScalarFieldEnum[] | StockTransferItemScalarFieldEnum
    having?: StockTransferItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StockTransferItemCountAggregateInputType | true
    _avg?: StockTransferItemAvgAggregateInputType
    _sum?: StockTransferItemSumAggregateInputType
    _min?: StockTransferItemMinAggregateInputType
    _max?: StockTransferItemMaxAggregateInputType
  }

  export type StockTransferItemGroupByOutputType = {
    id: string
    transferId: string
    productId: string
    variantId: string | null
    requestedQty: number
    shippedQty: number
    receivedQty: number
    productName: string
    productSku: string
    lotNumber: string | null
    batchNumber: string | null
    status: $Enums.TransferItemStatus
    notes: string | null
    createdAt: Date
    updatedAt: Date
    _count: StockTransferItemCountAggregateOutputType | null
    _avg: StockTransferItemAvgAggregateOutputType | null
    _sum: StockTransferItemSumAggregateOutputType | null
    _min: StockTransferItemMinAggregateOutputType | null
    _max: StockTransferItemMaxAggregateOutputType | null
  }

  type GetStockTransferItemGroupByPayload<T extends StockTransferItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StockTransferItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StockTransferItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StockTransferItemGroupByOutputType[P]>
            : GetScalarType<T[P], StockTransferItemGroupByOutputType[P]>
        }
      >
    >


  export type StockTransferItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    transferId?: boolean
    productId?: boolean
    variantId?: boolean
    requestedQty?: boolean
    shippedQty?: boolean
    receivedQty?: boolean
    productName?: boolean
    productSku?: boolean
    lotNumber?: boolean
    batchNumber?: boolean
    status?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    transfer?: boolean | StockTransferDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | StockTransferItem$variantArgs<ExtArgs>
  }, ExtArgs["result"]["stockTransferItem"]>

  export type StockTransferItemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    transferId?: boolean
    productId?: boolean
    variantId?: boolean
    requestedQty?: boolean
    shippedQty?: boolean
    receivedQty?: boolean
    productName?: boolean
    productSku?: boolean
    lotNumber?: boolean
    batchNumber?: boolean
    status?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    transfer?: boolean | StockTransferDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | StockTransferItem$variantArgs<ExtArgs>
  }, ExtArgs["result"]["stockTransferItem"]>

  export type StockTransferItemSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    transferId?: boolean
    productId?: boolean
    variantId?: boolean
    requestedQty?: boolean
    shippedQty?: boolean
    receivedQty?: boolean
    productName?: boolean
    productSku?: boolean
    lotNumber?: boolean
    batchNumber?: boolean
    status?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    transfer?: boolean | StockTransferDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | StockTransferItem$variantArgs<ExtArgs>
  }, ExtArgs["result"]["stockTransferItem"]>

  export type StockTransferItemSelectScalar = {
    id?: boolean
    transferId?: boolean
    productId?: boolean
    variantId?: boolean
    requestedQty?: boolean
    shippedQty?: boolean
    receivedQty?: boolean
    productName?: boolean
    productSku?: boolean
    lotNumber?: boolean
    batchNumber?: boolean
    status?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type StockTransferItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "transferId" | "productId" | "variantId" | "requestedQty" | "shippedQty" | "receivedQty" | "productName" | "productSku" | "lotNumber" | "batchNumber" | "status" | "notes" | "createdAt" | "updatedAt", ExtArgs["result"]["stockTransferItem"]>
  export type StockTransferItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transfer?: boolean | StockTransferDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | StockTransferItem$variantArgs<ExtArgs>
  }
  export type StockTransferItemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transfer?: boolean | StockTransferDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | StockTransferItem$variantArgs<ExtArgs>
  }
  export type StockTransferItemIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transfer?: boolean | StockTransferDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | StockTransferItem$variantArgs<ExtArgs>
  }

  export type $StockTransferItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "StockTransferItem"
    objects: {
      transfer: Prisma.$StockTransferPayload<ExtArgs>
      product: Prisma.$ProductPayload<ExtArgs>
      variant: Prisma.$ProductVariantPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      transferId: string
      productId: string
      variantId: string | null
      requestedQty: number
      shippedQty: number
      receivedQty: number
      productName: string
      productSku: string
      lotNumber: string | null
      batchNumber: string | null
      status: $Enums.TransferItemStatus
      notes: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["stockTransferItem"]>
    composites: {}
  }

  type StockTransferItemGetPayload<S extends boolean | null | undefined | StockTransferItemDefaultArgs> = $Result.GetResult<Prisma.$StockTransferItemPayload, S>

  type StockTransferItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<StockTransferItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: StockTransferItemCountAggregateInputType | true
    }

  export interface StockTransferItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['StockTransferItem'], meta: { name: 'StockTransferItem' } }
    /**
     * Find zero or one StockTransferItem that matches the filter.
     * @param {StockTransferItemFindUniqueArgs} args - Arguments to find a StockTransferItem
     * @example
     * // Get one StockTransferItem
     * const stockTransferItem = await prisma.stockTransferItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StockTransferItemFindUniqueArgs>(args: SelectSubset<T, StockTransferItemFindUniqueArgs<ExtArgs>>): Prisma__StockTransferItemClient<$Result.GetResult<Prisma.$StockTransferItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one StockTransferItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {StockTransferItemFindUniqueOrThrowArgs} args - Arguments to find a StockTransferItem
     * @example
     * // Get one StockTransferItem
     * const stockTransferItem = await prisma.stockTransferItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StockTransferItemFindUniqueOrThrowArgs>(args: SelectSubset<T, StockTransferItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StockTransferItemClient<$Result.GetResult<Prisma.$StockTransferItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first StockTransferItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockTransferItemFindFirstArgs} args - Arguments to find a StockTransferItem
     * @example
     * // Get one StockTransferItem
     * const stockTransferItem = await prisma.stockTransferItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StockTransferItemFindFirstArgs>(args?: SelectSubset<T, StockTransferItemFindFirstArgs<ExtArgs>>): Prisma__StockTransferItemClient<$Result.GetResult<Prisma.$StockTransferItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first StockTransferItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockTransferItemFindFirstOrThrowArgs} args - Arguments to find a StockTransferItem
     * @example
     * // Get one StockTransferItem
     * const stockTransferItem = await prisma.stockTransferItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StockTransferItemFindFirstOrThrowArgs>(args?: SelectSubset<T, StockTransferItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__StockTransferItemClient<$Result.GetResult<Prisma.$StockTransferItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more StockTransferItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockTransferItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all StockTransferItems
     * const stockTransferItems = await prisma.stockTransferItem.findMany()
     * 
     * // Get first 10 StockTransferItems
     * const stockTransferItems = await prisma.stockTransferItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const stockTransferItemWithIdOnly = await prisma.stockTransferItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends StockTransferItemFindManyArgs>(args?: SelectSubset<T, StockTransferItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockTransferItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a StockTransferItem.
     * @param {StockTransferItemCreateArgs} args - Arguments to create a StockTransferItem.
     * @example
     * // Create one StockTransferItem
     * const StockTransferItem = await prisma.stockTransferItem.create({
     *   data: {
     *     // ... data to create a StockTransferItem
     *   }
     * })
     * 
     */
    create<T extends StockTransferItemCreateArgs>(args: SelectSubset<T, StockTransferItemCreateArgs<ExtArgs>>): Prisma__StockTransferItemClient<$Result.GetResult<Prisma.$StockTransferItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many StockTransferItems.
     * @param {StockTransferItemCreateManyArgs} args - Arguments to create many StockTransferItems.
     * @example
     * // Create many StockTransferItems
     * const stockTransferItem = await prisma.stockTransferItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StockTransferItemCreateManyArgs>(args?: SelectSubset<T, StockTransferItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many StockTransferItems and returns the data saved in the database.
     * @param {StockTransferItemCreateManyAndReturnArgs} args - Arguments to create many StockTransferItems.
     * @example
     * // Create many StockTransferItems
     * const stockTransferItem = await prisma.stockTransferItem.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many StockTransferItems and only return the `id`
     * const stockTransferItemWithIdOnly = await prisma.stockTransferItem.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends StockTransferItemCreateManyAndReturnArgs>(args?: SelectSubset<T, StockTransferItemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockTransferItemPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a StockTransferItem.
     * @param {StockTransferItemDeleteArgs} args - Arguments to delete one StockTransferItem.
     * @example
     * // Delete one StockTransferItem
     * const StockTransferItem = await prisma.stockTransferItem.delete({
     *   where: {
     *     // ... filter to delete one StockTransferItem
     *   }
     * })
     * 
     */
    delete<T extends StockTransferItemDeleteArgs>(args: SelectSubset<T, StockTransferItemDeleteArgs<ExtArgs>>): Prisma__StockTransferItemClient<$Result.GetResult<Prisma.$StockTransferItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one StockTransferItem.
     * @param {StockTransferItemUpdateArgs} args - Arguments to update one StockTransferItem.
     * @example
     * // Update one StockTransferItem
     * const stockTransferItem = await prisma.stockTransferItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StockTransferItemUpdateArgs>(args: SelectSubset<T, StockTransferItemUpdateArgs<ExtArgs>>): Prisma__StockTransferItemClient<$Result.GetResult<Prisma.$StockTransferItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more StockTransferItems.
     * @param {StockTransferItemDeleteManyArgs} args - Arguments to filter StockTransferItems to delete.
     * @example
     * // Delete a few StockTransferItems
     * const { count } = await prisma.stockTransferItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StockTransferItemDeleteManyArgs>(args?: SelectSubset<T, StockTransferItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StockTransferItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockTransferItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many StockTransferItems
     * const stockTransferItem = await prisma.stockTransferItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StockTransferItemUpdateManyArgs>(args: SelectSubset<T, StockTransferItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StockTransferItems and returns the data updated in the database.
     * @param {StockTransferItemUpdateManyAndReturnArgs} args - Arguments to update many StockTransferItems.
     * @example
     * // Update many StockTransferItems
     * const stockTransferItem = await prisma.stockTransferItem.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more StockTransferItems and only return the `id`
     * const stockTransferItemWithIdOnly = await prisma.stockTransferItem.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends StockTransferItemUpdateManyAndReturnArgs>(args: SelectSubset<T, StockTransferItemUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockTransferItemPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one StockTransferItem.
     * @param {StockTransferItemUpsertArgs} args - Arguments to update or create a StockTransferItem.
     * @example
     * // Update or create a StockTransferItem
     * const stockTransferItem = await prisma.stockTransferItem.upsert({
     *   create: {
     *     // ... data to create a StockTransferItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the StockTransferItem we want to update
     *   }
     * })
     */
    upsert<T extends StockTransferItemUpsertArgs>(args: SelectSubset<T, StockTransferItemUpsertArgs<ExtArgs>>): Prisma__StockTransferItemClient<$Result.GetResult<Prisma.$StockTransferItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of StockTransferItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockTransferItemCountArgs} args - Arguments to filter StockTransferItems to count.
     * @example
     * // Count the number of StockTransferItems
     * const count = await prisma.stockTransferItem.count({
     *   where: {
     *     // ... the filter for the StockTransferItems we want to count
     *   }
     * })
    **/
    count<T extends StockTransferItemCountArgs>(
      args?: Subset<T, StockTransferItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StockTransferItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a StockTransferItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockTransferItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StockTransferItemAggregateArgs>(args: Subset<T, StockTransferItemAggregateArgs>): Prisma.PrismaPromise<GetStockTransferItemAggregateType<T>>

    /**
     * Group by StockTransferItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockTransferItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StockTransferItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StockTransferItemGroupByArgs['orderBy'] }
        : { orderBy?: StockTransferItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StockTransferItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStockTransferItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the StockTransferItem model
   */
  readonly fields: StockTransferItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for StockTransferItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StockTransferItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    transfer<T extends StockTransferDefaultArgs<ExtArgs> = {}>(args?: Subset<T, StockTransferDefaultArgs<ExtArgs>>): Prisma__StockTransferClient<$Result.GetResult<Prisma.$StockTransferPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    variant<T extends StockTransferItem$variantArgs<ExtArgs> = {}>(args?: Subset<T, StockTransferItem$variantArgs<ExtArgs>>): Prisma__ProductVariantClient<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the StockTransferItem model
   */
  interface StockTransferItemFieldRefs {
    readonly id: FieldRef<"StockTransferItem", 'String'>
    readonly transferId: FieldRef<"StockTransferItem", 'String'>
    readonly productId: FieldRef<"StockTransferItem", 'String'>
    readonly variantId: FieldRef<"StockTransferItem", 'String'>
    readonly requestedQty: FieldRef<"StockTransferItem", 'Int'>
    readonly shippedQty: FieldRef<"StockTransferItem", 'Int'>
    readonly receivedQty: FieldRef<"StockTransferItem", 'Int'>
    readonly productName: FieldRef<"StockTransferItem", 'String'>
    readonly productSku: FieldRef<"StockTransferItem", 'String'>
    readonly lotNumber: FieldRef<"StockTransferItem", 'String'>
    readonly batchNumber: FieldRef<"StockTransferItem", 'String'>
    readonly status: FieldRef<"StockTransferItem", 'TransferItemStatus'>
    readonly notes: FieldRef<"StockTransferItem", 'String'>
    readonly createdAt: FieldRef<"StockTransferItem", 'DateTime'>
    readonly updatedAt: FieldRef<"StockTransferItem", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * StockTransferItem findUnique
   */
  export type StockTransferItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockTransferItem
     */
    select?: StockTransferItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockTransferItem
     */
    omit?: StockTransferItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockTransferItemInclude<ExtArgs> | null
    /**
     * Filter, which StockTransferItem to fetch.
     */
    where: StockTransferItemWhereUniqueInput
  }

  /**
   * StockTransferItem findUniqueOrThrow
   */
  export type StockTransferItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockTransferItem
     */
    select?: StockTransferItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockTransferItem
     */
    omit?: StockTransferItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockTransferItemInclude<ExtArgs> | null
    /**
     * Filter, which StockTransferItem to fetch.
     */
    where: StockTransferItemWhereUniqueInput
  }

  /**
   * StockTransferItem findFirst
   */
  export type StockTransferItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockTransferItem
     */
    select?: StockTransferItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockTransferItem
     */
    omit?: StockTransferItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockTransferItemInclude<ExtArgs> | null
    /**
     * Filter, which StockTransferItem to fetch.
     */
    where?: StockTransferItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockTransferItems to fetch.
     */
    orderBy?: StockTransferItemOrderByWithRelationInput | StockTransferItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StockTransferItems.
     */
    cursor?: StockTransferItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockTransferItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockTransferItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StockTransferItems.
     */
    distinct?: StockTransferItemScalarFieldEnum | StockTransferItemScalarFieldEnum[]
  }

  /**
   * StockTransferItem findFirstOrThrow
   */
  export type StockTransferItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockTransferItem
     */
    select?: StockTransferItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockTransferItem
     */
    omit?: StockTransferItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockTransferItemInclude<ExtArgs> | null
    /**
     * Filter, which StockTransferItem to fetch.
     */
    where?: StockTransferItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockTransferItems to fetch.
     */
    orderBy?: StockTransferItemOrderByWithRelationInput | StockTransferItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StockTransferItems.
     */
    cursor?: StockTransferItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockTransferItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockTransferItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StockTransferItems.
     */
    distinct?: StockTransferItemScalarFieldEnum | StockTransferItemScalarFieldEnum[]
  }

  /**
   * StockTransferItem findMany
   */
  export type StockTransferItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockTransferItem
     */
    select?: StockTransferItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockTransferItem
     */
    omit?: StockTransferItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockTransferItemInclude<ExtArgs> | null
    /**
     * Filter, which StockTransferItems to fetch.
     */
    where?: StockTransferItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockTransferItems to fetch.
     */
    orderBy?: StockTransferItemOrderByWithRelationInput | StockTransferItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing StockTransferItems.
     */
    cursor?: StockTransferItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockTransferItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockTransferItems.
     */
    skip?: number
    distinct?: StockTransferItemScalarFieldEnum | StockTransferItemScalarFieldEnum[]
  }

  /**
   * StockTransferItem create
   */
  export type StockTransferItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockTransferItem
     */
    select?: StockTransferItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockTransferItem
     */
    omit?: StockTransferItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockTransferItemInclude<ExtArgs> | null
    /**
     * The data needed to create a StockTransferItem.
     */
    data: XOR<StockTransferItemCreateInput, StockTransferItemUncheckedCreateInput>
  }

  /**
   * StockTransferItem createMany
   */
  export type StockTransferItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many StockTransferItems.
     */
    data: StockTransferItemCreateManyInput | StockTransferItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * StockTransferItem createManyAndReturn
   */
  export type StockTransferItemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockTransferItem
     */
    select?: StockTransferItemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the StockTransferItem
     */
    omit?: StockTransferItemOmit<ExtArgs> | null
    /**
     * The data used to create many StockTransferItems.
     */
    data: StockTransferItemCreateManyInput | StockTransferItemCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockTransferItemIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * StockTransferItem update
   */
  export type StockTransferItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockTransferItem
     */
    select?: StockTransferItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockTransferItem
     */
    omit?: StockTransferItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockTransferItemInclude<ExtArgs> | null
    /**
     * The data needed to update a StockTransferItem.
     */
    data: XOR<StockTransferItemUpdateInput, StockTransferItemUncheckedUpdateInput>
    /**
     * Choose, which StockTransferItem to update.
     */
    where: StockTransferItemWhereUniqueInput
  }

  /**
   * StockTransferItem updateMany
   */
  export type StockTransferItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update StockTransferItems.
     */
    data: XOR<StockTransferItemUpdateManyMutationInput, StockTransferItemUncheckedUpdateManyInput>
    /**
     * Filter which StockTransferItems to update
     */
    where?: StockTransferItemWhereInput
    /**
     * Limit how many StockTransferItems to update.
     */
    limit?: number
  }

  /**
   * StockTransferItem updateManyAndReturn
   */
  export type StockTransferItemUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockTransferItem
     */
    select?: StockTransferItemSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the StockTransferItem
     */
    omit?: StockTransferItemOmit<ExtArgs> | null
    /**
     * The data used to update StockTransferItems.
     */
    data: XOR<StockTransferItemUpdateManyMutationInput, StockTransferItemUncheckedUpdateManyInput>
    /**
     * Filter which StockTransferItems to update
     */
    where?: StockTransferItemWhereInput
    /**
     * Limit how many StockTransferItems to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockTransferItemIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * StockTransferItem upsert
   */
  export type StockTransferItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockTransferItem
     */
    select?: StockTransferItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockTransferItem
     */
    omit?: StockTransferItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockTransferItemInclude<ExtArgs> | null
    /**
     * The filter to search for the StockTransferItem to update in case it exists.
     */
    where: StockTransferItemWhereUniqueInput
    /**
     * In case the StockTransferItem found by the `where` argument doesn't exist, create a new StockTransferItem with this data.
     */
    create: XOR<StockTransferItemCreateInput, StockTransferItemUncheckedCreateInput>
    /**
     * In case the StockTransferItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StockTransferItemUpdateInput, StockTransferItemUncheckedUpdateInput>
  }

  /**
   * StockTransferItem delete
   */
  export type StockTransferItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockTransferItem
     */
    select?: StockTransferItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockTransferItem
     */
    omit?: StockTransferItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockTransferItemInclude<ExtArgs> | null
    /**
     * Filter which StockTransferItem to delete.
     */
    where: StockTransferItemWhereUniqueInput
  }

  /**
   * StockTransferItem deleteMany
   */
  export type StockTransferItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StockTransferItems to delete
     */
    where?: StockTransferItemWhereInput
    /**
     * Limit how many StockTransferItems to delete.
     */
    limit?: number
  }

  /**
   * StockTransferItem.variant
   */
  export type StockTransferItem$variantArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductVariant
     */
    omit?: ProductVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    where?: ProductVariantWhereInput
  }

  /**
   * StockTransferItem without action
   */
  export type StockTransferItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockTransferItem
     */
    select?: StockTransferItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockTransferItem
     */
    omit?: StockTransferItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockTransferItemInclude<ExtArgs> | null
  }


  /**
   * Model StockReservation
   */

  export type AggregateStockReservation = {
    _count: StockReservationCountAggregateOutputType | null
    _avg: StockReservationAvgAggregateOutputType | null
    _sum: StockReservationSumAggregateOutputType | null
    _min: StockReservationMinAggregateOutputType | null
    _max: StockReservationMaxAggregateOutputType | null
  }

  export type StockReservationAvgAggregateOutputType = {
    quantity: number | null
  }

  export type StockReservationSumAggregateOutputType = {
    quantity: number | null
  }

  export type StockReservationMinAggregateOutputType = {
    id: string | null
    inventoryItemId: string | null
    reservationType: $Enums.ReservationType | null
    referenceType: string | null
    referenceId: string | null
    quantity: number | null
    status: $Enums.ReservationStatus | null
    reservedAt: Date | null
    expiresAt: Date | null
    releasedAt: Date | null
    reservedBy: string | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type StockReservationMaxAggregateOutputType = {
    id: string | null
    inventoryItemId: string | null
    reservationType: $Enums.ReservationType | null
    referenceType: string | null
    referenceId: string | null
    quantity: number | null
    status: $Enums.ReservationStatus | null
    reservedAt: Date | null
    expiresAt: Date | null
    releasedAt: Date | null
    reservedBy: string | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type StockReservationCountAggregateOutputType = {
    id: number
    inventoryItemId: number
    reservationType: number
    referenceType: number
    referenceId: number
    quantity: number
    status: number
    reservedAt: number
    expiresAt: number
    releasedAt: number
    reservedBy: number
    notes: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type StockReservationAvgAggregateInputType = {
    quantity?: true
  }

  export type StockReservationSumAggregateInputType = {
    quantity?: true
  }

  export type StockReservationMinAggregateInputType = {
    id?: true
    inventoryItemId?: true
    reservationType?: true
    referenceType?: true
    referenceId?: true
    quantity?: true
    status?: true
    reservedAt?: true
    expiresAt?: true
    releasedAt?: true
    reservedBy?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type StockReservationMaxAggregateInputType = {
    id?: true
    inventoryItemId?: true
    reservationType?: true
    referenceType?: true
    referenceId?: true
    quantity?: true
    status?: true
    reservedAt?: true
    expiresAt?: true
    releasedAt?: true
    reservedBy?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type StockReservationCountAggregateInputType = {
    id?: true
    inventoryItemId?: true
    reservationType?: true
    referenceType?: true
    referenceId?: true
    quantity?: true
    status?: true
    reservedAt?: true
    expiresAt?: true
    releasedAt?: true
    reservedBy?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type StockReservationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StockReservation to aggregate.
     */
    where?: StockReservationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockReservations to fetch.
     */
    orderBy?: StockReservationOrderByWithRelationInput | StockReservationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StockReservationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockReservations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockReservations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned StockReservations
    **/
    _count?: true | StockReservationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StockReservationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StockReservationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StockReservationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StockReservationMaxAggregateInputType
  }

  export type GetStockReservationAggregateType<T extends StockReservationAggregateArgs> = {
        [P in keyof T & keyof AggregateStockReservation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStockReservation[P]>
      : GetScalarType<T[P], AggregateStockReservation[P]>
  }




  export type StockReservationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockReservationWhereInput
    orderBy?: StockReservationOrderByWithAggregationInput | StockReservationOrderByWithAggregationInput[]
    by: StockReservationScalarFieldEnum[] | StockReservationScalarFieldEnum
    having?: StockReservationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StockReservationCountAggregateInputType | true
    _avg?: StockReservationAvgAggregateInputType
    _sum?: StockReservationSumAggregateInputType
    _min?: StockReservationMinAggregateInputType
    _max?: StockReservationMaxAggregateInputType
  }

  export type StockReservationGroupByOutputType = {
    id: string
    inventoryItemId: string
    reservationType: $Enums.ReservationType
    referenceType: string
    referenceId: string
    quantity: number
    status: $Enums.ReservationStatus
    reservedAt: Date
    expiresAt: Date | null
    releasedAt: Date | null
    reservedBy: string
    notes: string | null
    createdAt: Date
    updatedAt: Date
    _count: StockReservationCountAggregateOutputType | null
    _avg: StockReservationAvgAggregateOutputType | null
    _sum: StockReservationSumAggregateOutputType | null
    _min: StockReservationMinAggregateOutputType | null
    _max: StockReservationMaxAggregateOutputType | null
  }

  type GetStockReservationGroupByPayload<T extends StockReservationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StockReservationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StockReservationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StockReservationGroupByOutputType[P]>
            : GetScalarType<T[P], StockReservationGroupByOutputType[P]>
        }
      >
    >


  export type StockReservationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    inventoryItemId?: boolean
    reservationType?: boolean
    referenceType?: boolean
    referenceId?: boolean
    quantity?: boolean
    status?: boolean
    reservedAt?: boolean
    expiresAt?: boolean
    releasedAt?: boolean
    reservedBy?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    inventoryItem?: boolean | InventoryItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stockReservation"]>

  export type StockReservationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    inventoryItemId?: boolean
    reservationType?: boolean
    referenceType?: boolean
    referenceId?: boolean
    quantity?: boolean
    status?: boolean
    reservedAt?: boolean
    expiresAt?: boolean
    releasedAt?: boolean
    reservedBy?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    inventoryItem?: boolean | InventoryItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stockReservation"]>

  export type StockReservationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    inventoryItemId?: boolean
    reservationType?: boolean
    referenceType?: boolean
    referenceId?: boolean
    quantity?: boolean
    status?: boolean
    reservedAt?: boolean
    expiresAt?: boolean
    releasedAt?: boolean
    reservedBy?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    inventoryItem?: boolean | InventoryItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stockReservation"]>

  export type StockReservationSelectScalar = {
    id?: boolean
    inventoryItemId?: boolean
    reservationType?: boolean
    referenceType?: boolean
    referenceId?: boolean
    quantity?: boolean
    status?: boolean
    reservedAt?: boolean
    expiresAt?: boolean
    releasedAt?: boolean
    reservedBy?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type StockReservationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "inventoryItemId" | "reservationType" | "referenceType" | "referenceId" | "quantity" | "status" | "reservedAt" | "expiresAt" | "releasedAt" | "reservedBy" | "notes" | "createdAt" | "updatedAt", ExtArgs["result"]["stockReservation"]>
  export type StockReservationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inventoryItem?: boolean | InventoryItemDefaultArgs<ExtArgs>
  }
  export type StockReservationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inventoryItem?: boolean | InventoryItemDefaultArgs<ExtArgs>
  }
  export type StockReservationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inventoryItem?: boolean | InventoryItemDefaultArgs<ExtArgs>
  }

  export type $StockReservationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "StockReservation"
    objects: {
      inventoryItem: Prisma.$InventoryItemPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      inventoryItemId: string
      reservationType: $Enums.ReservationType
      referenceType: string
      referenceId: string
      quantity: number
      status: $Enums.ReservationStatus
      reservedAt: Date
      expiresAt: Date | null
      releasedAt: Date | null
      reservedBy: string
      notes: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["stockReservation"]>
    composites: {}
  }

  type StockReservationGetPayload<S extends boolean | null | undefined | StockReservationDefaultArgs> = $Result.GetResult<Prisma.$StockReservationPayload, S>

  type StockReservationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<StockReservationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: StockReservationCountAggregateInputType | true
    }

  export interface StockReservationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['StockReservation'], meta: { name: 'StockReservation' } }
    /**
     * Find zero or one StockReservation that matches the filter.
     * @param {StockReservationFindUniqueArgs} args - Arguments to find a StockReservation
     * @example
     * // Get one StockReservation
     * const stockReservation = await prisma.stockReservation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StockReservationFindUniqueArgs>(args: SelectSubset<T, StockReservationFindUniqueArgs<ExtArgs>>): Prisma__StockReservationClient<$Result.GetResult<Prisma.$StockReservationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one StockReservation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {StockReservationFindUniqueOrThrowArgs} args - Arguments to find a StockReservation
     * @example
     * // Get one StockReservation
     * const stockReservation = await prisma.stockReservation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StockReservationFindUniqueOrThrowArgs>(args: SelectSubset<T, StockReservationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StockReservationClient<$Result.GetResult<Prisma.$StockReservationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first StockReservation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockReservationFindFirstArgs} args - Arguments to find a StockReservation
     * @example
     * // Get one StockReservation
     * const stockReservation = await prisma.stockReservation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StockReservationFindFirstArgs>(args?: SelectSubset<T, StockReservationFindFirstArgs<ExtArgs>>): Prisma__StockReservationClient<$Result.GetResult<Prisma.$StockReservationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first StockReservation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockReservationFindFirstOrThrowArgs} args - Arguments to find a StockReservation
     * @example
     * // Get one StockReservation
     * const stockReservation = await prisma.stockReservation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StockReservationFindFirstOrThrowArgs>(args?: SelectSubset<T, StockReservationFindFirstOrThrowArgs<ExtArgs>>): Prisma__StockReservationClient<$Result.GetResult<Prisma.$StockReservationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more StockReservations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockReservationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all StockReservations
     * const stockReservations = await prisma.stockReservation.findMany()
     * 
     * // Get first 10 StockReservations
     * const stockReservations = await prisma.stockReservation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const stockReservationWithIdOnly = await prisma.stockReservation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends StockReservationFindManyArgs>(args?: SelectSubset<T, StockReservationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockReservationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a StockReservation.
     * @param {StockReservationCreateArgs} args - Arguments to create a StockReservation.
     * @example
     * // Create one StockReservation
     * const StockReservation = await prisma.stockReservation.create({
     *   data: {
     *     // ... data to create a StockReservation
     *   }
     * })
     * 
     */
    create<T extends StockReservationCreateArgs>(args: SelectSubset<T, StockReservationCreateArgs<ExtArgs>>): Prisma__StockReservationClient<$Result.GetResult<Prisma.$StockReservationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many StockReservations.
     * @param {StockReservationCreateManyArgs} args - Arguments to create many StockReservations.
     * @example
     * // Create many StockReservations
     * const stockReservation = await prisma.stockReservation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StockReservationCreateManyArgs>(args?: SelectSubset<T, StockReservationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many StockReservations and returns the data saved in the database.
     * @param {StockReservationCreateManyAndReturnArgs} args - Arguments to create many StockReservations.
     * @example
     * // Create many StockReservations
     * const stockReservation = await prisma.stockReservation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many StockReservations and only return the `id`
     * const stockReservationWithIdOnly = await prisma.stockReservation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends StockReservationCreateManyAndReturnArgs>(args?: SelectSubset<T, StockReservationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockReservationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a StockReservation.
     * @param {StockReservationDeleteArgs} args - Arguments to delete one StockReservation.
     * @example
     * // Delete one StockReservation
     * const StockReservation = await prisma.stockReservation.delete({
     *   where: {
     *     // ... filter to delete one StockReservation
     *   }
     * })
     * 
     */
    delete<T extends StockReservationDeleteArgs>(args: SelectSubset<T, StockReservationDeleteArgs<ExtArgs>>): Prisma__StockReservationClient<$Result.GetResult<Prisma.$StockReservationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one StockReservation.
     * @param {StockReservationUpdateArgs} args - Arguments to update one StockReservation.
     * @example
     * // Update one StockReservation
     * const stockReservation = await prisma.stockReservation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StockReservationUpdateArgs>(args: SelectSubset<T, StockReservationUpdateArgs<ExtArgs>>): Prisma__StockReservationClient<$Result.GetResult<Prisma.$StockReservationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more StockReservations.
     * @param {StockReservationDeleteManyArgs} args - Arguments to filter StockReservations to delete.
     * @example
     * // Delete a few StockReservations
     * const { count } = await prisma.stockReservation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StockReservationDeleteManyArgs>(args?: SelectSubset<T, StockReservationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StockReservations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockReservationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many StockReservations
     * const stockReservation = await prisma.stockReservation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StockReservationUpdateManyArgs>(args: SelectSubset<T, StockReservationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StockReservations and returns the data updated in the database.
     * @param {StockReservationUpdateManyAndReturnArgs} args - Arguments to update many StockReservations.
     * @example
     * // Update many StockReservations
     * const stockReservation = await prisma.stockReservation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more StockReservations and only return the `id`
     * const stockReservationWithIdOnly = await prisma.stockReservation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends StockReservationUpdateManyAndReturnArgs>(args: SelectSubset<T, StockReservationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockReservationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one StockReservation.
     * @param {StockReservationUpsertArgs} args - Arguments to update or create a StockReservation.
     * @example
     * // Update or create a StockReservation
     * const stockReservation = await prisma.stockReservation.upsert({
     *   create: {
     *     // ... data to create a StockReservation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the StockReservation we want to update
     *   }
     * })
     */
    upsert<T extends StockReservationUpsertArgs>(args: SelectSubset<T, StockReservationUpsertArgs<ExtArgs>>): Prisma__StockReservationClient<$Result.GetResult<Prisma.$StockReservationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of StockReservations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockReservationCountArgs} args - Arguments to filter StockReservations to count.
     * @example
     * // Count the number of StockReservations
     * const count = await prisma.stockReservation.count({
     *   where: {
     *     // ... the filter for the StockReservations we want to count
     *   }
     * })
    **/
    count<T extends StockReservationCountArgs>(
      args?: Subset<T, StockReservationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StockReservationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a StockReservation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockReservationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StockReservationAggregateArgs>(args: Subset<T, StockReservationAggregateArgs>): Prisma.PrismaPromise<GetStockReservationAggregateType<T>>

    /**
     * Group by StockReservation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockReservationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StockReservationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StockReservationGroupByArgs['orderBy'] }
        : { orderBy?: StockReservationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StockReservationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStockReservationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the StockReservation model
   */
  readonly fields: StockReservationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for StockReservation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StockReservationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    inventoryItem<T extends InventoryItemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, InventoryItemDefaultArgs<ExtArgs>>): Prisma__InventoryItemClient<$Result.GetResult<Prisma.$InventoryItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the StockReservation model
   */
  interface StockReservationFieldRefs {
    readonly id: FieldRef<"StockReservation", 'String'>
    readonly inventoryItemId: FieldRef<"StockReservation", 'String'>
    readonly reservationType: FieldRef<"StockReservation", 'ReservationType'>
    readonly referenceType: FieldRef<"StockReservation", 'String'>
    readonly referenceId: FieldRef<"StockReservation", 'String'>
    readonly quantity: FieldRef<"StockReservation", 'Int'>
    readonly status: FieldRef<"StockReservation", 'ReservationStatus'>
    readonly reservedAt: FieldRef<"StockReservation", 'DateTime'>
    readonly expiresAt: FieldRef<"StockReservation", 'DateTime'>
    readonly releasedAt: FieldRef<"StockReservation", 'DateTime'>
    readonly reservedBy: FieldRef<"StockReservation", 'String'>
    readonly notes: FieldRef<"StockReservation", 'String'>
    readonly createdAt: FieldRef<"StockReservation", 'DateTime'>
    readonly updatedAt: FieldRef<"StockReservation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * StockReservation findUnique
   */
  export type StockReservationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReservation
     */
    select?: StockReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockReservation
     */
    omit?: StockReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockReservationInclude<ExtArgs> | null
    /**
     * Filter, which StockReservation to fetch.
     */
    where: StockReservationWhereUniqueInput
  }

  /**
   * StockReservation findUniqueOrThrow
   */
  export type StockReservationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReservation
     */
    select?: StockReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockReservation
     */
    omit?: StockReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockReservationInclude<ExtArgs> | null
    /**
     * Filter, which StockReservation to fetch.
     */
    where: StockReservationWhereUniqueInput
  }

  /**
   * StockReservation findFirst
   */
  export type StockReservationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReservation
     */
    select?: StockReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockReservation
     */
    omit?: StockReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockReservationInclude<ExtArgs> | null
    /**
     * Filter, which StockReservation to fetch.
     */
    where?: StockReservationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockReservations to fetch.
     */
    orderBy?: StockReservationOrderByWithRelationInput | StockReservationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StockReservations.
     */
    cursor?: StockReservationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockReservations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockReservations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StockReservations.
     */
    distinct?: StockReservationScalarFieldEnum | StockReservationScalarFieldEnum[]
  }

  /**
   * StockReservation findFirstOrThrow
   */
  export type StockReservationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReservation
     */
    select?: StockReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockReservation
     */
    omit?: StockReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockReservationInclude<ExtArgs> | null
    /**
     * Filter, which StockReservation to fetch.
     */
    where?: StockReservationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockReservations to fetch.
     */
    orderBy?: StockReservationOrderByWithRelationInput | StockReservationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StockReservations.
     */
    cursor?: StockReservationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockReservations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockReservations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StockReservations.
     */
    distinct?: StockReservationScalarFieldEnum | StockReservationScalarFieldEnum[]
  }

  /**
   * StockReservation findMany
   */
  export type StockReservationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReservation
     */
    select?: StockReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockReservation
     */
    omit?: StockReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockReservationInclude<ExtArgs> | null
    /**
     * Filter, which StockReservations to fetch.
     */
    where?: StockReservationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockReservations to fetch.
     */
    orderBy?: StockReservationOrderByWithRelationInput | StockReservationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing StockReservations.
     */
    cursor?: StockReservationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockReservations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockReservations.
     */
    skip?: number
    distinct?: StockReservationScalarFieldEnum | StockReservationScalarFieldEnum[]
  }

  /**
   * StockReservation create
   */
  export type StockReservationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReservation
     */
    select?: StockReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockReservation
     */
    omit?: StockReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockReservationInclude<ExtArgs> | null
    /**
     * The data needed to create a StockReservation.
     */
    data: XOR<StockReservationCreateInput, StockReservationUncheckedCreateInput>
  }

  /**
   * StockReservation createMany
   */
  export type StockReservationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many StockReservations.
     */
    data: StockReservationCreateManyInput | StockReservationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * StockReservation createManyAndReturn
   */
  export type StockReservationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReservation
     */
    select?: StockReservationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the StockReservation
     */
    omit?: StockReservationOmit<ExtArgs> | null
    /**
     * The data used to create many StockReservations.
     */
    data: StockReservationCreateManyInput | StockReservationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockReservationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * StockReservation update
   */
  export type StockReservationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReservation
     */
    select?: StockReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockReservation
     */
    omit?: StockReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockReservationInclude<ExtArgs> | null
    /**
     * The data needed to update a StockReservation.
     */
    data: XOR<StockReservationUpdateInput, StockReservationUncheckedUpdateInput>
    /**
     * Choose, which StockReservation to update.
     */
    where: StockReservationWhereUniqueInput
  }

  /**
   * StockReservation updateMany
   */
  export type StockReservationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update StockReservations.
     */
    data: XOR<StockReservationUpdateManyMutationInput, StockReservationUncheckedUpdateManyInput>
    /**
     * Filter which StockReservations to update
     */
    where?: StockReservationWhereInput
    /**
     * Limit how many StockReservations to update.
     */
    limit?: number
  }

  /**
   * StockReservation updateManyAndReturn
   */
  export type StockReservationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReservation
     */
    select?: StockReservationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the StockReservation
     */
    omit?: StockReservationOmit<ExtArgs> | null
    /**
     * The data used to update StockReservations.
     */
    data: XOR<StockReservationUpdateManyMutationInput, StockReservationUncheckedUpdateManyInput>
    /**
     * Filter which StockReservations to update
     */
    where?: StockReservationWhereInput
    /**
     * Limit how many StockReservations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockReservationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * StockReservation upsert
   */
  export type StockReservationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReservation
     */
    select?: StockReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockReservation
     */
    omit?: StockReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockReservationInclude<ExtArgs> | null
    /**
     * The filter to search for the StockReservation to update in case it exists.
     */
    where: StockReservationWhereUniqueInput
    /**
     * In case the StockReservation found by the `where` argument doesn't exist, create a new StockReservation with this data.
     */
    create: XOR<StockReservationCreateInput, StockReservationUncheckedCreateInput>
    /**
     * In case the StockReservation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StockReservationUpdateInput, StockReservationUncheckedUpdateInput>
  }

  /**
   * StockReservation delete
   */
  export type StockReservationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReservation
     */
    select?: StockReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockReservation
     */
    omit?: StockReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockReservationInclude<ExtArgs> | null
    /**
     * Filter which StockReservation to delete.
     */
    where: StockReservationWhereUniqueInput
  }

  /**
   * StockReservation deleteMany
   */
  export type StockReservationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StockReservations to delete
     */
    where?: StockReservationWhereInput
    /**
     * Limit how many StockReservations to delete.
     */
    limit?: number
  }

  /**
   * StockReservation without action
   */
  export type StockReservationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReservation
     */
    select?: StockReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockReservation
     */
    omit?: StockReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockReservationInclude<ExtArgs> | null
  }


  /**
   * Model SupplierInvoice
   */

  export type AggregateSupplierInvoice = {
    _count: SupplierInvoiceCountAggregateOutputType | null
    _avg: SupplierInvoiceAvgAggregateOutputType | null
    _sum: SupplierInvoiceSumAggregateOutputType | null
    _min: SupplierInvoiceMinAggregateOutputType | null
    _max: SupplierInvoiceMaxAggregateOutputType | null
  }

  export type SupplierInvoiceAvgAggregateOutputType = {
    subtotal: Decimal | null
    taxAmount: Decimal | null
    totalAmount: Decimal | null
  }

  export type SupplierInvoiceSumAggregateOutputType = {
    subtotal: Decimal | null
    taxAmount: Decimal | null
    totalAmount: Decimal | null
  }

  export type SupplierInvoiceMinAggregateOutputType = {
    id: string | null
    invoiceNumber: string | null
    supplierId: string | null
    purchaseOrderId: string | null
    subtotal: Decimal | null
    taxAmount: Decimal | null
    totalAmount: Decimal | null
    currency: string | null
    invoiceDate: Date | null
    dueDate: Date | null
    paidDate: Date | null
    status: $Enums.InvoiceStatus | null
    paymentMethod: string | null
    paymentReference: string | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SupplierInvoiceMaxAggregateOutputType = {
    id: string | null
    invoiceNumber: string | null
    supplierId: string | null
    purchaseOrderId: string | null
    subtotal: Decimal | null
    taxAmount: Decimal | null
    totalAmount: Decimal | null
    currency: string | null
    invoiceDate: Date | null
    dueDate: Date | null
    paidDate: Date | null
    status: $Enums.InvoiceStatus | null
    paymentMethod: string | null
    paymentReference: string | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SupplierInvoiceCountAggregateOutputType = {
    id: number
    invoiceNumber: number
    supplierId: number
    purchaseOrderId: number
    subtotal: number
    taxAmount: number
    totalAmount: number
    currency: number
    invoiceDate: number
    dueDate: number
    paidDate: number
    status: number
    paymentMethod: number
    paymentReference: number
    notes: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SupplierInvoiceAvgAggregateInputType = {
    subtotal?: true
    taxAmount?: true
    totalAmount?: true
  }

  export type SupplierInvoiceSumAggregateInputType = {
    subtotal?: true
    taxAmount?: true
    totalAmount?: true
  }

  export type SupplierInvoiceMinAggregateInputType = {
    id?: true
    invoiceNumber?: true
    supplierId?: true
    purchaseOrderId?: true
    subtotal?: true
    taxAmount?: true
    totalAmount?: true
    currency?: true
    invoiceDate?: true
    dueDate?: true
    paidDate?: true
    status?: true
    paymentMethod?: true
    paymentReference?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SupplierInvoiceMaxAggregateInputType = {
    id?: true
    invoiceNumber?: true
    supplierId?: true
    purchaseOrderId?: true
    subtotal?: true
    taxAmount?: true
    totalAmount?: true
    currency?: true
    invoiceDate?: true
    dueDate?: true
    paidDate?: true
    status?: true
    paymentMethod?: true
    paymentReference?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SupplierInvoiceCountAggregateInputType = {
    id?: true
    invoiceNumber?: true
    supplierId?: true
    purchaseOrderId?: true
    subtotal?: true
    taxAmount?: true
    totalAmount?: true
    currency?: true
    invoiceDate?: true
    dueDate?: true
    paidDate?: true
    status?: true
    paymentMethod?: true
    paymentReference?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SupplierInvoiceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SupplierInvoice to aggregate.
     */
    where?: SupplierInvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplierInvoices to fetch.
     */
    orderBy?: SupplierInvoiceOrderByWithRelationInput | SupplierInvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SupplierInvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplierInvoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplierInvoices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SupplierInvoices
    **/
    _count?: true | SupplierInvoiceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SupplierInvoiceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SupplierInvoiceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SupplierInvoiceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SupplierInvoiceMaxAggregateInputType
  }

  export type GetSupplierInvoiceAggregateType<T extends SupplierInvoiceAggregateArgs> = {
        [P in keyof T & keyof AggregateSupplierInvoice]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSupplierInvoice[P]>
      : GetScalarType<T[P], AggregateSupplierInvoice[P]>
  }




  export type SupplierInvoiceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupplierInvoiceWhereInput
    orderBy?: SupplierInvoiceOrderByWithAggregationInput | SupplierInvoiceOrderByWithAggregationInput[]
    by: SupplierInvoiceScalarFieldEnum[] | SupplierInvoiceScalarFieldEnum
    having?: SupplierInvoiceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SupplierInvoiceCountAggregateInputType | true
    _avg?: SupplierInvoiceAvgAggregateInputType
    _sum?: SupplierInvoiceSumAggregateInputType
    _min?: SupplierInvoiceMinAggregateInputType
    _max?: SupplierInvoiceMaxAggregateInputType
  }

  export type SupplierInvoiceGroupByOutputType = {
    id: string
    invoiceNumber: string
    supplierId: string
    purchaseOrderId: string | null
    subtotal: Decimal
    taxAmount: Decimal
    totalAmount: Decimal
    currency: string
    invoiceDate: Date
    dueDate: Date
    paidDate: Date | null
    status: $Enums.InvoiceStatus
    paymentMethod: string | null
    paymentReference: string | null
    notes: string | null
    createdAt: Date
    updatedAt: Date
    _count: SupplierInvoiceCountAggregateOutputType | null
    _avg: SupplierInvoiceAvgAggregateOutputType | null
    _sum: SupplierInvoiceSumAggregateOutputType | null
    _min: SupplierInvoiceMinAggregateOutputType | null
    _max: SupplierInvoiceMaxAggregateOutputType | null
  }

  type GetSupplierInvoiceGroupByPayload<T extends SupplierInvoiceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SupplierInvoiceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SupplierInvoiceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SupplierInvoiceGroupByOutputType[P]>
            : GetScalarType<T[P], SupplierInvoiceGroupByOutputType[P]>
        }
      >
    >


  export type SupplierInvoiceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    invoiceNumber?: boolean
    supplierId?: boolean
    purchaseOrderId?: boolean
    subtotal?: boolean
    taxAmount?: boolean
    totalAmount?: boolean
    currency?: boolean
    invoiceDate?: boolean
    dueDate?: boolean
    paidDate?: boolean
    status?: boolean
    paymentMethod?: boolean
    paymentReference?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    supplier?: boolean | SupplierDefaultArgs<ExtArgs>
    purchaseOrder?: boolean | SupplierInvoice$purchaseOrderArgs<ExtArgs>
  }, ExtArgs["result"]["supplierInvoice"]>

  export type SupplierInvoiceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    invoiceNumber?: boolean
    supplierId?: boolean
    purchaseOrderId?: boolean
    subtotal?: boolean
    taxAmount?: boolean
    totalAmount?: boolean
    currency?: boolean
    invoiceDate?: boolean
    dueDate?: boolean
    paidDate?: boolean
    status?: boolean
    paymentMethod?: boolean
    paymentReference?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    supplier?: boolean | SupplierDefaultArgs<ExtArgs>
    purchaseOrder?: boolean | SupplierInvoice$purchaseOrderArgs<ExtArgs>
  }, ExtArgs["result"]["supplierInvoice"]>

  export type SupplierInvoiceSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    invoiceNumber?: boolean
    supplierId?: boolean
    purchaseOrderId?: boolean
    subtotal?: boolean
    taxAmount?: boolean
    totalAmount?: boolean
    currency?: boolean
    invoiceDate?: boolean
    dueDate?: boolean
    paidDate?: boolean
    status?: boolean
    paymentMethod?: boolean
    paymentReference?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    supplier?: boolean | SupplierDefaultArgs<ExtArgs>
    purchaseOrder?: boolean | SupplierInvoice$purchaseOrderArgs<ExtArgs>
  }, ExtArgs["result"]["supplierInvoice"]>

  export type SupplierInvoiceSelectScalar = {
    id?: boolean
    invoiceNumber?: boolean
    supplierId?: boolean
    purchaseOrderId?: boolean
    subtotal?: boolean
    taxAmount?: boolean
    totalAmount?: boolean
    currency?: boolean
    invoiceDate?: boolean
    dueDate?: boolean
    paidDate?: boolean
    status?: boolean
    paymentMethod?: boolean
    paymentReference?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type SupplierInvoiceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "invoiceNumber" | "supplierId" | "purchaseOrderId" | "subtotal" | "taxAmount" | "totalAmount" | "currency" | "invoiceDate" | "dueDate" | "paidDate" | "status" | "paymentMethod" | "paymentReference" | "notes" | "createdAt" | "updatedAt", ExtArgs["result"]["supplierInvoice"]>
  export type SupplierInvoiceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supplier?: boolean | SupplierDefaultArgs<ExtArgs>
    purchaseOrder?: boolean | SupplierInvoice$purchaseOrderArgs<ExtArgs>
  }
  export type SupplierInvoiceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supplier?: boolean | SupplierDefaultArgs<ExtArgs>
    purchaseOrder?: boolean | SupplierInvoice$purchaseOrderArgs<ExtArgs>
  }
  export type SupplierInvoiceIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supplier?: boolean | SupplierDefaultArgs<ExtArgs>
    purchaseOrder?: boolean | SupplierInvoice$purchaseOrderArgs<ExtArgs>
  }

  export type $SupplierInvoicePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SupplierInvoice"
    objects: {
      supplier: Prisma.$SupplierPayload<ExtArgs>
      purchaseOrder: Prisma.$PurchaseOrderPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      invoiceNumber: string
      supplierId: string
      purchaseOrderId: string | null
      subtotal: Prisma.Decimal
      taxAmount: Prisma.Decimal
      totalAmount: Prisma.Decimal
      currency: string
      invoiceDate: Date
      dueDate: Date
      paidDate: Date | null
      status: $Enums.InvoiceStatus
      paymentMethod: string | null
      paymentReference: string | null
      notes: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["supplierInvoice"]>
    composites: {}
  }

  type SupplierInvoiceGetPayload<S extends boolean | null | undefined | SupplierInvoiceDefaultArgs> = $Result.GetResult<Prisma.$SupplierInvoicePayload, S>

  type SupplierInvoiceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SupplierInvoiceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SupplierInvoiceCountAggregateInputType | true
    }

  export interface SupplierInvoiceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SupplierInvoice'], meta: { name: 'SupplierInvoice' } }
    /**
     * Find zero or one SupplierInvoice that matches the filter.
     * @param {SupplierInvoiceFindUniqueArgs} args - Arguments to find a SupplierInvoice
     * @example
     * // Get one SupplierInvoice
     * const supplierInvoice = await prisma.supplierInvoice.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SupplierInvoiceFindUniqueArgs>(args: SelectSubset<T, SupplierInvoiceFindUniqueArgs<ExtArgs>>): Prisma__SupplierInvoiceClient<$Result.GetResult<Prisma.$SupplierInvoicePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SupplierInvoice that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SupplierInvoiceFindUniqueOrThrowArgs} args - Arguments to find a SupplierInvoice
     * @example
     * // Get one SupplierInvoice
     * const supplierInvoice = await prisma.supplierInvoice.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SupplierInvoiceFindUniqueOrThrowArgs>(args: SelectSubset<T, SupplierInvoiceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SupplierInvoiceClient<$Result.GetResult<Prisma.$SupplierInvoicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SupplierInvoice that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierInvoiceFindFirstArgs} args - Arguments to find a SupplierInvoice
     * @example
     * // Get one SupplierInvoice
     * const supplierInvoice = await prisma.supplierInvoice.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SupplierInvoiceFindFirstArgs>(args?: SelectSubset<T, SupplierInvoiceFindFirstArgs<ExtArgs>>): Prisma__SupplierInvoiceClient<$Result.GetResult<Prisma.$SupplierInvoicePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SupplierInvoice that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierInvoiceFindFirstOrThrowArgs} args - Arguments to find a SupplierInvoice
     * @example
     * // Get one SupplierInvoice
     * const supplierInvoice = await prisma.supplierInvoice.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SupplierInvoiceFindFirstOrThrowArgs>(args?: SelectSubset<T, SupplierInvoiceFindFirstOrThrowArgs<ExtArgs>>): Prisma__SupplierInvoiceClient<$Result.GetResult<Prisma.$SupplierInvoicePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SupplierInvoices that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierInvoiceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SupplierInvoices
     * const supplierInvoices = await prisma.supplierInvoice.findMany()
     * 
     * // Get first 10 SupplierInvoices
     * const supplierInvoices = await prisma.supplierInvoice.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const supplierInvoiceWithIdOnly = await prisma.supplierInvoice.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SupplierInvoiceFindManyArgs>(args?: SelectSubset<T, SupplierInvoiceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplierInvoicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SupplierInvoice.
     * @param {SupplierInvoiceCreateArgs} args - Arguments to create a SupplierInvoice.
     * @example
     * // Create one SupplierInvoice
     * const SupplierInvoice = await prisma.supplierInvoice.create({
     *   data: {
     *     // ... data to create a SupplierInvoice
     *   }
     * })
     * 
     */
    create<T extends SupplierInvoiceCreateArgs>(args: SelectSubset<T, SupplierInvoiceCreateArgs<ExtArgs>>): Prisma__SupplierInvoiceClient<$Result.GetResult<Prisma.$SupplierInvoicePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SupplierInvoices.
     * @param {SupplierInvoiceCreateManyArgs} args - Arguments to create many SupplierInvoices.
     * @example
     * // Create many SupplierInvoices
     * const supplierInvoice = await prisma.supplierInvoice.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SupplierInvoiceCreateManyArgs>(args?: SelectSubset<T, SupplierInvoiceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SupplierInvoices and returns the data saved in the database.
     * @param {SupplierInvoiceCreateManyAndReturnArgs} args - Arguments to create many SupplierInvoices.
     * @example
     * // Create many SupplierInvoices
     * const supplierInvoice = await prisma.supplierInvoice.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SupplierInvoices and only return the `id`
     * const supplierInvoiceWithIdOnly = await prisma.supplierInvoice.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SupplierInvoiceCreateManyAndReturnArgs>(args?: SelectSubset<T, SupplierInvoiceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplierInvoicePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SupplierInvoice.
     * @param {SupplierInvoiceDeleteArgs} args - Arguments to delete one SupplierInvoice.
     * @example
     * // Delete one SupplierInvoice
     * const SupplierInvoice = await prisma.supplierInvoice.delete({
     *   where: {
     *     // ... filter to delete one SupplierInvoice
     *   }
     * })
     * 
     */
    delete<T extends SupplierInvoiceDeleteArgs>(args: SelectSubset<T, SupplierInvoiceDeleteArgs<ExtArgs>>): Prisma__SupplierInvoiceClient<$Result.GetResult<Prisma.$SupplierInvoicePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SupplierInvoice.
     * @param {SupplierInvoiceUpdateArgs} args - Arguments to update one SupplierInvoice.
     * @example
     * // Update one SupplierInvoice
     * const supplierInvoice = await prisma.supplierInvoice.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SupplierInvoiceUpdateArgs>(args: SelectSubset<T, SupplierInvoiceUpdateArgs<ExtArgs>>): Prisma__SupplierInvoiceClient<$Result.GetResult<Prisma.$SupplierInvoicePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SupplierInvoices.
     * @param {SupplierInvoiceDeleteManyArgs} args - Arguments to filter SupplierInvoices to delete.
     * @example
     * // Delete a few SupplierInvoices
     * const { count } = await prisma.supplierInvoice.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SupplierInvoiceDeleteManyArgs>(args?: SelectSubset<T, SupplierInvoiceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SupplierInvoices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierInvoiceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SupplierInvoices
     * const supplierInvoice = await prisma.supplierInvoice.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SupplierInvoiceUpdateManyArgs>(args: SelectSubset<T, SupplierInvoiceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SupplierInvoices and returns the data updated in the database.
     * @param {SupplierInvoiceUpdateManyAndReturnArgs} args - Arguments to update many SupplierInvoices.
     * @example
     * // Update many SupplierInvoices
     * const supplierInvoice = await prisma.supplierInvoice.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SupplierInvoices and only return the `id`
     * const supplierInvoiceWithIdOnly = await prisma.supplierInvoice.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SupplierInvoiceUpdateManyAndReturnArgs>(args: SelectSubset<T, SupplierInvoiceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplierInvoicePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SupplierInvoice.
     * @param {SupplierInvoiceUpsertArgs} args - Arguments to update or create a SupplierInvoice.
     * @example
     * // Update or create a SupplierInvoice
     * const supplierInvoice = await prisma.supplierInvoice.upsert({
     *   create: {
     *     // ... data to create a SupplierInvoice
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SupplierInvoice we want to update
     *   }
     * })
     */
    upsert<T extends SupplierInvoiceUpsertArgs>(args: SelectSubset<T, SupplierInvoiceUpsertArgs<ExtArgs>>): Prisma__SupplierInvoiceClient<$Result.GetResult<Prisma.$SupplierInvoicePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SupplierInvoices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierInvoiceCountArgs} args - Arguments to filter SupplierInvoices to count.
     * @example
     * // Count the number of SupplierInvoices
     * const count = await prisma.supplierInvoice.count({
     *   where: {
     *     // ... the filter for the SupplierInvoices we want to count
     *   }
     * })
    **/
    count<T extends SupplierInvoiceCountArgs>(
      args?: Subset<T, SupplierInvoiceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SupplierInvoiceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SupplierInvoice.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierInvoiceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SupplierInvoiceAggregateArgs>(args: Subset<T, SupplierInvoiceAggregateArgs>): Prisma.PrismaPromise<GetSupplierInvoiceAggregateType<T>>

    /**
     * Group by SupplierInvoice.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierInvoiceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SupplierInvoiceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SupplierInvoiceGroupByArgs['orderBy'] }
        : { orderBy?: SupplierInvoiceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SupplierInvoiceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSupplierInvoiceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SupplierInvoice model
   */
  readonly fields: SupplierInvoiceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SupplierInvoice.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SupplierInvoiceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    supplier<T extends SupplierDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SupplierDefaultArgs<ExtArgs>>): Prisma__SupplierClient<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    purchaseOrder<T extends SupplierInvoice$purchaseOrderArgs<ExtArgs> = {}>(args?: Subset<T, SupplierInvoice$purchaseOrderArgs<ExtArgs>>): Prisma__PurchaseOrderClient<$Result.GetResult<Prisma.$PurchaseOrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SupplierInvoice model
   */
  interface SupplierInvoiceFieldRefs {
    readonly id: FieldRef<"SupplierInvoice", 'String'>
    readonly invoiceNumber: FieldRef<"SupplierInvoice", 'String'>
    readonly supplierId: FieldRef<"SupplierInvoice", 'String'>
    readonly purchaseOrderId: FieldRef<"SupplierInvoice", 'String'>
    readonly subtotal: FieldRef<"SupplierInvoice", 'Decimal'>
    readonly taxAmount: FieldRef<"SupplierInvoice", 'Decimal'>
    readonly totalAmount: FieldRef<"SupplierInvoice", 'Decimal'>
    readonly currency: FieldRef<"SupplierInvoice", 'String'>
    readonly invoiceDate: FieldRef<"SupplierInvoice", 'DateTime'>
    readonly dueDate: FieldRef<"SupplierInvoice", 'DateTime'>
    readonly paidDate: FieldRef<"SupplierInvoice", 'DateTime'>
    readonly status: FieldRef<"SupplierInvoice", 'InvoiceStatus'>
    readonly paymentMethod: FieldRef<"SupplierInvoice", 'String'>
    readonly paymentReference: FieldRef<"SupplierInvoice", 'String'>
    readonly notes: FieldRef<"SupplierInvoice", 'String'>
    readonly createdAt: FieldRef<"SupplierInvoice", 'DateTime'>
    readonly updatedAt: FieldRef<"SupplierInvoice", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SupplierInvoice findUnique
   */
  export type SupplierInvoiceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierInvoice
     */
    select?: SupplierInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierInvoice
     */
    omit?: SupplierInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInvoiceInclude<ExtArgs> | null
    /**
     * Filter, which SupplierInvoice to fetch.
     */
    where: SupplierInvoiceWhereUniqueInput
  }

  /**
   * SupplierInvoice findUniqueOrThrow
   */
  export type SupplierInvoiceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierInvoice
     */
    select?: SupplierInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierInvoice
     */
    omit?: SupplierInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInvoiceInclude<ExtArgs> | null
    /**
     * Filter, which SupplierInvoice to fetch.
     */
    where: SupplierInvoiceWhereUniqueInput
  }

  /**
   * SupplierInvoice findFirst
   */
  export type SupplierInvoiceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierInvoice
     */
    select?: SupplierInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierInvoice
     */
    omit?: SupplierInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInvoiceInclude<ExtArgs> | null
    /**
     * Filter, which SupplierInvoice to fetch.
     */
    where?: SupplierInvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplierInvoices to fetch.
     */
    orderBy?: SupplierInvoiceOrderByWithRelationInput | SupplierInvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SupplierInvoices.
     */
    cursor?: SupplierInvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplierInvoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplierInvoices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SupplierInvoices.
     */
    distinct?: SupplierInvoiceScalarFieldEnum | SupplierInvoiceScalarFieldEnum[]
  }

  /**
   * SupplierInvoice findFirstOrThrow
   */
  export type SupplierInvoiceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierInvoice
     */
    select?: SupplierInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierInvoice
     */
    omit?: SupplierInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInvoiceInclude<ExtArgs> | null
    /**
     * Filter, which SupplierInvoice to fetch.
     */
    where?: SupplierInvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplierInvoices to fetch.
     */
    orderBy?: SupplierInvoiceOrderByWithRelationInput | SupplierInvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SupplierInvoices.
     */
    cursor?: SupplierInvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplierInvoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplierInvoices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SupplierInvoices.
     */
    distinct?: SupplierInvoiceScalarFieldEnum | SupplierInvoiceScalarFieldEnum[]
  }

  /**
   * SupplierInvoice findMany
   */
  export type SupplierInvoiceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierInvoice
     */
    select?: SupplierInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierInvoice
     */
    omit?: SupplierInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInvoiceInclude<ExtArgs> | null
    /**
     * Filter, which SupplierInvoices to fetch.
     */
    where?: SupplierInvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplierInvoices to fetch.
     */
    orderBy?: SupplierInvoiceOrderByWithRelationInput | SupplierInvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SupplierInvoices.
     */
    cursor?: SupplierInvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplierInvoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplierInvoices.
     */
    skip?: number
    distinct?: SupplierInvoiceScalarFieldEnum | SupplierInvoiceScalarFieldEnum[]
  }

  /**
   * SupplierInvoice create
   */
  export type SupplierInvoiceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierInvoice
     */
    select?: SupplierInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierInvoice
     */
    omit?: SupplierInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInvoiceInclude<ExtArgs> | null
    /**
     * The data needed to create a SupplierInvoice.
     */
    data: XOR<SupplierInvoiceCreateInput, SupplierInvoiceUncheckedCreateInput>
  }

  /**
   * SupplierInvoice createMany
   */
  export type SupplierInvoiceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SupplierInvoices.
     */
    data: SupplierInvoiceCreateManyInput | SupplierInvoiceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SupplierInvoice createManyAndReturn
   */
  export type SupplierInvoiceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierInvoice
     */
    select?: SupplierInvoiceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierInvoice
     */
    omit?: SupplierInvoiceOmit<ExtArgs> | null
    /**
     * The data used to create many SupplierInvoices.
     */
    data: SupplierInvoiceCreateManyInput | SupplierInvoiceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInvoiceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SupplierInvoice update
   */
  export type SupplierInvoiceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierInvoice
     */
    select?: SupplierInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierInvoice
     */
    omit?: SupplierInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInvoiceInclude<ExtArgs> | null
    /**
     * The data needed to update a SupplierInvoice.
     */
    data: XOR<SupplierInvoiceUpdateInput, SupplierInvoiceUncheckedUpdateInput>
    /**
     * Choose, which SupplierInvoice to update.
     */
    where: SupplierInvoiceWhereUniqueInput
  }

  /**
   * SupplierInvoice updateMany
   */
  export type SupplierInvoiceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SupplierInvoices.
     */
    data: XOR<SupplierInvoiceUpdateManyMutationInput, SupplierInvoiceUncheckedUpdateManyInput>
    /**
     * Filter which SupplierInvoices to update
     */
    where?: SupplierInvoiceWhereInput
    /**
     * Limit how many SupplierInvoices to update.
     */
    limit?: number
  }

  /**
   * SupplierInvoice updateManyAndReturn
   */
  export type SupplierInvoiceUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierInvoice
     */
    select?: SupplierInvoiceSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierInvoice
     */
    omit?: SupplierInvoiceOmit<ExtArgs> | null
    /**
     * The data used to update SupplierInvoices.
     */
    data: XOR<SupplierInvoiceUpdateManyMutationInput, SupplierInvoiceUncheckedUpdateManyInput>
    /**
     * Filter which SupplierInvoices to update
     */
    where?: SupplierInvoiceWhereInput
    /**
     * Limit how many SupplierInvoices to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInvoiceIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SupplierInvoice upsert
   */
  export type SupplierInvoiceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierInvoice
     */
    select?: SupplierInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierInvoice
     */
    omit?: SupplierInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInvoiceInclude<ExtArgs> | null
    /**
     * The filter to search for the SupplierInvoice to update in case it exists.
     */
    where: SupplierInvoiceWhereUniqueInput
    /**
     * In case the SupplierInvoice found by the `where` argument doesn't exist, create a new SupplierInvoice with this data.
     */
    create: XOR<SupplierInvoiceCreateInput, SupplierInvoiceUncheckedCreateInput>
    /**
     * In case the SupplierInvoice was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SupplierInvoiceUpdateInput, SupplierInvoiceUncheckedUpdateInput>
  }

  /**
   * SupplierInvoice delete
   */
  export type SupplierInvoiceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierInvoice
     */
    select?: SupplierInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierInvoice
     */
    omit?: SupplierInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInvoiceInclude<ExtArgs> | null
    /**
     * Filter which SupplierInvoice to delete.
     */
    where: SupplierInvoiceWhereUniqueInput
  }

  /**
   * SupplierInvoice deleteMany
   */
  export type SupplierInvoiceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SupplierInvoices to delete
     */
    where?: SupplierInvoiceWhereInput
    /**
     * Limit how many SupplierInvoices to delete.
     */
    limit?: number
  }

  /**
   * SupplierInvoice.purchaseOrder
   */
  export type SupplierInvoice$purchaseOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrder
     */
    select?: PurchaseOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrder
     */
    omit?: PurchaseOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderInclude<ExtArgs> | null
    where?: PurchaseOrderWhereInput
  }

  /**
   * SupplierInvoice without action
   */
  export type SupplierInvoiceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierInvoice
     */
    select?: SupplierInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplierInvoice
     */
    omit?: SupplierInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInvoiceInclude<ExtArgs> | null
  }


  /**
   * Model CustomerInvoice
   */

  export type AggregateCustomerInvoice = {
    _count: CustomerInvoiceCountAggregateOutputType | null
    _avg: CustomerInvoiceAvgAggregateOutputType | null
    _sum: CustomerInvoiceSumAggregateOutputType | null
    _min: CustomerInvoiceMinAggregateOutputType | null
    _max: CustomerInvoiceMaxAggregateOutputType | null
  }

  export type CustomerInvoiceAvgAggregateOutputType = {
    subtotal: Decimal | null
    taxAmount: Decimal | null
    totalAmount: Decimal | null
    paidAmount: Decimal | null
    balanceAmount: Decimal | null
  }

  export type CustomerInvoiceSumAggregateOutputType = {
    subtotal: Decimal | null
    taxAmount: Decimal | null
    totalAmount: Decimal | null
    paidAmount: Decimal | null
    balanceAmount: Decimal | null
  }

  export type CustomerInvoiceMinAggregateOutputType = {
    id: string | null
    invoiceNumber: string | null
    customerId: string | null
    orderId: string | null
    subtotal: Decimal | null
    taxAmount: Decimal | null
    totalAmount: Decimal | null
    paidAmount: Decimal | null
    balanceAmount: Decimal | null
    currency: string | null
    invoiceDate: Date | null
    dueDate: Date | null
    paidDate: Date | null
    status: $Enums.InvoiceStatus | null
    paymentMethod: string | null
    paymentReference: string | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CustomerInvoiceMaxAggregateOutputType = {
    id: string | null
    invoiceNumber: string | null
    customerId: string | null
    orderId: string | null
    subtotal: Decimal | null
    taxAmount: Decimal | null
    totalAmount: Decimal | null
    paidAmount: Decimal | null
    balanceAmount: Decimal | null
    currency: string | null
    invoiceDate: Date | null
    dueDate: Date | null
    paidDate: Date | null
    status: $Enums.InvoiceStatus | null
    paymentMethod: string | null
    paymentReference: string | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CustomerInvoiceCountAggregateOutputType = {
    id: number
    invoiceNumber: number
    customerId: number
    orderId: number
    subtotal: number
    taxAmount: number
    totalAmount: number
    paidAmount: number
    balanceAmount: number
    currency: number
    invoiceDate: number
    dueDate: number
    paidDate: number
    status: number
    paymentMethod: number
    paymentReference: number
    notes: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CustomerInvoiceAvgAggregateInputType = {
    subtotal?: true
    taxAmount?: true
    totalAmount?: true
    paidAmount?: true
    balanceAmount?: true
  }

  export type CustomerInvoiceSumAggregateInputType = {
    subtotal?: true
    taxAmount?: true
    totalAmount?: true
    paidAmount?: true
    balanceAmount?: true
  }

  export type CustomerInvoiceMinAggregateInputType = {
    id?: true
    invoiceNumber?: true
    customerId?: true
    orderId?: true
    subtotal?: true
    taxAmount?: true
    totalAmount?: true
    paidAmount?: true
    balanceAmount?: true
    currency?: true
    invoiceDate?: true
    dueDate?: true
    paidDate?: true
    status?: true
    paymentMethod?: true
    paymentReference?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CustomerInvoiceMaxAggregateInputType = {
    id?: true
    invoiceNumber?: true
    customerId?: true
    orderId?: true
    subtotal?: true
    taxAmount?: true
    totalAmount?: true
    paidAmount?: true
    balanceAmount?: true
    currency?: true
    invoiceDate?: true
    dueDate?: true
    paidDate?: true
    status?: true
    paymentMethod?: true
    paymentReference?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CustomerInvoiceCountAggregateInputType = {
    id?: true
    invoiceNumber?: true
    customerId?: true
    orderId?: true
    subtotal?: true
    taxAmount?: true
    totalAmount?: true
    paidAmount?: true
    balanceAmount?: true
    currency?: true
    invoiceDate?: true
    dueDate?: true
    paidDate?: true
    status?: true
    paymentMethod?: true
    paymentReference?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CustomerInvoiceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CustomerInvoice to aggregate.
     */
    where?: CustomerInvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomerInvoices to fetch.
     */
    orderBy?: CustomerInvoiceOrderByWithRelationInput | CustomerInvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CustomerInvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomerInvoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomerInvoices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CustomerInvoices
    **/
    _count?: true | CustomerInvoiceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CustomerInvoiceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CustomerInvoiceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CustomerInvoiceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CustomerInvoiceMaxAggregateInputType
  }

  export type GetCustomerInvoiceAggregateType<T extends CustomerInvoiceAggregateArgs> = {
        [P in keyof T & keyof AggregateCustomerInvoice]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCustomerInvoice[P]>
      : GetScalarType<T[P], AggregateCustomerInvoice[P]>
  }




  export type CustomerInvoiceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CustomerInvoiceWhereInput
    orderBy?: CustomerInvoiceOrderByWithAggregationInput | CustomerInvoiceOrderByWithAggregationInput[]
    by: CustomerInvoiceScalarFieldEnum[] | CustomerInvoiceScalarFieldEnum
    having?: CustomerInvoiceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CustomerInvoiceCountAggregateInputType | true
    _avg?: CustomerInvoiceAvgAggregateInputType
    _sum?: CustomerInvoiceSumAggregateInputType
    _min?: CustomerInvoiceMinAggregateInputType
    _max?: CustomerInvoiceMaxAggregateInputType
  }

  export type CustomerInvoiceGroupByOutputType = {
    id: string
    invoiceNumber: string
    customerId: string
    orderId: string | null
    subtotal: Decimal
    taxAmount: Decimal
    totalAmount: Decimal
    paidAmount: Decimal
    balanceAmount: Decimal
    currency: string
    invoiceDate: Date
    dueDate: Date
    paidDate: Date | null
    status: $Enums.InvoiceStatus
    paymentMethod: string | null
    paymentReference: string | null
    notes: string | null
    createdAt: Date
    updatedAt: Date
    _count: CustomerInvoiceCountAggregateOutputType | null
    _avg: CustomerInvoiceAvgAggregateOutputType | null
    _sum: CustomerInvoiceSumAggregateOutputType | null
    _min: CustomerInvoiceMinAggregateOutputType | null
    _max: CustomerInvoiceMaxAggregateOutputType | null
  }

  type GetCustomerInvoiceGroupByPayload<T extends CustomerInvoiceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CustomerInvoiceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CustomerInvoiceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CustomerInvoiceGroupByOutputType[P]>
            : GetScalarType<T[P], CustomerInvoiceGroupByOutputType[P]>
        }
      >
    >


  export type CustomerInvoiceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    invoiceNumber?: boolean
    customerId?: boolean
    orderId?: boolean
    subtotal?: boolean
    taxAmount?: boolean
    totalAmount?: boolean
    paidAmount?: boolean
    balanceAmount?: boolean
    currency?: boolean
    invoiceDate?: boolean
    dueDate?: boolean
    paidDate?: boolean
    status?: boolean
    paymentMethod?: boolean
    paymentReference?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    customer?: boolean | CustomerDefaultArgs<ExtArgs>
    order?: boolean | CustomerInvoice$orderArgs<ExtArgs>
  }, ExtArgs["result"]["customerInvoice"]>

  export type CustomerInvoiceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    invoiceNumber?: boolean
    customerId?: boolean
    orderId?: boolean
    subtotal?: boolean
    taxAmount?: boolean
    totalAmount?: boolean
    paidAmount?: boolean
    balanceAmount?: boolean
    currency?: boolean
    invoiceDate?: boolean
    dueDate?: boolean
    paidDate?: boolean
    status?: boolean
    paymentMethod?: boolean
    paymentReference?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    customer?: boolean | CustomerDefaultArgs<ExtArgs>
    order?: boolean | CustomerInvoice$orderArgs<ExtArgs>
  }, ExtArgs["result"]["customerInvoice"]>

  export type CustomerInvoiceSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    invoiceNumber?: boolean
    customerId?: boolean
    orderId?: boolean
    subtotal?: boolean
    taxAmount?: boolean
    totalAmount?: boolean
    paidAmount?: boolean
    balanceAmount?: boolean
    currency?: boolean
    invoiceDate?: boolean
    dueDate?: boolean
    paidDate?: boolean
    status?: boolean
    paymentMethod?: boolean
    paymentReference?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    customer?: boolean | CustomerDefaultArgs<ExtArgs>
    order?: boolean | CustomerInvoice$orderArgs<ExtArgs>
  }, ExtArgs["result"]["customerInvoice"]>

  export type CustomerInvoiceSelectScalar = {
    id?: boolean
    invoiceNumber?: boolean
    customerId?: boolean
    orderId?: boolean
    subtotal?: boolean
    taxAmount?: boolean
    totalAmount?: boolean
    paidAmount?: boolean
    balanceAmount?: boolean
    currency?: boolean
    invoiceDate?: boolean
    dueDate?: boolean
    paidDate?: boolean
    status?: boolean
    paymentMethod?: boolean
    paymentReference?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CustomerInvoiceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "invoiceNumber" | "customerId" | "orderId" | "subtotal" | "taxAmount" | "totalAmount" | "paidAmount" | "balanceAmount" | "currency" | "invoiceDate" | "dueDate" | "paidDate" | "status" | "paymentMethod" | "paymentReference" | "notes" | "createdAt" | "updatedAt", ExtArgs["result"]["customerInvoice"]>
  export type CustomerInvoiceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer?: boolean | CustomerDefaultArgs<ExtArgs>
    order?: boolean | CustomerInvoice$orderArgs<ExtArgs>
  }
  export type CustomerInvoiceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer?: boolean | CustomerDefaultArgs<ExtArgs>
    order?: boolean | CustomerInvoice$orderArgs<ExtArgs>
  }
  export type CustomerInvoiceIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer?: boolean | CustomerDefaultArgs<ExtArgs>
    order?: boolean | CustomerInvoice$orderArgs<ExtArgs>
  }

  export type $CustomerInvoicePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CustomerInvoice"
    objects: {
      customer: Prisma.$CustomerPayload<ExtArgs>
      order: Prisma.$OrderPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      invoiceNumber: string
      customerId: string
      orderId: string | null
      subtotal: Prisma.Decimal
      taxAmount: Prisma.Decimal
      totalAmount: Prisma.Decimal
      paidAmount: Prisma.Decimal
      balanceAmount: Prisma.Decimal
      currency: string
      invoiceDate: Date
      dueDate: Date
      paidDate: Date | null
      status: $Enums.InvoiceStatus
      paymentMethod: string | null
      paymentReference: string | null
      notes: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["customerInvoice"]>
    composites: {}
  }

  type CustomerInvoiceGetPayload<S extends boolean | null | undefined | CustomerInvoiceDefaultArgs> = $Result.GetResult<Prisma.$CustomerInvoicePayload, S>

  type CustomerInvoiceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CustomerInvoiceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CustomerInvoiceCountAggregateInputType | true
    }

  export interface CustomerInvoiceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CustomerInvoice'], meta: { name: 'CustomerInvoice' } }
    /**
     * Find zero or one CustomerInvoice that matches the filter.
     * @param {CustomerInvoiceFindUniqueArgs} args - Arguments to find a CustomerInvoice
     * @example
     * // Get one CustomerInvoice
     * const customerInvoice = await prisma.customerInvoice.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CustomerInvoiceFindUniqueArgs>(args: SelectSubset<T, CustomerInvoiceFindUniqueArgs<ExtArgs>>): Prisma__CustomerInvoiceClient<$Result.GetResult<Prisma.$CustomerInvoicePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CustomerInvoice that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CustomerInvoiceFindUniqueOrThrowArgs} args - Arguments to find a CustomerInvoice
     * @example
     * // Get one CustomerInvoice
     * const customerInvoice = await prisma.customerInvoice.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CustomerInvoiceFindUniqueOrThrowArgs>(args: SelectSubset<T, CustomerInvoiceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CustomerInvoiceClient<$Result.GetResult<Prisma.$CustomerInvoicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CustomerInvoice that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerInvoiceFindFirstArgs} args - Arguments to find a CustomerInvoice
     * @example
     * // Get one CustomerInvoice
     * const customerInvoice = await prisma.customerInvoice.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CustomerInvoiceFindFirstArgs>(args?: SelectSubset<T, CustomerInvoiceFindFirstArgs<ExtArgs>>): Prisma__CustomerInvoiceClient<$Result.GetResult<Prisma.$CustomerInvoicePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CustomerInvoice that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerInvoiceFindFirstOrThrowArgs} args - Arguments to find a CustomerInvoice
     * @example
     * // Get one CustomerInvoice
     * const customerInvoice = await prisma.customerInvoice.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CustomerInvoiceFindFirstOrThrowArgs>(args?: SelectSubset<T, CustomerInvoiceFindFirstOrThrowArgs<ExtArgs>>): Prisma__CustomerInvoiceClient<$Result.GetResult<Prisma.$CustomerInvoicePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CustomerInvoices that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerInvoiceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CustomerInvoices
     * const customerInvoices = await prisma.customerInvoice.findMany()
     * 
     * // Get first 10 CustomerInvoices
     * const customerInvoices = await prisma.customerInvoice.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const customerInvoiceWithIdOnly = await prisma.customerInvoice.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CustomerInvoiceFindManyArgs>(args?: SelectSubset<T, CustomerInvoiceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerInvoicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CustomerInvoice.
     * @param {CustomerInvoiceCreateArgs} args - Arguments to create a CustomerInvoice.
     * @example
     * // Create one CustomerInvoice
     * const CustomerInvoice = await prisma.customerInvoice.create({
     *   data: {
     *     // ... data to create a CustomerInvoice
     *   }
     * })
     * 
     */
    create<T extends CustomerInvoiceCreateArgs>(args: SelectSubset<T, CustomerInvoiceCreateArgs<ExtArgs>>): Prisma__CustomerInvoiceClient<$Result.GetResult<Prisma.$CustomerInvoicePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CustomerInvoices.
     * @param {CustomerInvoiceCreateManyArgs} args - Arguments to create many CustomerInvoices.
     * @example
     * // Create many CustomerInvoices
     * const customerInvoice = await prisma.customerInvoice.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CustomerInvoiceCreateManyArgs>(args?: SelectSubset<T, CustomerInvoiceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CustomerInvoices and returns the data saved in the database.
     * @param {CustomerInvoiceCreateManyAndReturnArgs} args - Arguments to create many CustomerInvoices.
     * @example
     * // Create many CustomerInvoices
     * const customerInvoice = await prisma.customerInvoice.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CustomerInvoices and only return the `id`
     * const customerInvoiceWithIdOnly = await prisma.customerInvoice.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CustomerInvoiceCreateManyAndReturnArgs>(args?: SelectSubset<T, CustomerInvoiceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerInvoicePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CustomerInvoice.
     * @param {CustomerInvoiceDeleteArgs} args - Arguments to delete one CustomerInvoice.
     * @example
     * // Delete one CustomerInvoice
     * const CustomerInvoice = await prisma.customerInvoice.delete({
     *   where: {
     *     // ... filter to delete one CustomerInvoice
     *   }
     * })
     * 
     */
    delete<T extends CustomerInvoiceDeleteArgs>(args: SelectSubset<T, CustomerInvoiceDeleteArgs<ExtArgs>>): Prisma__CustomerInvoiceClient<$Result.GetResult<Prisma.$CustomerInvoicePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CustomerInvoice.
     * @param {CustomerInvoiceUpdateArgs} args - Arguments to update one CustomerInvoice.
     * @example
     * // Update one CustomerInvoice
     * const customerInvoice = await prisma.customerInvoice.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CustomerInvoiceUpdateArgs>(args: SelectSubset<T, CustomerInvoiceUpdateArgs<ExtArgs>>): Prisma__CustomerInvoiceClient<$Result.GetResult<Prisma.$CustomerInvoicePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CustomerInvoices.
     * @param {CustomerInvoiceDeleteManyArgs} args - Arguments to filter CustomerInvoices to delete.
     * @example
     * // Delete a few CustomerInvoices
     * const { count } = await prisma.customerInvoice.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CustomerInvoiceDeleteManyArgs>(args?: SelectSubset<T, CustomerInvoiceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CustomerInvoices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerInvoiceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CustomerInvoices
     * const customerInvoice = await prisma.customerInvoice.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CustomerInvoiceUpdateManyArgs>(args: SelectSubset<T, CustomerInvoiceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CustomerInvoices and returns the data updated in the database.
     * @param {CustomerInvoiceUpdateManyAndReturnArgs} args - Arguments to update many CustomerInvoices.
     * @example
     * // Update many CustomerInvoices
     * const customerInvoice = await prisma.customerInvoice.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CustomerInvoices and only return the `id`
     * const customerInvoiceWithIdOnly = await prisma.customerInvoice.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CustomerInvoiceUpdateManyAndReturnArgs>(args: SelectSubset<T, CustomerInvoiceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerInvoicePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CustomerInvoice.
     * @param {CustomerInvoiceUpsertArgs} args - Arguments to update or create a CustomerInvoice.
     * @example
     * // Update or create a CustomerInvoice
     * const customerInvoice = await prisma.customerInvoice.upsert({
     *   create: {
     *     // ... data to create a CustomerInvoice
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CustomerInvoice we want to update
     *   }
     * })
     */
    upsert<T extends CustomerInvoiceUpsertArgs>(args: SelectSubset<T, CustomerInvoiceUpsertArgs<ExtArgs>>): Prisma__CustomerInvoiceClient<$Result.GetResult<Prisma.$CustomerInvoicePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CustomerInvoices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerInvoiceCountArgs} args - Arguments to filter CustomerInvoices to count.
     * @example
     * // Count the number of CustomerInvoices
     * const count = await prisma.customerInvoice.count({
     *   where: {
     *     // ... the filter for the CustomerInvoices we want to count
     *   }
     * })
    **/
    count<T extends CustomerInvoiceCountArgs>(
      args?: Subset<T, CustomerInvoiceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CustomerInvoiceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CustomerInvoice.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerInvoiceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CustomerInvoiceAggregateArgs>(args: Subset<T, CustomerInvoiceAggregateArgs>): Prisma.PrismaPromise<GetCustomerInvoiceAggregateType<T>>

    /**
     * Group by CustomerInvoice.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerInvoiceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CustomerInvoiceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CustomerInvoiceGroupByArgs['orderBy'] }
        : { orderBy?: CustomerInvoiceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CustomerInvoiceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCustomerInvoiceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CustomerInvoice model
   */
  readonly fields: CustomerInvoiceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CustomerInvoice.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CustomerInvoiceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    customer<T extends CustomerDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CustomerDefaultArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    order<T extends CustomerInvoice$orderArgs<ExtArgs> = {}>(args?: Subset<T, CustomerInvoice$orderArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CustomerInvoice model
   */
  interface CustomerInvoiceFieldRefs {
    readonly id: FieldRef<"CustomerInvoice", 'String'>
    readonly invoiceNumber: FieldRef<"CustomerInvoice", 'String'>
    readonly customerId: FieldRef<"CustomerInvoice", 'String'>
    readonly orderId: FieldRef<"CustomerInvoice", 'String'>
    readonly subtotal: FieldRef<"CustomerInvoice", 'Decimal'>
    readonly taxAmount: FieldRef<"CustomerInvoice", 'Decimal'>
    readonly totalAmount: FieldRef<"CustomerInvoice", 'Decimal'>
    readonly paidAmount: FieldRef<"CustomerInvoice", 'Decimal'>
    readonly balanceAmount: FieldRef<"CustomerInvoice", 'Decimal'>
    readonly currency: FieldRef<"CustomerInvoice", 'String'>
    readonly invoiceDate: FieldRef<"CustomerInvoice", 'DateTime'>
    readonly dueDate: FieldRef<"CustomerInvoice", 'DateTime'>
    readonly paidDate: FieldRef<"CustomerInvoice", 'DateTime'>
    readonly status: FieldRef<"CustomerInvoice", 'InvoiceStatus'>
    readonly paymentMethod: FieldRef<"CustomerInvoice", 'String'>
    readonly paymentReference: FieldRef<"CustomerInvoice", 'String'>
    readonly notes: FieldRef<"CustomerInvoice", 'String'>
    readonly createdAt: FieldRef<"CustomerInvoice", 'DateTime'>
    readonly updatedAt: FieldRef<"CustomerInvoice", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CustomerInvoice findUnique
   */
  export type CustomerInvoiceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerInvoice
     */
    select?: CustomerInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerInvoice
     */
    omit?: CustomerInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInvoiceInclude<ExtArgs> | null
    /**
     * Filter, which CustomerInvoice to fetch.
     */
    where: CustomerInvoiceWhereUniqueInput
  }

  /**
   * CustomerInvoice findUniqueOrThrow
   */
  export type CustomerInvoiceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerInvoice
     */
    select?: CustomerInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerInvoice
     */
    omit?: CustomerInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInvoiceInclude<ExtArgs> | null
    /**
     * Filter, which CustomerInvoice to fetch.
     */
    where: CustomerInvoiceWhereUniqueInput
  }

  /**
   * CustomerInvoice findFirst
   */
  export type CustomerInvoiceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerInvoice
     */
    select?: CustomerInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerInvoice
     */
    omit?: CustomerInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInvoiceInclude<ExtArgs> | null
    /**
     * Filter, which CustomerInvoice to fetch.
     */
    where?: CustomerInvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomerInvoices to fetch.
     */
    orderBy?: CustomerInvoiceOrderByWithRelationInput | CustomerInvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CustomerInvoices.
     */
    cursor?: CustomerInvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomerInvoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomerInvoices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CustomerInvoices.
     */
    distinct?: CustomerInvoiceScalarFieldEnum | CustomerInvoiceScalarFieldEnum[]
  }

  /**
   * CustomerInvoice findFirstOrThrow
   */
  export type CustomerInvoiceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerInvoice
     */
    select?: CustomerInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerInvoice
     */
    omit?: CustomerInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInvoiceInclude<ExtArgs> | null
    /**
     * Filter, which CustomerInvoice to fetch.
     */
    where?: CustomerInvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomerInvoices to fetch.
     */
    orderBy?: CustomerInvoiceOrderByWithRelationInput | CustomerInvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CustomerInvoices.
     */
    cursor?: CustomerInvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomerInvoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomerInvoices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CustomerInvoices.
     */
    distinct?: CustomerInvoiceScalarFieldEnum | CustomerInvoiceScalarFieldEnum[]
  }

  /**
   * CustomerInvoice findMany
   */
  export type CustomerInvoiceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerInvoice
     */
    select?: CustomerInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerInvoice
     */
    omit?: CustomerInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInvoiceInclude<ExtArgs> | null
    /**
     * Filter, which CustomerInvoices to fetch.
     */
    where?: CustomerInvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomerInvoices to fetch.
     */
    orderBy?: CustomerInvoiceOrderByWithRelationInput | CustomerInvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CustomerInvoices.
     */
    cursor?: CustomerInvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomerInvoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomerInvoices.
     */
    skip?: number
    distinct?: CustomerInvoiceScalarFieldEnum | CustomerInvoiceScalarFieldEnum[]
  }

  /**
   * CustomerInvoice create
   */
  export type CustomerInvoiceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerInvoice
     */
    select?: CustomerInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerInvoice
     */
    omit?: CustomerInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInvoiceInclude<ExtArgs> | null
    /**
     * The data needed to create a CustomerInvoice.
     */
    data: XOR<CustomerInvoiceCreateInput, CustomerInvoiceUncheckedCreateInput>
  }

  /**
   * CustomerInvoice createMany
   */
  export type CustomerInvoiceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CustomerInvoices.
     */
    data: CustomerInvoiceCreateManyInput | CustomerInvoiceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CustomerInvoice createManyAndReturn
   */
  export type CustomerInvoiceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerInvoice
     */
    select?: CustomerInvoiceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerInvoice
     */
    omit?: CustomerInvoiceOmit<ExtArgs> | null
    /**
     * The data used to create many CustomerInvoices.
     */
    data: CustomerInvoiceCreateManyInput | CustomerInvoiceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInvoiceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CustomerInvoice update
   */
  export type CustomerInvoiceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerInvoice
     */
    select?: CustomerInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerInvoice
     */
    omit?: CustomerInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInvoiceInclude<ExtArgs> | null
    /**
     * The data needed to update a CustomerInvoice.
     */
    data: XOR<CustomerInvoiceUpdateInput, CustomerInvoiceUncheckedUpdateInput>
    /**
     * Choose, which CustomerInvoice to update.
     */
    where: CustomerInvoiceWhereUniqueInput
  }

  /**
   * CustomerInvoice updateMany
   */
  export type CustomerInvoiceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CustomerInvoices.
     */
    data: XOR<CustomerInvoiceUpdateManyMutationInput, CustomerInvoiceUncheckedUpdateManyInput>
    /**
     * Filter which CustomerInvoices to update
     */
    where?: CustomerInvoiceWhereInput
    /**
     * Limit how many CustomerInvoices to update.
     */
    limit?: number
  }

  /**
   * CustomerInvoice updateManyAndReturn
   */
  export type CustomerInvoiceUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerInvoice
     */
    select?: CustomerInvoiceSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerInvoice
     */
    omit?: CustomerInvoiceOmit<ExtArgs> | null
    /**
     * The data used to update CustomerInvoices.
     */
    data: XOR<CustomerInvoiceUpdateManyMutationInput, CustomerInvoiceUncheckedUpdateManyInput>
    /**
     * Filter which CustomerInvoices to update
     */
    where?: CustomerInvoiceWhereInput
    /**
     * Limit how many CustomerInvoices to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInvoiceIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CustomerInvoice upsert
   */
  export type CustomerInvoiceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerInvoice
     */
    select?: CustomerInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerInvoice
     */
    omit?: CustomerInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInvoiceInclude<ExtArgs> | null
    /**
     * The filter to search for the CustomerInvoice to update in case it exists.
     */
    where: CustomerInvoiceWhereUniqueInput
    /**
     * In case the CustomerInvoice found by the `where` argument doesn't exist, create a new CustomerInvoice with this data.
     */
    create: XOR<CustomerInvoiceCreateInput, CustomerInvoiceUncheckedCreateInput>
    /**
     * In case the CustomerInvoice was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CustomerInvoiceUpdateInput, CustomerInvoiceUncheckedUpdateInput>
  }

  /**
   * CustomerInvoice delete
   */
  export type CustomerInvoiceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerInvoice
     */
    select?: CustomerInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerInvoice
     */
    omit?: CustomerInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInvoiceInclude<ExtArgs> | null
    /**
     * Filter which CustomerInvoice to delete.
     */
    where: CustomerInvoiceWhereUniqueInput
  }

  /**
   * CustomerInvoice deleteMany
   */
  export type CustomerInvoiceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CustomerInvoices to delete
     */
    where?: CustomerInvoiceWhereInput
    /**
     * Limit how many CustomerInvoices to delete.
     */
    limit?: number
  }

  /**
   * CustomerInvoice.order
   */
  export type CustomerInvoice$orderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
  }

  /**
   * CustomerInvoice without action
   */
  export type CustomerInvoiceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerInvoice
     */
    select?: CustomerInvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerInvoice
     */
    omit?: CustomerInvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInvoiceInclude<ExtArgs> | null
  }


  /**
   * Model InventoryAudit
   */

  export type AggregateInventoryAudit = {
    _count: InventoryAuditCountAggregateOutputType | null
    _avg: InventoryAuditAvgAggregateOutputType | null
    _sum: InventoryAuditSumAggregateOutputType | null
    _min: InventoryAuditMinAggregateOutputType | null
    _max: InventoryAuditMaxAggregateOutputType | null
  }

  export type InventoryAuditAvgAggregateOutputType = {
    totalItems: number | null
    itemsCounted: number | null
    discrepancies: number | null
    adjustmentValue: Decimal | null
  }

  export type InventoryAuditSumAggregateOutputType = {
    totalItems: number | null
    itemsCounted: number | null
    discrepancies: number | null
    adjustmentValue: Decimal | null
  }

  export type InventoryAuditMinAggregateOutputType = {
    id: string | null
    auditNumber: string | null
    warehouseId: string | null
    productId: string | null
    type: $Enums.AuditType | null
    method: $Enums.AuditMethod | null
    status: $Enums.AuditStatus | null
    plannedDate: Date | null
    startedDate: Date | null
    completedDate: Date | null
    auditedBy: string | null
    supervisedBy: string | null
    totalItems: number | null
    itemsCounted: number | null
    discrepancies: number | null
    adjustmentValue: Decimal | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type InventoryAuditMaxAggregateOutputType = {
    id: string | null
    auditNumber: string | null
    warehouseId: string | null
    productId: string | null
    type: $Enums.AuditType | null
    method: $Enums.AuditMethod | null
    status: $Enums.AuditStatus | null
    plannedDate: Date | null
    startedDate: Date | null
    completedDate: Date | null
    auditedBy: string | null
    supervisedBy: string | null
    totalItems: number | null
    itemsCounted: number | null
    discrepancies: number | null
    adjustmentValue: Decimal | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type InventoryAuditCountAggregateOutputType = {
    id: number
    auditNumber: number
    warehouseId: number
    productId: number
    type: number
    method: number
    status: number
    plannedDate: number
    startedDate: number
    completedDate: number
    auditedBy: number
    supervisedBy: number
    totalItems: number
    itemsCounted: number
    discrepancies: number
    adjustmentValue: number
    notes: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type InventoryAuditAvgAggregateInputType = {
    totalItems?: true
    itemsCounted?: true
    discrepancies?: true
    adjustmentValue?: true
  }

  export type InventoryAuditSumAggregateInputType = {
    totalItems?: true
    itemsCounted?: true
    discrepancies?: true
    adjustmentValue?: true
  }

  export type InventoryAuditMinAggregateInputType = {
    id?: true
    auditNumber?: true
    warehouseId?: true
    productId?: true
    type?: true
    method?: true
    status?: true
    plannedDate?: true
    startedDate?: true
    completedDate?: true
    auditedBy?: true
    supervisedBy?: true
    totalItems?: true
    itemsCounted?: true
    discrepancies?: true
    adjustmentValue?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type InventoryAuditMaxAggregateInputType = {
    id?: true
    auditNumber?: true
    warehouseId?: true
    productId?: true
    type?: true
    method?: true
    status?: true
    plannedDate?: true
    startedDate?: true
    completedDate?: true
    auditedBy?: true
    supervisedBy?: true
    totalItems?: true
    itemsCounted?: true
    discrepancies?: true
    adjustmentValue?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type InventoryAuditCountAggregateInputType = {
    id?: true
    auditNumber?: true
    warehouseId?: true
    productId?: true
    type?: true
    method?: true
    status?: true
    plannedDate?: true
    startedDate?: true
    completedDate?: true
    auditedBy?: true
    supervisedBy?: true
    totalItems?: true
    itemsCounted?: true
    discrepancies?: true
    adjustmentValue?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type InventoryAuditAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InventoryAudit to aggregate.
     */
    where?: InventoryAuditWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InventoryAudits to fetch.
     */
    orderBy?: InventoryAuditOrderByWithRelationInput | InventoryAuditOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InventoryAuditWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InventoryAudits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InventoryAudits.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned InventoryAudits
    **/
    _count?: true | InventoryAuditCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InventoryAuditAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InventoryAuditSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InventoryAuditMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InventoryAuditMaxAggregateInputType
  }

  export type GetInventoryAuditAggregateType<T extends InventoryAuditAggregateArgs> = {
        [P in keyof T & keyof AggregateInventoryAudit]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInventoryAudit[P]>
      : GetScalarType<T[P], AggregateInventoryAudit[P]>
  }




  export type InventoryAuditGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventoryAuditWhereInput
    orderBy?: InventoryAuditOrderByWithAggregationInput | InventoryAuditOrderByWithAggregationInput[]
    by: InventoryAuditScalarFieldEnum[] | InventoryAuditScalarFieldEnum
    having?: InventoryAuditScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InventoryAuditCountAggregateInputType | true
    _avg?: InventoryAuditAvgAggregateInputType
    _sum?: InventoryAuditSumAggregateInputType
    _min?: InventoryAuditMinAggregateInputType
    _max?: InventoryAuditMaxAggregateInputType
  }

  export type InventoryAuditGroupByOutputType = {
    id: string
    auditNumber: string
    warehouseId: string | null
    productId: string | null
    type: $Enums.AuditType
    method: $Enums.AuditMethod
    status: $Enums.AuditStatus
    plannedDate: Date
    startedDate: Date | null
    completedDate: Date | null
    auditedBy: string
    supervisedBy: string | null
    totalItems: number | null
    itemsCounted: number | null
    discrepancies: number | null
    adjustmentValue: Decimal | null
    notes: string | null
    createdAt: Date
    updatedAt: Date
    _count: InventoryAuditCountAggregateOutputType | null
    _avg: InventoryAuditAvgAggregateOutputType | null
    _sum: InventoryAuditSumAggregateOutputType | null
    _min: InventoryAuditMinAggregateOutputType | null
    _max: InventoryAuditMaxAggregateOutputType | null
  }

  type GetInventoryAuditGroupByPayload<T extends InventoryAuditGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InventoryAuditGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InventoryAuditGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InventoryAuditGroupByOutputType[P]>
            : GetScalarType<T[P], InventoryAuditGroupByOutputType[P]>
        }
      >
    >


  export type InventoryAuditSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    auditNumber?: boolean
    warehouseId?: boolean
    productId?: boolean
    type?: boolean
    method?: boolean
    status?: boolean
    plannedDate?: boolean
    startedDate?: boolean
    completedDate?: boolean
    auditedBy?: boolean
    supervisedBy?: boolean
    totalItems?: boolean
    itemsCounted?: boolean
    discrepancies?: boolean
    adjustmentValue?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    warehouse?: boolean | InventoryAudit$warehouseArgs<ExtArgs>
    product?: boolean | InventoryAudit$productArgs<ExtArgs>
    items?: boolean | InventoryAudit$itemsArgs<ExtArgs>
    _count?: boolean | InventoryAuditCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inventoryAudit"]>

  export type InventoryAuditSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    auditNumber?: boolean
    warehouseId?: boolean
    productId?: boolean
    type?: boolean
    method?: boolean
    status?: boolean
    plannedDate?: boolean
    startedDate?: boolean
    completedDate?: boolean
    auditedBy?: boolean
    supervisedBy?: boolean
    totalItems?: boolean
    itemsCounted?: boolean
    discrepancies?: boolean
    adjustmentValue?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    warehouse?: boolean | InventoryAudit$warehouseArgs<ExtArgs>
    product?: boolean | InventoryAudit$productArgs<ExtArgs>
  }, ExtArgs["result"]["inventoryAudit"]>

  export type InventoryAuditSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    auditNumber?: boolean
    warehouseId?: boolean
    productId?: boolean
    type?: boolean
    method?: boolean
    status?: boolean
    plannedDate?: boolean
    startedDate?: boolean
    completedDate?: boolean
    auditedBy?: boolean
    supervisedBy?: boolean
    totalItems?: boolean
    itemsCounted?: boolean
    discrepancies?: boolean
    adjustmentValue?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    warehouse?: boolean | InventoryAudit$warehouseArgs<ExtArgs>
    product?: boolean | InventoryAudit$productArgs<ExtArgs>
  }, ExtArgs["result"]["inventoryAudit"]>

  export type InventoryAuditSelectScalar = {
    id?: boolean
    auditNumber?: boolean
    warehouseId?: boolean
    productId?: boolean
    type?: boolean
    method?: boolean
    status?: boolean
    plannedDate?: boolean
    startedDate?: boolean
    completedDate?: boolean
    auditedBy?: boolean
    supervisedBy?: boolean
    totalItems?: boolean
    itemsCounted?: boolean
    discrepancies?: boolean
    adjustmentValue?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type InventoryAuditOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "auditNumber" | "warehouseId" | "productId" | "type" | "method" | "status" | "plannedDate" | "startedDate" | "completedDate" | "auditedBy" | "supervisedBy" | "totalItems" | "itemsCounted" | "discrepancies" | "adjustmentValue" | "notes" | "createdAt" | "updatedAt", ExtArgs["result"]["inventoryAudit"]>
  export type InventoryAuditInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    warehouse?: boolean | InventoryAudit$warehouseArgs<ExtArgs>
    product?: boolean | InventoryAudit$productArgs<ExtArgs>
    items?: boolean | InventoryAudit$itemsArgs<ExtArgs>
    _count?: boolean | InventoryAuditCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type InventoryAuditIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    warehouse?: boolean | InventoryAudit$warehouseArgs<ExtArgs>
    product?: boolean | InventoryAudit$productArgs<ExtArgs>
  }
  export type InventoryAuditIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    warehouse?: boolean | InventoryAudit$warehouseArgs<ExtArgs>
    product?: boolean | InventoryAudit$productArgs<ExtArgs>
  }

  export type $InventoryAuditPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "InventoryAudit"
    objects: {
      warehouse: Prisma.$WarehousePayload<ExtArgs> | null
      product: Prisma.$ProductPayload<ExtArgs> | null
      items: Prisma.$InventoryAuditItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      auditNumber: string
      warehouseId: string | null
      productId: string | null
      type: $Enums.AuditType
      method: $Enums.AuditMethod
      status: $Enums.AuditStatus
      plannedDate: Date
      startedDate: Date | null
      completedDate: Date | null
      auditedBy: string
      supervisedBy: string | null
      totalItems: number | null
      itemsCounted: number | null
      discrepancies: number | null
      adjustmentValue: Prisma.Decimal | null
      notes: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["inventoryAudit"]>
    composites: {}
  }

  type InventoryAuditGetPayload<S extends boolean | null | undefined | InventoryAuditDefaultArgs> = $Result.GetResult<Prisma.$InventoryAuditPayload, S>

  type InventoryAuditCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<InventoryAuditFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InventoryAuditCountAggregateInputType | true
    }

  export interface InventoryAuditDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['InventoryAudit'], meta: { name: 'InventoryAudit' } }
    /**
     * Find zero or one InventoryAudit that matches the filter.
     * @param {InventoryAuditFindUniqueArgs} args - Arguments to find a InventoryAudit
     * @example
     * // Get one InventoryAudit
     * const inventoryAudit = await prisma.inventoryAudit.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InventoryAuditFindUniqueArgs>(args: SelectSubset<T, InventoryAuditFindUniqueArgs<ExtArgs>>): Prisma__InventoryAuditClient<$Result.GetResult<Prisma.$InventoryAuditPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one InventoryAudit that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {InventoryAuditFindUniqueOrThrowArgs} args - Arguments to find a InventoryAudit
     * @example
     * // Get one InventoryAudit
     * const inventoryAudit = await prisma.inventoryAudit.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InventoryAuditFindUniqueOrThrowArgs>(args: SelectSubset<T, InventoryAuditFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InventoryAuditClient<$Result.GetResult<Prisma.$InventoryAuditPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InventoryAudit that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryAuditFindFirstArgs} args - Arguments to find a InventoryAudit
     * @example
     * // Get one InventoryAudit
     * const inventoryAudit = await prisma.inventoryAudit.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InventoryAuditFindFirstArgs>(args?: SelectSubset<T, InventoryAuditFindFirstArgs<ExtArgs>>): Prisma__InventoryAuditClient<$Result.GetResult<Prisma.$InventoryAuditPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InventoryAudit that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryAuditFindFirstOrThrowArgs} args - Arguments to find a InventoryAudit
     * @example
     * // Get one InventoryAudit
     * const inventoryAudit = await prisma.inventoryAudit.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InventoryAuditFindFirstOrThrowArgs>(args?: SelectSubset<T, InventoryAuditFindFirstOrThrowArgs<ExtArgs>>): Prisma__InventoryAuditClient<$Result.GetResult<Prisma.$InventoryAuditPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more InventoryAudits that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryAuditFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all InventoryAudits
     * const inventoryAudits = await prisma.inventoryAudit.findMany()
     * 
     * // Get first 10 InventoryAudits
     * const inventoryAudits = await prisma.inventoryAudit.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const inventoryAuditWithIdOnly = await prisma.inventoryAudit.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends InventoryAuditFindManyArgs>(args?: SelectSubset<T, InventoryAuditFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryAuditPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a InventoryAudit.
     * @param {InventoryAuditCreateArgs} args - Arguments to create a InventoryAudit.
     * @example
     * // Create one InventoryAudit
     * const InventoryAudit = await prisma.inventoryAudit.create({
     *   data: {
     *     // ... data to create a InventoryAudit
     *   }
     * })
     * 
     */
    create<T extends InventoryAuditCreateArgs>(args: SelectSubset<T, InventoryAuditCreateArgs<ExtArgs>>): Prisma__InventoryAuditClient<$Result.GetResult<Prisma.$InventoryAuditPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many InventoryAudits.
     * @param {InventoryAuditCreateManyArgs} args - Arguments to create many InventoryAudits.
     * @example
     * // Create many InventoryAudits
     * const inventoryAudit = await prisma.inventoryAudit.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InventoryAuditCreateManyArgs>(args?: SelectSubset<T, InventoryAuditCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many InventoryAudits and returns the data saved in the database.
     * @param {InventoryAuditCreateManyAndReturnArgs} args - Arguments to create many InventoryAudits.
     * @example
     * // Create many InventoryAudits
     * const inventoryAudit = await prisma.inventoryAudit.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many InventoryAudits and only return the `id`
     * const inventoryAuditWithIdOnly = await prisma.inventoryAudit.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InventoryAuditCreateManyAndReturnArgs>(args?: SelectSubset<T, InventoryAuditCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryAuditPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a InventoryAudit.
     * @param {InventoryAuditDeleteArgs} args - Arguments to delete one InventoryAudit.
     * @example
     * // Delete one InventoryAudit
     * const InventoryAudit = await prisma.inventoryAudit.delete({
     *   where: {
     *     // ... filter to delete one InventoryAudit
     *   }
     * })
     * 
     */
    delete<T extends InventoryAuditDeleteArgs>(args: SelectSubset<T, InventoryAuditDeleteArgs<ExtArgs>>): Prisma__InventoryAuditClient<$Result.GetResult<Prisma.$InventoryAuditPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one InventoryAudit.
     * @param {InventoryAuditUpdateArgs} args - Arguments to update one InventoryAudit.
     * @example
     * // Update one InventoryAudit
     * const inventoryAudit = await prisma.inventoryAudit.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InventoryAuditUpdateArgs>(args: SelectSubset<T, InventoryAuditUpdateArgs<ExtArgs>>): Prisma__InventoryAuditClient<$Result.GetResult<Prisma.$InventoryAuditPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more InventoryAudits.
     * @param {InventoryAuditDeleteManyArgs} args - Arguments to filter InventoryAudits to delete.
     * @example
     * // Delete a few InventoryAudits
     * const { count } = await prisma.inventoryAudit.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InventoryAuditDeleteManyArgs>(args?: SelectSubset<T, InventoryAuditDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InventoryAudits.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryAuditUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many InventoryAudits
     * const inventoryAudit = await prisma.inventoryAudit.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InventoryAuditUpdateManyArgs>(args: SelectSubset<T, InventoryAuditUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InventoryAudits and returns the data updated in the database.
     * @param {InventoryAuditUpdateManyAndReturnArgs} args - Arguments to update many InventoryAudits.
     * @example
     * // Update many InventoryAudits
     * const inventoryAudit = await prisma.inventoryAudit.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more InventoryAudits and only return the `id`
     * const inventoryAuditWithIdOnly = await prisma.inventoryAudit.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends InventoryAuditUpdateManyAndReturnArgs>(args: SelectSubset<T, InventoryAuditUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryAuditPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one InventoryAudit.
     * @param {InventoryAuditUpsertArgs} args - Arguments to update or create a InventoryAudit.
     * @example
     * // Update or create a InventoryAudit
     * const inventoryAudit = await prisma.inventoryAudit.upsert({
     *   create: {
     *     // ... data to create a InventoryAudit
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the InventoryAudit we want to update
     *   }
     * })
     */
    upsert<T extends InventoryAuditUpsertArgs>(args: SelectSubset<T, InventoryAuditUpsertArgs<ExtArgs>>): Prisma__InventoryAuditClient<$Result.GetResult<Prisma.$InventoryAuditPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of InventoryAudits.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryAuditCountArgs} args - Arguments to filter InventoryAudits to count.
     * @example
     * // Count the number of InventoryAudits
     * const count = await prisma.inventoryAudit.count({
     *   where: {
     *     // ... the filter for the InventoryAudits we want to count
     *   }
     * })
    **/
    count<T extends InventoryAuditCountArgs>(
      args?: Subset<T, InventoryAuditCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InventoryAuditCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a InventoryAudit.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryAuditAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InventoryAuditAggregateArgs>(args: Subset<T, InventoryAuditAggregateArgs>): Prisma.PrismaPromise<GetInventoryAuditAggregateType<T>>

    /**
     * Group by InventoryAudit.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryAuditGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InventoryAuditGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InventoryAuditGroupByArgs['orderBy'] }
        : { orderBy?: InventoryAuditGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InventoryAuditGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInventoryAuditGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the InventoryAudit model
   */
  readonly fields: InventoryAuditFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for InventoryAudit.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InventoryAuditClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    warehouse<T extends InventoryAudit$warehouseArgs<ExtArgs> = {}>(args?: Subset<T, InventoryAudit$warehouseArgs<ExtArgs>>): Prisma__WarehouseClient<$Result.GetResult<Prisma.$WarehousePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    product<T extends InventoryAudit$productArgs<ExtArgs> = {}>(args?: Subset<T, InventoryAudit$productArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    items<T extends InventoryAudit$itemsArgs<ExtArgs> = {}>(args?: Subset<T, InventoryAudit$itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryAuditItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the InventoryAudit model
   */
  interface InventoryAuditFieldRefs {
    readonly id: FieldRef<"InventoryAudit", 'String'>
    readonly auditNumber: FieldRef<"InventoryAudit", 'String'>
    readonly warehouseId: FieldRef<"InventoryAudit", 'String'>
    readonly productId: FieldRef<"InventoryAudit", 'String'>
    readonly type: FieldRef<"InventoryAudit", 'AuditType'>
    readonly method: FieldRef<"InventoryAudit", 'AuditMethod'>
    readonly status: FieldRef<"InventoryAudit", 'AuditStatus'>
    readonly plannedDate: FieldRef<"InventoryAudit", 'DateTime'>
    readonly startedDate: FieldRef<"InventoryAudit", 'DateTime'>
    readonly completedDate: FieldRef<"InventoryAudit", 'DateTime'>
    readonly auditedBy: FieldRef<"InventoryAudit", 'String'>
    readonly supervisedBy: FieldRef<"InventoryAudit", 'String'>
    readonly totalItems: FieldRef<"InventoryAudit", 'Int'>
    readonly itemsCounted: FieldRef<"InventoryAudit", 'Int'>
    readonly discrepancies: FieldRef<"InventoryAudit", 'Int'>
    readonly adjustmentValue: FieldRef<"InventoryAudit", 'Decimal'>
    readonly notes: FieldRef<"InventoryAudit", 'String'>
    readonly createdAt: FieldRef<"InventoryAudit", 'DateTime'>
    readonly updatedAt: FieldRef<"InventoryAudit", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * InventoryAudit findUnique
   */
  export type InventoryAuditFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAudit
     */
    select?: InventoryAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAudit
     */
    omit?: InventoryAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAuditInclude<ExtArgs> | null
    /**
     * Filter, which InventoryAudit to fetch.
     */
    where: InventoryAuditWhereUniqueInput
  }

  /**
   * InventoryAudit findUniqueOrThrow
   */
  export type InventoryAuditFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAudit
     */
    select?: InventoryAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAudit
     */
    omit?: InventoryAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAuditInclude<ExtArgs> | null
    /**
     * Filter, which InventoryAudit to fetch.
     */
    where: InventoryAuditWhereUniqueInput
  }

  /**
   * InventoryAudit findFirst
   */
  export type InventoryAuditFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAudit
     */
    select?: InventoryAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAudit
     */
    omit?: InventoryAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAuditInclude<ExtArgs> | null
    /**
     * Filter, which InventoryAudit to fetch.
     */
    where?: InventoryAuditWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InventoryAudits to fetch.
     */
    orderBy?: InventoryAuditOrderByWithRelationInput | InventoryAuditOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InventoryAudits.
     */
    cursor?: InventoryAuditWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InventoryAudits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InventoryAudits.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InventoryAudits.
     */
    distinct?: InventoryAuditScalarFieldEnum | InventoryAuditScalarFieldEnum[]
  }

  /**
   * InventoryAudit findFirstOrThrow
   */
  export type InventoryAuditFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAudit
     */
    select?: InventoryAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAudit
     */
    omit?: InventoryAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAuditInclude<ExtArgs> | null
    /**
     * Filter, which InventoryAudit to fetch.
     */
    where?: InventoryAuditWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InventoryAudits to fetch.
     */
    orderBy?: InventoryAuditOrderByWithRelationInput | InventoryAuditOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InventoryAudits.
     */
    cursor?: InventoryAuditWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InventoryAudits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InventoryAudits.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InventoryAudits.
     */
    distinct?: InventoryAuditScalarFieldEnum | InventoryAuditScalarFieldEnum[]
  }

  /**
   * InventoryAudit findMany
   */
  export type InventoryAuditFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAudit
     */
    select?: InventoryAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAudit
     */
    omit?: InventoryAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAuditInclude<ExtArgs> | null
    /**
     * Filter, which InventoryAudits to fetch.
     */
    where?: InventoryAuditWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InventoryAudits to fetch.
     */
    orderBy?: InventoryAuditOrderByWithRelationInput | InventoryAuditOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing InventoryAudits.
     */
    cursor?: InventoryAuditWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InventoryAudits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InventoryAudits.
     */
    skip?: number
    distinct?: InventoryAuditScalarFieldEnum | InventoryAuditScalarFieldEnum[]
  }

  /**
   * InventoryAudit create
   */
  export type InventoryAuditCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAudit
     */
    select?: InventoryAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAudit
     */
    omit?: InventoryAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAuditInclude<ExtArgs> | null
    /**
     * The data needed to create a InventoryAudit.
     */
    data: XOR<InventoryAuditCreateInput, InventoryAuditUncheckedCreateInput>
  }

  /**
   * InventoryAudit createMany
   */
  export type InventoryAuditCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many InventoryAudits.
     */
    data: InventoryAuditCreateManyInput | InventoryAuditCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * InventoryAudit createManyAndReturn
   */
  export type InventoryAuditCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAudit
     */
    select?: InventoryAuditSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAudit
     */
    omit?: InventoryAuditOmit<ExtArgs> | null
    /**
     * The data used to create many InventoryAudits.
     */
    data: InventoryAuditCreateManyInput | InventoryAuditCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAuditIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * InventoryAudit update
   */
  export type InventoryAuditUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAudit
     */
    select?: InventoryAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAudit
     */
    omit?: InventoryAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAuditInclude<ExtArgs> | null
    /**
     * The data needed to update a InventoryAudit.
     */
    data: XOR<InventoryAuditUpdateInput, InventoryAuditUncheckedUpdateInput>
    /**
     * Choose, which InventoryAudit to update.
     */
    where: InventoryAuditWhereUniqueInput
  }

  /**
   * InventoryAudit updateMany
   */
  export type InventoryAuditUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update InventoryAudits.
     */
    data: XOR<InventoryAuditUpdateManyMutationInput, InventoryAuditUncheckedUpdateManyInput>
    /**
     * Filter which InventoryAudits to update
     */
    where?: InventoryAuditWhereInput
    /**
     * Limit how many InventoryAudits to update.
     */
    limit?: number
  }

  /**
   * InventoryAudit updateManyAndReturn
   */
  export type InventoryAuditUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAudit
     */
    select?: InventoryAuditSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAudit
     */
    omit?: InventoryAuditOmit<ExtArgs> | null
    /**
     * The data used to update InventoryAudits.
     */
    data: XOR<InventoryAuditUpdateManyMutationInput, InventoryAuditUncheckedUpdateManyInput>
    /**
     * Filter which InventoryAudits to update
     */
    where?: InventoryAuditWhereInput
    /**
     * Limit how many InventoryAudits to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAuditIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * InventoryAudit upsert
   */
  export type InventoryAuditUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAudit
     */
    select?: InventoryAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAudit
     */
    omit?: InventoryAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAuditInclude<ExtArgs> | null
    /**
     * The filter to search for the InventoryAudit to update in case it exists.
     */
    where: InventoryAuditWhereUniqueInput
    /**
     * In case the InventoryAudit found by the `where` argument doesn't exist, create a new InventoryAudit with this data.
     */
    create: XOR<InventoryAuditCreateInput, InventoryAuditUncheckedCreateInput>
    /**
     * In case the InventoryAudit was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InventoryAuditUpdateInput, InventoryAuditUncheckedUpdateInput>
  }

  /**
   * InventoryAudit delete
   */
  export type InventoryAuditDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAudit
     */
    select?: InventoryAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAudit
     */
    omit?: InventoryAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAuditInclude<ExtArgs> | null
    /**
     * Filter which InventoryAudit to delete.
     */
    where: InventoryAuditWhereUniqueInput
  }

  /**
   * InventoryAudit deleteMany
   */
  export type InventoryAuditDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InventoryAudits to delete
     */
    where?: InventoryAuditWhereInput
    /**
     * Limit how many InventoryAudits to delete.
     */
    limit?: number
  }

  /**
   * InventoryAudit.warehouse
   */
  export type InventoryAudit$warehouseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Warehouse
     */
    select?: WarehouseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Warehouse
     */
    omit?: WarehouseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WarehouseInclude<ExtArgs> | null
    where?: WarehouseWhereInput
  }

  /**
   * InventoryAudit.product
   */
  export type InventoryAudit$productArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
  }

  /**
   * InventoryAudit.items
   */
  export type InventoryAudit$itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAuditItem
     */
    select?: InventoryAuditItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAuditItem
     */
    omit?: InventoryAuditItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAuditItemInclude<ExtArgs> | null
    where?: InventoryAuditItemWhereInput
    orderBy?: InventoryAuditItemOrderByWithRelationInput | InventoryAuditItemOrderByWithRelationInput[]
    cursor?: InventoryAuditItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InventoryAuditItemScalarFieldEnum | InventoryAuditItemScalarFieldEnum[]
  }

  /**
   * InventoryAudit without action
   */
  export type InventoryAuditDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAudit
     */
    select?: InventoryAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAudit
     */
    omit?: InventoryAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAuditInclude<ExtArgs> | null
  }


  /**
   * Model InventoryAuditItem
   */

  export type AggregateInventoryAuditItem = {
    _count: InventoryAuditItemCountAggregateOutputType | null
    _avg: InventoryAuditItemAvgAggregateOutputType | null
    _sum: InventoryAuditItemSumAggregateOutputType | null
    _min: InventoryAuditItemMinAggregateOutputType | null
    _max: InventoryAuditItemMaxAggregateOutputType | null
  }

  export type InventoryAuditItemAvgAggregateOutputType = {
    systemQty: number | null
    countedQty: number | null
    adjustmentQty: number | null
  }

  export type InventoryAuditItemSumAggregateOutputType = {
    systemQty: number | null
    countedQty: number | null
    adjustmentQty: number | null
  }

  export type InventoryAuditItemMinAggregateOutputType = {
    id: string | null
    auditId: string | null
    productId: string | null
    variantId: string | null
    warehouseId: string | null
    systemQty: number | null
    countedQty: number | null
    adjustmentQty: number | null
    location: string | null
    lotNumber: string | null
    batchNumber: string | null
    countedBy: string | null
    countedAt: Date | null
    verifiedBy: string | null
    verifiedAt: Date | null
    status: $Enums.AuditItemStatus | null
    discrepancyReason: string | null
    requiresInvestigation: boolean | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type InventoryAuditItemMaxAggregateOutputType = {
    id: string | null
    auditId: string | null
    productId: string | null
    variantId: string | null
    warehouseId: string | null
    systemQty: number | null
    countedQty: number | null
    adjustmentQty: number | null
    location: string | null
    lotNumber: string | null
    batchNumber: string | null
    countedBy: string | null
    countedAt: Date | null
    verifiedBy: string | null
    verifiedAt: Date | null
    status: $Enums.AuditItemStatus | null
    discrepancyReason: string | null
    requiresInvestigation: boolean | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type InventoryAuditItemCountAggregateOutputType = {
    id: number
    auditId: number
    productId: number
    variantId: number
    warehouseId: number
    systemQty: number
    countedQty: number
    adjustmentQty: number
    location: number
    lotNumber: number
    batchNumber: number
    countedBy: number
    countedAt: number
    verifiedBy: number
    verifiedAt: number
    status: number
    discrepancyReason: number
    requiresInvestigation: number
    notes: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type InventoryAuditItemAvgAggregateInputType = {
    systemQty?: true
    countedQty?: true
    adjustmentQty?: true
  }

  export type InventoryAuditItemSumAggregateInputType = {
    systemQty?: true
    countedQty?: true
    adjustmentQty?: true
  }

  export type InventoryAuditItemMinAggregateInputType = {
    id?: true
    auditId?: true
    productId?: true
    variantId?: true
    warehouseId?: true
    systemQty?: true
    countedQty?: true
    adjustmentQty?: true
    location?: true
    lotNumber?: true
    batchNumber?: true
    countedBy?: true
    countedAt?: true
    verifiedBy?: true
    verifiedAt?: true
    status?: true
    discrepancyReason?: true
    requiresInvestigation?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type InventoryAuditItemMaxAggregateInputType = {
    id?: true
    auditId?: true
    productId?: true
    variantId?: true
    warehouseId?: true
    systemQty?: true
    countedQty?: true
    adjustmentQty?: true
    location?: true
    lotNumber?: true
    batchNumber?: true
    countedBy?: true
    countedAt?: true
    verifiedBy?: true
    verifiedAt?: true
    status?: true
    discrepancyReason?: true
    requiresInvestigation?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type InventoryAuditItemCountAggregateInputType = {
    id?: true
    auditId?: true
    productId?: true
    variantId?: true
    warehouseId?: true
    systemQty?: true
    countedQty?: true
    adjustmentQty?: true
    location?: true
    lotNumber?: true
    batchNumber?: true
    countedBy?: true
    countedAt?: true
    verifiedBy?: true
    verifiedAt?: true
    status?: true
    discrepancyReason?: true
    requiresInvestigation?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type InventoryAuditItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InventoryAuditItem to aggregate.
     */
    where?: InventoryAuditItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InventoryAuditItems to fetch.
     */
    orderBy?: InventoryAuditItemOrderByWithRelationInput | InventoryAuditItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InventoryAuditItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InventoryAuditItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InventoryAuditItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned InventoryAuditItems
    **/
    _count?: true | InventoryAuditItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InventoryAuditItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InventoryAuditItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InventoryAuditItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InventoryAuditItemMaxAggregateInputType
  }

  export type GetInventoryAuditItemAggregateType<T extends InventoryAuditItemAggregateArgs> = {
        [P in keyof T & keyof AggregateInventoryAuditItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInventoryAuditItem[P]>
      : GetScalarType<T[P], AggregateInventoryAuditItem[P]>
  }




  export type InventoryAuditItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventoryAuditItemWhereInput
    orderBy?: InventoryAuditItemOrderByWithAggregationInput | InventoryAuditItemOrderByWithAggregationInput[]
    by: InventoryAuditItemScalarFieldEnum[] | InventoryAuditItemScalarFieldEnum
    having?: InventoryAuditItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InventoryAuditItemCountAggregateInputType | true
    _avg?: InventoryAuditItemAvgAggregateInputType
    _sum?: InventoryAuditItemSumAggregateInputType
    _min?: InventoryAuditItemMinAggregateInputType
    _max?: InventoryAuditItemMaxAggregateInputType
  }

  export type InventoryAuditItemGroupByOutputType = {
    id: string
    auditId: string
    productId: string
    variantId: string | null
    warehouseId: string
    systemQty: number
    countedQty: number | null
    adjustmentQty: number | null
    location: string | null
    lotNumber: string | null
    batchNumber: string | null
    countedBy: string | null
    countedAt: Date | null
    verifiedBy: string | null
    verifiedAt: Date | null
    status: $Enums.AuditItemStatus
    discrepancyReason: string | null
    requiresInvestigation: boolean
    notes: string | null
    createdAt: Date
    updatedAt: Date
    _count: InventoryAuditItemCountAggregateOutputType | null
    _avg: InventoryAuditItemAvgAggregateOutputType | null
    _sum: InventoryAuditItemSumAggregateOutputType | null
    _min: InventoryAuditItemMinAggregateOutputType | null
    _max: InventoryAuditItemMaxAggregateOutputType | null
  }

  type GetInventoryAuditItemGroupByPayload<T extends InventoryAuditItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InventoryAuditItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InventoryAuditItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InventoryAuditItemGroupByOutputType[P]>
            : GetScalarType<T[P], InventoryAuditItemGroupByOutputType[P]>
        }
      >
    >


  export type InventoryAuditItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    auditId?: boolean
    productId?: boolean
    variantId?: boolean
    warehouseId?: boolean
    systemQty?: boolean
    countedQty?: boolean
    adjustmentQty?: boolean
    location?: boolean
    lotNumber?: boolean
    batchNumber?: boolean
    countedBy?: boolean
    countedAt?: boolean
    verifiedBy?: boolean
    verifiedAt?: boolean
    status?: boolean
    discrepancyReason?: boolean
    requiresInvestigation?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    audit?: boolean | InventoryAuditDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | InventoryAuditItem$variantArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inventoryAuditItem"]>

  export type InventoryAuditItemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    auditId?: boolean
    productId?: boolean
    variantId?: boolean
    warehouseId?: boolean
    systemQty?: boolean
    countedQty?: boolean
    adjustmentQty?: boolean
    location?: boolean
    lotNumber?: boolean
    batchNumber?: boolean
    countedBy?: boolean
    countedAt?: boolean
    verifiedBy?: boolean
    verifiedAt?: boolean
    status?: boolean
    discrepancyReason?: boolean
    requiresInvestigation?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    audit?: boolean | InventoryAuditDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | InventoryAuditItem$variantArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inventoryAuditItem"]>

  export type InventoryAuditItemSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    auditId?: boolean
    productId?: boolean
    variantId?: boolean
    warehouseId?: boolean
    systemQty?: boolean
    countedQty?: boolean
    adjustmentQty?: boolean
    location?: boolean
    lotNumber?: boolean
    batchNumber?: boolean
    countedBy?: boolean
    countedAt?: boolean
    verifiedBy?: boolean
    verifiedAt?: boolean
    status?: boolean
    discrepancyReason?: boolean
    requiresInvestigation?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    audit?: boolean | InventoryAuditDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | InventoryAuditItem$variantArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inventoryAuditItem"]>

  export type InventoryAuditItemSelectScalar = {
    id?: boolean
    auditId?: boolean
    productId?: boolean
    variantId?: boolean
    warehouseId?: boolean
    systemQty?: boolean
    countedQty?: boolean
    adjustmentQty?: boolean
    location?: boolean
    lotNumber?: boolean
    batchNumber?: boolean
    countedBy?: boolean
    countedAt?: boolean
    verifiedBy?: boolean
    verifiedAt?: boolean
    status?: boolean
    discrepancyReason?: boolean
    requiresInvestigation?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type InventoryAuditItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "auditId" | "productId" | "variantId" | "warehouseId" | "systemQty" | "countedQty" | "adjustmentQty" | "location" | "lotNumber" | "batchNumber" | "countedBy" | "countedAt" | "verifiedBy" | "verifiedAt" | "status" | "discrepancyReason" | "requiresInvestigation" | "notes" | "createdAt" | "updatedAt", ExtArgs["result"]["inventoryAuditItem"]>
  export type InventoryAuditItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    audit?: boolean | InventoryAuditDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | InventoryAuditItem$variantArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
  }
  export type InventoryAuditItemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    audit?: boolean | InventoryAuditDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | InventoryAuditItem$variantArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
  }
  export type InventoryAuditItemIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    audit?: boolean | InventoryAuditDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variant?: boolean | InventoryAuditItem$variantArgs<ExtArgs>
    warehouse?: boolean | WarehouseDefaultArgs<ExtArgs>
  }

  export type $InventoryAuditItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "InventoryAuditItem"
    objects: {
      audit: Prisma.$InventoryAuditPayload<ExtArgs>
      product: Prisma.$ProductPayload<ExtArgs>
      variant: Prisma.$ProductVariantPayload<ExtArgs> | null
      warehouse: Prisma.$WarehousePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      auditId: string
      productId: string
      variantId: string | null
      warehouseId: string
      systemQty: number
      countedQty: number | null
      adjustmentQty: number | null
      location: string | null
      lotNumber: string | null
      batchNumber: string | null
      countedBy: string | null
      countedAt: Date | null
      verifiedBy: string | null
      verifiedAt: Date | null
      status: $Enums.AuditItemStatus
      discrepancyReason: string | null
      requiresInvestigation: boolean
      notes: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["inventoryAuditItem"]>
    composites: {}
  }

  type InventoryAuditItemGetPayload<S extends boolean | null | undefined | InventoryAuditItemDefaultArgs> = $Result.GetResult<Prisma.$InventoryAuditItemPayload, S>

  type InventoryAuditItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<InventoryAuditItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InventoryAuditItemCountAggregateInputType | true
    }

  export interface InventoryAuditItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['InventoryAuditItem'], meta: { name: 'InventoryAuditItem' } }
    /**
     * Find zero or one InventoryAuditItem that matches the filter.
     * @param {InventoryAuditItemFindUniqueArgs} args - Arguments to find a InventoryAuditItem
     * @example
     * // Get one InventoryAuditItem
     * const inventoryAuditItem = await prisma.inventoryAuditItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InventoryAuditItemFindUniqueArgs>(args: SelectSubset<T, InventoryAuditItemFindUniqueArgs<ExtArgs>>): Prisma__InventoryAuditItemClient<$Result.GetResult<Prisma.$InventoryAuditItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one InventoryAuditItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {InventoryAuditItemFindUniqueOrThrowArgs} args - Arguments to find a InventoryAuditItem
     * @example
     * // Get one InventoryAuditItem
     * const inventoryAuditItem = await prisma.inventoryAuditItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InventoryAuditItemFindUniqueOrThrowArgs>(args: SelectSubset<T, InventoryAuditItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InventoryAuditItemClient<$Result.GetResult<Prisma.$InventoryAuditItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InventoryAuditItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryAuditItemFindFirstArgs} args - Arguments to find a InventoryAuditItem
     * @example
     * // Get one InventoryAuditItem
     * const inventoryAuditItem = await prisma.inventoryAuditItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InventoryAuditItemFindFirstArgs>(args?: SelectSubset<T, InventoryAuditItemFindFirstArgs<ExtArgs>>): Prisma__InventoryAuditItemClient<$Result.GetResult<Prisma.$InventoryAuditItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InventoryAuditItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryAuditItemFindFirstOrThrowArgs} args - Arguments to find a InventoryAuditItem
     * @example
     * // Get one InventoryAuditItem
     * const inventoryAuditItem = await prisma.inventoryAuditItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InventoryAuditItemFindFirstOrThrowArgs>(args?: SelectSubset<T, InventoryAuditItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__InventoryAuditItemClient<$Result.GetResult<Prisma.$InventoryAuditItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more InventoryAuditItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryAuditItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all InventoryAuditItems
     * const inventoryAuditItems = await prisma.inventoryAuditItem.findMany()
     * 
     * // Get first 10 InventoryAuditItems
     * const inventoryAuditItems = await prisma.inventoryAuditItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const inventoryAuditItemWithIdOnly = await prisma.inventoryAuditItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends InventoryAuditItemFindManyArgs>(args?: SelectSubset<T, InventoryAuditItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryAuditItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a InventoryAuditItem.
     * @param {InventoryAuditItemCreateArgs} args - Arguments to create a InventoryAuditItem.
     * @example
     * // Create one InventoryAuditItem
     * const InventoryAuditItem = await prisma.inventoryAuditItem.create({
     *   data: {
     *     // ... data to create a InventoryAuditItem
     *   }
     * })
     * 
     */
    create<T extends InventoryAuditItemCreateArgs>(args: SelectSubset<T, InventoryAuditItemCreateArgs<ExtArgs>>): Prisma__InventoryAuditItemClient<$Result.GetResult<Prisma.$InventoryAuditItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many InventoryAuditItems.
     * @param {InventoryAuditItemCreateManyArgs} args - Arguments to create many InventoryAuditItems.
     * @example
     * // Create many InventoryAuditItems
     * const inventoryAuditItem = await prisma.inventoryAuditItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InventoryAuditItemCreateManyArgs>(args?: SelectSubset<T, InventoryAuditItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many InventoryAuditItems and returns the data saved in the database.
     * @param {InventoryAuditItemCreateManyAndReturnArgs} args - Arguments to create many InventoryAuditItems.
     * @example
     * // Create many InventoryAuditItems
     * const inventoryAuditItem = await prisma.inventoryAuditItem.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many InventoryAuditItems and only return the `id`
     * const inventoryAuditItemWithIdOnly = await prisma.inventoryAuditItem.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InventoryAuditItemCreateManyAndReturnArgs>(args?: SelectSubset<T, InventoryAuditItemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryAuditItemPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a InventoryAuditItem.
     * @param {InventoryAuditItemDeleteArgs} args - Arguments to delete one InventoryAuditItem.
     * @example
     * // Delete one InventoryAuditItem
     * const InventoryAuditItem = await prisma.inventoryAuditItem.delete({
     *   where: {
     *     // ... filter to delete one InventoryAuditItem
     *   }
     * })
     * 
     */
    delete<T extends InventoryAuditItemDeleteArgs>(args: SelectSubset<T, InventoryAuditItemDeleteArgs<ExtArgs>>): Prisma__InventoryAuditItemClient<$Result.GetResult<Prisma.$InventoryAuditItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one InventoryAuditItem.
     * @param {InventoryAuditItemUpdateArgs} args - Arguments to update one InventoryAuditItem.
     * @example
     * // Update one InventoryAuditItem
     * const inventoryAuditItem = await prisma.inventoryAuditItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InventoryAuditItemUpdateArgs>(args: SelectSubset<T, InventoryAuditItemUpdateArgs<ExtArgs>>): Prisma__InventoryAuditItemClient<$Result.GetResult<Prisma.$InventoryAuditItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more InventoryAuditItems.
     * @param {InventoryAuditItemDeleteManyArgs} args - Arguments to filter InventoryAuditItems to delete.
     * @example
     * // Delete a few InventoryAuditItems
     * const { count } = await prisma.inventoryAuditItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InventoryAuditItemDeleteManyArgs>(args?: SelectSubset<T, InventoryAuditItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InventoryAuditItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryAuditItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many InventoryAuditItems
     * const inventoryAuditItem = await prisma.inventoryAuditItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InventoryAuditItemUpdateManyArgs>(args: SelectSubset<T, InventoryAuditItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InventoryAuditItems and returns the data updated in the database.
     * @param {InventoryAuditItemUpdateManyAndReturnArgs} args - Arguments to update many InventoryAuditItems.
     * @example
     * // Update many InventoryAuditItems
     * const inventoryAuditItem = await prisma.inventoryAuditItem.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more InventoryAuditItems and only return the `id`
     * const inventoryAuditItemWithIdOnly = await prisma.inventoryAuditItem.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends InventoryAuditItemUpdateManyAndReturnArgs>(args: SelectSubset<T, InventoryAuditItemUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryAuditItemPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one InventoryAuditItem.
     * @param {InventoryAuditItemUpsertArgs} args - Arguments to update or create a InventoryAuditItem.
     * @example
     * // Update or create a InventoryAuditItem
     * const inventoryAuditItem = await prisma.inventoryAuditItem.upsert({
     *   create: {
     *     // ... data to create a InventoryAuditItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the InventoryAuditItem we want to update
     *   }
     * })
     */
    upsert<T extends InventoryAuditItemUpsertArgs>(args: SelectSubset<T, InventoryAuditItemUpsertArgs<ExtArgs>>): Prisma__InventoryAuditItemClient<$Result.GetResult<Prisma.$InventoryAuditItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of InventoryAuditItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryAuditItemCountArgs} args - Arguments to filter InventoryAuditItems to count.
     * @example
     * // Count the number of InventoryAuditItems
     * const count = await prisma.inventoryAuditItem.count({
     *   where: {
     *     // ... the filter for the InventoryAuditItems we want to count
     *   }
     * })
    **/
    count<T extends InventoryAuditItemCountArgs>(
      args?: Subset<T, InventoryAuditItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InventoryAuditItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a InventoryAuditItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryAuditItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InventoryAuditItemAggregateArgs>(args: Subset<T, InventoryAuditItemAggregateArgs>): Prisma.PrismaPromise<GetInventoryAuditItemAggregateType<T>>

    /**
     * Group by InventoryAuditItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryAuditItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InventoryAuditItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InventoryAuditItemGroupByArgs['orderBy'] }
        : { orderBy?: InventoryAuditItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InventoryAuditItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInventoryAuditItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the InventoryAuditItem model
   */
  readonly fields: InventoryAuditItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for InventoryAuditItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InventoryAuditItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    audit<T extends InventoryAuditDefaultArgs<ExtArgs> = {}>(args?: Subset<T, InventoryAuditDefaultArgs<ExtArgs>>): Prisma__InventoryAuditClient<$Result.GetResult<Prisma.$InventoryAuditPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    variant<T extends InventoryAuditItem$variantArgs<ExtArgs> = {}>(args?: Subset<T, InventoryAuditItem$variantArgs<ExtArgs>>): Prisma__ProductVariantClient<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    warehouse<T extends WarehouseDefaultArgs<ExtArgs> = {}>(args?: Subset<T, WarehouseDefaultArgs<ExtArgs>>): Prisma__WarehouseClient<$Result.GetResult<Prisma.$WarehousePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the InventoryAuditItem model
   */
  interface InventoryAuditItemFieldRefs {
    readonly id: FieldRef<"InventoryAuditItem", 'String'>
    readonly auditId: FieldRef<"InventoryAuditItem", 'String'>
    readonly productId: FieldRef<"InventoryAuditItem", 'String'>
    readonly variantId: FieldRef<"InventoryAuditItem", 'String'>
    readonly warehouseId: FieldRef<"InventoryAuditItem", 'String'>
    readonly systemQty: FieldRef<"InventoryAuditItem", 'Int'>
    readonly countedQty: FieldRef<"InventoryAuditItem", 'Int'>
    readonly adjustmentQty: FieldRef<"InventoryAuditItem", 'Int'>
    readonly location: FieldRef<"InventoryAuditItem", 'String'>
    readonly lotNumber: FieldRef<"InventoryAuditItem", 'String'>
    readonly batchNumber: FieldRef<"InventoryAuditItem", 'String'>
    readonly countedBy: FieldRef<"InventoryAuditItem", 'String'>
    readonly countedAt: FieldRef<"InventoryAuditItem", 'DateTime'>
    readonly verifiedBy: FieldRef<"InventoryAuditItem", 'String'>
    readonly verifiedAt: FieldRef<"InventoryAuditItem", 'DateTime'>
    readonly status: FieldRef<"InventoryAuditItem", 'AuditItemStatus'>
    readonly discrepancyReason: FieldRef<"InventoryAuditItem", 'String'>
    readonly requiresInvestigation: FieldRef<"InventoryAuditItem", 'Boolean'>
    readonly notes: FieldRef<"InventoryAuditItem", 'String'>
    readonly createdAt: FieldRef<"InventoryAuditItem", 'DateTime'>
    readonly updatedAt: FieldRef<"InventoryAuditItem", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * InventoryAuditItem findUnique
   */
  export type InventoryAuditItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAuditItem
     */
    select?: InventoryAuditItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAuditItem
     */
    omit?: InventoryAuditItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAuditItemInclude<ExtArgs> | null
    /**
     * Filter, which InventoryAuditItem to fetch.
     */
    where: InventoryAuditItemWhereUniqueInput
  }

  /**
   * InventoryAuditItem findUniqueOrThrow
   */
  export type InventoryAuditItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAuditItem
     */
    select?: InventoryAuditItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAuditItem
     */
    omit?: InventoryAuditItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAuditItemInclude<ExtArgs> | null
    /**
     * Filter, which InventoryAuditItem to fetch.
     */
    where: InventoryAuditItemWhereUniqueInput
  }

  /**
   * InventoryAuditItem findFirst
   */
  export type InventoryAuditItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAuditItem
     */
    select?: InventoryAuditItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAuditItem
     */
    omit?: InventoryAuditItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAuditItemInclude<ExtArgs> | null
    /**
     * Filter, which InventoryAuditItem to fetch.
     */
    where?: InventoryAuditItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InventoryAuditItems to fetch.
     */
    orderBy?: InventoryAuditItemOrderByWithRelationInput | InventoryAuditItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InventoryAuditItems.
     */
    cursor?: InventoryAuditItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InventoryAuditItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InventoryAuditItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InventoryAuditItems.
     */
    distinct?: InventoryAuditItemScalarFieldEnum | InventoryAuditItemScalarFieldEnum[]
  }

  /**
   * InventoryAuditItem findFirstOrThrow
   */
  export type InventoryAuditItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAuditItem
     */
    select?: InventoryAuditItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAuditItem
     */
    omit?: InventoryAuditItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAuditItemInclude<ExtArgs> | null
    /**
     * Filter, which InventoryAuditItem to fetch.
     */
    where?: InventoryAuditItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InventoryAuditItems to fetch.
     */
    orderBy?: InventoryAuditItemOrderByWithRelationInput | InventoryAuditItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InventoryAuditItems.
     */
    cursor?: InventoryAuditItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InventoryAuditItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InventoryAuditItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InventoryAuditItems.
     */
    distinct?: InventoryAuditItemScalarFieldEnum | InventoryAuditItemScalarFieldEnum[]
  }

  /**
   * InventoryAuditItem findMany
   */
  export type InventoryAuditItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAuditItem
     */
    select?: InventoryAuditItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAuditItem
     */
    omit?: InventoryAuditItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAuditItemInclude<ExtArgs> | null
    /**
     * Filter, which InventoryAuditItems to fetch.
     */
    where?: InventoryAuditItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InventoryAuditItems to fetch.
     */
    orderBy?: InventoryAuditItemOrderByWithRelationInput | InventoryAuditItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing InventoryAuditItems.
     */
    cursor?: InventoryAuditItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InventoryAuditItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InventoryAuditItems.
     */
    skip?: number
    distinct?: InventoryAuditItemScalarFieldEnum | InventoryAuditItemScalarFieldEnum[]
  }

  /**
   * InventoryAuditItem create
   */
  export type InventoryAuditItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAuditItem
     */
    select?: InventoryAuditItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAuditItem
     */
    omit?: InventoryAuditItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAuditItemInclude<ExtArgs> | null
    /**
     * The data needed to create a InventoryAuditItem.
     */
    data: XOR<InventoryAuditItemCreateInput, InventoryAuditItemUncheckedCreateInput>
  }

  /**
   * InventoryAuditItem createMany
   */
  export type InventoryAuditItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many InventoryAuditItems.
     */
    data: InventoryAuditItemCreateManyInput | InventoryAuditItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * InventoryAuditItem createManyAndReturn
   */
  export type InventoryAuditItemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAuditItem
     */
    select?: InventoryAuditItemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAuditItem
     */
    omit?: InventoryAuditItemOmit<ExtArgs> | null
    /**
     * The data used to create many InventoryAuditItems.
     */
    data: InventoryAuditItemCreateManyInput | InventoryAuditItemCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAuditItemIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * InventoryAuditItem update
   */
  export type InventoryAuditItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAuditItem
     */
    select?: InventoryAuditItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAuditItem
     */
    omit?: InventoryAuditItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAuditItemInclude<ExtArgs> | null
    /**
     * The data needed to update a InventoryAuditItem.
     */
    data: XOR<InventoryAuditItemUpdateInput, InventoryAuditItemUncheckedUpdateInput>
    /**
     * Choose, which InventoryAuditItem to update.
     */
    where: InventoryAuditItemWhereUniqueInput
  }

  /**
   * InventoryAuditItem updateMany
   */
  export type InventoryAuditItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update InventoryAuditItems.
     */
    data: XOR<InventoryAuditItemUpdateManyMutationInput, InventoryAuditItemUncheckedUpdateManyInput>
    /**
     * Filter which InventoryAuditItems to update
     */
    where?: InventoryAuditItemWhereInput
    /**
     * Limit how many InventoryAuditItems to update.
     */
    limit?: number
  }

  /**
   * InventoryAuditItem updateManyAndReturn
   */
  export type InventoryAuditItemUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAuditItem
     */
    select?: InventoryAuditItemSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAuditItem
     */
    omit?: InventoryAuditItemOmit<ExtArgs> | null
    /**
     * The data used to update InventoryAuditItems.
     */
    data: XOR<InventoryAuditItemUpdateManyMutationInput, InventoryAuditItemUncheckedUpdateManyInput>
    /**
     * Filter which InventoryAuditItems to update
     */
    where?: InventoryAuditItemWhereInput
    /**
     * Limit how many InventoryAuditItems to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAuditItemIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * InventoryAuditItem upsert
   */
  export type InventoryAuditItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAuditItem
     */
    select?: InventoryAuditItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAuditItem
     */
    omit?: InventoryAuditItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAuditItemInclude<ExtArgs> | null
    /**
     * The filter to search for the InventoryAuditItem to update in case it exists.
     */
    where: InventoryAuditItemWhereUniqueInput
    /**
     * In case the InventoryAuditItem found by the `where` argument doesn't exist, create a new InventoryAuditItem with this data.
     */
    create: XOR<InventoryAuditItemCreateInput, InventoryAuditItemUncheckedCreateInput>
    /**
     * In case the InventoryAuditItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InventoryAuditItemUpdateInput, InventoryAuditItemUncheckedUpdateInput>
  }

  /**
   * InventoryAuditItem delete
   */
  export type InventoryAuditItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAuditItem
     */
    select?: InventoryAuditItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAuditItem
     */
    omit?: InventoryAuditItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAuditItemInclude<ExtArgs> | null
    /**
     * Filter which InventoryAuditItem to delete.
     */
    where: InventoryAuditItemWhereUniqueInput
  }

  /**
   * InventoryAuditItem deleteMany
   */
  export type InventoryAuditItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InventoryAuditItems to delete
     */
    where?: InventoryAuditItemWhereInput
    /**
     * Limit how many InventoryAuditItems to delete.
     */
    limit?: number
  }

  /**
   * InventoryAuditItem.variant
   */
  export type InventoryAuditItem$variantArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductVariant
     */
    omit?: ProductVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    where?: ProductVariantWhereInput
  }

  /**
   * InventoryAuditItem without action
   */
  export type InventoryAuditItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAuditItem
     */
    select?: InventoryAuditItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAuditItem
     */
    omit?: InventoryAuditItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAuditItemInclude<ExtArgs> | null
  }


  /**
   * Model ProductReview
   */

  export type AggregateProductReview = {
    _count: ProductReviewCountAggregateOutputType | null
    _avg: ProductReviewAvgAggregateOutputType | null
    _sum: ProductReviewSumAggregateOutputType | null
    _min: ProductReviewMinAggregateOutputType | null
    _max: ProductReviewMaxAggregateOutputType | null
  }

  export type ProductReviewAvgAggregateOutputType = {
    rating: number | null
  }

  export type ProductReviewSumAggregateOutputType = {
    rating: number | null
  }

  export type ProductReviewMinAggregateOutputType = {
    id: string | null
    productId: string | null
    rating: number | null
    title: string | null
    review: string | null
    reviewerName: string | null
    reviewerEmail: string | null
    isApproved: boolean | null
    isVisible: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductReviewMaxAggregateOutputType = {
    id: string | null
    productId: string | null
    rating: number | null
    title: string | null
    review: string | null
    reviewerName: string | null
    reviewerEmail: string | null
    isApproved: boolean | null
    isVisible: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductReviewCountAggregateOutputType = {
    id: number
    productId: number
    rating: number
    title: number
    review: number
    reviewerName: number
    reviewerEmail: number
    isApproved: number
    isVisible: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ProductReviewAvgAggregateInputType = {
    rating?: true
  }

  export type ProductReviewSumAggregateInputType = {
    rating?: true
  }

  export type ProductReviewMinAggregateInputType = {
    id?: true
    productId?: true
    rating?: true
    title?: true
    review?: true
    reviewerName?: true
    reviewerEmail?: true
    isApproved?: true
    isVisible?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductReviewMaxAggregateInputType = {
    id?: true
    productId?: true
    rating?: true
    title?: true
    review?: true
    reviewerName?: true
    reviewerEmail?: true
    isApproved?: true
    isVisible?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductReviewCountAggregateInputType = {
    id?: true
    productId?: true
    rating?: true
    title?: true
    review?: true
    reviewerName?: true
    reviewerEmail?: true
    isApproved?: true
    isVisible?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ProductReviewAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductReview to aggregate.
     */
    where?: ProductReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductReviews to fetch.
     */
    orderBy?: ProductReviewOrderByWithRelationInput | ProductReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductReviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductReviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductReviews
    **/
    _count?: true | ProductReviewCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductReviewAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductReviewSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductReviewMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductReviewMaxAggregateInputType
  }

  export type GetProductReviewAggregateType<T extends ProductReviewAggregateArgs> = {
        [P in keyof T & keyof AggregateProductReview]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductReview[P]>
      : GetScalarType<T[P], AggregateProductReview[P]>
  }




  export type ProductReviewGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductReviewWhereInput
    orderBy?: ProductReviewOrderByWithAggregationInput | ProductReviewOrderByWithAggregationInput[]
    by: ProductReviewScalarFieldEnum[] | ProductReviewScalarFieldEnum
    having?: ProductReviewScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductReviewCountAggregateInputType | true
    _avg?: ProductReviewAvgAggregateInputType
    _sum?: ProductReviewSumAggregateInputType
    _min?: ProductReviewMinAggregateInputType
    _max?: ProductReviewMaxAggregateInputType
  }

  export type ProductReviewGroupByOutputType = {
    id: string
    productId: string
    rating: number
    title: string | null
    review: string | null
    reviewerName: string | null
    reviewerEmail: string | null
    isApproved: boolean
    isVisible: boolean
    createdAt: Date
    updatedAt: Date
    _count: ProductReviewCountAggregateOutputType | null
    _avg: ProductReviewAvgAggregateOutputType | null
    _sum: ProductReviewSumAggregateOutputType | null
    _min: ProductReviewMinAggregateOutputType | null
    _max: ProductReviewMaxAggregateOutputType | null
  }

  type GetProductReviewGroupByPayload<T extends ProductReviewGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductReviewGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductReviewGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductReviewGroupByOutputType[P]>
            : GetScalarType<T[P], ProductReviewGroupByOutputType[P]>
        }
      >
    >


  export type ProductReviewSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    rating?: boolean
    title?: boolean
    review?: boolean
    reviewerName?: boolean
    reviewerEmail?: boolean
    isApproved?: boolean
    isVisible?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productReview"]>

  export type ProductReviewSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    rating?: boolean
    title?: boolean
    review?: boolean
    reviewerName?: boolean
    reviewerEmail?: boolean
    isApproved?: boolean
    isVisible?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productReview"]>

  export type ProductReviewSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    rating?: boolean
    title?: boolean
    review?: boolean
    reviewerName?: boolean
    reviewerEmail?: boolean
    isApproved?: boolean
    isVisible?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productReview"]>

  export type ProductReviewSelectScalar = {
    id?: boolean
    productId?: boolean
    rating?: boolean
    title?: boolean
    review?: boolean
    reviewerName?: boolean
    reviewerEmail?: boolean
    isApproved?: boolean
    isVisible?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ProductReviewOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "productId" | "rating" | "title" | "review" | "reviewerName" | "reviewerEmail" | "isApproved" | "isVisible" | "createdAt" | "updatedAt", ExtArgs["result"]["productReview"]>
  export type ProductReviewInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type ProductReviewIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type ProductReviewIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }

  export type $ProductReviewPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductReview"
    objects: {
      product: Prisma.$ProductPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      productId: string
      rating: number
      title: string | null
      review: string | null
      reviewerName: string | null
      reviewerEmail: string | null
      isApproved: boolean
      isVisible: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["productReview"]>
    composites: {}
  }

  type ProductReviewGetPayload<S extends boolean | null | undefined | ProductReviewDefaultArgs> = $Result.GetResult<Prisma.$ProductReviewPayload, S>

  type ProductReviewCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductReviewFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductReviewCountAggregateInputType | true
    }

  export interface ProductReviewDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductReview'], meta: { name: 'ProductReview' } }
    /**
     * Find zero or one ProductReview that matches the filter.
     * @param {ProductReviewFindUniqueArgs} args - Arguments to find a ProductReview
     * @example
     * // Get one ProductReview
     * const productReview = await prisma.productReview.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductReviewFindUniqueArgs>(args: SelectSubset<T, ProductReviewFindUniqueArgs<ExtArgs>>): Prisma__ProductReviewClient<$Result.GetResult<Prisma.$ProductReviewPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProductReview that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductReviewFindUniqueOrThrowArgs} args - Arguments to find a ProductReview
     * @example
     * // Get one ProductReview
     * const productReview = await prisma.productReview.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductReviewFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductReviewFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductReviewClient<$Result.GetResult<Prisma.$ProductReviewPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductReview that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductReviewFindFirstArgs} args - Arguments to find a ProductReview
     * @example
     * // Get one ProductReview
     * const productReview = await prisma.productReview.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductReviewFindFirstArgs>(args?: SelectSubset<T, ProductReviewFindFirstArgs<ExtArgs>>): Prisma__ProductReviewClient<$Result.GetResult<Prisma.$ProductReviewPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductReview that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductReviewFindFirstOrThrowArgs} args - Arguments to find a ProductReview
     * @example
     * // Get one ProductReview
     * const productReview = await prisma.productReview.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductReviewFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductReviewFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductReviewClient<$Result.GetResult<Prisma.$ProductReviewPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProductReviews that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductReviewFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductReviews
     * const productReviews = await prisma.productReview.findMany()
     * 
     * // Get first 10 ProductReviews
     * const productReviews = await prisma.productReview.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productReviewWithIdOnly = await prisma.productReview.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductReviewFindManyArgs>(args?: SelectSubset<T, ProductReviewFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductReviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProductReview.
     * @param {ProductReviewCreateArgs} args - Arguments to create a ProductReview.
     * @example
     * // Create one ProductReview
     * const ProductReview = await prisma.productReview.create({
     *   data: {
     *     // ... data to create a ProductReview
     *   }
     * })
     * 
     */
    create<T extends ProductReviewCreateArgs>(args: SelectSubset<T, ProductReviewCreateArgs<ExtArgs>>): Prisma__ProductReviewClient<$Result.GetResult<Prisma.$ProductReviewPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProductReviews.
     * @param {ProductReviewCreateManyArgs} args - Arguments to create many ProductReviews.
     * @example
     * // Create many ProductReviews
     * const productReview = await prisma.productReview.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductReviewCreateManyArgs>(args?: SelectSubset<T, ProductReviewCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductReviews and returns the data saved in the database.
     * @param {ProductReviewCreateManyAndReturnArgs} args - Arguments to create many ProductReviews.
     * @example
     * // Create many ProductReviews
     * const productReview = await prisma.productReview.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductReviews and only return the `id`
     * const productReviewWithIdOnly = await prisma.productReview.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductReviewCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductReviewCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductReviewPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProductReview.
     * @param {ProductReviewDeleteArgs} args - Arguments to delete one ProductReview.
     * @example
     * // Delete one ProductReview
     * const ProductReview = await prisma.productReview.delete({
     *   where: {
     *     // ... filter to delete one ProductReview
     *   }
     * })
     * 
     */
    delete<T extends ProductReviewDeleteArgs>(args: SelectSubset<T, ProductReviewDeleteArgs<ExtArgs>>): Prisma__ProductReviewClient<$Result.GetResult<Prisma.$ProductReviewPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProductReview.
     * @param {ProductReviewUpdateArgs} args - Arguments to update one ProductReview.
     * @example
     * // Update one ProductReview
     * const productReview = await prisma.productReview.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductReviewUpdateArgs>(args: SelectSubset<T, ProductReviewUpdateArgs<ExtArgs>>): Prisma__ProductReviewClient<$Result.GetResult<Prisma.$ProductReviewPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProductReviews.
     * @param {ProductReviewDeleteManyArgs} args - Arguments to filter ProductReviews to delete.
     * @example
     * // Delete a few ProductReviews
     * const { count } = await prisma.productReview.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductReviewDeleteManyArgs>(args?: SelectSubset<T, ProductReviewDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductReviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductReviewUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductReviews
     * const productReview = await prisma.productReview.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductReviewUpdateManyArgs>(args: SelectSubset<T, ProductReviewUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductReviews and returns the data updated in the database.
     * @param {ProductReviewUpdateManyAndReturnArgs} args - Arguments to update many ProductReviews.
     * @example
     * // Update many ProductReviews
     * const productReview = await prisma.productReview.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProductReviews and only return the `id`
     * const productReviewWithIdOnly = await prisma.productReview.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductReviewUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductReviewUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductReviewPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProductReview.
     * @param {ProductReviewUpsertArgs} args - Arguments to update or create a ProductReview.
     * @example
     * // Update or create a ProductReview
     * const productReview = await prisma.productReview.upsert({
     *   create: {
     *     // ... data to create a ProductReview
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductReview we want to update
     *   }
     * })
     */
    upsert<T extends ProductReviewUpsertArgs>(args: SelectSubset<T, ProductReviewUpsertArgs<ExtArgs>>): Prisma__ProductReviewClient<$Result.GetResult<Prisma.$ProductReviewPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProductReviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductReviewCountArgs} args - Arguments to filter ProductReviews to count.
     * @example
     * // Count the number of ProductReviews
     * const count = await prisma.productReview.count({
     *   where: {
     *     // ... the filter for the ProductReviews we want to count
     *   }
     * })
    **/
    count<T extends ProductReviewCountArgs>(
      args?: Subset<T, ProductReviewCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductReviewCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductReview.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductReviewAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductReviewAggregateArgs>(args: Subset<T, ProductReviewAggregateArgs>): Prisma.PrismaPromise<GetProductReviewAggregateType<T>>

    /**
     * Group by ProductReview.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductReviewGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductReviewGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductReviewGroupByArgs['orderBy'] }
        : { orderBy?: ProductReviewGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductReviewGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductReviewGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductReview model
   */
  readonly fields: ProductReviewFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductReview.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductReviewClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductReview model
   */
  interface ProductReviewFieldRefs {
    readonly id: FieldRef<"ProductReview", 'String'>
    readonly productId: FieldRef<"ProductReview", 'String'>
    readonly rating: FieldRef<"ProductReview", 'Int'>
    readonly title: FieldRef<"ProductReview", 'String'>
    readonly review: FieldRef<"ProductReview", 'String'>
    readonly reviewerName: FieldRef<"ProductReview", 'String'>
    readonly reviewerEmail: FieldRef<"ProductReview", 'String'>
    readonly isApproved: FieldRef<"ProductReview", 'Boolean'>
    readonly isVisible: FieldRef<"ProductReview", 'Boolean'>
    readonly createdAt: FieldRef<"ProductReview", 'DateTime'>
    readonly updatedAt: FieldRef<"ProductReview", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ProductReview findUnique
   */
  export type ProductReviewFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductReview
     */
    select?: ProductReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductReview
     */
    omit?: ProductReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductReviewInclude<ExtArgs> | null
    /**
     * Filter, which ProductReview to fetch.
     */
    where: ProductReviewWhereUniqueInput
  }

  /**
   * ProductReview findUniqueOrThrow
   */
  export type ProductReviewFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductReview
     */
    select?: ProductReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductReview
     */
    omit?: ProductReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductReviewInclude<ExtArgs> | null
    /**
     * Filter, which ProductReview to fetch.
     */
    where: ProductReviewWhereUniqueInput
  }

  /**
   * ProductReview findFirst
   */
  export type ProductReviewFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductReview
     */
    select?: ProductReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductReview
     */
    omit?: ProductReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductReviewInclude<ExtArgs> | null
    /**
     * Filter, which ProductReview to fetch.
     */
    where?: ProductReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductReviews to fetch.
     */
    orderBy?: ProductReviewOrderByWithRelationInput | ProductReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductReviews.
     */
    cursor?: ProductReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductReviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductReviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductReviews.
     */
    distinct?: ProductReviewScalarFieldEnum | ProductReviewScalarFieldEnum[]
  }

  /**
   * ProductReview findFirstOrThrow
   */
  export type ProductReviewFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductReview
     */
    select?: ProductReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductReview
     */
    omit?: ProductReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductReviewInclude<ExtArgs> | null
    /**
     * Filter, which ProductReview to fetch.
     */
    where?: ProductReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductReviews to fetch.
     */
    orderBy?: ProductReviewOrderByWithRelationInput | ProductReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductReviews.
     */
    cursor?: ProductReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductReviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductReviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductReviews.
     */
    distinct?: ProductReviewScalarFieldEnum | ProductReviewScalarFieldEnum[]
  }

  /**
   * ProductReview findMany
   */
  export type ProductReviewFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductReview
     */
    select?: ProductReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductReview
     */
    omit?: ProductReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductReviewInclude<ExtArgs> | null
    /**
     * Filter, which ProductReviews to fetch.
     */
    where?: ProductReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductReviews to fetch.
     */
    orderBy?: ProductReviewOrderByWithRelationInput | ProductReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductReviews.
     */
    cursor?: ProductReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductReviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductReviews.
     */
    skip?: number
    distinct?: ProductReviewScalarFieldEnum | ProductReviewScalarFieldEnum[]
  }

  /**
   * ProductReview create
   */
  export type ProductReviewCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductReview
     */
    select?: ProductReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductReview
     */
    omit?: ProductReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductReviewInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductReview.
     */
    data: XOR<ProductReviewCreateInput, ProductReviewUncheckedCreateInput>
  }

  /**
   * ProductReview createMany
   */
  export type ProductReviewCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductReviews.
     */
    data: ProductReviewCreateManyInput | ProductReviewCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductReview createManyAndReturn
   */
  export type ProductReviewCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductReview
     */
    select?: ProductReviewSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductReview
     */
    omit?: ProductReviewOmit<ExtArgs> | null
    /**
     * The data used to create many ProductReviews.
     */
    data: ProductReviewCreateManyInput | ProductReviewCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductReviewIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductReview update
   */
  export type ProductReviewUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductReview
     */
    select?: ProductReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductReview
     */
    omit?: ProductReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductReviewInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductReview.
     */
    data: XOR<ProductReviewUpdateInput, ProductReviewUncheckedUpdateInput>
    /**
     * Choose, which ProductReview to update.
     */
    where: ProductReviewWhereUniqueInput
  }

  /**
   * ProductReview updateMany
   */
  export type ProductReviewUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductReviews.
     */
    data: XOR<ProductReviewUpdateManyMutationInput, ProductReviewUncheckedUpdateManyInput>
    /**
     * Filter which ProductReviews to update
     */
    where?: ProductReviewWhereInput
    /**
     * Limit how many ProductReviews to update.
     */
    limit?: number
  }

  /**
   * ProductReview updateManyAndReturn
   */
  export type ProductReviewUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductReview
     */
    select?: ProductReviewSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductReview
     */
    omit?: ProductReviewOmit<ExtArgs> | null
    /**
     * The data used to update ProductReviews.
     */
    data: XOR<ProductReviewUpdateManyMutationInput, ProductReviewUncheckedUpdateManyInput>
    /**
     * Filter which ProductReviews to update
     */
    where?: ProductReviewWhereInput
    /**
     * Limit how many ProductReviews to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductReviewIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductReview upsert
   */
  export type ProductReviewUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductReview
     */
    select?: ProductReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductReview
     */
    omit?: ProductReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductReviewInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductReview to update in case it exists.
     */
    where: ProductReviewWhereUniqueInput
    /**
     * In case the ProductReview found by the `where` argument doesn't exist, create a new ProductReview with this data.
     */
    create: XOR<ProductReviewCreateInput, ProductReviewUncheckedCreateInput>
    /**
     * In case the ProductReview was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductReviewUpdateInput, ProductReviewUncheckedUpdateInput>
  }

  /**
   * ProductReview delete
   */
  export type ProductReviewDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductReview
     */
    select?: ProductReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductReview
     */
    omit?: ProductReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductReviewInclude<ExtArgs> | null
    /**
     * Filter which ProductReview to delete.
     */
    where: ProductReviewWhereUniqueInput
  }

  /**
   * ProductReview deleteMany
   */
  export type ProductReviewDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductReviews to delete
     */
    where?: ProductReviewWhereInput
    /**
     * Limit how many ProductReviews to delete.
     */
    limit?: number
  }

  /**
   * ProductReview without action
   */
  export type ProductReviewDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductReview
     */
    select?: ProductReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductReview
     */
    omit?: ProductReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductReviewInclude<ExtArgs> | null
  }


  /**
   * Model SystemConfiguration
   */

  export type AggregateSystemConfiguration = {
    _count: SystemConfigurationCountAggregateOutputType | null
    _min: SystemConfigurationMinAggregateOutputType | null
    _max: SystemConfigurationMaxAggregateOutputType | null
  }

  export type SystemConfigurationMinAggregateOutputType = {
    id: string | null
    category: string | null
    key: string | null
    description: string | null
    dataType: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SystemConfigurationMaxAggregateOutputType = {
    id: string | null
    category: string | null
    key: string | null
    description: string | null
    dataType: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SystemConfigurationCountAggregateOutputType = {
    id: number
    category: number
    key: number
    value: number
    description: number
    dataType: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SystemConfigurationMinAggregateInputType = {
    id?: true
    category?: true
    key?: true
    description?: true
    dataType?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SystemConfigurationMaxAggregateInputType = {
    id?: true
    category?: true
    key?: true
    description?: true
    dataType?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SystemConfigurationCountAggregateInputType = {
    id?: true
    category?: true
    key?: true
    value?: true
    description?: true
    dataType?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SystemConfigurationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SystemConfiguration to aggregate.
     */
    where?: SystemConfigurationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SystemConfigurations to fetch.
     */
    orderBy?: SystemConfigurationOrderByWithRelationInput | SystemConfigurationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SystemConfigurationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SystemConfigurations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SystemConfigurations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SystemConfigurations
    **/
    _count?: true | SystemConfigurationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SystemConfigurationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SystemConfigurationMaxAggregateInputType
  }

  export type GetSystemConfigurationAggregateType<T extends SystemConfigurationAggregateArgs> = {
        [P in keyof T & keyof AggregateSystemConfiguration]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSystemConfiguration[P]>
      : GetScalarType<T[P], AggregateSystemConfiguration[P]>
  }




  export type SystemConfigurationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SystemConfigurationWhereInput
    orderBy?: SystemConfigurationOrderByWithAggregationInput | SystemConfigurationOrderByWithAggregationInput[]
    by: SystemConfigurationScalarFieldEnum[] | SystemConfigurationScalarFieldEnum
    having?: SystemConfigurationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SystemConfigurationCountAggregateInputType | true
    _min?: SystemConfigurationMinAggregateInputType
    _max?: SystemConfigurationMaxAggregateInputType
  }

  export type SystemConfigurationGroupByOutputType = {
    id: string
    category: string
    key: string
    value: JsonValue
    description: string | null
    dataType: string | null
    createdAt: Date
    updatedAt: Date
    _count: SystemConfigurationCountAggregateOutputType | null
    _min: SystemConfigurationMinAggregateOutputType | null
    _max: SystemConfigurationMaxAggregateOutputType | null
  }

  type GetSystemConfigurationGroupByPayload<T extends SystemConfigurationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SystemConfigurationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SystemConfigurationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SystemConfigurationGroupByOutputType[P]>
            : GetScalarType<T[P], SystemConfigurationGroupByOutputType[P]>
        }
      >
    >


  export type SystemConfigurationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    category?: boolean
    key?: boolean
    value?: boolean
    description?: boolean
    dataType?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["systemConfiguration"]>

  export type SystemConfigurationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    category?: boolean
    key?: boolean
    value?: boolean
    description?: boolean
    dataType?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["systemConfiguration"]>

  export type SystemConfigurationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    category?: boolean
    key?: boolean
    value?: boolean
    description?: boolean
    dataType?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["systemConfiguration"]>

  export type SystemConfigurationSelectScalar = {
    id?: boolean
    category?: boolean
    key?: boolean
    value?: boolean
    description?: boolean
    dataType?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type SystemConfigurationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "category" | "key" | "value" | "description" | "dataType" | "createdAt" | "updatedAt", ExtArgs["result"]["systemConfiguration"]>

  export type $SystemConfigurationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SystemConfiguration"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      category: string
      key: string
      value: Prisma.JsonValue
      description: string | null
      dataType: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["systemConfiguration"]>
    composites: {}
  }

  type SystemConfigurationGetPayload<S extends boolean | null | undefined | SystemConfigurationDefaultArgs> = $Result.GetResult<Prisma.$SystemConfigurationPayload, S>

  type SystemConfigurationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SystemConfigurationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SystemConfigurationCountAggregateInputType | true
    }

  export interface SystemConfigurationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SystemConfiguration'], meta: { name: 'SystemConfiguration' } }
    /**
     * Find zero or one SystemConfiguration that matches the filter.
     * @param {SystemConfigurationFindUniqueArgs} args - Arguments to find a SystemConfiguration
     * @example
     * // Get one SystemConfiguration
     * const systemConfiguration = await prisma.systemConfiguration.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SystemConfigurationFindUniqueArgs>(args: SelectSubset<T, SystemConfigurationFindUniqueArgs<ExtArgs>>): Prisma__SystemConfigurationClient<$Result.GetResult<Prisma.$SystemConfigurationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SystemConfiguration that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SystemConfigurationFindUniqueOrThrowArgs} args - Arguments to find a SystemConfiguration
     * @example
     * // Get one SystemConfiguration
     * const systemConfiguration = await prisma.systemConfiguration.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SystemConfigurationFindUniqueOrThrowArgs>(args: SelectSubset<T, SystemConfigurationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SystemConfigurationClient<$Result.GetResult<Prisma.$SystemConfigurationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SystemConfiguration that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemConfigurationFindFirstArgs} args - Arguments to find a SystemConfiguration
     * @example
     * // Get one SystemConfiguration
     * const systemConfiguration = await prisma.systemConfiguration.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SystemConfigurationFindFirstArgs>(args?: SelectSubset<T, SystemConfigurationFindFirstArgs<ExtArgs>>): Prisma__SystemConfigurationClient<$Result.GetResult<Prisma.$SystemConfigurationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SystemConfiguration that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemConfigurationFindFirstOrThrowArgs} args - Arguments to find a SystemConfiguration
     * @example
     * // Get one SystemConfiguration
     * const systemConfiguration = await prisma.systemConfiguration.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SystemConfigurationFindFirstOrThrowArgs>(args?: SelectSubset<T, SystemConfigurationFindFirstOrThrowArgs<ExtArgs>>): Prisma__SystemConfigurationClient<$Result.GetResult<Prisma.$SystemConfigurationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SystemConfigurations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemConfigurationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SystemConfigurations
     * const systemConfigurations = await prisma.systemConfiguration.findMany()
     * 
     * // Get first 10 SystemConfigurations
     * const systemConfigurations = await prisma.systemConfiguration.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const systemConfigurationWithIdOnly = await prisma.systemConfiguration.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SystemConfigurationFindManyArgs>(args?: SelectSubset<T, SystemConfigurationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SystemConfigurationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SystemConfiguration.
     * @param {SystemConfigurationCreateArgs} args - Arguments to create a SystemConfiguration.
     * @example
     * // Create one SystemConfiguration
     * const SystemConfiguration = await prisma.systemConfiguration.create({
     *   data: {
     *     // ... data to create a SystemConfiguration
     *   }
     * })
     * 
     */
    create<T extends SystemConfigurationCreateArgs>(args: SelectSubset<T, SystemConfigurationCreateArgs<ExtArgs>>): Prisma__SystemConfigurationClient<$Result.GetResult<Prisma.$SystemConfigurationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SystemConfigurations.
     * @param {SystemConfigurationCreateManyArgs} args - Arguments to create many SystemConfigurations.
     * @example
     * // Create many SystemConfigurations
     * const systemConfiguration = await prisma.systemConfiguration.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SystemConfigurationCreateManyArgs>(args?: SelectSubset<T, SystemConfigurationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SystemConfigurations and returns the data saved in the database.
     * @param {SystemConfigurationCreateManyAndReturnArgs} args - Arguments to create many SystemConfigurations.
     * @example
     * // Create many SystemConfigurations
     * const systemConfiguration = await prisma.systemConfiguration.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SystemConfigurations and only return the `id`
     * const systemConfigurationWithIdOnly = await prisma.systemConfiguration.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SystemConfigurationCreateManyAndReturnArgs>(args?: SelectSubset<T, SystemConfigurationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SystemConfigurationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SystemConfiguration.
     * @param {SystemConfigurationDeleteArgs} args - Arguments to delete one SystemConfiguration.
     * @example
     * // Delete one SystemConfiguration
     * const SystemConfiguration = await prisma.systemConfiguration.delete({
     *   where: {
     *     // ... filter to delete one SystemConfiguration
     *   }
     * })
     * 
     */
    delete<T extends SystemConfigurationDeleteArgs>(args: SelectSubset<T, SystemConfigurationDeleteArgs<ExtArgs>>): Prisma__SystemConfigurationClient<$Result.GetResult<Prisma.$SystemConfigurationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SystemConfiguration.
     * @param {SystemConfigurationUpdateArgs} args - Arguments to update one SystemConfiguration.
     * @example
     * // Update one SystemConfiguration
     * const systemConfiguration = await prisma.systemConfiguration.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SystemConfigurationUpdateArgs>(args: SelectSubset<T, SystemConfigurationUpdateArgs<ExtArgs>>): Prisma__SystemConfigurationClient<$Result.GetResult<Prisma.$SystemConfigurationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SystemConfigurations.
     * @param {SystemConfigurationDeleteManyArgs} args - Arguments to filter SystemConfigurations to delete.
     * @example
     * // Delete a few SystemConfigurations
     * const { count } = await prisma.systemConfiguration.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SystemConfigurationDeleteManyArgs>(args?: SelectSubset<T, SystemConfigurationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SystemConfigurations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemConfigurationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SystemConfigurations
     * const systemConfiguration = await prisma.systemConfiguration.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SystemConfigurationUpdateManyArgs>(args: SelectSubset<T, SystemConfigurationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SystemConfigurations and returns the data updated in the database.
     * @param {SystemConfigurationUpdateManyAndReturnArgs} args - Arguments to update many SystemConfigurations.
     * @example
     * // Update many SystemConfigurations
     * const systemConfiguration = await prisma.systemConfiguration.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SystemConfigurations and only return the `id`
     * const systemConfigurationWithIdOnly = await prisma.systemConfiguration.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SystemConfigurationUpdateManyAndReturnArgs>(args: SelectSubset<T, SystemConfigurationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SystemConfigurationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SystemConfiguration.
     * @param {SystemConfigurationUpsertArgs} args - Arguments to update or create a SystemConfiguration.
     * @example
     * // Update or create a SystemConfiguration
     * const systemConfiguration = await prisma.systemConfiguration.upsert({
     *   create: {
     *     // ... data to create a SystemConfiguration
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SystemConfiguration we want to update
     *   }
     * })
     */
    upsert<T extends SystemConfigurationUpsertArgs>(args: SelectSubset<T, SystemConfigurationUpsertArgs<ExtArgs>>): Prisma__SystemConfigurationClient<$Result.GetResult<Prisma.$SystemConfigurationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SystemConfigurations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemConfigurationCountArgs} args - Arguments to filter SystemConfigurations to count.
     * @example
     * // Count the number of SystemConfigurations
     * const count = await prisma.systemConfiguration.count({
     *   where: {
     *     // ... the filter for the SystemConfigurations we want to count
     *   }
     * })
    **/
    count<T extends SystemConfigurationCountArgs>(
      args?: Subset<T, SystemConfigurationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SystemConfigurationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SystemConfiguration.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemConfigurationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SystemConfigurationAggregateArgs>(args: Subset<T, SystemConfigurationAggregateArgs>): Prisma.PrismaPromise<GetSystemConfigurationAggregateType<T>>

    /**
     * Group by SystemConfiguration.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemConfigurationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SystemConfigurationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SystemConfigurationGroupByArgs['orderBy'] }
        : { orderBy?: SystemConfigurationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SystemConfigurationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSystemConfigurationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SystemConfiguration model
   */
  readonly fields: SystemConfigurationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SystemConfiguration.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SystemConfigurationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SystemConfiguration model
   */
  interface SystemConfigurationFieldRefs {
    readonly id: FieldRef<"SystemConfiguration", 'String'>
    readonly category: FieldRef<"SystemConfiguration", 'String'>
    readonly key: FieldRef<"SystemConfiguration", 'String'>
    readonly value: FieldRef<"SystemConfiguration", 'Json'>
    readonly description: FieldRef<"SystemConfiguration", 'String'>
    readonly dataType: FieldRef<"SystemConfiguration", 'String'>
    readonly createdAt: FieldRef<"SystemConfiguration", 'DateTime'>
    readonly updatedAt: FieldRef<"SystemConfiguration", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SystemConfiguration findUnique
   */
  export type SystemConfigurationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemConfiguration
     */
    select?: SystemConfigurationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SystemConfiguration
     */
    omit?: SystemConfigurationOmit<ExtArgs> | null
    /**
     * Filter, which SystemConfiguration to fetch.
     */
    where: SystemConfigurationWhereUniqueInput
  }

  /**
   * SystemConfiguration findUniqueOrThrow
   */
  export type SystemConfigurationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemConfiguration
     */
    select?: SystemConfigurationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SystemConfiguration
     */
    omit?: SystemConfigurationOmit<ExtArgs> | null
    /**
     * Filter, which SystemConfiguration to fetch.
     */
    where: SystemConfigurationWhereUniqueInput
  }

  /**
   * SystemConfiguration findFirst
   */
  export type SystemConfigurationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemConfiguration
     */
    select?: SystemConfigurationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SystemConfiguration
     */
    omit?: SystemConfigurationOmit<ExtArgs> | null
    /**
     * Filter, which SystemConfiguration to fetch.
     */
    where?: SystemConfigurationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SystemConfigurations to fetch.
     */
    orderBy?: SystemConfigurationOrderByWithRelationInput | SystemConfigurationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SystemConfigurations.
     */
    cursor?: SystemConfigurationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SystemConfigurations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SystemConfigurations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SystemConfigurations.
     */
    distinct?: SystemConfigurationScalarFieldEnum | SystemConfigurationScalarFieldEnum[]
  }

  /**
   * SystemConfiguration findFirstOrThrow
   */
  export type SystemConfigurationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemConfiguration
     */
    select?: SystemConfigurationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SystemConfiguration
     */
    omit?: SystemConfigurationOmit<ExtArgs> | null
    /**
     * Filter, which SystemConfiguration to fetch.
     */
    where?: SystemConfigurationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SystemConfigurations to fetch.
     */
    orderBy?: SystemConfigurationOrderByWithRelationInput | SystemConfigurationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SystemConfigurations.
     */
    cursor?: SystemConfigurationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SystemConfigurations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SystemConfigurations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SystemConfigurations.
     */
    distinct?: SystemConfigurationScalarFieldEnum | SystemConfigurationScalarFieldEnum[]
  }

  /**
   * SystemConfiguration findMany
   */
  export type SystemConfigurationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemConfiguration
     */
    select?: SystemConfigurationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SystemConfiguration
     */
    omit?: SystemConfigurationOmit<ExtArgs> | null
    /**
     * Filter, which SystemConfigurations to fetch.
     */
    where?: SystemConfigurationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SystemConfigurations to fetch.
     */
    orderBy?: SystemConfigurationOrderByWithRelationInput | SystemConfigurationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SystemConfigurations.
     */
    cursor?: SystemConfigurationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SystemConfigurations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SystemConfigurations.
     */
    skip?: number
    distinct?: SystemConfigurationScalarFieldEnum | SystemConfigurationScalarFieldEnum[]
  }

  /**
   * SystemConfiguration create
   */
  export type SystemConfigurationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemConfiguration
     */
    select?: SystemConfigurationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SystemConfiguration
     */
    omit?: SystemConfigurationOmit<ExtArgs> | null
    /**
     * The data needed to create a SystemConfiguration.
     */
    data: XOR<SystemConfigurationCreateInput, SystemConfigurationUncheckedCreateInput>
  }

  /**
   * SystemConfiguration createMany
   */
  export type SystemConfigurationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SystemConfigurations.
     */
    data: SystemConfigurationCreateManyInput | SystemConfigurationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SystemConfiguration createManyAndReturn
   */
  export type SystemConfigurationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemConfiguration
     */
    select?: SystemConfigurationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SystemConfiguration
     */
    omit?: SystemConfigurationOmit<ExtArgs> | null
    /**
     * The data used to create many SystemConfigurations.
     */
    data: SystemConfigurationCreateManyInput | SystemConfigurationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SystemConfiguration update
   */
  export type SystemConfigurationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemConfiguration
     */
    select?: SystemConfigurationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SystemConfiguration
     */
    omit?: SystemConfigurationOmit<ExtArgs> | null
    /**
     * The data needed to update a SystemConfiguration.
     */
    data: XOR<SystemConfigurationUpdateInput, SystemConfigurationUncheckedUpdateInput>
    /**
     * Choose, which SystemConfiguration to update.
     */
    where: SystemConfigurationWhereUniqueInput
  }

  /**
   * SystemConfiguration updateMany
   */
  export type SystemConfigurationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SystemConfigurations.
     */
    data: XOR<SystemConfigurationUpdateManyMutationInput, SystemConfigurationUncheckedUpdateManyInput>
    /**
     * Filter which SystemConfigurations to update
     */
    where?: SystemConfigurationWhereInput
    /**
     * Limit how many SystemConfigurations to update.
     */
    limit?: number
  }

  /**
   * SystemConfiguration updateManyAndReturn
   */
  export type SystemConfigurationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemConfiguration
     */
    select?: SystemConfigurationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SystemConfiguration
     */
    omit?: SystemConfigurationOmit<ExtArgs> | null
    /**
     * The data used to update SystemConfigurations.
     */
    data: XOR<SystemConfigurationUpdateManyMutationInput, SystemConfigurationUncheckedUpdateManyInput>
    /**
     * Filter which SystemConfigurations to update
     */
    where?: SystemConfigurationWhereInput
    /**
     * Limit how many SystemConfigurations to update.
     */
    limit?: number
  }

  /**
   * SystemConfiguration upsert
   */
  export type SystemConfigurationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemConfiguration
     */
    select?: SystemConfigurationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SystemConfiguration
     */
    omit?: SystemConfigurationOmit<ExtArgs> | null
    /**
     * The filter to search for the SystemConfiguration to update in case it exists.
     */
    where: SystemConfigurationWhereUniqueInput
    /**
     * In case the SystemConfiguration found by the `where` argument doesn't exist, create a new SystemConfiguration with this data.
     */
    create: XOR<SystemConfigurationCreateInput, SystemConfigurationUncheckedCreateInput>
    /**
     * In case the SystemConfiguration was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SystemConfigurationUpdateInput, SystemConfigurationUncheckedUpdateInput>
  }

  /**
   * SystemConfiguration delete
   */
  export type SystemConfigurationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemConfiguration
     */
    select?: SystemConfigurationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SystemConfiguration
     */
    omit?: SystemConfigurationOmit<ExtArgs> | null
    /**
     * Filter which SystemConfiguration to delete.
     */
    where: SystemConfigurationWhereUniqueInput
  }

  /**
   * SystemConfiguration deleteMany
   */
  export type SystemConfigurationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SystemConfigurations to delete
     */
    where?: SystemConfigurationWhereInput
    /**
     * Limit how many SystemConfigurations to delete.
     */
    limit?: number
  }

  /**
   * SystemConfiguration without action
   */
  export type SystemConfigurationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemConfiguration
     */
    select?: SystemConfigurationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SystemConfiguration
     */
    omit?: SystemConfigurationOmit<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const ProductScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    sku: 'sku',
    barcode: 'barcode',
    slug: 'slug',
    categoryId: 'categoryId',
    brandId: 'brandId',
    weight: 'weight',
    dimensions: 'dimensions',
    color: 'color',
    size: 'size',
    material: 'material',
    costPrice: 'costPrice',
    sellingPrice: 'sellingPrice',
    wholesalePrice: 'wholesalePrice',
    minStockLevel: 'minStockLevel',
    maxStockLevel: 'maxStockLevel',
    reorderPoint: 'reorderPoint',
    reorderQuantity: 'reorderQuantity',
    status: 'status',
    isTrackable: 'isTrackable',
    isSerialized: 'isSerialized',
    images: 'images',
    primaryImage: 'primaryImage',
    metaTitle: 'metaTitle',
    metaDescription: 'metaDescription',
    tags: 'tags',
    leadTimeSupply: 'leadTimeSupply',
    shelfLife: 'shelfLife',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdBy: 'createdBy'
  };

  export type ProductScalarFieldEnum = (typeof ProductScalarFieldEnum)[keyof typeof ProductScalarFieldEnum]


  export const ProductVariantScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    name: 'name',
    sku: 'sku',
    barcode: 'barcode',
    attributes: 'attributes',
    costPrice: 'costPrice',
    sellingPrice: 'sellingPrice',
    minStockLevel: 'minStockLevel',
    reorderPoint: 'reorderPoint',
    isActive: 'isActive',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ProductVariantScalarFieldEnum = (typeof ProductVariantScalarFieldEnum)[keyof typeof ProductVariantScalarFieldEnum]


  export const CategoryScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    slug: 'slug',
    parentId: 'parentId',
    level: 'level',
    path: 'path',
    icon: 'icon',
    color: 'color',
    image: 'image',
    isActive: 'isActive',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CategoryScalarFieldEnum = (typeof CategoryScalarFieldEnum)[keyof typeof CategoryScalarFieldEnum]


  export const BrandScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    logo: 'logo',
    website: 'website',
    contactEmail: 'contactEmail',
    contactPhone: 'contactPhone',
    isActive: 'isActive',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type BrandScalarFieldEnum = (typeof BrandScalarFieldEnum)[keyof typeof BrandScalarFieldEnum]


  export const ProductBundleScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    sku: 'sku',
    bundlePrice: 'bundlePrice',
    discount: 'discount',
    isActive: 'isActive',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ProductBundleScalarFieldEnum = (typeof ProductBundleScalarFieldEnum)[keyof typeof ProductBundleScalarFieldEnum]


  export const WarehouseScalarFieldEnum: {
    id: 'id',
    name: 'name',
    code: 'code',
    description: 'description',
    address: 'address',
    coordinates: 'coordinates',
    timezone: 'timezone',
    managerName: 'managerName',
    managerEmail: 'managerEmail',
    managerPhone: 'managerPhone',
    phone: 'phone',
    email: 'email',
    type: 'type',
    capacity: 'capacity',
    isActive: 'isActive',
    hasRfid: 'hasRfid',
    hasBarcode: 'hasBarcode',
    temperatureControl: 'temperatureControl',
    securityLevel: 'securityLevel',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type WarehouseScalarFieldEnum = (typeof WarehouseScalarFieldEnum)[keyof typeof WarehouseScalarFieldEnum]


  export const InventoryItemScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    variantId: 'variantId',
    warehouseId: 'warehouseId',
    zone: 'zone',
    aisle: 'aisle',
    shelf: 'shelf',
    bin: 'bin',
    locationCode: 'locationCode',
    quantity: 'quantity',
    reservedQuantity: 'reservedQuantity',
    availableQuantity: 'availableQuantity',
    averageCost: 'averageCost',
    lastCost: 'lastCost',
    lotNumber: 'lotNumber',
    batchNumber: 'batchNumber',
    serialNumbers: 'serialNumbers',
    expiryDate: 'expiryDate',
    status: 'status',
    qcStatus: 'qcStatus',
    quarantineReason: 'quarantineReason',
    lastMovement: 'lastMovement',
    lastCount: 'lastCount',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type InventoryItemScalarFieldEnum = (typeof InventoryItemScalarFieldEnum)[keyof typeof InventoryItemScalarFieldEnum]


  export const InventoryMovementScalarFieldEnum: {
    id: 'id',
    type: 'type',
    subtype: 'subtype',
    productId: 'productId',
    variantId: 'variantId',
    warehouseId: 'warehouseId',
    inventoryItemId: 'inventoryItemId',
    quantity: 'quantity',
    quantityBefore: 'quantityBefore',
    quantityAfter: 'quantityAfter',
    unitCost: 'unitCost',
    totalCost: 'totalCost',
    referenceType: 'referenceType',
    referenceId: 'referenceId',
    fromLocation: 'fromLocation',
    toLocation: 'toLocation',
    lotNumber: 'lotNumber',
    batchNumber: 'batchNumber',
    expiryDate: 'expiryDate',
    reason: 'reason',
    notes: 'notes',
    userId: 'userId',
    approvedBy: 'approvedBy',
    approvedAt: 'approvedAt',
    occurredAt: 'occurredAt',
    createdAt: 'createdAt'
  };

  export type InventoryMovementScalarFieldEnum = (typeof InventoryMovementScalarFieldEnum)[keyof typeof InventoryMovementScalarFieldEnum]


  export const SupplierScalarFieldEnum: {
    id: 'id',
    name: 'name',
    code: 'code',
    email: 'email',
    phone: 'phone',
    website: 'website',
    companyType: 'companyType',
    taxId: 'taxId',
    vatNumber: 'vatNumber',
    registrationNumber: 'registrationNumber',
    billingAddress: 'billingAddress',
    shippingAddress: 'shippingAddress',
    contactName: 'contactName',
    contactEmail: 'contactEmail',
    contactPhone: 'contactPhone',
    contactTitle: 'contactTitle',
    paymentTerms: 'paymentTerms',
    creditLimit: 'creditLimit',
    currency: 'currency',
    rating: 'rating',
    onTimeDelivery: 'onTimeDelivery',
    qualityRating: 'qualityRating',
    status: 'status',
    certifications: 'certifications',
    notes: 'notes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdBy: 'createdBy'
  };

  export type SupplierScalarFieldEnum = (typeof SupplierScalarFieldEnum)[keyof typeof SupplierScalarFieldEnum]


  export const ProductSupplierScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    supplierId: 'supplierId',
    supplierSku: 'supplierSku',
    supplierName: 'supplierName',
    unitCost: 'unitCost',
    currency: 'currency',
    minOrderQty: 'minOrderQty',
    maxOrderQty: 'maxOrderQty',
    leadTimeDays: 'leadTimeDays',
    isPreferred: 'isPreferred',
    isActive: 'isActive',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ProductSupplierScalarFieldEnum = (typeof ProductSupplierScalarFieldEnum)[keyof typeof ProductSupplierScalarFieldEnum]


  export const SupplierContactScalarFieldEnum: {
    id: 'id',
    supplierId: 'supplierId',
    name: 'name',
    title: 'title',
    email: 'email',
    phone: 'phone',
    mobile: 'mobile',
    isPrimary: 'isPrimary',
    department: 'department',
    isActive: 'isActive',
    notes: 'notes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SupplierContactScalarFieldEnum = (typeof SupplierContactScalarFieldEnum)[keyof typeof SupplierContactScalarFieldEnum]


  export const SupplierDocumentScalarFieldEnum: {
    id: 'id',
    supplierId: 'supplierId',
    name: 'name',
    type: 'type',
    category: 'category',
    fileName: 'fileName',
    fileSize: 'fileSize',
    fileType: 'fileType',
    filePath: 'filePath',
    uploadedBy: 'uploadedBy',
    uploadedAt: 'uploadedAt',
    expiresAt: 'expiresAt',
    isActive: 'isActive'
  };

  export type SupplierDocumentScalarFieldEnum = (typeof SupplierDocumentScalarFieldEnum)[keyof typeof SupplierDocumentScalarFieldEnum]


  export const PurchaseOrderScalarFieldEnum: {
    id: 'id',
    orderNumber: 'orderNumber',
    supplierId: 'supplierId',
    warehouseId: 'warehouseId',
    subtotal: 'subtotal',
    taxAmount: 'taxAmount',
    shippingCost: 'shippingCost',
    discountAmount: 'discountAmount',
    totalAmount: 'totalAmount',
    currency: 'currency',
    status: 'status',
    orderDate: 'orderDate',
    expectedDate: 'expectedDate',
    deliveryDate: 'deliveryDate',
    paymentTerms: 'paymentTerms',
    shippingTerms: 'shippingTerms',
    trackingNumber: 'trackingNumber',
    carrier: 'carrier',
    approvedBy: 'approvedBy',
    approvedAt: 'approvedAt',
    notes: 'notes',
    internalNotes: 'internalNotes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdBy: 'createdBy'
  };

  export type PurchaseOrderScalarFieldEnum = (typeof PurchaseOrderScalarFieldEnum)[keyof typeof PurchaseOrderScalarFieldEnum]


  export const PurchaseOrderItemScalarFieldEnum: {
    id: 'id',
    purchaseOrderId: 'purchaseOrderId',
    productId: 'productId',
    variantId: 'variantId',
    orderedQty: 'orderedQty',
    receivedQty: 'receivedQty',
    remainingQty: 'remainingQty',
    unitCost: 'unitCost',
    totalCost: 'totalCost',
    productName: 'productName',
    productSku: 'productSku',
    supplierSku: 'supplierSku',
    expectedDate: 'expectedDate',
    status: 'status',
    notes: 'notes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type PurchaseOrderItemScalarFieldEnum = (typeof PurchaseOrderItemScalarFieldEnum)[keyof typeof PurchaseOrderItemScalarFieldEnum]


  export const GoodsReceiptScalarFieldEnum: {
    id: 'id',
    purchaseOrderId: 'purchaseOrderId',
    warehouseId: 'warehouseId',
    receiptNumber: 'receiptNumber',
    receivedDate: 'receivedDate',
    qcStatus: 'qcStatus',
    qcNotes: 'qcNotes',
    qcBy: 'qcBy',
    qcDate: 'qcDate',
    status: 'status',
    notes: 'notes',
    receivedBy: 'receivedBy',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type GoodsReceiptScalarFieldEnum = (typeof GoodsReceiptScalarFieldEnum)[keyof typeof GoodsReceiptScalarFieldEnum]


  export const GoodsReceiptItemScalarFieldEnum: {
    id: 'id',
    goodsReceiptId: 'goodsReceiptId',
    productId: 'productId',
    variantId: 'variantId',
    expectedQty: 'expectedQty',
    receivedQty: 'receivedQty',
    acceptedQty: 'acceptedQty',
    rejectedQty: 'rejectedQty',
    qcStatus: 'qcStatus',
    qcNotes: 'qcNotes',
    rejectionReason: 'rejectionReason',
    lotNumber: 'lotNumber',
    batchNumber: 'batchNumber',
    expiryDate: 'expiryDate',
    serialNumbers: 'serialNumbers',
    receivedLocation: 'receivedLocation',
    notes: 'notes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type GoodsReceiptItemScalarFieldEnum = (typeof GoodsReceiptItemScalarFieldEnum)[keyof typeof GoodsReceiptItemScalarFieldEnum]


  export const CustomerScalarFieldEnum: {
    id: 'id',
    customerNumber: 'customerNumber',
    type: 'type',
    firstName: 'firstName',
    lastName: 'lastName',
    companyName: 'companyName',
    taxId: 'taxId',
    email: 'email',
    phone: 'phone',
    mobile: 'mobile',
    billingAddress: 'billingAddress',
    shippingAddress: 'shippingAddress',
    creditLimit: 'creditLimit',
    paymentTerms: 'paymentTerms',
    currency: 'currency',
    preferredLanguage: 'preferredLanguage',
    timezone: 'timezone',
    allowMarketing: 'allowMarketing',
    source: 'source',
    status: 'status',
    notes: 'notes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdBy: 'createdBy'
  };

  export type CustomerScalarFieldEnum = (typeof CustomerScalarFieldEnum)[keyof typeof CustomerScalarFieldEnum]


  export const CustomerContactScalarFieldEnum: {
    id: 'id',
    customerId: 'customerId',
    name: 'name',
    title: 'title',
    email: 'email',
    phone: 'phone',
    mobile: 'mobile',
    isPrimary: 'isPrimary',
    department: 'department',
    isActive: 'isActive',
    notes: 'notes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CustomerContactScalarFieldEnum = (typeof CustomerContactScalarFieldEnum)[keyof typeof CustomerContactScalarFieldEnum]


  export const OrderScalarFieldEnum: {
    id: 'id',
    orderNumber: 'orderNumber',
    customerId: 'customerId',
    warehouseId: 'warehouseId',
    type: 'type',
    channel: 'channel',
    subtotal: 'subtotal',
    taxAmount: 'taxAmount',
    shippingCost: 'shippingCost',
    discountAmount: 'discountAmount',
    totalAmount: 'totalAmount',
    currency: 'currency',
    status: 'status',
    fulfillmentStatus: 'fulfillmentStatus',
    paymentStatus: 'paymentStatus',
    orderDate: 'orderDate',
    requiredDate: 'requiredDate',
    promisedDate: 'promisedDate',
    shippedDate: 'shippedDate',
    deliveredDate: 'deliveredDate',
    shippingMethod: 'shippingMethod',
    trackingNumber: 'trackingNumber',
    carrier: 'carrier',
    shippingAddress: 'shippingAddress',
    priority: 'priority',
    rushOrder: 'rushOrder',
    notes: 'notes',
    internalNotes: 'internalNotes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdBy: 'createdBy'
  };

  export type OrderScalarFieldEnum = (typeof OrderScalarFieldEnum)[keyof typeof OrderScalarFieldEnum]


  export const OrderItemScalarFieldEnum: {
    id: 'id',
    orderId: 'orderId',
    productId: 'productId',
    variantId: 'variantId',
    orderedQty: 'orderedQty',
    shippedQty: 'shippedQty',
    remainingQty: 'remainingQty',
    unitPrice: 'unitPrice',
    totalPrice: 'totalPrice',
    discountAmount: 'discountAmount',
    productName: 'productName',
    productSku: 'productSku',
    status: 'status',
    notes: 'notes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type OrderItemScalarFieldEnum = (typeof OrderItemScalarFieldEnum)[keyof typeof OrderItemScalarFieldEnum]


  export const ShipmentScalarFieldEnum: {
    id: 'id',
    shipmentNumber: 'shipmentNumber',
    orderId: 'orderId',
    warehouseId: 'warehouseId',
    carrier: 'carrier',
    service: 'service',
    trackingNumber: 'trackingNumber',
    fromAddress: 'fromAddress',
    toAddress: 'toAddress',
    packageCount: 'packageCount',
    weight: 'weight',
    dimensions: 'dimensions',
    shippingCost: 'shippingCost',
    insuranceValue: 'insuranceValue',
    status: 'status',
    shipDate: 'shipDate',
    estimatedDelivery: 'estimatedDelivery',
    actualDelivery: 'actualDelivery',
    notes: 'notes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdBy: 'createdBy'
  };

  export type ShipmentScalarFieldEnum = (typeof ShipmentScalarFieldEnum)[keyof typeof ShipmentScalarFieldEnum]


  export const ShipmentPackageScalarFieldEnum: {
    id: 'id',
    shipmentId: 'shipmentId',
    packageNumber: 'packageNumber',
    trackingNumber: 'trackingNumber',
    weight: 'weight',
    dimensions: 'dimensions',
    contents: 'contents',
    status: 'status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ShipmentPackageScalarFieldEnum = (typeof ShipmentPackageScalarFieldEnum)[keyof typeof ShipmentPackageScalarFieldEnum]


  export const ShipmentTrackingScalarFieldEnum: {
    id: 'id',
    shipmentId: 'shipmentId',
    status: 'status',
    description: 'description',
    location: 'location',
    eventDate: 'eventDate',
    rawData: 'rawData',
    createdAt: 'createdAt'
  };

  export type ShipmentTrackingScalarFieldEnum = (typeof ShipmentTrackingScalarFieldEnum)[keyof typeof ShipmentTrackingScalarFieldEnum]


  export const StockTransferScalarFieldEnum: {
    id: 'id',
    transferNumber: 'transferNumber',
    fromWarehouseId: 'fromWarehouseId',
    toWarehouseId: 'toWarehouseId',
    status: 'status',
    requestedDate: 'requestedDate',
    shippedDate: 'shippedDate',
    receivedDate: 'receivedDate',
    approvedBy: 'approvedBy',
    approvedAt: 'approvedAt',
    reason: 'reason',
    notes: 'notes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdBy: 'createdBy'
  };

  export type StockTransferScalarFieldEnum = (typeof StockTransferScalarFieldEnum)[keyof typeof StockTransferScalarFieldEnum]


  export const StockTransferItemScalarFieldEnum: {
    id: 'id',
    transferId: 'transferId',
    productId: 'productId',
    variantId: 'variantId',
    requestedQty: 'requestedQty',
    shippedQty: 'shippedQty',
    receivedQty: 'receivedQty',
    productName: 'productName',
    productSku: 'productSku',
    lotNumber: 'lotNumber',
    batchNumber: 'batchNumber',
    status: 'status',
    notes: 'notes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type StockTransferItemScalarFieldEnum = (typeof StockTransferItemScalarFieldEnum)[keyof typeof StockTransferItemScalarFieldEnum]


  export const StockReservationScalarFieldEnum: {
    id: 'id',
    inventoryItemId: 'inventoryItemId',
    reservationType: 'reservationType',
    referenceType: 'referenceType',
    referenceId: 'referenceId',
    quantity: 'quantity',
    status: 'status',
    reservedAt: 'reservedAt',
    expiresAt: 'expiresAt',
    releasedAt: 'releasedAt',
    reservedBy: 'reservedBy',
    notes: 'notes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type StockReservationScalarFieldEnum = (typeof StockReservationScalarFieldEnum)[keyof typeof StockReservationScalarFieldEnum]


  export const SupplierInvoiceScalarFieldEnum: {
    id: 'id',
    invoiceNumber: 'invoiceNumber',
    supplierId: 'supplierId',
    purchaseOrderId: 'purchaseOrderId',
    subtotal: 'subtotal',
    taxAmount: 'taxAmount',
    totalAmount: 'totalAmount',
    currency: 'currency',
    invoiceDate: 'invoiceDate',
    dueDate: 'dueDate',
    paidDate: 'paidDate',
    status: 'status',
    paymentMethod: 'paymentMethod',
    paymentReference: 'paymentReference',
    notes: 'notes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SupplierInvoiceScalarFieldEnum = (typeof SupplierInvoiceScalarFieldEnum)[keyof typeof SupplierInvoiceScalarFieldEnum]


  export const CustomerInvoiceScalarFieldEnum: {
    id: 'id',
    invoiceNumber: 'invoiceNumber',
    customerId: 'customerId',
    orderId: 'orderId',
    subtotal: 'subtotal',
    taxAmount: 'taxAmount',
    totalAmount: 'totalAmount',
    paidAmount: 'paidAmount',
    balanceAmount: 'balanceAmount',
    currency: 'currency',
    invoiceDate: 'invoiceDate',
    dueDate: 'dueDate',
    paidDate: 'paidDate',
    status: 'status',
    paymentMethod: 'paymentMethod',
    paymentReference: 'paymentReference',
    notes: 'notes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CustomerInvoiceScalarFieldEnum = (typeof CustomerInvoiceScalarFieldEnum)[keyof typeof CustomerInvoiceScalarFieldEnum]


  export const InventoryAuditScalarFieldEnum: {
    id: 'id',
    auditNumber: 'auditNumber',
    warehouseId: 'warehouseId',
    productId: 'productId',
    type: 'type',
    method: 'method',
    status: 'status',
    plannedDate: 'plannedDate',
    startedDate: 'startedDate',
    completedDate: 'completedDate',
    auditedBy: 'auditedBy',
    supervisedBy: 'supervisedBy',
    totalItems: 'totalItems',
    itemsCounted: 'itemsCounted',
    discrepancies: 'discrepancies',
    adjustmentValue: 'adjustmentValue',
    notes: 'notes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type InventoryAuditScalarFieldEnum = (typeof InventoryAuditScalarFieldEnum)[keyof typeof InventoryAuditScalarFieldEnum]


  export const InventoryAuditItemScalarFieldEnum: {
    id: 'id',
    auditId: 'auditId',
    productId: 'productId',
    variantId: 'variantId',
    warehouseId: 'warehouseId',
    systemQty: 'systemQty',
    countedQty: 'countedQty',
    adjustmentQty: 'adjustmentQty',
    location: 'location',
    lotNumber: 'lotNumber',
    batchNumber: 'batchNumber',
    countedBy: 'countedBy',
    countedAt: 'countedAt',
    verifiedBy: 'verifiedBy',
    verifiedAt: 'verifiedAt',
    status: 'status',
    discrepancyReason: 'discrepancyReason',
    requiresInvestigation: 'requiresInvestigation',
    notes: 'notes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type InventoryAuditItemScalarFieldEnum = (typeof InventoryAuditItemScalarFieldEnum)[keyof typeof InventoryAuditItemScalarFieldEnum]


  export const ProductReviewScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    rating: 'rating',
    title: 'title',
    review: 'review',
    reviewerName: 'reviewerName',
    reviewerEmail: 'reviewerEmail',
    isApproved: 'isApproved',
    isVisible: 'isVisible',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ProductReviewScalarFieldEnum = (typeof ProductReviewScalarFieldEnum)[keyof typeof ProductReviewScalarFieldEnum]


  export const SystemConfigurationScalarFieldEnum: {
    id: 'id',
    category: 'category',
    key: 'key',
    value: 'value',
    description: 'description',
    dataType: 'dataType',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SystemConfigurationScalarFieldEnum = (typeof SystemConfigurationScalarFieldEnum)[keyof typeof SystemConfigurationScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'ProductStatus'
   */
  export type EnumProductStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProductStatus'>
    


  /**
   * Reference to a field of type 'ProductStatus[]'
   */
  export type ListEnumProductStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProductStatus[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'WarehouseType'
   */
  export type EnumWarehouseTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'WarehouseType'>
    


  /**
   * Reference to a field of type 'WarehouseType[]'
   */
  export type ListEnumWarehouseTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'WarehouseType[]'>
    


  /**
   * Reference to a field of type 'InventoryStatus'
   */
  export type EnumInventoryStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'InventoryStatus'>
    


  /**
   * Reference to a field of type 'InventoryStatus[]'
   */
  export type ListEnumInventoryStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'InventoryStatus[]'>
    


  /**
   * Reference to a field of type 'QualityStatus'
   */
  export type EnumQualityStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QualityStatus'>
    


  /**
   * Reference to a field of type 'QualityStatus[]'
   */
  export type ListEnumQualityStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QualityStatus[]'>
    


  /**
   * Reference to a field of type 'MovementType'
   */
  export type EnumMovementTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MovementType'>
    


  /**
   * Reference to a field of type 'MovementType[]'
   */
  export type ListEnumMovementTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MovementType[]'>
    


  /**
   * Reference to a field of type 'CompanyType'
   */
  export type EnumCompanyTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CompanyType'>
    


  /**
   * Reference to a field of type 'CompanyType[]'
   */
  export type ListEnumCompanyTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CompanyType[]'>
    


  /**
   * Reference to a field of type 'SupplierStatus'
   */
  export type EnumSupplierStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SupplierStatus'>
    


  /**
   * Reference to a field of type 'SupplierStatus[]'
   */
  export type ListEnumSupplierStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SupplierStatus[]'>
    


  /**
   * Reference to a field of type 'DocumentType'
   */
  export type EnumDocumentTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DocumentType'>
    


  /**
   * Reference to a field of type 'DocumentType[]'
   */
  export type ListEnumDocumentTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DocumentType[]'>
    


  /**
   * Reference to a field of type 'PurchaseOrderStatus'
   */
  export type EnumPurchaseOrderStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PurchaseOrderStatus'>
    


  /**
   * Reference to a field of type 'PurchaseOrderStatus[]'
   */
  export type ListEnumPurchaseOrderStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PurchaseOrderStatus[]'>
    


  /**
   * Reference to a field of type 'PurchaseItemStatus'
   */
  export type EnumPurchaseItemStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PurchaseItemStatus'>
    


  /**
   * Reference to a field of type 'PurchaseItemStatus[]'
   */
  export type ListEnumPurchaseItemStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PurchaseItemStatus[]'>
    


  /**
   * Reference to a field of type 'ReceiptStatus'
   */
  export type EnumReceiptStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReceiptStatus'>
    


  /**
   * Reference to a field of type 'ReceiptStatus[]'
   */
  export type ListEnumReceiptStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReceiptStatus[]'>
    


  /**
   * Reference to a field of type 'CustomerType'
   */
  export type EnumCustomerTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CustomerType'>
    


  /**
   * Reference to a field of type 'CustomerType[]'
   */
  export type ListEnumCustomerTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CustomerType[]'>
    


  /**
   * Reference to a field of type 'CustomerStatus'
   */
  export type EnumCustomerStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CustomerStatus'>
    


  /**
   * Reference to a field of type 'CustomerStatus[]'
   */
  export type ListEnumCustomerStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CustomerStatus[]'>
    


  /**
   * Reference to a field of type 'OrderType'
   */
  export type EnumOrderTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderType'>
    


  /**
   * Reference to a field of type 'OrderType[]'
   */
  export type ListEnumOrderTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderType[]'>
    


  /**
   * Reference to a field of type 'OrderChannel'
   */
  export type EnumOrderChannelFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderChannel'>
    


  /**
   * Reference to a field of type 'OrderChannel[]'
   */
  export type ListEnumOrderChannelFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderChannel[]'>
    


  /**
   * Reference to a field of type 'OrderStatus'
   */
  export type EnumOrderStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderStatus'>
    


  /**
   * Reference to a field of type 'OrderStatus[]'
   */
  export type ListEnumOrderStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderStatus[]'>
    


  /**
   * Reference to a field of type 'FulfillmentStatus'
   */
  export type EnumFulfillmentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'FulfillmentStatus'>
    


  /**
   * Reference to a field of type 'FulfillmentStatus[]'
   */
  export type ListEnumFulfillmentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'FulfillmentStatus[]'>
    


  /**
   * Reference to a field of type 'PaymentStatus'
   */
  export type EnumPaymentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentStatus'>
    


  /**
   * Reference to a field of type 'PaymentStatus[]'
   */
  export type ListEnumPaymentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentStatus[]'>
    


  /**
   * Reference to a field of type 'OrderPriority'
   */
  export type EnumOrderPriorityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderPriority'>
    


  /**
   * Reference to a field of type 'OrderPriority[]'
   */
  export type ListEnumOrderPriorityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderPriority[]'>
    


  /**
   * Reference to a field of type 'OrderItemStatus'
   */
  export type EnumOrderItemStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderItemStatus'>
    


  /**
   * Reference to a field of type 'OrderItemStatus[]'
   */
  export type ListEnumOrderItemStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderItemStatus[]'>
    


  /**
   * Reference to a field of type 'ShipmentStatus'
   */
  export type EnumShipmentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ShipmentStatus'>
    


  /**
   * Reference to a field of type 'ShipmentStatus[]'
   */
  export type ListEnumShipmentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ShipmentStatus[]'>
    


  /**
   * Reference to a field of type 'TransferStatus'
   */
  export type EnumTransferStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TransferStatus'>
    


  /**
   * Reference to a field of type 'TransferStatus[]'
   */
  export type ListEnumTransferStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TransferStatus[]'>
    


  /**
   * Reference to a field of type 'TransferItemStatus'
   */
  export type EnumTransferItemStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TransferItemStatus'>
    


  /**
   * Reference to a field of type 'TransferItemStatus[]'
   */
  export type ListEnumTransferItemStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TransferItemStatus[]'>
    


  /**
   * Reference to a field of type 'ReservationType'
   */
  export type EnumReservationTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReservationType'>
    


  /**
   * Reference to a field of type 'ReservationType[]'
   */
  export type ListEnumReservationTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReservationType[]'>
    


  /**
   * Reference to a field of type 'ReservationStatus'
   */
  export type EnumReservationStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReservationStatus'>
    


  /**
   * Reference to a field of type 'ReservationStatus[]'
   */
  export type ListEnumReservationStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReservationStatus[]'>
    


  /**
   * Reference to a field of type 'InvoiceStatus'
   */
  export type EnumInvoiceStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'InvoiceStatus'>
    


  /**
   * Reference to a field of type 'InvoiceStatus[]'
   */
  export type ListEnumInvoiceStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'InvoiceStatus[]'>
    


  /**
   * Reference to a field of type 'AuditType'
   */
  export type EnumAuditTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AuditType'>
    


  /**
   * Reference to a field of type 'AuditType[]'
   */
  export type ListEnumAuditTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AuditType[]'>
    


  /**
   * Reference to a field of type 'AuditMethod'
   */
  export type EnumAuditMethodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AuditMethod'>
    


  /**
   * Reference to a field of type 'AuditMethod[]'
   */
  export type ListEnumAuditMethodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AuditMethod[]'>
    


  /**
   * Reference to a field of type 'AuditStatus'
   */
  export type EnumAuditStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AuditStatus'>
    


  /**
   * Reference to a field of type 'AuditStatus[]'
   */
  export type ListEnumAuditStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AuditStatus[]'>
    


  /**
   * Reference to a field of type 'AuditItemStatus'
   */
  export type EnumAuditItemStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AuditItemStatus'>
    


  /**
   * Reference to a field of type 'AuditItemStatus[]'
   */
  export type ListEnumAuditItemStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AuditItemStatus[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type ProductWhereInput = {
    AND?: ProductWhereInput | ProductWhereInput[]
    OR?: ProductWhereInput[]
    NOT?: ProductWhereInput | ProductWhereInput[]
    id?: StringFilter<"Product"> | string
    name?: StringFilter<"Product"> | string
    description?: StringNullableFilter<"Product"> | string | null
    sku?: StringFilter<"Product"> | string
    barcode?: StringNullableFilter<"Product"> | string | null
    slug?: StringNullableFilter<"Product"> | string | null
    categoryId?: StringNullableFilter<"Product"> | string | null
    brandId?: StringNullableFilter<"Product"> | string | null
    weight?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    dimensions?: JsonNullableFilter<"Product">
    color?: StringNullableFilter<"Product"> | string | null
    size?: StringNullableFilter<"Product"> | string | null
    material?: StringNullableFilter<"Product"> | string | null
    costPrice?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFilter<"Product"> | number
    maxStockLevel?: IntNullableFilter<"Product"> | number | null
    reorderPoint?: IntNullableFilter<"Product"> | number | null
    reorderQuantity?: IntNullableFilter<"Product"> | number | null
    status?: EnumProductStatusFilter<"Product"> | $Enums.ProductStatus
    isTrackable?: BoolFilter<"Product"> | boolean
    isSerialized?: BoolFilter<"Product"> | boolean
    images?: JsonNullableFilter<"Product">
    primaryImage?: StringNullableFilter<"Product"> | string | null
    metaTitle?: StringNullableFilter<"Product"> | string | null
    metaDescription?: StringNullableFilter<"Product"> | string | null
    tags?: JsonNullableFilter<"Product">
    leadTimeSupply?: IntNullableFilter<"Product"> | number | null
    shelfLife?: IntNullableFilter<"Product"> | number | null
    createdAt?: DateTimeFilter<"Product"> | Date | string
    updatedAt?: DateTimeFilter<"Product"> | Date | string
    createdBy?: StringFilter<"Product"> | string
    category?: XOR<CategoryNullableScalarRelationFilter, CategoryWhereInput> | null
    brand?: XOR<BrandNullableScalarRelationFilter, BrandWhereInput> | null
    inventoryItems?: InventoryItemListRelationFilter
    variants?: ProductVariantListRelationFilter
    suppliers?: ProductSupplierListRelationFilter
    orderItems?: OrderItemListRelationFilter
    purchaseItems?: PurchaseOrderItemListRelationFilter
    movements?: InventoryMovementListRelationFilter
    audits?: InventoryAuditListRelationFilter
    reviews?: ProductReviewListRelationFilter
    bundles?: ProductBundleListRelationFilter
    bundleItems?: ProductBundleListRelationFilter
    goodsReceiptItems?: GoodsReceiptItemListRelationFilter
    transferItems?: StockTransferItemListRelationFilter
    auditItems?: InventoryAuditItemListRelationFilter
  }

  export type ProductOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    sku?: SortOrder
    barcode?: SortOrderInput | SortOrder
    slug?: SortOrderInput | SortOrder
    categoryId?: SortOrderInput | SortOrder
    brandId?: SortOrderInput | SortOrder
    weight?: SortOrderInput | SortOrder
    dimensions?: SortOrderInput | SortOrder
    color?: SortOrderInput | SortOrder
    size?: SortOrderInput | SortOrder
    material?: SortOrderInput | SortOrder
    costPrice?: SortOrderInput | SortOrder
    sellingPrice?: SortOrderInput | SortOrder
    wholesalePrice?: SortOrderInput | SortOrder
    minStockLevel?: SortOrder
    maxStockLevel?: SortOrderInput | SortOrder
    reorderPoint?: SortOrderInput | SortOrder
    reorderQuantity?: SortOrderInput | SortOrder
    status?: SortOrder
    isTrackable?: SortOrder
    isSerialized?: SortOrder
    images?: SortOrderInput | SortOrder
    primaryImage?: SortOrderInput | SortOrder
    metaTitle?: SortOrderInput | SortOrder
    metaDescription?: SortOrderInput | SortOrder
    tags?: SortOrderInput | SortOrder
    leadTimeSupply?: SortOrderInput | SortOrder
    shelfLife?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    category?: CategoryOrderByWithRelationInput
    brand?: BrandOrderByWithRelationInput
    inventoryItems?: InventoryItemOrderByRelationAggregateInput
    variants?: ProductVariantOrderByRelationAggregateInput
    suppliers?: ProductSupplierOrderByRelationAggregateInput
    orderItems?: OrderItemOrderByRelationAggregateInput
    purchaseItems?: PurchaseOrderItemOrderByRelationAggregateInput
    movements?: InventoryMovementOrderByRelationAggregateInput
    audits?: InventoryAuditOrderByRelationAggregateInput
    reviews?: ProductReviewOrderByRelationAggregateInput
    bundles?: ProductBundleOrderByRelationAggregateInput
    bundleItems?: ProductBundleOrderByRelationAggregateInput
    goodsReceiptItems?: GoodsReceiptItemOrderByRelationAggregateInput
    transferItems?: StockTransferItemOrderByRelationAggregateInput
    auditItems?: InventoryAuditItemOrderByRelationAggregateInput
  }

  export type ProductWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    sku?: string
    barcode?: string
    slug?: string
    AND?: ProductWhereInput | ProductWhereInput[]
    OR?: ProductWhereInput[]
    NOT?: ProductWhereInput | ProductWhereInput[]
    name?: StringFilter<"Product"> | string
    description?: StringNullableFilter<"Product"> | string | null
    categoryId?: StringNullableFilter<"Product"> | string | null
    brandId?: StringNullableFilter<"Product"> | string | null
    weight?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    dimensions?: JsonNullableFilter<"Product">
    color?: StringNullableFilter<"Product"> | string | null
    size?: StringNullableFilter<"Product"> | string | null
    material?: StringNullableFilter<"Product"> | string | null
    costPrice?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFilter<"Product"> | number
    maxStockLevel?: IntNullableFilter<"Product"> | number | null
    reorderPoint?: IntNullableFilter<"Product"> | number | null
    reorderQuantity?: IntNullableFilter<"Product"> | number | null
    status?: EnumProductStatusFilter<"Product"> | $Enums.ProductStatus
    isTrackable?: BoolFilter<"Product"> | boolean
    isSerialized?: BoolFilter<"Product"> | boolean
    images?: JsonNullableFilter<"Product">
    primaryImage?: StringNullableFilter<"Product"> | string | null
    metaTitle?: StringNullableFilter<"Product"> | string | null
    metaDescription?: StringNullableFilter<"Product"> | string | null
    tags?: JsonNullableFilter<"Product">
    leadTimeSupply?: IntNullableFilter<"Product"> | number | null
    shelfLife?: IntNullableFilter<"Product"> | number | null
    createdAt?: DateTimeFilter<"Product"> | Date | string
    updatedAt?: DateTimeFilter<"Product"> | Date | string
    createdBy?: StringFilter<"Product"> | string
    category?: XOR<CategoryNullableScalarRelationFilter, CategoryWhereInput> | null
    brand?: XOR<BrandNullableScalarRelationFilter, BrandWhereInput> | null
    inventoryItems?: InventoryItemListRelationFilter
    variants?: ProductVariantListRelationFilter
    suppliers?: ProductSupplierListRelationFilter
    orderItems?: OrderItemListRelationFilter
    purchaseItems?: PurchaseOrderItemListRelationFilter
    movements?: InventoryMovementListRelationFilter
    audits?: InventoryAuditListRelationFilter
    reviews?: ProductReviewListRelationFilter
    bundles?: ProductBundleListRelationFilter
    bundleItems?: ProductBundleListRelationFilter
    goodsReceiptItems?: GoodsReceiptItemListRelationFilter
    transferItems?: StockTransferItemListRelationFilter
    auditItems?: InventoryAuditItemListRelationFilter
  }, "id" | "sku" | "barcode" | "slug">

  export type ProductOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    sku?: SortOrder
    barcode?: SortOrderInput | SortOrder
    slug?: SortOrderInput | SortOrder
    categoryId?: SortOrderInput | SortOrder
    brandId?: SortOrderInput | SortOrder
    weight?: SortOrderInput | SortOrder
    dimensions?: SortOrderInput | SortOrder
    color?: SortOrderInput | SortOrder
    size?: SortOrderInput | SortOrder
    material?: SortOrderInput | SortOrder
    costPrice?: SortOrderInput | SortOrder
    sellingPrice?: SortOrderInput | SortOrder
    wholesalePrice?: SortOrderInput | SortOrder
    minStockLevel?: SortOrder
    maxStockLevel?: SortOrderInput | SortOrder
    reorderPoint?: SortOrderInput | SortOrder
    reorderQuantity?: SortOrderInput | SortOrder
    status?: SortOrder
    isTrackable?: SortOrder
    isSerialized?: SortOrder
    images?: SortOrderInput | SortOrder
    primaryImage?: SortOrderInput | SortOrder
    metaTitle?: SortOrderInput | SortOrder
    metaDescription?: SortOrderInput | SortOrder
    tags?: SortOrderInput | SortOrder
    leadTimeSupply?: SortOrderInput | SortOrder
    shelfLife?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    _count?: ProductCountOrderByAggregateInput
    _avg?: ProductAvgOrderByAggregateInput
    _max?: ProductMaxOrderByAggregateInput
    _min?: ProductMinOrderByAggregateInput
    _sum?: ProductSumOrderByAggregateInput
  }

  export type ProductScalarWhereWithAggregatesInput = {
    AND?: ProductScalarWhereWithAggregatesInput | ProductScalarWhereWithAggregatesInput[]
    OR?: ProductScalarWhereWithAggregatesInput[]
    NOT?: ProductScalarWhereWithAggregatesInput | ProductScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Product"> | string
    name?: StringWithAggregatesFilter<"Product"> | string
    description?: StringNullableWithAggregatesFilter<"Product"> | string | null
    sku?: StringWithAggregatesFilter<"Product"> | string
    barcode?: StringNullableWithAggregatesFilter<"Product"> | string | null
    slug?: StringNullableWithAggregatesFilter<"Product"> | string | null
    categoryId?: StringNullableWithAggregatesFilter<"Product"> | string | null
    brandId?: StringNullableWithAggregatesFilter<"Product"> | string | null
    weight?: DecimalNullableWithAggregatesFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    dimensions?: JsonNullableWithAggregatesFilter<"Product">
    color?: StringNullableWithAggregatesFilter<"Product"> | string | null
    size?: StringNullableWithAggregatesFilter<"Product"> | string | null
    material?: StringNullableWithAggregatesFilter<"Product"> | string | null
    costPrice?: DecimalNullableWithAggregatesFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: DecimalNullableWithAggregatesFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: DecimalNullableWithAggregatesFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntWithAggregatesFilter<"Product"> | number
    maxStockLevel?: IntNullableWithAggregatesFilter<"Product"> | number | null
    reorderPoint?: IntNullableWithAggregatesFilter<"Product"> | number | null
    reorderQuantity?: IntNullableWithAggregatesFilter<"Product"> | number | null
    status?: EnumProductStatusWithAggregatesFilter<"Product"> | $Enums.ProductStatus
    isTrackable?: BoolWithAggregatesFilter<"Product"> | boolean
    isSerialized?: BoolWithAggregatesFilter<"Product"> | boolean
    images?: JsonNullableWithAggregatesFilter<"Product">
    primaryImage?: StringNullableWithAggregatesFilter<"Product"> | string | null
    metaTitle?: StringNullableWithAggregatesFilter<"Product"> | string | null
    metaDescription?: StringNullableWithAggregatesFilter<"Product"> | string | null
    tags?: JsonNullableWithAggregatesFilter<"Product">
    leadTimeSupply?: IntNullableWithAggregatesFilter<"Product"> | number | null
    shelfLife?: IntNullableWithAggregatesFilter<"Product"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"Product"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Product"> | Date | string
    createdBy?: StringWithAggregatesFilter<"Product"> | string
  }

  export type ProductVariantWhereInput = {
    AND?: ProductVariantWhereInput | ProductVariantWhereInput[]
    OR?: ProductVariantWhereInput[]
    NOT?: ProductVariantWhereInput | ProductVariantWhereInput[]
    id?: StringFilter<"ProductVariant"> | string
    productId?: StringFilter<"ProductVariant"> | string
    name?: StringFilter<"ProductVariant"> | string
    sku?: StringFilter<"ProductVariant"> | string
    barcode?: StringNullableFilter<"ProductVariant"> | string | null
    attributes?: JsonFilter<"ProductVariant">
    costPrice?: DecimalNullableFilter<"ProductVariant"> | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: DecimalNullableFilter<"ProductVariant"> | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntNullableFilter<"ProductVariant"> | number | null
    reorderPoint?: IntNullableFilter<"ProductVariant"> | number | null
    isActive?: BoolFilter<"ProductVariant"> | boolean
    createdAt?: DateTimeFilter<"ProductVariant"> | Date | string
    updatedAt?: DateTimeFilter<"ProductVariant"> | Date | string
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    inventoryItems?: InventoryItemListRelationFilter
    movements?: InventoryMovementListRelationFilter
    purchaseItems?: PurchaseOrderItemListRelationFilter
    goodsReceiptItems?: GoodsReceiptItemListRelationFilter
    orderItems?: OrderItemListRelationFilter
    transferItems?: StockTransferItemListRelationFilter
    auditItems?: InventoryAuditItemListRelationFilter
  }

  export type ProductVariantOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    name?: SortOrder
    sku?: SortOrder
    barcode?: SortOrderInput | SortOrder
    attributes?: SortOrder
    costPrice?: SortOrderInput | SortOrder
    sellingPrice?: SortOrderInput | SortOrder
    minStockLevel?: SortOrderInput | SortOrder
    reorderPoint?: SortOrderInput | SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    product?: ProductOrderByWithRelationInput
    inventoryItems?: InventoryItemOrderByRelationAggregateInput
    movements?: InventoryMovementOrderByRelationAggregateInput
    purchaseItems?: PurchaseOrderItemOrderByRelationAggregateInput
    goodsReceiptItems?: GoodsReceiptItemOrderByRelationAggregateInput
    orderItems?: OrderItemOrderByRelationAggregateInput
    transferItems?: StockTransferItemOrderByRelationAggregateInput
    auditItems?: InventoryAuditItemOrderByRelationAggregateInput
  }

  export type ProductVariantWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    sku?: string
    barcode?: string
    AND?: ProductVariantWhereInput | ProductVariantWhereInput[]
    OR?: ProductVariantWhereInput[]
    NOT?: ProductVariantWhereInput | ProductVariantWhereInput[]
    productId?: StringFilter<"ProductVariant"> | string
    name?: StringFilter<"ProductVariant"> | string
    attributes?: JsonFilter<"ProductVariant">
    costPrice?: DecimalNullableFilter<"ProductVariant"> | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: DecimalNullableFilter<"ProductVariant"> | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntNullableFilter<"ProductVariant"> | number | null
    reorderPoint?: IntNullableFilter<"ProductVariant"> | number | null
    isActive?: BoolFilter<"ProductVariant"> | boolean
    createdAt?: DateTimeFilter<"ProductVariant"> | Date | string
    updatedAt?: DateTimeFilter<"ProductVariant"> | Date | string
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    inventoryItems?: InventoryItemListRelationFilter
    movements?: InventoryMovementListRelationFilter
    purchaseItems?: PurchaseOrderItemListRelationFilter
    goodsReceiptItems?: GoodsReceiptItemListRelationFilter
    orderItems?: OrderItemListRelationFilter
    transferItems?: StockTransferItemListRelationFilter
    auditItems?: InventoryAuditItemListRelationFilter
  }, "id" | "sku" | "barcode">

  export type ProductVariantOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    name?: SortOrder
    sku?: SortOrder
    barcode?: SortOrderInput | SortOrder
    attributes?: SortOrder
    costPrice?: SortOrderInput | SortOrder
    sellingPrice?: SortOrderInput | SortOrder
    minStockLevel?: SortOrderInput | SortOrder
    reorderPoint?: SortOrderInput | SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ProductVariantCountOrderByAggregateInput
    _avg?: ProductVariantAvgOrderByAggregateInput
    _max?: ProductVariantMaxOrderByAggregateInput
    _min?: ProductVariantMinOrderByAggregateInput
    _sum?: ProductVariantSumOrderByAggregateInput
  }

  export type ProductVariantScalarWhereWithAggregatesInput = {
    AND?: ProductVariantScalarWhereWithAggregatesInput | ProductVariantScalarWhereWithAggregatesInput[]
    OR?: ProductVariantScalarWhereWithAggregatesInput[]
    NOT?: ProductVariantScalarWhereWithAggregatesInput | ProductVariantScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProductVariant"> | string
    productId?: StringWithAggregatesFilter<"ProductVariant"> | string
    name?: StringWithAggregatesFilter<"ProductVariant"> | string
    sku?: StringWithAggregatesFilter<"ProductVariant"> | string
    barcode?: StringNullableWithAggregatesFilter<"ProductVariant"> | string | null
    attributes?: JsonWithAggregatesFilter<"ProductVariant">
    costPrice?: DecimalNullableWithAggregatesFilter<"ProductVariant"> | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: DecimalNullableWithAggregatesFilter<"ProductVariant"> | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntNullableWithAggregatesFilter<"ProductVariant"> | number | null
    reorderPoint?: IntNullableWithAggregatesFilter<"ProductVariant"> | number | null
    isActive?: BoolWithAggregatesFilter<"ProductVariant"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"ProductVariant"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ProductVariant"> | Date | string
  }

  export type CategoryWhereInput = {
    AND?: CategoryWhereInput | CategoryWhereInput[]
    OR?: CategoryWhereInput[]
    NOT?: CategoryWhereInput | CategoryWhereInput[]
    id?: StringFilter<"Category"> | string
    name?: StringFilter<"Category"> | string
    description?: StringNullableFilter<"Category"> | string | null
    slug?: StringFilter<"Category"> | string
    parentId?: StringNullableFilter<"Category"> | string | null
    level?: IntFilter<"Category"> | number
    path?: StringNullableFilter<"Category"> | string | null
    icon?: StringNullableFilter<"Category"> | string | null
    color?: StringNullableFilter<"Category"> | string | null
    image?: StringNullableFilter<"Category"> | string | null
    isActive?: BoolFilter<"Category"> | boolean
    createdAt?: DateTimeFilter<"Category"> | Date | string
    updatedAt?: DateTimeFilter<"Category"> | Date | string
    parent?: XOR<CategoryNullableScalarRelationFilter, CategoryWhereInput> | null
    children?: CategoryListRelationFilter
    products?: ProductListRelationFilter
  }

  export type CategoryOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    slug?: SortOrder
    parentId?: SortOrderInput | SortOrder
    level?: SortOrder
    path?: SortOrderInput | SortOrder
    icon?: SortOrderInput | SortOrder
    color?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    parent?: CategoryOrderByWithRelationInput
    children?: CategoryOrderByRelationAggregateInput
    products?: ProductOrderByRelationAggregateInput
  }

  export type CategoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    slug?: string
    AND?: CategoryWhereInput | CategoryWhereInput[]
    OR?: CategoryWhereInput[]
    NOT?: CategoryWhereInput | CategoryWhereInput[]
    name?: StringFilter<"Category"> | string
    description?: StringNullableFilter<"Category"> | string | null
    parentId?: StringNullableFilter<"Category"> | string | null
    level?: IntFilter<"Category"> | number
    path?: StringNullableFilter<"Category"> | string | null
    icon?: StringNullableFilter<"Category"> | string | null
    color?: StringNullableFilter<"Category"> | string | null
    image?: StringNullableFilter<"Category"> | string | null
    isActive?: BoolFilter<"Category"> | boolean
    createdAt?: DateTimeFilter<"Category"> | Date | string
    updatedAt?: DateTimeFilter<"Category"> | Date | string
    parent?: XOR<CategoryNullableScalarRelationFilter, CategoryWhereInput> | null
    children?: CategoryListRelationFilter
    products?: ProductListRelationFilter
  }, "id" | "slug">

  export type CategoryOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    slug?: SortOrder
    parentId?: SortOrderInput | SortOrder
    level?: SortOrder
    path?: SortOrderInput | SortOrder
    icon?: SortOrderInput | SortOrder
    color?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CategoryCountOrderByAggregateInput
    _avg?: CategoryAvgOrderByAggregateInput
    _max?: CategoryMaxOrderByAggregateInput
    _min?: CategoryMinOrderByAggregateInput
    _sum?: CategorySumOrderByAggregateInput
  }

  export type CategoryScalarWhereWithAggregatesInput = {
    AND?: CategoryScalarWhereWithAggregatesInput | CategoryScalarWhereWithAggregatesInput[]
    OR?: CategoryScalarWhereWithAggregatesInput[]
    NOT?: CategoryScalarWhereWithAggregatesInput | CategoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Category"> | string
    name?: StringWithAggregatesFilter<"Category"> | string
    description?: StringNullableWithAggregatesFilter<"Category"> | string | null
    slug?: StringWithAggregatesFilter<"Category"> | string
    parentId?: StringNullableWithAggregatesFilter<"Category"> | string | null
    level?: IntWithAggregatesFilter<"Category"> | number
    path?: StringNullableWithAggregatesFilter<"Category"> | string | null
    icon?: StringNullableWithAggregatesFilter<"Category"> | string | null
    color?: StringNullableWithAggregatesFilter<"Category"> | string | null
    image?: StringNullableWithAggregatesFilter<"Category"> | string | null
    isActive?: BoolWithAggregatesFilter<"Category"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Category"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Category"> | Date | string
  }

  export type BrandWhereInput = {
    AND?: BrandWhereInput | BrandWhereInput[]
    OR?: BrandWhereInput[]
    NOT?: BrandWhereInput | BrandWhereInput[]
    id?: StringFilter<"Brand"> | string
    name?: StringFilter<"Brand"> | string
    description?: StringNullableFilter<"Brand"> | string | null
    logo?: StringNullableFilter<"Brand"> | string | null
    website?: StringNullableFilter<"Brand"> | string | null
    contactEmail?: StringNullableFilter<"Brand"> | string | null
    contactPhone?: StringNullableFilter<"Brand"> | string | null
    isActive?: BoolFilter<"Brand"> | boolean
    createdAt?: DateTimeFilter<"Brand"> | Date | string
    updatedAt?: DateTimeFilter<"Brand"> | Date | string
    products?: ProductListRelationFilter
  }

  export type BrandOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    logo?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    contactEmail?: SortOrderInput | SortOrder
    contactPhone?: SortOrderInput | SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    products?: ProductOrderByRelationAggregateInput
  }

  export type BrandWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    AND?: BrandWhereInput | BrandWhereInput[]
    OR?: BrandWhereInput[]
    NOT?: BrandWhereInput | BrandWhereInput[]
    description?: StringNullableFilter<"Brand"> | string | null
    logo?: StringNullableFilter<"Brand"> | string | null
    website?: StringNullableFilter<"Brand"> | string | null
    contactEmail?: StringNullableFilter<"Brand"> | string | null
    contactPhone?: StringNullableFilter<"Brand"> | string | null
    isActive?: BoolFilter<"Brand"> | boolean
    createdAt?: DateTimeFilter<"Brand"> | Date | string
    updatedAt?: DateTimeFilter<"Brand"> | Date | string
    products?: ProductListRelationFilter
  }, "id" | "name">

  export type BrandOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    logo?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    contactEmail?: SortOrderInput | SortOrder
    contactPhone?: SortOrderInput | SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: BrandCountOrderByAggregateInput
    _max?: BrandMaxOrderByAggregateInput
    _min?: BrandMinOrderByAggregateInput
  }

  export type BrandScalarWhereWithAggregatesInput = {
    AND?: BrandScalarWhereWithAggregatesInput | BrandScalarWhereWithAggregatesInput[]
    OR?: BrandScalarWhereWithAggregatesInput[]
    NOT?: BrandScalarWhereWithAggregatesInput | BrandScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Brand"> | string
    name?: StringWithAggregatesFilter<"Brand"> | string
    description?: StringNullableWithAggregatesFilter<"Brand"> | string | null
    logo?: StringNullableWithAggregatesFilter<"Brand"> | string | null
    website?: StringNullableWithAggregatesFilter<"Brand"> | string | null
    contactEmail?: StringNullableWithAggregatesFilter<"Brand"> | string | null
    contactPhone?: StringNullableWithAggregatesFilter<"Brand"> | string | null
    isActive?: BoolWithAggregatesFilter<"Brand"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Brand"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Brand"> | Date | string
  }

  export type ProductBundleWhereInput = {
    AND?: ProductBundleWhereInput | ProductBundleWhereInput[]
    OR?: ProductBundleWhereInput[]
    NOT?: ProductBundleWhereInput | ProductBundleWhereInput[]
    id?: StringFilter<"ProductBundle"> | string
    name?: StringFilter<"ProductBundle"> | string
    description?: StringNullableFilter<"ProductBundle"> | string | null
    sku?: StringFilter<"ProductBundle"> | string
    bundlePrice?: DecimalFilter<"ProductBundle"> | Decimal | DecimalJsLike | number | string
    discount?: DecimalNullableFilter<"ProductBundle"> | Decimal | DecimalJsLike | number | string | null
    isActive?: BoolFilter<"ProductBundle"> | boolean
    createdAt?: DateTimeFilter<"ProductBundle"> | Date | string
    updatedAt?: DateTimeFilter<"ProductBundle"> | Date | string
    products?: ProductListRelationFilter
    bundleItems?: ProductListRelationFilter
  }

  export type ProductBundleOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    sku?: SortOrder
    bundlePrice?: SortOrder
    discount?: SortOrderInput | SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    products?: ProductOrderByRelationAggregateInput
    bundleItems?: ProductOrderByRelationAggregateInput
  }

  export type ProductBundleWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    sku?: string
    AND?: ProductBundleWhereInput | ProductBundleWhereInput[]
    OR?: ProductBundleWhereInput[]
    NOT?: ProductBundleWhereInput | ProductBundleWhereInput[]
    name?: StringFilter<"ProductBundle"> | string
    description?: StringNullableFilter<"ProductBundle"> | string | null
    bundlePrice?: DecimalFilter<"ProductBundle"> | Decimal | DecimalJsLike | number | string
    discount?: DecimalNullableFilter<"ProductBundle"> | Decimal | DecimalJsLike | number | string | null
    isActive?: BoolFilter<"ProductBundle"> | boolean
    createdAt?: DateTimeFilter<"ProductBundle"> | Date | string
    updatedAt?: DateTimeFilter<"ProductBundle"> | Date | string
    products?: ProductListRelationFilter
    bundleItems?: ProductListRelationFilter
  }, "id" | "sku">

  export type ProductBundleOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    sku?: SortOrder
    bundlePrice?: SortOrder
    discount?: SortOrderInput | SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ProductBundleCountOrderByAggregateInput
    _avg?: ProductBundleAvgOrderByAggregateInput
    _max?: ProductBundleMaxOrderByAggregateInput
    _min?: ProductBundleMinOrderByAggregateInput
    _sum?: ProductBundleSumOrderByAggregateInput
  }

  export type ProductBundleScalarWhereWithAggregatesInput = {
    AND?: ProductBundleScalarWhereWithAggregatesInput | ProductBundleScalarWhereWithAggregatesInput[]
    OR?: ProductBundleScalarWhereWithAggregatesInput[]
    NOT?: ProductBundleScalarWhereWithAggregatesInput | ProductBundleScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProductBundle"> | string
    name?: StringWithAggregatesFilter<"ProductBundle"> | string
    description?: StringNullableWithAggregatesFilter<"ProductBundle"> | string | null
    sku?: StringWithAggregatesFilter<"ProductBundle"> | string
    bundlePrice?: DecimalWithAggregatesFilter<"ProductBundle"> | Decimal | DecimalJsLike | number | string
    discount?: DecimalNullableWithAggregatesFilter<"ProductBundle"> | Decimal | DecimalJsLike | number | string | null
    isActive?: BoolWithAggregatesFilter<"ProductBundle"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"ProductBundle"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ProductBundle"> | Date | string
  }

  export type WarehouseWhereInput = {
    AND?: WarehouseWhereInput | WarehouseWhereInput[]
    OR?: WarehouseWhereInput[]
    NOT?: WarehouseWhereInput | WarehouseWhereInput[]
    id?: StringFilter<"Warehouse"> | string
    name?: StringFilter<"Warehouse"> | string
    code?: StringFilter<"Warehouse"> | string
    description?: StringNullableFilter<"Warehouse"> | string | null
    address?: JsonFilter<"Warehouse">
    coordinates?: JsonNullableFilter<"Warehouse">
    timezone?: StringNullableFilter<"Warehouse"> | string | null
    managerName?: StringNullableFilter<"Warehouse"> | string | null
    managerEmail?: StringNullableFilter<"Warehouse"> | string | null
    managerPhone?: StringNullableFilter<"Warehouse"> | string | null
    phone?: StringNullableFilter<"Warehouse"> | string | null
    email?: StringNullableFilter<"Warehouse"> | string | null
    type?: EnumWarehouseTypeFilter<"Warehouse"> | $Enums.WarehouseType
    capacity?: JsonNullableFilter<"Warehouse">
    isActive?: BoolFilter<"Warehouse"> | boolean
    hasRfid?: BoolFilter<"Warehouse"> | boolean
    hasBarcode?: BoolFilter<"Warehouse"> | boolean
    temperatureControl?: BoolFilter<"Warehouse"> | boolean
    securityLevel?: StringNullableFilter<"Warehouse"> | string | null
    createdAt?: DateTimeFilter<"Warehouse"> | Date | string
    updatedAt?: DateTimeFilter<"Warehouse"> | Date | string
    inventoryItems?: InventoryItemListRelationFilter
    movements?: InventoryMovementListRelationFilter
    transfers?: StockTransferListRelationFilter
    receivedTransfers?: StockTransferListRelationFilter
    orders?: OrderListRelationFilter
    purchaseOrders?: PurchaseOrderListRelationFilter
    audits?: InventoryAuditListRelationFilter
    goodsReceipts?: GoodsReceiptListRelationFilter
    shipments?: ShipmentListRelationFilter
    auditItems?: InventoryAuditItemListRelationFilter
  }

  export type WarehouseOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    description?: SortOrderInput | SortOrder
    address?: SortOrder
    coordinates?: SortOrderInput | SortOrder
    timezone?: SortOrderInput | SortOrder
    managerName?: SortOrderInput | SortOrder
    managerEmail?: SortOrderInput | SortOrder
    managerPhone?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    type?: SortOrder
    capacity?: SortOrderInput | SortOrder
    isActive?: SortOrder
    hasRfid?: SortOrder
    hasBarcode?: SortOrder
    temperatureControl?: SortOrder
    securityLevel?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    inventoryItems?: InventoryItemOrderByRelationAggregateInput
    movements?: InventoryMovementOrderByRelationAggregateInput
    transfers?: StockTransferOrderByRelationAggregateInput
    receivedTransfers?: StockTransferOrderByRelationAggregateInput
    orders?: OrderOrderByRelationAggregateInput
    purchaseOrders?: PurchaseOrderOrderByRelationAggregateInput
    audits?: InventoryAuditOrderByRelationAggregateInput
    goodsReceipts?: GoodsReceiptOrderByRelationAggregateInput
    shipments?: ShipmentOrderByRelationAggregateInput
    auditItems?: InventoryAuditItemOrderByRelationAggregateInput
  }

  export type WarehouseWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    code?: string
    AND?: WarehouseWhereInput | WarehouseWhereInput[]
    OR?: WarehouseWhereInput[]
    NOT?: WarehouseWhereInput | WarehouseWhereInput[]
    name?: StringFilter<"Warehouse"> | string
    description?: StringNullableFilter<"Warehouse"> | string | null
    address?: JsonFilter<"Warehouse">
    coordinates?: JsonNullableFilter<"Warehouse">
    timezone?: StringNullableFilter<"Warehouse"> | string | null
    managerName?: StringNullableFilter<"Warehouse"> | string | null
    managerEmail?: StringNullableFilter<"Warehouse"> | string | null
    managerPhone?: StringNullableFilter<"Warehouse"> | string | null
    phone?: StringNullableFilter<"Warehouse"> | string | null
    email?: StringNullableFilter<"Warehouse"> | string | null
    type?: EnumWarehouseTypeFilter<"Warehouse"> | $Enums.WarehouseType
    capacity?: JsonNullableFilter<"Warehouse">
    isActive?: BoolFilter<"Warehouse"> | boolean
    hasRfid?: BoolFilter<"Warehouse"> | boolean
    hasBarcode?: BoolFilter<"Warehouse"> | boolean
    temperatureControl?: BoolFilter<"Warehouse"> | boolean
    securityLevel?: StringNullableFilter<"Warehouse"> | string | null
    createdAt?: DateTimeFilter<"Warehouse"> | Date | string
    updatedAt?: DateTimeFilter<"Warehouse"> | Date | string
    inventoryItems?: InventoryItemListRelationFilter
    movements?: InventoryMovementListRelationFilter
    transfers?: StockTransferListRelationFilter
    receivedTransfers?: StockTransferListRelationFilter
    orders?: OrderListRelationFilter
    purchaseOrders?: PurchaseOrderListRelationFilter
    audits?: InventoryAuditListRelationFilter
    goodsReceipts?: GoodsReceiptListRelationFilter
    shipments?: ShipmentListRelationFilter
    auditItems?: InventoryAuditItemListRelationFilter
  }, "id" | "code">

  export type WarehouseOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    description?: SortOrderInput | SortOrder
    address?: SortOrder
    coordinates?: SortOrderInput | SortOrder
    timezone?: SortOrderInput | SortOrder
    managerName?: SortOrderInput | SortOrder
    managerEmail?: SortOrderInput | SortOrder
    managerPhone?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    type?: SortOrder
    capacity?: SortOrderInput | SortOrder
    isActive?: SortOrder
    hasRfid?: SortOrder
    hasBarcode?: SortOrder
    temperatureControl?: SortOrder
    securityLevel?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: WarehouseCountOrderByAggregateInput
    _max?: WarehouseMaxOrderByAggregateInput
    _min?: WarehouseMinOrderByAggregateInput
  }

  export type WarehouseScalarWhereWithAggregatesInput = {
    AND?: WarehouseScalarWhereWithAggregatesInput | WarehouseScalarWhereWithAggregatesInput[]
    OR?: WarehouseScalarWhereWithAggregatesInput[]
    NOT?: WarehouseScalarWhereWithAggregatesInput | WarehouseScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Warehouse"> | string
    name?: StringWithAggregatesFilter<"Warehouse"> | string
    code?: StringWithAggregatesFilter<"Warehouse"> | string
    description?: StringNullableWithAggregatesFilter<"Warehouse"> | string | null
    address?: JsonWithAggregatesFilter<"Warehouse">
    coordinates?: JsonNullableWithAggregatesFilter<"Warehouse">
    timezone?: StringNullableWithAggregatesFilter<"Warehouse"> | string | null
    managerName?: StringNullableWithAggregatesFilter<"Warehouse"> | string | null
    managerEmail?: StringNullableWithAggregatesFilter<"Warehouse"> | string | null
    managerPhone?: StringNullableWithAggregatesFilter<"Warehouse"> | string | null
    phone?: StringNullableWithAggregatesFilter<"Warehouse"> | string | null
    email?: StringNullableWithAggregatesFilter<"Warehouse"> | string | null
    type?: EnumWarehouseTypeWithAggregatesFilter<"Warehouse"> | $Enums.WarehouseType
    capacity?: JsonNullableWithAggregatesFilter<"Warehouse">
    isActive?: BoolWithAggregatesFilter<"Warehouse"> | boolean
    hasRfid?: BoolWithAggregatesFilter<"Warehouse"> | boolean
    hasBarcode?: BoolWithAggregatesFilter<"Warehouse"> | boolean
    temperatureControl?: BoolWithAggregatesFilter<"Warehouse"> | boolean
    securityLevel?: StringNullableWithAggregatesFilter<"Warehouse"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Warehouse"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Warehouse"> | Date | string
  }

  export type InventoryItemWhereInput = {
    AND?: InventoryItemWhereInput | InventoryItemWhereInput[]
    OR?: InventoryItemWhereInput[]
    NOT?: InventoryItemWhereInput | InventoryItemWhereInput[]
    id?: StringFilter<"InventoryItem"> | string
    productId?: StringFilter<"InventoryItem"> | string
    variantId?: StringNullableFilter<"InventoryItem"> | string | null
    warehouseId?: StringFilter<"InventoryItem"> | string
    zone?: StringNullableFilter<"InventoryItem"> | string | null
    aisle?: StringNullableFilter<"InventoryItem"> | string | null
    shelf?: StringNullableFilter<"InventoryItem"> | string | null
    bin?: StringNullableFilter<"InventoryItem"> | string | null
    locationCode?: StringNullableFilter<"InventoryItem"> | string | null
    quantity?: IntFilter<"InventoryItem"> | number
    reservedQuantity?: IntFilter<"InventoryItem"> | number
    availableQuantity?: IntFilter<"InventoryItem"> | number
    averageCost?: DecimalNullableFilter<"InventoryItem"> | Decimal | DecimalJsLike | number | string | null
    lastCost?: DecimalNullableFilter<"InventoryItem"> | Decimal | DecimalJsLike | number | string | null
    lotNumber?: StringNullableFilter<"InventoryItem"> | string | null
    batchNumber?: StringNullableFilter<"InventoryItem"> | string | null
    serialNumbers?: JsonNullableFilter<"InventoryItem">
    expiryDate?: DateTimeNullableFilter<"InventoryItem"> | Date | string | null
    status?: EnumInventoryStatusFilter<"InventoryItem"> | $Enums.InventoryStatus
    qcStatus?: EnumQualityStatusFilter<"InventoryItem"> | $Enums.QualityStatus
    quarantineReason?: StringNullableFilter<"InventoryItem"> | string | null
    lastMovement?: DateTimeNullableFilter<"InventoryItem"> | Date | string | null
    lastCount?: DateTimeNullableFilter<"InventoryItem"> | Date | string | null
    createdAt?: DateTimeFilter<"InventoryItem"> | Date | string
    updatedAt?: DateTimeFilter<"InventoryItem"> | Date | string
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    variant?: XOR<ProductVariantNullableScalarRelationFilter, ProductVariantWhereInput> | null
    warehouse?: XOR<WarehouseScalarRelationFilter, WarehouseWhereInput>
    movements?: InventoryMovementListRelationFilter
    reservations?: StockReservationListRelationFilter
  }

  export type InventoryItemOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    variantId?: SortOrderInput | SortOrder
    warehouseId?: SortOrder
    zone?: SortOrderInput | SortOrder
    aisle?: SortOrderInput | SortOrder
    shelf?: SortOrderInput | SortOrder
    bin?: SortOrderInput | SortOrder
    locationCode?: SortOrderInput | SortOrder
    quantity?: SortOrder
    reservedQuantity?: SortOrder
    availableQuantity?: SortOrder
    averageCost?: SortOrderInput | SortOrder
    lastCost?: SortOrderInput | SortOrder
    lotNumber?: SortOrderInput | SortOrder
    batchNumber?: SortOrderInput | SortOrder
    serialNumbers?: SortOrderInput | SortOrder
    expiryDate?: SortOrderInput | SortOrder
    status?: SortOrder
    qcStatus?: SortOrder
    quarantineReason?: SortOrderInput | SortOrder
    lastMovement?: SortOrderInput | SortOrder
    lastCount?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    product?: ProductOrderByWithRelationInput
    variant?: ProductVariantOrderByWithRelationInput
    warehouse?: WarehouseOrderByWithRelationInput
    movements?: InventoryMovementOrderByRelationAggregateInput
    reservations?: StockReservationOrderByRelationAggregateInput
  }

  export type InventoryItemWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    productId_variantId_warehouseId_lotNumber?: InventoryItemProductIdVariantIdWarehouseIdLotNumberCompoundUniqueInput
    AND?: InventoryItemWhereInput | InventoryItemWhereInput[]
    OR?: InventoryItemWhereInput[]
    NOT?: InventoryItemWhereInput | InventoryItemWhereInput[]
    productId?: StringFilter<"InventoryItem"> | string
    variantId?: StringNullableFilter<"InventoryItem"> | string | null
    warehouseId?: StringFilter<"InventoryItem"> | string
    zone?: StringNullableFilter<"InventoryItem"> | string | null
    aisle?: StringNullableFilter<"InventoryItem"> | string | null
    shelf?: StringNullableFilter<"InventoryItem"> | string | null
    bin?: StringNullableFilter<"InventoryItem"> | string | null
    locationCode?: StringNullableFilter<"InventoryItem"> | string | null
    quantity?: IntFilter<"InventoryItem"> | number
    reservedQuantity?: IntFilter<"InventoryItem"> | number
    availableQuantity?: IntFilter<"InventoryItem"> | number
    averageCost?: DecimalNullableFilter<"InventoryItem"> | Decimal | DecimalJsLike | number | string | null
    lastCost?: DecimalNullableFilter<"InventoryItem"> | Decimal | DecimalJsLike | number | string | null
    lotNumber?: StringNullableFilter<"InventoryItem"> | string | null
    batchNumber?: StringNullableFilter<"InventoryItem"> | string | null
    serialNumbers?: JsonNullableFilter<"InventoryItem">
    expiryDate?: DateTimeNullableFilter<"InventoryItem"> | Date | string | null
    status?: EnumInventoryStatusFilter<"InventoryItem"> | $Enums.InventoryStatus
    qcStatus?: EnumQualityStatusFilter<"InventoryItem"> | $Enums.QualityStatus
    quarantineReason?: StringNullableFilter<"InventoryItem"> | string | null
    lastMovement?: DateTimeNullableFilter<"InventoryItem"> | Date | string | null
    lastCount?: DateTimeNullableFilter<"InventoryItem"> | Date | string | null
    createdAt?: DateTimeFilter<"InventoryItem"> | Date | string
    updatedAt?: DateTimeFilter<"InventoryItem"> | Date | string
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    variant?: XOR<ProductVariantNullableScalarRelationFilter, ProductVariantWhereInput> | null
    warehouse?: XOR<WarehouseScalarRelationFilter, WarehouseWhereInput>
    movements?: InventoryMovementListRelationFilter
    reservations?: StockReservationListRelationFilter
  }, "id" | "productId_variantId_warehouseId_lotNumber">

  export type InventoryItemOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    variantId?: SortOrderInput | SortOrder
    warehouseId?: SortOrder
    zone?: SortOrderInput | SortOrder
    aisle?: SortOrderInput | SortOrder
    shelf?: SortOrderInput | SortOrder
    bin?: SortOrderInput | SortOrder
    locationCode?: SortOrderInput | SortOrder
    quantity?: SortOrder
    reservedQuantity?: SortOrder
    availableQuantity?: SortOrder
    averageCost?: SortOrderInput | SortOrder
    lastCost?: SortOrderInput | SortOrder
    lotNumber?: SortOrderInput | SortOrder
    batchNumber?: SortOrderInput | SortOrder
    serialNumbers?: SortOrderInput | SortOrder
    expiryDate?: SortOrderInput | SortOrder
    status?: SortOrder
    qcStatus?: SortOrder
    quarantineReason?: SortOrderInput | SortOrder
    lastMovement?: SortOrderInput | SortOrder
    lastCount?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: InventoryItemCountOrderByAggregateInput
    _avg?: InventoryItemAvgOrderByAggregateInput
    _max?: InventoryItemMaxOrderByAggregateInput
    _min?: InventoryItemMinOrderByAggregateInput
    _sum?: InventoryItemSumOrderByAggregateInput
  }

  export type InventoryItemScalarWhereWithAggregatesInput = {
    AND?: InventoryItemScalarWhereWithAggregatesInput | InventoryItemScalarWhereWithAggregatesInput[]
    OR?: InventoryItemScalarWhereWithAggregatesInput[]
    NOT?: InventoryItemScalarWhereWithAggregatesInput | InventoryItemScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"InventoryItem"> | string
    productId?: StringWithAggregatesFilter<"InventoryItem"> | string
    variantId?: StringNullableWithAggregatesFilter<"InventoryItem"> | string | null
    warehouseId?: StringWithAggregatesFilter<"InventoryItem"> | string
    zone?: StringNullableWithAggregatesFilter<"InventoryItem"> | string | null
    aisle?: StringNullableWithAggregatesFilter<"InventoryItem"> | string | null
    shelf?: StringNullableWithAggregatesFilter<"InventoryItem"> | string | null
    bin?: StringNullableWithAggregatesFilter<"InventoryItem"> | string | null
    locationCode?: StringNullableWithAggregatesFilter<"InventoryItem"> | string | null
    quantity?: IntWithAggregatesFilter<"InventoryItem"> | number
    reservedQuantity?: IntWithAggregatesFilter<"InventoryItem"> | number
    availableQuantity?: IntWithAggregatesFilter<"InventoryItem"> | number
    averageCost?: DecimalNullableWithAggregatesFilter<"InventoryItem"> | Decimal | DecimalJsLike | number | string | null
    lastCost?: DecimalNullableWithAggregatesFilter<"InventoryItem"> | Decimal | DecimalJsLike | number | string | null
    lotNumber?: StringNullableWithAggregatesFilter<"InventoryItem"> | string | null
    batchNumber?: StringNullableWithAggregatesFilter<"InventoryItem"> | string | null
    serialNumbers?: JsonNullableWithAggregatesFilter<"InventoryItem">
    expiryDate?: DateTimeNullableWithAggregatesFilter<"InventoryItem"> | Date | string | null
    status?: EnumInventoryStatusWithAggregatesFilter<"InventoryItem"> | $Enums.InventoryStatus
    qcStatus?: EnumQualityStatusWithAggregatesFilter<"InventoryItem"> | $Enums.QualityStatus
    quarantineReason?: StringNullableWithAggregatesFilter<"InventoryItem"> | string | null
    lastMovement?: DateTimeNullableWithAggregatesFilter<"InventoryItem"> | Date | string | null
    lastCount?: DateTimeNullableWithAggregatesFilter<"InventoryItem"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"InventoryItem"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"InventoryItem"> | Date | string
  }

  export type InventoryMovementWhereInput = {
    AND?: InventoryMovementWhereInput | InventoryMovementWhereInput[]
    OR?: InventoryMovementWhereInput[]
    NOT?: InventoryMovementWhereInput | InventoryMovementWhereInput[]
    id?: StringFilter<"InventoryMovement"> | string
    type?: EnumMovementTypeFilter<"InventoryMovement"> | $Enums.MovementType
    subtype?: StringNullableFilter<"InventoryMovement"> | string | null
    productId?: StringFilter<"InventoryMovement"> | string
    variantId?: StringNullableFilter<"InventoryMovement"> | string | null
    warehouseId?: StringFilter<"InventoryMovement"> | string
    inventoryItemId?: StringNullableFilter<"InventoryMovement"> | string | null
    quantity?: IntFilter<"InventoryMovement"> | number
    quantityBefore?: IntFilter<"InventoryMovement"> | number
    quantityAfter?: IntFilter<"InventoryMovement"> | number
    unitCost?: DecimalNullableFilter<"InventoryMovement"> | Decimal | DecimalJsLike | number | string | null
    totalCost?: DecimalNullableFilter<"InventoryMovement"> | Decimal | DecimalJsLike | number | string | null
    referenceType?: StringNullableFilter<"InventoryMovement"> | string | null
    referenceId?: StringNullableFilter<"InventoryMovement"> | string | null
    fromLocation?: StringNullableFilter<"InventoryMovement"> | string | null
    toLocation?: StringNullableFilter<"InventoryMovement"> | string | null
    lotNumber?: StringNullableFilter<"InventoryMovement"> | string | null
    batchNumber?: StringNullableFilter<"InventoryMovement"> | string | null
    expiryDate?: DateTimeNullableFilter<"InventoryMovement"> | Date | string | null
    reason?: StringNullableFilter<"InventoryMovement"> | string | null
    notes?: StringNullableFilter<"InventoryMovement"> | string | null
    userId?: StringFilter<"InventoryMovement"> | string
    approvedBy?: StringNullableFilter<"InventoryMovement"> | string | null
    approvedAt?: DateTimeNullableFilter<"InventoryMovement"> | Date | string | null
    occurredAt?: DateTimeFilter<"InventoryMovement"> | Date | string
    createdAt?: DateTimeFilter<"InventoryMovement"> | Date | string
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    variant?: XOR<ProductVariantNullableScalarRelationFilter, ProductVariantWhereInput> | null
    warehouse?: XOR<WarehouseScalarRelationFilter, WarehouseWhereInput>
    inventoryItem?: XOR<InventoryItemNullableScalarRelationFilter, InventoryItemWhereInput> | null
  }

  export type InventoryMovementOrderByWithRelationInput = {
    id?: SortOrder
    type?: SortOrder
    subtype?: SortOrderInput | SortOrder
    productId?: SortOrder
    variantId?: SortOrderInput | SortOrder
    warehouseId?: SortOrder
    inventoryItemId?: SortOrderInput | SortOrder
    quantity?: SortOrder
    quantityBefore?: SortOrder
    quantityAfter?: SortOrder
    unitCost?: SortOrderInput | SortOrder
    totalCost?: SortOrderInput | SortOrder
    referenceType?: SortOrderInput | SortOrder
    referenceId?: SortOrderInput | SortOrder
    fromLocation?: SortOrderInput | SortOrder
    toLocation?: SortOrderInput | SortOrder
    lotNumber?: SortOrderInput | SortOrder
    batchNumber?: SortOrderInput | SortOrder
    expiryDate?: SortOrderInput | SortOrder
    reason?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    userId?: SortOrder
    approvedBy?: SortOrderInput | SortOrder
    approvedAt?: SortOrderInput | SortOrder
    occurredAt?: SortOrder
    createdAt?: SortOrder
    product?: ProductOrderByWithRelationInput
    variant?: ProductVariantOrderByWithRelationInput
    warehouse?: WarehouseOrderByWithRelationInput
    inventoryItem?: InventoryItemOrderByWithRelationInput
  }

  export type InventoryMovementWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: InventoryMovementWhereInput | InventoryMovementWhereInput[]
    OR?: InventoryMovementWhereInput[]
    NOT?: InventoryMovementWhereInput | InventoryMovementWhereInput[]
    type?: EnumMovementTypeFilter<"InventoryMovement"> | $Enums.MovementType
    subtype?: StringNullableFilter<"InventoryMovement"> | string | null
    productId?: StringFilter<"InventoryMovement"> | string
    variantId?: StringNullableFilter<"InventoryMovement"> | string | null
    warehouseId?: StringFilter<"InventoryMovement"> | string
    inventoryItemId?: StringNullableFilter<"InventoryMovement"> | string | null
    quantity?: IntFilter<"InventoryMovement"> | number
    quantityBefore?: IntFilter<"InventoryMovement"> | number
    quantityAfter?: IntFilter<"InventoryMovement"> | number
    unitCost?: DecimalNullableFilter<"InventoryMovement"> | Decimal | DecimalJsLike | number | string | null
    totalCost?: DecimalNullableFilter<"InventoryMovement"> | Decimal | DecimalJsLike | number | string | null
    referenceType?: StringNullableFilter<"InventoryMovement"> | string | null
    referenceId?: StringNullableFilter<"InventoryMovement"> | string | null
    fromLocation?: StringNullableFilter<"InventoryMovement"> | string | null
    toLocation?: StringNullableFilter<"InventoryMovement"> | string | null
    lotNumber?: StringNullableFilter<"InventoryMovement"> | string | null
    batchNumber?: StringNullableFilter<"InventoryMovement"> | string | null
    expiryDate?: DateTimeNullableFilter<"InventoryMovement"> | Date | string | null
    reason?: StringNullableFilter<"InventoryMovement"> | string | null
    notes?: StringNullableFilter<"InventoryMovement"> | string | null
    userId?: StringFilter<"InventoryMovement"> | string
    approvedBy?: StringNullableFilter<"InventoryMovement"> | string | null
    approvedAt?: DateTimeNullableFilter<"InventoryMovement"> | Date | string | null
    occurredAt?: DateTimeFilter<"InventoryMovement"> | Date | string
    createdAt?: DateTimeFilter<"InventoryMovement"> | Date | string
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    variant?: XOR<ProductVariantNullableScalarRelationFilter, ProductVariantWhereInput> | null
    warehouse?: XOR<WarehouseScalarRelationFilter, WarehouseWhereInput>
    inventoryItem?: XOR<InventoryItemNullableScalarRelationFilter, InventoryItemWhereInput> | null
  }, "id">

  export type InventoryMovementOrderByWithAggregationInput = {
    id?: SortOrder
    type?: SortOrder
    subtype?: SortOrderInput | SortOrder
    productId?: SortOrder
    variantId?: SortOrderInput | SortOrder
    warehouseId?: SortOrder
    inventoryItemId?: SortOrderInput | SortOrder
    quantity?: SortOrder
    quantityBefore?: SortOrder
    quantityAfter?: SortOrder
    unitCost?: SortOrderInput | SortOrder
    totalCost?: SortOrderInput | SortOrder
    referenceType?: SortOrderInput | SortOrder
    referenceId?: SortOrderInput | SortOrder
    fromLocation?: SortOrderInput | SortOrder
    toLocation?: SortOrderInput | SortOrder
    lotNumber?: SortOrderInput | SortOrder
    batchNumber?: SortOrderInput | SortOrder
    expiryDate?: SortOrderInput | SortOrder
    reason?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    userId?: SortOrder
    approvedBy?: SortOrderInput | SortOrder
    approvedAt?: SortOrderInput | SortOrder
    occurredAt?: SortOrder
    createdAt?: SortOrder
    _count?: InventoryMovementCountOrderByAggregateInput
    _avg?: InventoryMovementAvgOrderByAggregateInput
    _max?: InventoryMovementMaxOrderByAggregateInput
    _min?: InventoryMovementMinOrderByAggregateInput
    _sum?: InventoryMovementSumOrderByAggregateInput
  }

  export type InventoryMovementScalarWhereWithAggregatesInput = {
    AND?: InventoryMovementScalarWhereWithAggregatesInput | InventoryMovementScalarWhereWithAggregatesInput[]
    OR?: InventoryMovementScalarWhereWithAggregatesInput[]
    NOT?: InventoryMovementScalarWhereWithAggregatesInput | InventoryMovementScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"InventoryMovement"> | string
    type?: EnumMovementTypeWithAggregatesFilter<"InventoryMovement"> | $Enums.MovementType
    subtype?: StringNullableWithAggregatesFilter<"InventoryMovement"> | string | null
    productId?: StringWithAggregatesFilter<"InventoryMovement"> | string
    variantId?: StringNullableWithAggregatesFilter<"InventoryMovement"> | string | null
    warehouseId?: StringWithAggregatesFilter<"InventoryMovement"> | string
    inventoryItemId?: StringNullableWithAggregatesFilter<"InventoryMovement"> | string | null
    quantity?: IntWithAggregatesFilter<"InventoryMovement"> | number
    quantityBefore?: IntWithAggregatesFilter<"InventoryMovement"> | number
    quantityAfter?: IntWithAggregatesFilter<"InventoryMovement"> | number
    unitCost?: DecimalNullableWithAggregatesFilter<"InventoryMovement"> | Decimal | DecimalJsLike | number | string | null
    totalCost?: DecimalNullableWithAggregatesFilter<"InventoryMovement"> | Decimal | DecimalJsLike | number | string | null
    referenceType?: StringNullableWithAggregatesFilter<"InventoryMovement"> | string | null
    referenceId?: StringNullableWithAggregatesFilter<"InventoryMovement"> | string | null
    fromLocation?: StringNullableWithAggregatesFilter<"InventoryMovement"> | string | null
    toLocation?: StringNullableWithAggregatesFilter<"InventoryMovement"> | string | null
    lotNumber?: StringNullableWithAggregatesFilter<"InventoryMovement"> | string | null
    batchNumber?: StringNullableWithAggregatesFilter<"InventoryMovement"> | string | null
    expiryDate?: DateTimeNullableWithAggregatesFilter<"InventoryMovement"> | Date | string | null
    reason?: StringNullableWithAggregatesFilter<"InventoryMovement"> | string | null
    notes?: StringNullableWithAggregatesFilter<"InventoryMovement"> | string | null
    userId?: StringWithAggregatesFilter<"InventoryMovement"> | string
    approvedBy?: StringNullableWithAggregatesFilter<"InventoryMovement"> | string | null
    approvedAt?: DateTimeNullableWithAggregatesFilter<"InventoryMovement"> | Date | string | null
    occurredAt?: DateTimeWithAggregatesFilter<"InventoryMovement"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"InventoryMovement"> | Date | string
  }

  export type SupplierWhereInput = {
    AND?: SupplierWhereInput | SupplierWhereInput[]
    OR?: SupplierWhereInput[]
    NOT?: SupplierWhereInput | SupplierWhereInput[]
    id?: StringFilter<"Supplier"> | string
    name?: StringFilter<"Supplier"> | string
    code?: StringFilter<"Supplier"> | string
    email?: StringNullableFilter<"Supplier"> | string | null
    phone?: StringNullableFilter<"Supplier"> | string | null
    website?: StringNullableFilter<"Supplier"> | string | null
    companyType?: EnumCompanyTypeNullableFilter<"Supplier"> | $Enums.CompanyType | null
    taxId?: StringNullableFilter<"Supplier"> | string | null
    vatNumber?: StringNullableFilter<"Supplier"> | string | null
    registrationNumber?: StringNullableFilter<"Supplier"> | string | null
    billingAddress?: JsonFilter<"Supplier">
    shippingAddress?: JsonNullableFilter<"Supplier">
    contactName?: StringNullableFilter<"Supplier"> | string | null
    contactEmail?: StringNullableFilter<"Supplier"> | string | null
    contactPhone?: StringNullableFilter<"Supplier"> | string | null
    contactTitle?: StringNullableFilter<"Supplier"> | string | null
    paymentTerms?: StringNullableFilter<"Supplier"> | string | null
    creditLimit?: DecimalNullableFilter<"Supplier"> | Decimal | DecimalJsLike | number | string | null
    currency?: StringFilter<"Supplier"> | string
    rating?: DecimalNullableFilter<"Supplier"> | Decimal | DecimalJsLike | number | string | null
    onTimeDelivery?: DecimalNullableFilter<"Supplier"> | Decimal | DecimalJsLike | number | string | null
    qualityRating?: DecimalNullableFilter<"Supplier"> | Decimal | DecimalJsLike | number | string | null
    status?: EnumSupplierStatusFilter<"Supplier"> | $Enums.SupplierStatus
    certifications?: JsonNullableFilter<"Supplier">
    notes?: StringNullableFilter<"Supplier"> | string | null
    createdAt?: DateTimeFilter<"Supplier"> | Date | string
    updatedAt?: DateTimeFilter<"Supplier"> | Date | string
    createdBy?: StringFilter<"Supplier"> | string
    products?: ProductSupplierListRelationFilter
    purchaseOrders?: PurchaseOrderListRelationFilter
    invoices?: SupplierInvoiceListRelationFilter
    contacts?: SupplierContactListRelationFilter
    documents?: SupplierDocumentListRelationFilter
  }

  export type SupplierOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    email?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    companyType?: SortOrderInput | SortOrder
    taxId?: SortOrderInput | SortOrder
    vatNumber?: SortOrderInput | SortOrder
    registrationNumber?: SortOrderInput | SortOrder
    billingAddress?: SortOrder
    shippingAddress?: SortOrderInput | SortOrder
    contactName?: SortOrderInput | SortOrder
    contactEmail?: SortOrderInput | SortOrder
    contactPhone?: SortOrderInput | SortOrder
    contactTitle?: SortOrderInput | SortOrder
    paymentTerms?: SortOrderInput | SortOrder
    creditLimit?: SortOrderInput | SortOrder
    currency?: SortOrder
    rating?: SortOrderInput | SortOrder
    onTimeDelivery?: SortOrderInput | SortOrder
    qualityRating?: SortOrderInput | SortOrder
    status?: SortOrder
    certifications?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    products?: ProductSupplierOrderByRelationAggregateInput
    purchaseOrders?: PurchaseOrderOrderByRelationAggregateInput
    invoices?: SupplierInvoiceOrderByRelationAggregateInput
    contacts?: SupplierContactOrderByRelationAggregateInput
    documents?: SupplierDocumentOrderByRelationAggregateInput
  }

  export type SupplierWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    code?: string
    AND?: SupplierWhereInput | SupplierWhereInput[]
    OR?: SupplierWhereInput[]
    NOT?: SupplierWhereInput | SupplierWhereInput[]
    name?: StringFilter<"Supplier"> | string
    email?: StringNullableFilter<"Supplier"> | string | null
    phone?: StringNullableFilter<"Supplier"> | string | null
    website?: StringNullableFilter<"Supplier"> | string | null
    companyType?: EnumCompanyTypeNullableFilter<"Supplier"> | $Enums.CompanyType | null
    taxId?: StringNullableFilter<"Supplier"> | string | null
    vatNumber?: StringNullableFilter<"Supplier"> | string | null
    registrationNumber?: StringNullableFilter<"Supplier"> | string | null
    billingAddress?: JsonFilter<"Supplier">
    shippingAddress?: JsonNullableFilter<"Supplier">
    contactName?: StringNullableFilter<"Supplier"> | string | null
    contactEmail?: StringNullableFilter<"Supplier"> | string | null
    contactPhone?: StringNullableFilter<"Supplier"> | string | null
    contactTitle?: StringNullableFilter<"Supplier"> | string | null
    paymentTerms?: StringNullableFilter<"Supplier"> | string | null
    creditLimit?: DecimalNullableFilter<"Supplier"> | Decimal | DecimalJsLike | number | string | null
    currency?: StringFilter<"Supplier"> | string
    rating?: DecimalNullableFilter<"Supplier"> | Decimal | DecimalJsLike | number | string | null
    onTimeDelivery?: DecimalNullableFilter<"Supplier"> | Decimal | DecimalJsLike | number | string | null
    qualityRating?: DecimalNullableFilter<"Supplier"> | Decimal | DecimalJsLike | number | string | null
    status?: EnumSupplierStatusFilter<"Supplier"> | $Enums.SupplierStatus
    certifications?: JsonNullableFilter<"Supplier">
    notes?: StringNullableFilter<"Supplier"> | string | null
    createdAt?: DateTimeFilter<"Supplier"> | Date | string
    updatedAt?: DateTimeFilter<"Supplier"> | Date | string
    createdBy?: StringFilter<"Supplier"> | string
    products?: ProductSupplierListRelationFilter
    purchaseOrders?: PurchaseOrderListRelationFilter
    invoices?: SupplierInvoiceListRelationFilter
    contacts?: SupplierContactListRelationFilter
    documents?: SupplierDocumentListRelationFilter
  }, "id" | "code">

  export type SupplierOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    email?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    companyType?: SortOrderInput | SortOrder
    taxId?: SortOrderInput | SortOrder
    vatNumber?: SortOrderInput | SortOrder
    registrationNumber?: SortOrderInput | SortOrder
    billingAddress?: SortOrder
    shippingAddress?: SortOrderInput | SortOrder
    contactName?: SortOrderInput | SortOrder
    contactEmail?: SortOrderInput | SortOrder
    contactPhone?: SortOrderInput | SortOrder
    contactTitle?: SortOrderInput | SortOrder
    paymentTerms?: SortOrderInput | SortOrder
    creditLimit?: SortOrderInput | SortOrder
    currency?: SortOrder
    rating?: SortOrderInput | SortOrder
    onTimeDelivery?: SortOrderInput | SortOrder
    qualityRating?: SortOrderInput | SortOrder
    status?: SortOrder
    certifications?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    _count?: SupplierCountOrderByAggregateInput
    _avg?: SupplierAvgOrderByAggregateInput
    _max?: SupplierMaxOrderByAggregateInput
    _min?: SupplierMinOrderByAggregateInput
    _sum?: SupplierSumOrderByAggregateInput
  }

  export type SupplierScalarWhereWithAggregatesInput = {
    AND?: SupplierScalarWhereWithAggregatesInput | SupplierScalarWhereWithAggregatesInput[]
    OR?: SupplierScalarWhereWithAggregatesInput[]
    NOT?: SupplierScalarWhereWithAggregatesInput | SupplierScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Supplier"> | string
    name?: StringWithAggregatesFilter<"Supplier"> | string
    code?: StringWithAggregatesFilter<"Supplier"> | string
    email?: StringNullableWithAggregatesFilter<"Supplier"> | string | null
    phone?: StringNullableWithAggregatesFilter<"Supplier"> | string | null
    website?: StringNullableWithAggregatesFilter<"Supplier"> | string | null
    companyType?: EnumCompanyTypeNullableWithAggregatesFilter<"Supplier"> | $Enums.CompanyType | null
    taxId?: StringNullableWithAggregatesFilter<"Supplier"> | string | null
    vatNumber?: StringNullableWithAggregatesFilter<"Supplier"> | string | null
    registrationNumber?: StringNullableWithAggregatesFilter<"Supplier"> | string | null
    billingAddress?: JsonWithAggregatesFilter<"Supplier">
    shippingAddress?: JsonNullableWithAggregatesFilter<"Supplier">
    contactName?: StringNullableWithAggregatesFilter<"Supplier"> | string | null
    contactEmail?: StringNullableWithAggregatesFilter<"Supplier"> | string | null
    contactPhone?: StringNullableWithAggregatesFilter<"Supplier"> | string | null
    contactTitle?: StringNullableWithAggregatesFilter<"Supplier"> | string | null
    paymentTerms?: StringNullableWithAggregatesFilter<"Supplier"> | string | null
    creditLimit?: DecimalNullableWithAggregatesFilter<"Supplier"> | Decimal | DecimalJsLike | number | string | null
    currency?: StringWithAggregatesFilter<"Supplier"> | string
    rating?: DecimalNullableWithAggregatesFilter<"Supplier"> | Decimal | DecimalJsLike | number | string | null
    onTimeDelivery?: DecimalNullableWithAggregatesFilter<"Supplier"> | Decimal | DecimalJsLike | number | string | null
    qualityRating?: DecimalNullableWithAggregatesFilter<"Supplier"> | Decimal | DecimalJsLike | number | string | null
    status?: EnumSupplierStatusWithAggregatesFilter<"Supplier"> | $Enums.SupplierStatus
    certifications?: JsonNullableWithAggregatesFilter<"Supplier">
    notes?: StringNullableWithAggregatesFilter<"Supplier"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Supplier"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Supplier"> | Date | string
    createdBy?: StringWithAggregatesFilter<"Supplier"> | string
  }

  export type ProductSupplierWhereInput = {
    AND?: ProductSupplierWhereInput | ProductSupplierWhereInput[]
    OR?: ProductSupplierWhereInput[]
    NOT?: ProductSupplierWhereInput | ProductSupplierWhereInput[]
    id?: StringFilter<"ProductSupplier"> | string
    productId?: StringFilter<"ProductSupplier"> | string
    supplierId?: StringFilter<"ProductSupplier"> | string
    supplierSku?: StringNullableFilter<"ProductSupplier"> | string | null
    supplierName?: StringNullableFilter<"ProductSupplier"> | string | null
    unitCost?: DecimalFilter<"ProductSupplier"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"ProductSupplier"> | string
    minOrderQty?: IntNullableFilter<"ProductSupplier"> | number | null
    maxOrderQty?: IntNullableFilter<"ProductSupplier"> | number | null
    leadTimeDays?: IntNullableFilter<"ProductSupplier"> | number | null
    isPreferred?: BoolFilter<"ProductSupplier"> | boolean
    isActive?: BoolFilter<"ProductSupplier"> | boolean
    createdAt?: DateTimeFilter<"ProductSupplier"> | Date | string
    updatedAt?: DateTimeFilter<"ProductSupplier"> | Date | string
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    supplier?: XOR<SupplierScalarRelationFilter, SupplierWhereInput>
  }

  export type ProductSupplierOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    supplierId?: SortOrder
    supplierSku?: SortOrderInput | SortOrder
    supplierName?: SortOrderInput | SortOrder
    unitCost?: SortOrder
    currency?: SortOrder
    minOrderQty?: SortOrderInput | SortOrder
    maxOrderQty?: SortOrderInput | SortOrder
    leadTimeDays?: SortOrderInput | SortOrder
    isPreferred?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    product?: ProductOrderByWithRelationInput
    supplier?: SupplierOrderByWithRelationInput
  }

  export type ProductSupplierWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    productId_supplierId?: ProductSupplierProductIdSupplierIdCompoundUniqueInput
    AND?: ProductSupplierWhereInput | ProductSupplierWhereInput[]
    OR?: ProductSupplierWhereInput[]
    NOT?: ProductSupplierWhereInput | ProductSupplierWhereInput[]
    productId?: StringFilter<"ProductSupplier"> | string
    supplierId?: StringFilter<"ProductSupplier"> | string
    supplierSku?: StringNullableFilter<"ProductSupplier"> | string | null
    supplierName?: StringNullableFilter<"ProductSupplier"> | string | null
    unitCost?: DecimalFilter<"ProductSupplier"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"ProductSupplier"> | string
    minOrderQty?: IntNullableFilter<"ProductSupplier"> | number | null
    maxOrderQty?: IntNullableFilter<"ProductSupplier"> | number | null
    leadTimeDays?: IntNullableFilter<"ProductSupplier"> | number | null
    isPreferred?: BoolFilter<"ProductSupplier"> | boolean
    isActive?: BoolFilter<"ProductSupplier"> | boolean
    createdAt?: DateTimeFilter<"ProductSupplier"> | Date | string
    updatedAt?: DateTimeFilter<"ProductSupplier"> | Date | string
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    supplier?: XOR<SupplierScalarRelationFilter, SupplierWhereInput>
  }, "id" | "productId_supplierId">

  export type ProductSupplierOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    supplierId?: SortOrder
    supplierSku?: SortOrderInput | SortOrder
    supplierName?: SortOrderInput | SortOrder
    unitCost?: SortOrder
    currency?: SortOrder
    minOrderQty?: SortOrderInput | SortOrder
    maxOrderQty?: SortOrderInput | SortOrder
    leadTimeDays?: SortOrderInput | SortOrder
    isPreferred?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ProductSupplierCountOrderByAggregateInput
    _avg?: ProductSupplierAvgOrderByAggregateInput
    _max?: ProductSupplierMaxOrderByAggregateInput
    _min?: ProductSupplierMinOrderByAggregateInput
    _sum?: ProductSupplierSumOrderByAggregateInput
  }

  export type ProductSupplierScalarWhereWithAggregatesInput = {
    AND?: ProductSupplierScalarWhereWithAggregatesInput | ProductSupplierScalarWhereWithAggregatesInput[]
    OR?: ProductSupplierScalarWhereWithAggregatesInput[]
    NOT?: ProductSupplierScalarWhereWithAggregatesInput | ProductSupplierScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProductSupplier"> | string
    productId?: StringWithAggregatesFilter<"ProductSupplier"> | string
    supplierId?: StringWithAggregatesFilter<"ProductSupplier"> | string
    supplierSku?: StringNullableWithAggregatesFilter<"ProductSupplier"> | string | null
    supplierName?: StringNullableWithAggregatesFilter<"ProductSupplier"> | string | null
    unitCost?: DecimalWithAggregatesFilter<"ProductSupplier"> | Decimal | DecimalJsLike | number | string
    currency?: StringWithAggregatesFilter<"ProductSupplier"> | string
    minOrderQty?: IntNullableWithAggregatesFilter<"ProductSupplier"> | number | null
    maxOrderQty?: IntNullableWithAggregatesFilter<"ProductSupplier"> | number | null
    leadTimeDays?: IntNullableWithAggregatesFilter<"ProductSupplier"> | number | null
    isPreferred?: BoolWithAggregatesFilter<"ProductSupplier"> | boolean
    isActive?: BoolWithAggregatesFilter<"ProductSupplier"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"ProductSupplier"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ProductSupplier"> | Date | string
  }

  export type SupplierContactWhereInput = {
    AND?: SupplierContactWhereInput | SupplierContactWhereInput[]
    OR?: SupplierContactWhereInput[]
    NOT?: SupplierContactWhereInput | SupplierContactWhereInput[]
    id?: StringFilter<"SupplierContact"> | string
    supplierId?: StringFilter<"SupplierContact"> | string
    name?: StringFilter<"SupplierContact"> | string
    title?: StringNullableFilter<"SupplierContact"> | string | null
    email?: StringNullableFilter<"SupplierContact"> | string | null
    phone?: StringNullableFilter<"SupplierContact"> | string | null
    mobile?: StringNullableFilter<"SupplierContact"> | string | null
    isPrimary?: BoolFilter<"SupplierContact"> | boolean
    department?: StringNullableFilter<"SupplierContact"> | string | null
    isActive?: BoolFilter<"SupplierContact"> | boolean
    notes?: StringNullableFilter<"SupplierContact"> | string | null
    createdAt?: DateTimeFilter<"SupplierContact"> | Date | string
    updatedAt?: DateTimeFilter<"SupplierContact"> | Date | string
    supplier?: XOR<SupplierScalarRelationFilter, SupplierWhereInput>
  }

  export type SupplierContactOrderByWithRelationInput = {
    id?: SortOrder
    supplierId?: SortOrder
    name?: SortOrder
    title?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    mobile?: SortOrderInput | SortOrder
    isPrimary?: SortOrder
    department?: SortOrderInput | SortOrder
    isActive?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    supplier?: SupplierOrderByWithRelationInput
  }

  export type SupplierContactWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SupplierContactWhereInput | SupplierContactWhereInput[]
    OR?: SupplierContactWhereInput[]
    NOT?: SupplierContactWhereInput | SupplierContactWhereInput[]
    supplierId?: StringFilter<"SupplierContact"> | string
    name?: StringFilter<"SupplierContact"> | string
    title?: StringNullableFilter<"SupplierContact"> | string | null
    email?: StringNullableFilter<"SupplierContact"> | string | null
    phone?: StringNullableFilter<"SupplierContact"> | string | null
    mobile?: StringNullableFilter<"SupplierContact"> | string | null
    isPrimary?: BoolFilter<"SupplierContact"> | boolean
    department?: StringNullableFilter<"SupplierContact"> | string | null
    isActive?: BoolFilter<"SupplierContact"> | boolean
    notes?: StringNullableFilter<"SupplierContact"> | string | null
    createdAt?: DateTimeFilter<"SupplierContact"> | Date | string
    updatedAt?: DateTimeFilter<"SupplierContact"> | Date | string
    supplier?: XOR<SupplierScalarRelationFilter, SupplierWhereInput>
  }, "id">

  export type SupplierContactOrderByWithAggregationInput = {
    id?: SortOrder
    supplierId?: SortOrder
    name?: SortOrder
    title?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    mobile?: SortOrderInput | SortOrder
    isPrimary?: SortOrder
    department?: SortOrderInput | SortOrder
    isActive?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: SupplierContactCountOrderByAggregateInput
    _max?: SupplierContactMaxOrderByAggregateInput
    _min?: SupplierContactMinOrderByAggregateInput
  }

  export type SupplierContactScalarWhereWithAggregatesInput = {
    AND?: SupplierContactScalarWhereWithAggregatesInput | SupplierContactScalarWhereWithAggregatesInput[]
    OR?: SupplierContactScalarWhereWithAggregatesInput[]
    NOT?: SupplierContactScalarWhereWithAggregatesInput | SupplierContactScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SupplierContact"> | string
    supplierId?: StringWithAggregatesFilter<"SupplierContact"> | string
    name?: StringWithAggregatesFilter<"SupplierContact"> | string
    title?: StringNullableWithAggregatesFilter<"SupplierContact"> | string | null
    email?: StringNullableWithAggregatesFilter<"SupplierContact"> | string | null
    phone?: StringNullableWithAggregatesFilter<"SupplierContact"> | string | null
    mobile?: StringNullableWithAggregatesFilter<"SupplierContact"> | string | null
    isPrimary?: BoolWithAggregatesFilter<"SupplierContact"> | boolean
    department?: StringNullableWithAggregatesFilter<"SupplierContact"> | string | null
    isActive?: BoolWithAggregatesFilter<"SupplierContact"> | boolean
    notes?: StringNullableWithAggregatesFilter<"SupplierContact"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"SupplierContact"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"SupplierContact"> | Date | string
  }

  export type SupplierDocumentWhereInput = {
    AND?: SupplierDocumentWhereInput | SupplierDocumentWhereInput[]
    OR?: SupplierDocumentWhereInput[]
    NOT?: SupplierDocumentWhereInput | SupplierDocumentWhereInput[]
    id?: StringFilter<"SupplierDocument"> | string
    supplierId?: StringFilter<"SupplierDocument"> | string
    name?: StringFilter<"SupplierDocument"> | string
    type?: EnumDocumentTypeFilter<"SupplierDocument"> | $Enums.DocumentType
    category?: StringNullableFilter<"SupplierDocument"> | string | null
    fileName?: StringFilter<"SupplierDocument"> | string
    fileSize?: IntNullableFilter<"SupplierDocument"> | number | null
    fileType?: StringNullableFilter<"SupplierDocument"> | string | null
    filePath?: StringFilter<"SupplierDocument"> | string
    uploadedBy?: StringFilter<"SupplierDocument"> | string
    uploadedAt?: DateTimeFilter<"SupplierDocument"> | Date | string
    expiresAt?: DateTimeNullableFilter<"SupplierDocument"> | Date | string | null
    isActive?: BoolFilter<"SupplierDocument"> | boolean
    supplier?: XOR<SupplierScalarRelationFilter, SupplierWhereInput>
  }

  export type SupplierDocumentOrderByWithRelationInput = {
    id?: SortOrder
    supplierId?: SortOrder
    name?: SortOrder
    type?: SortOrder
    category?: SortOrderInput | SortOrder
    fileName?: SortOrder
    fileSize?: SortOrderInput | SortOrder
    fileType?: SortOrderInput | SortOrder
    filePath?: SortOrder
    uploadedBy?: SortOrder
    uploadedAt?: SortOrder
    expiresAt?: SortOrderInput | SortOrder
    isActive?: SortOrder
    supplier?: SupplierOrderByWithRelationInput
  }

  export type SupplierDocumentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SupplierDocumentWhereInput | SupplierDocumentWhereInput[]
    OR?: SupplierDocumentWhereInput[]
    NOT?: SupplierDocumentWhereInput | SupplierDocumentWhereInput[]
    supplierId?: StringFilter<"SupplierDocument"> | string
    name?: StringFilter<"SupplierDocument"> | string
    type?: EnumDocumentTypeFilter<"SupplierDocument"> | $Enums.DocumentType
    category?: StringNullableFilter<"SupplierDocument"> | string | null
    fileName?: StringFilter<"SupplierDocument"> | string
    fileSize?: IntNullableFilter<"SupplierDocument"> | number | null
    fileType?: StringNullableFilter<"SupplierDocument"> | string | null
    filePath?: StringFilter<"SupplierDocument"> | string
    uploadedBy?: StringFilter<"SupplierDocument"> | string
    uploadedAt?: DateTimeFilter<"SupplierDocument"> | Date | string
    expiresAt?: DateTimeNullableFilter<"SupplierDocument"> | Date | string | null
    isActive?: BoolFilter<"SupplierDocument"> | boolean
    supplier?: XOR<SupplierScalarRelationFilter, SupplierWhereInput>
  }, "id">

  export type SupplierDocumentOrderByWithAggregationInput = {
    id?: SortOrder
    supplierId?: SortOrder
    name?: SortOrder
    type?: SortOrder
    category?: SortOrderInput | SortOrder
    fileName?: SortOrder
    fileSize?: SortOrderInput | SortOrder
    fileType?: SortOrderInput | SortOrder
    filePath?: SortOrder
    uploadedBy?: SortOrder
    uploadedAt?: SortOrder
    expiresAt?: SortOrderInput | SortOrder
    isActive?: SortOrder
    _count?: SupplierDocumentCountOrderByAggregateInput
    _avg?: SupplierDocumentAvgOrderByAggregateInput
    _max?: SupplierDocumentMaxOrderByAggregateInput
    _min?: SupplierDocumentMinOrderByAggregateInput
    _sum?: SupplierDocumentSumOrderByAggregateInput
  }

  export type SupplierDocumentScalarWhereWithAggregatesInput = {
    AND?: SupplierDocumentScalarWhereWithAggregatesInput | SupplierDocumentScalarWhereWithAggregatesInput[]
    OR?: SupplierDocumentScalarWhereWithAggregatesInput[]
    NOT?: SupplierDocumentScalarWhereWithAggregatesInput | SupplierDocumentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SupplierDocument"> | string
    supplierId?: StringWithAggregatesFilter<"SupplierDocument"> | string
    name?: StringWithAggregatesFilter<"SupplierDocument"> | string
    type?: EnumDocumentTypeWithAggregatesFilter<"SupplierDocument"> | $Enums.DocumentType
    category?: StringNullableWithAggregatesFilter<"SupplierDocument"> | string | null
    fileName?: StringWithAggregatesFilter<"SupplierDocument"> | string
    fileSize?: IntNullableWithAggregatesFilter<"SupplierDocument"> | number | null
    fileType?: StringNullableWithAggregatesFilter<"SupplierDocument"> | string | null
    filePath?: StringWithAggregatesFilter<"SupplierDocument"> | string
    uploadedBy?: StringWithAggregatesFilter<"SupplierDocument"> | string
    uploadedAt?: DateTimeWithAggregatesFilter<"SupplierDocument"> | Date | string
    expiresAt?: DateTimeNullableWithAggregatesFilter<"SupplierDocument"> | Date | string | null
    isActive?: BoolWithAggregatesFilter<"SupplierDocument"> | boolean
  }

  export type PurchaseOrderWhereInput = {
    AND?: PurchaseOrderWhereInput | PurchaseOrderWhereInput[]
    OR?: PurchaseOrderWhereInput[]
    NOT?: PurchaseOrderWhereInput | PurchaseOrderWhereInput[]
    id?: StringFilter<"PurchaseOrder"> | string
    orderNumber?: StringFilter<"PurchaseOrder"> | string
    supplierId?: StringFilter<"PurchaseOrder"> | string
    warehouseId?: StringNullableFilter<"PurchaseOrder"> | string | null
    subtotal?: DecimalFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"PurchaseOrder"> | string
    status?: EnumPurchaseOrderStatusFilter<"PurchaseOrder"> | $Enums.PurchaseOrderStatus
    orderDate?: DateTimeFilter<"PurchaseOrder"> | Date | string
    expectedDate?: DateTimeNullableFilter<"PurchaseOrder"> | Date | string | null
    deliveryDate?: DateTimeNullableFilter<"PurchaseOrder"> | Date | string | null
    paymentTerms?: StringNullableFilter<"PurchaseOrder"> | string | null
    shippingTerms?: StringNullableFilter<"PurchaseOrder"> | string | null
    trackingNumber?: StringNullableFilter<"PurchaseOrder"> | string | null
    carrier?: StringNullableFilter<"PurchaseOrder"> | string | null
    approvedBy?: StringNullableFilter<"PurchaseOrder"> | string | null
    approvedAt?: DateTimeNullableFilter<"PurchaseOrder"> | Date | string | null
    notes?: StringNullableFilter<"PurchaseOrder"> | string | null
    internalNotes?: StringNullableFilter<"PurchaseOrder"> | string | null
    createdAt?: DateTimeFilter<"PurchaseOrder"> | Date | string
    updatedAt?: DateTimeFilter<"PurchaseOrder"> | Date | string
    createdBy?: StringFilter<"PurchaseOrder"> | string
    supplier?: XOR<SupplierScalarRelationFilter, SupplierWhereInput>
    warehouse?: XOR<WarehouseNullableScalarRelationFilter, WarehouseWhereInput> | null
    items?: PurchaseOrderItemListRelationFilter
    receipts?: GoodsReceiptListRelationFilter
    invoices?: SupplierInvoiceListRelationFilter
  }

  export type PurchaseOrderOrderByWithRelationInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    supplierId?: SortOrder
    warehouseId?: SortOrderInput | SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    shippingCost?: SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    orderDate?: SortOrder
    expectedDate?: SortOrderInput | SortOrder
    deliveryDate?: SortOrderInput | SortOrder
    paymentTerms?: SortOrderInput | SortOrder
    shippingTerms?: SortOrderInput | SortOrder
    trackingNumber?: SortOrderInput | SortOrder
    carrier?: SortOrderInput | SortOrder
    approvedBy?: SortOrderInput | SortOrder
    approvedAt?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    internalNotes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    supplier?: SupplierOrderByWithRelationInput
    warehouse?: WarehouseOrderByWithRelationInput
    items?: PurchaseOrderItemOrderByRelationAggregateInput
    receipts?: GoodsReceiptOrderByRelationAggregateInput
    invoices?: SupplierInvoiceOrderByRelationAggregateInput
  }

  export type PurchaseOrderWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    orderNumber?: string
    AND?: PurchaseOrderWhereInput | PurchaseOrderWhereInput[]
    OR?: PurchaseOrderWhereInput[]
    NOT?: PurchaseOrderWhereInput | PurchaseOrderWhereInput[]
    supplierId?: StringFilter<"PurchaseOrder"> | string
    warehouseId?: StringNullableFilter<"PurchaseOrder"> | string | null
    subtotal?: DecimalFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"PurchaseOrder"> | string
    status?: EnumPurchaseOrderStatusFilter<"PurchaseOrder"> | $Enums.PurchaseOrderStatus
    orderDate?: DateTimeFilter<"PurchaseOrder"> | Date | string
    expectedDate?: DateTimeNullableFilter<"PurchaseOrder"> | Date | string | null
    deliveryDate?: DateTimeNullableFilter<"PurchaseOrder"> | Date | string | null
    paymentTerms?: StringNullableFilter<"PurchaseOrder"> | string | null
    shippingTerms?: StringNullableFilter<"PurchaseOrder"> | string | null
    trackingNumber?: StringNullableFilter<"PurchaseOrder"> | string | null
    carrier?: StringNullableFilter<"PurchaseOrder"> | string | null
    approvedBy?: StringNullableFilter<"PurchaseOrder"> | string | null
    approvedAt?: DateTimeNullableFilter<"PurchaseOrder"> | Date | string | null
    notes?: StringNullableFilter<"PurchaseOrder"> | string | null
    internalNotes?: StringNullableFilter<"PurchaseOrder"> | string | null
    createdAt?: DateTimeFilter<"PurchaseOrder"> | Date | string
    updatedAt?: DateTimeFilter<"PurchaseOrder"> | Date | string
    createdBy?: StringFilter<"PurchaseOrder"> | string
    supplier?: XOR<SupplierScalarRelationFilter, SupplierWhereInput>
    warehouse?: XOR<WarehouseNullableScalarRelationFilter, WarehouseWhereInput> | null
    items?: PurchaseOrderItemListRelationFilter
    receipts?: GoodsReceiptListRelationFilter
    invoices?: SupplierInvoiceListRelationFilter
  }, "id" | "orderNumber">

  export type PurchaseOrderOrderByWithAggregationInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    supplierId?: SortOrder
    warehouseId?: SortOrderInput | SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    shippingCost?: SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    orderDate?: SortOrder
    expectedDate?: SortOrderInput | SortOrder
    deliveryDate?: SortOrderInput | SortOrder
    paymentTerms?: SortOrderInput | SortOrder
    shippingTerms?: SortOrderInput | SortOrder
    trackingNumber?: SortOrderInput | SortOrder
    carrier?: SortOrderInput | SortOrder
    approvedBy?: SortOrderInput | SortOrder
    approvedAt?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    internalNotes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    _count?: PurchaseOrderCountOrderByAggregateInput
    _avg?: PurchaseOrderAvgOrderByAggregateInput
    _max?: PurchaseOrderMaxOrderByAggregateInput
    _min?: PurchaseOrderMinOrderByAggregateInput
    _sum?: PurchaseOrderSumOrderByAggregateInput
  }

  export type PurchaseOrderScalarWhereWithAggregatesInput = {
    AND?: PurchaseOrderScalarWhereWithAggregatesInput | PurchaseOrderScalarWhereWithAggregatesInput[]
    OR?: PurchaseOrderScalarWhereWithAggregatesInput[]
    NOT?: PurchaseOrderScalarWhereWithAggregatesInput | PurchaseOrderScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PurchaseOrder"> | string
    orderNumber?: StringWithAggregatesFilter<"PurchaseOrder"> | string
    supplierId?: StringWithAggregatesFilter<"PurchaseOrder"> | string
    warehouseId?: StringNullableWithAggregatesFilter<"PurchaseOrder"> | string | null
    subtotal?: DecimalWithAggregatesFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalWithAggregatesFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalWithAggregatesFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalWithAggregatesFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalWithAggregatesFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string
    currency?: StringWithAggregatesFilter<"PurchaseOrder"> | string
    status?: EnumPurchaseOrderStatusWithAggregatesFilter<"PurchaseOrder"> | $Enums.PurchaseOrderStatus
    orderDate?: DateTimeWithAggregatesFilter<"PurchaseOrder"> | Date | string
    expectedDate?: DateTimeNullableWithAggregatesFilter<"PurchaseOrder"> | Date | string | null
    deliveryDate?: DateTimeNullableWithAggregatesFilter<"PurchaseOrder"> | Date | string | null
    paymentTerms?: StringNullableWithAggregatesFilter<"PurchaseOrder"> | string | null
    shippingTerms?: StringNullableWithAggregatesFilter<"PurchaseOrder"> | string | null
    trackingNumber?: StringNullableWithAggregatesFilter<"PurchaseOrder"> | string | null
    carrier?: StringNullableWithAggregatesFilter<"PurchaseOrder"> | string | null
    approvedBy?: StringNullableWithAggregatesFilter<"PurchaseOrder"> | string | null
    approvedAt?: DateTimeNullableWithAggregatesFilter<"PurchaseOrder"> | Date | string | null
    notes?: StringNullableWithAggregatesFilter<"PurchaseOrder"> | string | null
    internalNotes?: StringNullableWithAggregatesFilter<"PurchaseOrder"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"PurchaseOrder"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"PurchaseOrder"> | Date | string
    createdBy?: StringWithAggregatesFilter<"PurchaseOrder"> | string
  }

  export type PurchaseOrderItemWhereInput = {
    AND?: PurchaseOrderItemWhereInput | PurchaseOrderItemWhereInput[]
    OR?: PurchaseOrderItemWhereInput[]
    NOT?: PurchaseOrderItemWhereInput | PurchaseOrderItemWhereInput[]
    id?: StringFilter<"PurchaseOrderItem"> | string
    purchaseOrderId?: StringFilter<"PurchaseOrderItem"> | string
    productId?: StringFilter<"PurchaseOrderItem"> | string
    variantId?: StringNullableFilter<"PurchaseOrderItem"> | string | null
    orderedQty?: IntFilter<"PurchaseOrderItem"> | number
    receivedQty?: IntFilter<"PurchaseOrderItem"> | number
    remainingQty?: IntFilter<"PurchaseOrderItem"> | number
    unitCost?: DecimalFilter<"PurchaseOrderItem"> | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFilter<"PurchaseOrderItem"> | Decimal | DecimalJsLike | number | string
    productName?: StringFilter<"PurchaseOrderItem"> | string
    productSku?: StringFilter<"PurchaseOrderItem"> | string
    supplierSku?: StringNullableFilter<"PurchaseOrderItem"> | string | null
    expectedDate?: DateTimeNullableFilter<"PurchaseOrderItem"> | Date | string | null
    status?: EnumPurchaseItemStatusFilter<"PurchaseOrderItem"> | $Enums.PurchaseItemStatus
    notes?: StringNullableFilter<"PurchaseOrderItem"> | string | null
    createdAt?: DateTimeFilter<"PurchaseOrderItem"> | Date | string
    updatedAt?: DateTimeFilter<"PurchaseOrderItem"> | Date | string
    purchaseOrder?: XOR<PurchaseOrderScalarRelationFilter, PurchaseOrderWhereInput>
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    variant?: XOR<ProductVariantNullableScalarRelationFilter, ProductVariantWhereInput> | null
  }

  export type PurchaseOrderItemOrderByWithRelationInput = {
    id?: SortOrder
    purchaseOrderId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrderInput | SortOrder
    orderedQty?: SortOrder
    receivedQty?: SortOrder
    remainingQty?: SortOrder
    unitCost?: SortOrder
    totalCost?: SortOrder
    productName?: SortOrder
    productSku?: SortOrder
    supplierSku?: SortOrderInput | SortOrder
    expectedDate?: SortOrderInput | SortOrder
    status?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    purchaseOrder?: PurchaseOrderOrderByWithRelationInput
    product?: ProductOrderByWithRelationInput
    variant?: ProductVariantOrderByWithRelationInput
  }

  export type PurchaseOrderItemWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PurchaseOrderItemWhereInput | PurchaseOrderItemWhereInput[]
    OR?: PurchaseOrderItemWhereInput[]
    NOT?: PurchaseOrderItemWhereInput | PurchaseOrderItemWhereInput[]
    purchaseOrderId?: StringFilter<"PurchaseOrderItem"> | string
    productId?: StringFilter<"PurchaseOrderItem"> | string
    variantId?: StringNullableFilter<"PurchaseOrderItem"> | string | null
    orderedQty?: IntFilter<"PurchaseOrderItem"> | number
    receivedQty?: IntFilter<"PurchaseOrderItem"> | number
    remainingQty?: IntFilter<"PurchaseOrderItem"> | number
    unitCost?: DecimalFilter<"PurchaseOrderItem"> | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFilter<"PurchaseOrderItem"> | Decimal | DecimalJsLike | number | string
    productName?: StringFilter<"PurchaseOrderItem"> | string
    productSku?: StringFilter<"PurchaseOrderItem"> | string
    supplierSku?: StringNullableFilter<"PurchaseOrderItem"> | string | null
    expectedDate?: DateTimeNullableFilter<"PurchaseOrderItem"> | Date | string | null
    status?: EnumPurchaseItemStatusFilter<"PurchaseOrderItem"> | $Enums.PurchaseItemStatus
    notes?: StringNullableFilter<"PurchaseOrderItem"> | string | null
    createdAt?: DateTimeFilter<"PurchaseOrderItem"> | Date | string
    updatedAt?: DateTimeFilter<"PurchaseOrderItem"> | Date | string
    purchaseOrder?: XOR<PurchaseOrderScalarRelationFilter, PurchaseOrderWhereInput>
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    variant?: XOR<ProductVariantNullableScalarRelationFilter, ProductVariantWhereInput> | null
  }, "id">

  export type PurchaseOrderItemOrderByWithAggregationInput = {
    id?: SortOrder
    purchaseOrderId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrderInput | SortOrder
    orderedQty?: SortOrder
    receivedQty?: SortOrder
    remainingQty?: SortOrder
    unitCost?: SortOrder
    totalCost?: SortOrder
    productName?: SortOrder
    productSku?: SortOrder
    supplierSku?: SortOrderInput | SortOrder
    expectedDate?: SortOrderInput | SortOrder
    status?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: PurchaseOrderItemCountOrderByAggregateInput
    _avg?: PurchaseOrderItemAvgOrderByAggregateInput
    _max?: PurchaseOrderItemMaxOrderByAggregateInput
    _min?: PurchaseOrderItemMinOrderByAggregateInput
    _sum?: PurchaseOrderItemSumOrderByAggregateInput
  }

  export type PurchaseOrderItemScalarWhereWithAggregatesInput = {
    AND?: PurchaseOrderItemScalarWhereWithAggregatesInput | PurchaseOrderItemScalarWhereWithAggregatesInput[]
    OR?: PurchaseOrderItemScalarWhereWithAggregatesInput[]
    NOT?: PurchaseOrderItemScalarWhereWithAggregatesInput | PurchaseOrderItemScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PurchaseOrderItem"> | string
    purchaseOrderId?: StringWithAggregatesFilter<"PurchaseOrderItem"> | string
    productId?: StringWithAggregatesFilter<"PurchaseOrderItem"> | string
    variantId?: StringNullableWithAggregatesFilter<"PurchaseOrderItem"> | string | null
    orderedQty?: IntWithAggregatesFilter<"PurchaseOrderItem"> | number
    receivedQty?: IntWithAggregatesFilter<"PurchaseOrderItem"> | number
    remainingQty?: IntWithAggregatesFilter<"PurchaseOrderItem"> | number
    unitCost?: DecimalWithAggregatesFilter<"PurchaseOrderItem"> | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalWithAggregatesFilter<"PurchaseOrderItem"> | Decimal | DecimalJsLike | number | string
    productName?: StringWithAggregatesFilter<"PurchaseOrderItem"> | string
    productSku?: StringWithAggregatesFilter<"PurchaseOrderItem"> | string
    supplierSku?: StringNullableWithAggregatesFilter<"PurchaseOrderItem"> | string | null
    expectedDate?: DateTimeNullableWithAggregatesFilter<"PurchaseOrderItem"> | Date | string | null
    status?: EnumPurchaseItemStatusWithAggregatesFilter<"PurchaseOrderItem"> | $Enums.PurchaseItemStatus
    notes?: StringNullableWithAggregatesFilter<"PurchaseOrderItem"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"PurchaseOrderItem"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"PurchaseOrderItem"> | Date | string
  }

  export type GoodsReceiptWhereInput = {
    AND?: GoodsReceiptWhereInput | GoodsReceiptWhereInput[]
    OR?: GoodsReceiptWhereInput[]
    NOT?: GoodsReceiptWhereInput | GoodsReceiptWhereInput[]
    id?: StringFilter<"GoodsReceipt"> | string
    purchaseOrderId?: StringFilter<"GoodsReceipt"> | string
    warehouseId?: StringFilter<"GoodsReceipt"> | string
    receiptNumber?: StringFilter<"GoodsReceipt"> | string
    receivedDate?: DateTimeFilter<"GoodsReceipt"> | Date | string
    qcStatus?: EnumQualityStatusFilter<"GoodsReceipt"> | $Enums.QualityStatus
    qcNotes?: StringNullableFilter<"GoodsReceipt"> | string | null
    qcBy?: StringNullableFilter<"GoodsReceipt"> | string | null
    qcDate?: DateTimeNullableFilter<"GoodsReceipt"> | Date | string | null
    status?: EnumReceiptStatusFilter<"GoodsReceipt"> | $Enums.ReceiptStatus
    notes?: StringNullableFilter<"GoodsReceipt"> | string | null
    receivedBy?: StringFilter<"GoodsReceipt"> | string
    createdAt?: DateTimeFilter<"GoodsReceipt"> | Date | string
    updatedAt?: DateTimeFilter<"GoodsReceipt"> | Date | string
    purchaseOrder?: XOR<PurchaseOrderScalarRelationFilter, PurchaseOrderWhereInput>
    warehouse?: XOR<WarehouseScalarRelationFilter, WarehouseWhereInput>
    items?: GoodsReceiptItemListRelationFilter
  }

  export type GoodsReceiptOrderByWithRelationInput = {
    id?: SortOrder
    purchaseOrderId?: SortOrder
    warehouseId?: SortOrder
    receiptNumber?: SortOrder
    receivedDate?: SortOrder
    qcStatus?: SortOrder
    qcNotes?: SortOrderInput | SortOrder
    qcBy?: SortOrderInput | SortOrder
    qcDate?: SortOrderInput | SortOrder
    status?: SortOrder
    notes?: SortOrderInput | SortOrder
    receivedBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    purchaseOrder?: PurchaseOrderOrderByWithRelationInput
    warehouse?: WarehouseOrderByWithRelationInput
    items?: GoodsReceiptItemOrderByRelationAggregateInput
  }

  export type GoodsReceiptWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    receiptNumber?: string
    AND?: GoodsReceiptWhereInput | GoodsReceiptWhereInput[]
    OR?: GoodsReceiptWhereInput[]
    NOT?: GoodsReceiptWhereInput | GoodsReceiptWhereInput[]
    purchaseOrderId?: StringFilter<"GoodsReceipt"> | string
    warehouseId?: StringFilter<"GoodsReceipt"> | string
    receivedDate?: DateTimeFilter<"GoodsReceipt"> | Date | string
    qcStatus?: EnumQualityStatusFilter<"GoodsReceipt"> | $Enums.QualityStatus
    qcNotes?: StringNullableFilter<"GoodsReceipt"> | string | null
    qcBy?: StringNullableFilter<"GoodsReceipt"> | string | null
    qcDate?: DateTimeNullableFilter<"GoodsReceipt"> | Date | string | null
    status?: EnumReceiptStatusFilter<"GoodsReceipt"> | $Enums.ReceiptStatus
    notes?: StringNullableFilter<"GoodsReceipt"> | string | null
    receivedBy?: StringFilter<"GoodsReceipt"> | string
    createdAt?: DateTimeFilter<"GoodsReceipt"> | Date | string
    updatedAt?: DateTimeFilter<"GoodsReceipt"> | Date | string
    purchaseOrder?: XOR<PurchaseOrderScalarRelationFilter, PurchaseOrderWhereInput>
    warehouse?: XOR<WarehouseScalarRelationFilter, WarehouseWhereInput>
    items?: GoodsReceiptItemListRelationFilter
  }, "id" | "receiptNumber">

  export type GoodsReceiptOrderByWithAggregationInput = {
    id?: SortOrder
    purchaseOrderId?: SortOrder
    warehouseId?: SortOrder
    receiptNumber?: SortOrder
    receivedDate?: SortOrder
    qcStatus?: SortOrder
    qcNotes?: SortOrderInput | SortOrder
    qcBy?: SortOrderInput | SortOrder
    qcDate?: SortOrderInput | SortOrder
    status?: SortOrder
    notes?: SortOrderInput | SortOrder
    receivedBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: GoodsReceiptCountOrderByAggregateInput
    _max?: GoodsReceiptMaxOrderByAggregateInput
    _min?: GoodsReceiptMinOrderByAggregateInput
  }

  export type GoodsReceiptScalarWhereWithAggregatesInput = {
    AND?: GoodsReceiptScalarWhereWithAggregatesInput | GoodsReceiptScalarWhereWithAggregatesInput[]
    OR?: GoodsReceiptScalarWhereWithAggregatesInput[]
    NOT?: GoodsReceiptScalarWhereWithAggregatesInput | GoodsReceiptScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"GoodsReceipt"> | string
    purchaseOrderId?: StringWithAggregatesFilter<"GoodsReceipt"> | string
    warehouseId?: StringWithAggregatesFilter<"GoodsReceipt"> | string
    receiptNumber?: StringWithAggregatesFilter<"GoodsReceipt"> | string
    receivedDate?: DateTimeWithAggregatesFilter<"GoodsReceipt"> | Date | string
    qcStatus?: EnumQualityStatusWithAggregatesFilter<"GoodsReceipt"> | $Enums.QualityStatus
    qcNotes?: StringNullableWithAggregatesFilter<"GoodsReceipt"> | string | null
    qcBy?: StringNullableWithAggregatesFilter<"GoodsReceipt"> | string | null
    qcDate?: DateTimeNullableWithAggregatesFilter<"GoodsReceipt"> | Date | string | null
    status?: EnumReceiptStatusWithAggregatesFilter<"GoodsReceipt"> | $Enums.ReceiptStatus
    notes?: StringNullableWithAggregatesFilter<"GoodsReceipt"> | string | null
    receivedBy?: StringWithAggregatesFilter<"GoodsReceipt"> | string
    createdAt?: DateTimeWithAggregatesFilter<"GoodsReceipt"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"GoodsReceipt"> | Date | string
  }

  export type GoodsReceiptItemWhereInput = {
    AND?: GoodsReceiptItemWhereInput | GoodsReceiptItemWhereInput[]
    OR?: GoodsReceiptItemWhereInput[]
    NOT?: GoodsReceiptItemWhereInput | GoodsReceiptItemWhereInput[]
    id?: StringFilter<"GoodsReceiptItem"> | string
    goodsReceiptId?: StringFilter<"GoodsReceiptItem"> | string
    productId?: StringFilter<"GoodsReceiptItem"> | string
    variantId?: StringNullableFilter<"GoodsReceiptItem"> | string | null
    expectedQty?: IntFilter<"GoodsReceiptItem"> | number
    receivedQty?: IntFilter<"GoodsReceiptItem"> | number
    acceptedQty?: IntFilter<"GoodsReceiptItem"> | number
    rejectedQty?: IntFilter<"GoodsReceiptItem"> | number
    qcStatus?: EnumQualityStatusFilter<"GoodsReceiptItem"> | $Enums.QualityStatus
    qcNotes?: StringNullableFilter<"GoodsReceiptItem"> | string | null
    rejectionReason?: StringNullableFilter<"GoodsReceiptItem"> | string | null
    lotNumber?: StringNullableFilter<"GoodsReceiptItem"> | string | null
    batchNumber?: StringNullableFilter<"GoodsReceiptItem"> | string | null
    expiryDate?: DateTimeNullableFilter<"GoodsReceiptItem"> | Date | string | null
    serialNumbers?: JsonNullableFilter<"GoodsReceiptItem">
    receivedLocation?: StringNullableFilter<"GoodsReceiptItem"> | string | null
    notes?: StringNullableFilter<"GoodsReceiptItem"> | string | null
    createdAt?: DateTimeFilter<"GoodsReceiptItem"> | Date | string
    updatedAt?: DateTimeFilter<"GoodsReceiptItem"> | Date | string
    goodsReceipt?: XOR<GoodsReceiptScalarRelationFilter, GoodsReceiptWhereInput>
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    variant?: XOR<ProductVariantNullableScalarRelationFilter, ProductVariantWhereInput> | null
  }

  export type GoodsReceiptItemOrderByWithRelationInput = {
    id?: SortOrder
    goodsReceiptId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrderInput | SortOrder
    expectedQty?: SortOrder
    receivedQty?: SortOrder
    acceptedQty?: SortOrder
    rejectedQty?: SortOrder
    qcStatus?: SortOrder
    qcNotes?: SortOrderInput | SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    lotNumber?: SortOrderInput | SortOrder
    batchNumber?: SortOrderInput | SortOrder
    expiryDate?: SortOrderInput | SortOrder
    serialNumbers?: SortOrderInput | SortOrder
    receivedLocation?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    goodsReceipt?: GoodsReceiptOrderByWithRelationInput
    product?: ProductOrderByWithRelationInput
    variant?: ProductVariantOrderByWithRelationInput
  }

  export type GoodsReceiptItemWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: GoodsReceiptItemWhereInput | GoodsReceiptItemWhereInput[]
    OR?: GoodsReceiptItemWhereInput[]
    NOT?: GoodsReceiptItemWhereInput | GoodsReceiptItemWhereInput[]
    goodsReceiptId?: StringFilter<"GoodsReceiptItem"> | string
    productId?: StringFilter<"GoodsReceiptItem"> | string
    variantId?: StringNullableFilter<"GoodsReceiptItem"> | string | null
    expectedQty?: IntFilter<"GoodsReceiptItem"> | number
    receivedQty?: IntFilter<"GoodsReceiptItem"> | number
    acceptedQty?: IntFilter<"GoodsReceiptItem"> | number
    rejectedQty?: IntFilter<"GoodsReceiptItem"> | number
    qcStatus?: EnumQualityStatusFilter<"GoodsReceiptItem"> | $Enums.QualityStatus
    qcNotes?: StringNullableFilter<"GoodsReceiptItem"> | string | null
    rejectionReason?: StringNullableFilter<"GoodsReceiptItem"> | string | null
    lotNumber?: StringNullableFilter<"GoodsReceiptItem"> | string | null
    batchNumber?: StringNullableFilter<"GoodsReceiptItem"> | string | null
    expiryDate?: DateTimeNullableFilter<"GoodsReceiptItem"> | Date | string | null
    serialNumbers?: JsonNullableFilter<"GoodsReceiptItem">
    receivedLocation?: StringNullableFilter<"GoodsReceiptItem"> | string | null
    notes?: StringNullableFilter<"GoodsReceiptItem"> | string | null
    createdAt?: DateTimeFilter<"GoodsReceiptItem"> | Date | string
    updatedAt?: DateTimeFilter<"GoodsReceiptItem"> | Date | string
    goodsReceipt?: XOR<GoodsReceiptScalarRelationFilter, GoodsReceiptWhereInput>
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    variant?: XOR<ProductVariantNullableScalarRelationFilter, ProductVariantWhereInput> | null
  }, "id">

  export type GoodsReceiptItemOrderByWithAggregationInput = {
    id?: SortOrder
    goodsReceiptId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrderInput | SortOrder
    expectedQty?: SortOrder
    receivedQty?: SortOrder
    acceptedQty?: SortOrder
    rejectedQty?: SortOrder
    qcStatus?: SortOrder
    qcNotes?: SortOrderInput | SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    lotNumber?: SortOrderInput | SortOrder
    batchNumber?: SortOrderInput | SortOrder
    expiryDate?: SortOrderInput | SortOrder
    serialNumbers?: SortOrderInput | SortOrder
    receivedLocation?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: GoodsReceiptItemCountOrderByAggregateInput
    _avg?: GoodsReceiptItemAvgOrderByAggregateInput
    _max?: GoodsReceiptItemMaxOrderByAggregateInput
    _min?: GoodsReceiptItemMinOrderByAggregateInput
    _sum?: GoodsReceiptItemSumOrderByAggregateInput
  }

  export type GoodsReceiptItemScalarWhereWithAggregatesInput = {
    AND?: GoodsReceiptItemScalarWhereWithAggregatesInput | GoodsReceiptItemScalarWhereWithAggregatesInput[]
    OR?: GoodsReceiptItemScalarWhereWithAggregatesInput[]
    NOT?: GoodsReceiptItemScalarWhereWithAggregatesInput | GoodsReceiptItemScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"GoodsReceiptItem"> | string
    goodsReceiptId?: StringWithAggregatesFilter<"GoodsReceiptItem"> | string
    productId?: StringWithAggregatesFilter<"GoodsReceiptItem"> | string
    variantId?: StringNullableWithAggregatesFilter<"GoodsReceiptItem"> | string | null
    expectedQty?: IntWithAggregatesFilter<"GoodsReceiptItem"> | number
    receivedQty?: IntWithAggregatesFilter<"GoodsReceiptItem"> | number
    acceptedQty?: IntWithAggregatesFilter<"GoodsReceiptItem"> | number
    rejectedQty?: IntWithAggregatesFilter<"GoodsReceiptItem"> | number
    qcStatus?: EnumQualityStatusWithAggregatesFilter<"GoodsReceiptItem"> | $Enums.QualityStatus
    qcNotes?: StringNullableWithAggregatesFilter<"GoodsReceiptItem"> | string | null
    rejectionReason?: StringNullableWithAggregatesFilter<"GoodsReceiptItem"> | string | null
    lotNumber?: StringNullableWithAggregatesFilter<"GoodsReceiptItem"> | string | null
    batchNumber?: StringNullableWithAggregatesFilter<"GoodsReceiptItem"> | string | null
    expiryDate?: DateTimeNullableWithAggregatesFilter<"GoodsReceiptItem"> | Date | string | null
    serialNumbers?: JsonNullableWithAggregatesFilter<"GoodsReceiptItem">
    receivedLocation?: StringNullableWithAggregatesFilter<"GoodsReceiptItem"> | string | null
    notes?: StringNullableWithAggregatesFilter<"GoodsReceiptItem"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"GoodsReceiptItem"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"GoodsReceiptItem"> | Date | string
  }

  export type CustomerWhereInput = {
    AND?: CustomerWhereInput | CustomerWhereInput[]
    OR?: CustomerWhereInput[]
    NOT?: CustomerWhereInput | CustomerWhereInput[]
    id?: StringFilter<"Customer"> | string
    customerNumber?: StringFilter<"Customer"> | string
    type?: EnumCustomerTypeFilter<"Customer"> | $Enums.CustomerType
    firstName?: StringNullableFilter<"Customer"> | string | null
    lastName?: StringNullableFilter<"Customer"> | string | null
    companyName?: StringNullableFilter<"Customer"> | string | null
    taxId?: StringNullableFilter<"Customer"> | string | null
    email?: StringNullableFilter<"Customer"> | string | null
    phone?: StringNullableFilter<"Customer"> | string | null
    mobile?: StringNullableFilter<"Customer"> | string | null
    billingAddress?: JsonNullableFilter<"Customer">
    shippingAddress?: JsonNullableFilter<"Customer">
    creditLimit?: DecimalNullableFilter<"Customer"> | Decimal | DecimalJsLike | number | string | null
    paymentTerms?: StringNullableFilter<"Customer"> | string | null
    currency?: StringFilter<"Customer"> | string
    preferredLanguage?: StringNullableFilter<"Customer"> | string | null
    timezone?: StringNullableFilter<"Customer"> | string | null
    allowMarketing?: BoolFilter<"Customer"> | boolean
    source?: StringNullableFilter<"Customer"> | string | null
    status?: EnumCustomerStatusFilter<"Customer"> | $Enums.CustomerStatus
    notes?: StringNullableFilter<"Customer"> | string | null
    createdAt?: DateTimeFilter<"Customer"> | Date | string
    updatedAt?: DateTimeFilter<"Customer"> | Date | string
    createdBy?: StringFilter<"Customer"> | string
    orders?: OrderListRelationFilter
    invoices?: CustomerInvoiceListRelationFilter
    contacts?: CustomerContactListRelationFilter
  }

  export type CustomerOrderByWithRelationInput = {
    id?: SortOrder
    customerNumber?: SortOrder
    type?: SortOrder
    firstName?: SortOrderInput | SortOrder
    lastName?: SortOrderInput | SortOrder
    companyName?: SortOrderInput | SortOrder
    taxId?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    mobile?: SortOrderInput | SortOrder
    billingAddress?: SortOrderInput | SortOrder
    shippingAddress?: SortOrderInput | SortOrder
    creditLimit?: SortOrderInput | SortOrder
    paymentTerms?: SortOrderInput | SortOrder
    currency?: SortOrder
    preferredLanguage?: SortOrderInput | SortOrder
    timezone?: SortOrderInput | SortOrder
    allowMarketing?: SortOrder
    source?: SortOrderInput | SortOrder
    status?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    orders?: OrderOrderByRelationAggregateInput
    invoices?: CustomerInvoiceOrderByRelationAggregateInput
    contacts?: CustomerContactOrderByRelationAggregateInput
  }

  export type CustomerWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    customerNumber?: string
    AND?: CustomerWhereInput | CustomerWhereInput[]
    OR?: CustomerWhereInput[]
    NOT?: CustomerWhereInput | CustomerWhereInput[]
    type?: EnumCustomerTypeFilter<"Customer"> | $Enums.CustomerType
    firstName?: StringNullableFilter<"Customer"> | string | null
    lastName?: StringNullableFilter<"Customer"> | string | null
    companyName?: StringNullableFilter<"Customer"> | string | null
    taxId?: StringNullableFilter<"Customer"> | string | null
    email?: StringNullableFilter<"Customer"> | string | null
    phone?: StringNullableFilter<"Customer"> | string | null
    mobile?: StringNullableFilter<"Customer"> | string | null
    billingAddress?: JsonNullableFilter<"Customer">
    shippingAddress?: JsonNullableFilter<"Customer">
    creditLimit?: DecimalNullableFilter<"Customer"> | Decimal | DecimalJsLike | number | string | null
    paymentTerms?: StringNullableFilter<"Customer"> | string | null
    currency?: StringFilter<"Customer"> | string
    preferredLanguage?: StringNullableFilter<"Customer"> | string | null
    timezone?: StringNullableFilter<"Customer"> | string | null
    allowMarketing?: BoolFilter<"Customer"> | boolean
    source?: StringNullableFilter<"Customer"> | string | null
    status?: EnumCustomerStatusFilter<"Customer"> | $Enums.CustomerStatus
    notes?: StringNullableFilter<"Customer"> | string | null
    createdAt?: DateTimeFilter<"Customer"> | Date | string
    updatedAt?: DateTimeFilter<"Customer"> | Date | string
    createdBy?: StringFilter<"Customer"> | string
    orders?: OrderListRelationFilter
    invoices?: CustomerInvoiceListRelationFilter
    contacts?: CustomerContactListRelationFilter
  }, "id" | "customerNumber">

  export type CustomerOrderByWithAggregationInput = {
    id?: SortOrder
    customerNumber?: SortOrder
    type?: SortOrder
    firstName?: SortOrderInput | SortOrder
    lastName?: SortOrderInput | SortOrder
    companyName?: SortOrderInput | SortOrder
    taxId?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    mobile?: SortOrderInput | SortOrder
    billingAddress?: SortOrderInput | SortOrder
    shippingAddress?: SortOrderInput | SortOrder
    creditLimit?: SortOrderInput | SortOrder
    paymentTerms?: SortOrderInput | SortOrder
    currency?: SortOrder
    preferredLanguage?: SortOrderInput | SortOrder
    timezone?: SortOrderInput | SortOrder
    allowMarketing?: SortOrder
    source?: SortOrderInput | SortOrder
    status?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    _count?: CustomerCountOrderByAggregateInput
    _avg?: CustomerAvgOrderByAggregateInput
    _max?: CustomerMaxOrderByAggregateInput
    _min?: CustomerMinOrderByAggregateInput
    _sum?: CustomerSumOrderByAggregateInput
  }

  export type CustomerScalarWhereWithAggregatesInput = {
    AND?: CustomerScalarWhereWithAggregatesInput | CustomerScalarWhereWithAggregatesInput[]
    OR?: CustomerScalarWhereWithAggregatesInput[]
    NOT?: CustomerScalarWhereWithAggregatesInput | CustomerScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Customer"> | string
    customerNumber?: StringWithAggregatesFilter<"Customer"> | string
    type?: EnumCustomerTypeWithAggregatesFilter<"Customer"> | $Enums.CustomerType
    firstName?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    lastName?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    companyName?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    taxId?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    email?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    phone?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    mobile?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    billingAddress?: JsonNullableWithAggregatesFilter<"Customer">
    shippingAddress?: JsonNullableWithAggregatesFilter<"Customer">
    creditLimit?: DecimalNullableWithAggregatesFilter<"Customer"> | Decimal | DecimalJsLike | number | string | null
    paymentTerms?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    currency?: StringWithAggregatesFilter<"Customer"> | string
    preferredLanguage?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    timezone?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    allowMarketing?: BoolWithAggregatesFilter<"Customer"> | boolean
    source?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    status?: EnumCustomerStatusWithAggregatesFilter<"Customer"> | $Enums.CustomerStatus
    notes?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Customer"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Customer"> | Date | string
    createdBy?: StringWithAggregatesFilter<"Customer"> | string
  }

  export type CustomerContactWhereInput = {
    AND?: CustomerContactWhereInput | CustomerContactWhereInput[]
    OR?: CustomerContactWhereInput[]
    NOT?: CustomerContactWhereInput | CustomerContactWhereInput[]
    id?: StringFilter<"CustomerContact"> | string
    customerId?: StringFilter<"CustomerContact"> | string
    name?: StringFilter<"CustomerContact"> | string
    title?: StringNullableFilter<"CustomerContact"> | string | null
    email?: StringNullableFilter<"CustomerContact"> | string | null
    phone?: StringNullableFilter<"CustomerContact"> | string | null
    mobile?: StringNullableFilter<"CustomerContact"> | string | null
    isPrimary?: BoolFilter<"CustomerContact"> | boolean
    department?: StringNullableFilter<"CustomerContact"> | string | null
    isActive?: BoolFilter<"CustomerContact"> | boolean
    notes?: StringNullableFilter<"CustomerContact"> | string | null
    createdAt?: DateTimeFilter<"CustomerContact"> | Date | string
    updatedAt?: DateTimeFilter<"CustomerContact"> | Date | string
    customer?: XOR<CustomerScalarRelationFilter, CustomerWhereInput>
  }

  export type CustomerContactOrderByWithRelationInput = {
    id?: SortOrder
    customerId?: SortOrder
    name?: SortOrder
    title?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    mobile?: SortOrderInput | SortOrder
    isPrimary?: SortOrder
    department?: SortOrderInput | SortOrder
    isActive?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    customer?: CustomerOrderByWithRelationInput
  }

  export type CustomerContactWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CustomerContactWhereInput | CustomerContactWhereInput[]
    OR?: CustomerContactWhereInput[]
    NOT?: CustomerContactWhereInput | CustomerContactWhereInput[]
    customerId?: StringFilter<"CustomerContact"> | string
    name?: StringFilter<"CustomerContact"> | string
    title?: StringNullableFilter<"CustomerContact"> | string | null
    email?: StringNullableFilter<"CustomerContact"> | string | null
    phone?: StringNullableFilter<"CustomerContact"> | string | null
    mobile?: StringNullableFilter<"CustomerContact"> | string | null
    isPrimary?: BoolFilter<"CustomerContact"> | boolean
    department?: StringNullableFilter<"CustomerContact"> | string | null
    isActive?: BoolFilter<"CustomerContact"> | boolean
    notes?: StringNullableFilter<"CustomerContact"> | string | null
    createdAt?: DateTimeFilter<"CustomerContact"> | Date | string
    updatedAt?: DateTimeFilter<"CustomerContact"> | Date | string
    customer?: XOR<CustomerScalarRelationFilter, CustomerWhereInput>
  }, "id">

  export type CustomerContactOrderByWithAggregationInput = {
    id?: SortOrder
    customerId?: SortOrder
    name?: SortOrder
    title?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    mobile?: SortOrderInput | SortOrder
    isPrimary?: SortOrder
    department?: SortOrderInput | SortOrder
    isActive?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CustomerContactCountOrderByAggregateInput
    _max?: CustomerContactMaxOrderByAggregateInput
    _min?: CustomerContactMinOrderByAggregateInput
  }

  export type CustomerContactScalarWhereWithAggregatesInput = {
    AND?: CustomerContactScalarWhereWithAggregatesInput | CustomerContactScalarWhereWithAggregatesInput[]
    OR?: CustomerContactScalarWhereWithAggregatesInput[]
    NOT?: CustomerContactScalarWhereWithAggregatesInput | CustomerContactScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CustomerContact"> | string
    customerId?: StringWithAggregatesFilter<"CustomerContact"> | string
    name?: StringWithAggregatesFilter<"CustomerContact"> | string
    title?: StringNullableWithAggregatesFilter<"CustomerContact"> | string | null
    email?: StringNullableWithAggregatesFilter<"CustomerContact"> | string | null
    phone?: StringNullableWithAggregatesFilter<"CustomerContact"> | string | null
    mobile?: StringNullableWithAggregatesFilter<"CustomerContact"> | string | null
    isPrimary?: BoolWithAggregatesFilter<"CustomerContact"> | boolean
    department?: StringNullableWithAggregatesFilter<"CustomerContact"> | string | null
    isActive?: BoolWithAggregatesFilter<"CustomerContact"> | boolean
    notes?: StringNullableWithAggregatesFilter<"CustomerContact"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"CustomerContact"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CustomerContact"> | Date | string
  }

  export type OrderWhereInput = {
    AND?: OrderWhereInput | OrderWhereInput[]
    OR?: OrderWhereInput[]
    NOT?: OrderWhereInput | OrderWhereInput[]
    id?: StringFilter<"Order"> | string
    orderNumber?: StringFilter<"Order"> | string
    customerId?: StringFilter<"Order"> | string
    warehouseId?: StringFilter<"Order"> | string
    type?: EnumOrderTypeFilter<"Order"> | $Enums.OrderType
    channel?: EnumOrderChannelFilter<"Order"> | $Enums.OrderChannel
    subtotal?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"Order"> | string
    status?: EnumOrderStatusFilter<"Order"> | $Enums.OrderStatus
    fulfillmentStatus?: EnumFulfillmentStatusFilter<"Order"> | $Enums.FulfillmentStatus
    paymentStatus?: EnumPaymentStatusFilter<"Order"> | $Enums.PaymentStatus
    orderDate?: DateTimeFilter<"Order"> | Date | string
    requiredDate?: DateTimeNullableFilter<"Order"> | Date | string | null
    promisedDate?: DateTimeNullableFilter<"Order"> | Date | string | null
    shippedDate?: DateTimeNullableFilter<"Order"> | Date | string | null
    deliveredDate?: DateTimeNullableFilter<"Order"> | Date | string | null
    shippingMethod?: StringNullableFilter<"Order"> | string | null
    trackingNumber?: StringNullableFilter<"Order"> | string | null
    carrier?: StringNullableFilter<"Order"> | string | null
    shippingAddress?: JsonNullableFilter<"Order">
    priority?: EnumOrderPriorityFilter<"Order"> | $Enums.OrderPriority
    rushOrder?: BoolFilter<"Order"> | boolean
    notes?: StringNullableFilter<"Order"> | string | null
    internalNotes?: StringNullableFilter<"Order"> | string | null
    createdAt?: DateTimeFilter<"Order"> | Date | string
    updatedAt?: DateTimeFilter<"Order"> | Date | string
    createdBy?: StringFilter<"Order"> | string
    customer?: XOR<CustomerScalarRelationFilter, CustomerWhereInput>
    warehouse?: XOR<WarehouseScalarRelationFilter, WarehouseWhereInput>
    items?: OrderItemListRelationFilter
    shipments?: ShipmentListRelationFilter
    invoices?: CustomerInvoiceListRelationFilter
  }

  export type OrderOrderByWithRelationInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    customerId?: SortOrder
    warehouseId?: SortOrder
    type?: SortOrder
    channel?: SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    shippingCost?: SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    fulfillmentStatus?: SortOrder
    paymentStatus?: SortOrder
    orderDate?: SortOrder
    requiredDate?: SortOrderInput | SortOrder
    promisedDate?: SortOrderInput | SortOrder
    shippedDate?: SortOrderInput | SortOrder
    deliveredDate?: SortOrderInput | SortOrder
    shippingMethod?: SortOrderInput | SortOrder
    trackingNumber?: SortOrderInput | SortOrder
    carrier?: SortOrderInput | SortOrder
    shippingAddress?: SortOrderInput | SortOrder
    priority?: SortOrder
    rushOrder?: SortOrder
    notes?: SortOrderInput | SortOrder
    internalNotes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    customer?: CustomerOrderByWithRelationInput
    warehouse?: WarehouseOrderByWithRelationInput
    items?: OrderItemOrderByRelationAggregateInput
    shipments?: ShipmentOrderByRelationAggregateInput
    invoices?: CustomerInvoiceOrderByRelationAggregateInput
  }

  export type OrderWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    orderNumber?: string
    AND?: OrderWhereInput | OrderWhereInput[]
    OR?: OrderWhereInput[]
    NOT?: OrderWhereInput | OrderWhereInput[]
    customerId?: StringFilter<"Order"> | string
    warehouseId?: StringFilter<"Order"> | string
    type?: EnumOrderTypeFilter<"Order"> | $Enums.OrderType
    channel?: EnumOrderChannelFilter<"Order"> | $Enums.OrderChannel
    subtotal?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"Order"> | string
    status?: EnumOrderStatusFilter<"Order"> | $Enums.OrderStatus
    fulfillmentStatus?: EnumFulfillmentStatusFilter<"Order"> | $Enums.FulfillmentStatus
    paymentStatus?: EnumPaymentStatusFilter<"Order"> | $Enums.PaymentStatus
    orderDate?: DateTimeFilter<"Order"> | Date | string
    requiredDate?: DateTimeNullableFilter<"Order"> | Date | string | null
    promisedDate?: DateTimeNullableFilter<"Order"> | Date | string | null
    shippedDate?: DateTimeNullableFilter<"Order"> | Date | string | null
    deliveredDate?: DateTimeNullableFilter<"Order"> | Date | string | null
    shippingMethod?: StringNullableFilter<"Order"> | string | null
    trackingNumber?: StringNullableFilter<"Order"> | string | null
    carrier?: StringNullableFilter<"Order"> | string | null
    shippingAddress?: JsonNullableFilter<"Order">
    priority?: EnumOrderPriorityFilter<"Order"> | $Enums.OrderPriority
    rushOrder?: BoolFilter<"Order"> | boolean
    notes?: StringNullableFilter<"Order"> | string | null
    internalNotes?: StringNullableFilter<"Order"> | string | null
    createdAt?: DateTimeFilter<"Order"> | Date | string
    updatedAt?: DateTimeFilter<"Order"> | Date | string
    createdBy?: StringFilter<"Order"> | string
    customer?: XOR<CustomerScalarRelationFilter, CustomerWhereInput>
    warehouse?: XOR<WarehouseScalarRelationFilter, WarehouseWhereInput>
    items?: OrderItemListRelationFilter
    shipments?: ShipmentListRelationFilter
    invoices?: CustomerInvoiceListRelationFilter
  }, "id" | "orderNumber">

  export type OrderOrderByWithAggregationInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    customerId?: SortOrder
    warehouseId?: SortOrder
    type?: SortOrder
    channel?: SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    shippingCost?: SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    fulfillmentStatus?: SortOrder
    paymentStatus?: SortOrder
    orderDate?: SortOrder
    requiredDate?: SortOrderInput | SortOrder
    promisedDate?: SortOrderInput | SortOrder
    shippedDate?: SortOrderInput | SortOrder
    deliveredDate?: SortOrderInput | SortOrder
    shippingMethod?: SortOrderInput | SortOrder
    trackingNumber?: SortOrderInput | SortOrder
    carrier?: SortOrderInput | SortOrder
    shippingAddress?: SortOrderInput | SortOrder
    priority?: SortOrder
    rushOrder?: SortOrder
    notes?: SortOrderInput | SortOrder
    internalNotes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    _count?: OrderCountOrderByAggregateInput
    _avg?: OrderAvgOrderByAggregateInput
    _max?: OrderMaxOrderByAggregateInput
    _min?: OrderMinOrderByAggregateInput
    _sum?: OrderSumOrderByAggregateInput
  }

  export type OrderScalarWhereWithAggregatesInput = {
    AND?: OrderScalarWhereWithAggregatesInput | OrderScalarWhereWithAggregatesInput[]
    OR?: OrderScalarWhereWithAggregatesInput[]
    NOT?: OrderScalarWhereWithAggregatesInput | OrderScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Order"> | string
    orderNumber?: StringWithAggregatesFilter<"Order"> | string
    customerId?: StringWithAggregatesFilter<"Order"> | string
    warehouseId?: StringWithAggregatesFilter<"Order"> | string
    type?: EnumOrderTypeWithAggregatesFilter<"Order"> | $Enums.OrderType
    channel?: EnumOrderChannelWithAggregatesFilter<"Order"> | $Enums.OrderChannel
    subtotal?: DecimalWithAggregatesFilter<"Order"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalWithAggregatesFilter<"Order"> | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalWithAggregatesFilter<"Order"> | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalWithAggregatesFilter<"Order"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalWithAggregatesFilter<"Order"> | Decimal | DecimalJsLike | number | string
    currency?: StringWithAggregatesFilter<"Order"> | string
    status?: EnumOrderStatusWithAggregatesFilter<"Order"> | $Enums.OrderStatus
    fulfillmentStatus?: EnumFulfillmentStatusWithAggregatesFilter<"Order"> | $Enums.FulfillmentStatus
    paymentStatus?: EnumPaymentStatusWithAggregatesFilter<"Order"> | $Enums.PaymentStatus
    orderDate?: DateTimeWithAggregatesFilter<"Order"> | Date | string
    requiredDate?: DateTimeNullableWithAggregatesFilter<"Order"> | Date | string | null
    promisedDate?: DateTimeNullableWithAggregatesFilter<"Order"> | Date | string | null
    shippedDate?: DateTimeNullableWithAggregatesFilter<"Order"> | Date | string | null
    deliveredDate?: DateTimeNullableWithAggregatesFilter<"Order"> | Date | string | null
    shippingMethod?: StringNullableWithAggregatesFilter<"Order"> | string | null
    trackingNumber?: StringNullableWithAggregatesFilter<"Order"> | string | null
    carrier?: StringNullableWithAggregatesFilter<"Order"> | string | null
    shippingAddress?: JsonNullableWithAggregatesFilter<"Order">
    priority?: EnumOrderPriorityWithAggregatesFilter<"Order"> | $Enums.OrderPriority
    rushOrder?: BoolWithAggregatesFilter<"Order"> | boolean
    notes?: StringNullableWithAggregatesFilter<"Order"> | string | null
    internalNotes?: StringNullableWithAggregatesFilter<"Order"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Order"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Order"> | Date | string
    createdBy?: StringWithAggregatesFilter<"Order"> | string
  }

  export type OrderItemWhereInput = {
    AND?: OrderItemWhereInput | OrderItemWhereInput[]
    OR?: OrderItemWhereInput[]
    NOT?: OrderItemWhereInput | OrderItemWhereInput[]
    id?: StringFilter<"OrderItem"> | string
    orderId?: StringFilter<"OrderItem"> | string
    productId?: StringFilter<"OrderItem"> | string
    variantId?: StringNullableFilter<"OrderItem"> | string | null
    orderedQty?: IntFilter<"OrderItem"> | number
    shippedQty?: IntFilter<"OrderItem"> | number
    remainingQty?: IntFilter<"OrderItem"> | number
    unitPrice?: DecimalFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    productName?: StringFilter<"OrderItem"> | string
    productSku?: StringFilter<"OrderItem"> | string
    status?: EnumOrderItemStatusFilter<"OrderItem"> | $Enums.OrderItemStatus
    notes?: StringNullableFilter<"OrderItem"> | string | null
    createdAt?: DateTimeFilter<"OrderItem"> | Date | string
    updatedAt?: DateTimeFilter<"OrderItem"> | Date | string
    order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    variant?: XOR<ProductVariantNullableScalarRelationFilter, ProductVariantWhereInput> | null
  }

  export type OrderItemOrderByWithRelationInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrderInput | SortOrder
    orderedQty?: SortOrder
    shippedQty?: SortOrder
    remainingQty?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    discountAmount?: SortOrder
    productName?: SortOrder
    productSku?: SortOrder
    status?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    order?: OrderOrderByWithRelationInput
    product?: ProductOrderByWithRelationInput
    variant?: ProductVariantOrderByWithRelationInput
  }

  export type OrderItemWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: OrderItemWhereInput | OrderItemWhereInput[]
    OR?: OrderItemWhereInput[]
    NOT?: OrderItemWhereInput | OrderItemWhereInput[]
    orderId?: StringFilter<"OrderItem"> | string
    productId?: StringFilter<"OrderItem"> | string
    variantId?: StringNullableFilter<"OrderItem"> | string | null
    orderedQty?: IntFilter<"OrderItem"> | number
    shippedQty?: IntFilter<"OrderItem"> | number
    remainingQty?: IntFilter<"OrderItem"> | number
    unitPrice?: DecimalFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    productName?: StringFilter<"OrderItem"> | string
    productSku?: StringFilter<"OrderItem"> | string
    status?: EnumOrderItemStatusFilter<"OrderItem"> | $Enums.OrderItemStatus
    notes?: StringNullableFilter<"OrderItem"> | string | null
    createdAt?: DateTimeFilter<"OrderItem"> | Date | string
    updatedAt?: DateTimeFilter<"OrderItem"> | Date | string
    order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    variant?: XOR<ProductVariantNullableScalarRelationFilter, ProductVariantWhereInput> | null
  }, "id">

  export type OrderItemOrderByWithAggregationInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrderInput | SortOrder
    orderedQty?: SortOrder
    shippedQty?: SortOrder
    remainingQty?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    discountAmount?: SortOrder
    productName?: SortOrder
    productSku?: SortOrder
    status?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: OrderItemCountOrderByAggregateInput
    _avg?: OrderItemAvgOrderByAggregateInput
    _max?: OrderItemMaxOrderByAggregateInput
    _min?: OrderItemMinOrderByAggregateInput
    _sum?: OrderItemSumOrderByAggregateInput
  }

  export type OrderItemScalarWhereWithAggregatesInput = {
    AND?: OrderItemScalarWhereWithAggregatesInput | OrderItemScalarWhereWithAggregatesInput[]
    OR?: OrderItemScalarWhereWithAggregatesInput[]
    NOT?: OrderItemScalarWhereWithAggregatesInput | OrderItemScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"OrderItem"> | string
    orderId?: StringWithAggregatesFilter<"OrderItem"> | string
    productId?: StringWithAggregatesFilter<"OrderItem"> | string
    variantId?: StringNullableWithAggregatesFilter<"OrderItem"> | string | null
    orderedQty?: IntWithAggregatesFilter<"OrderItem"> | number
    shippedQty?: IntWithAggregatesFilter<"OrderItem"> | number
    remainingQty?: IntWithAggregatesFilter<"OrderItem"> | number
    unitPrice?: DecimalWithAggregatesFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalWithAggregatesFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalWithAggregatesFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    productName?: StringWithAggregatesFilter<"OrderItem"> | string
    productSku?: StringWithAggregatesFilter<"OrderItem"> | string
    status?: EnumOrderItemStatusWithAggregatesFilter<"OrderItem"> | $Enums.OrderItemStatus
    notes?: StringNullableWithAggregatesFilter<"OrderItem"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"OrderItem"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"OrderItem"> | Date | string
  }

  export type ShipmentWhereInput = {
    AND?: ShipmentWhereInput | ShipmentWhereInput[]
    OR?: ShipmentWhereInput[]
    NOT?: ShipmentWhereInput | ShipmentWhereInput[]
    id?: StringFilter<"Shipment"> | string
    shipmentNumber?: StringFilter<"Shipment"> | string
    orderId?: StringNullableFilter<"Shipment"> | string | null
    warehouseId?: StringFilter<"Shipment"> | string
    carrier?: StringFilter<"Shipment"> | string
    service?: StringNullableFilter<"Shipment"> | string | null
    trackingNumber?: StringNullableFilter<"Shipment"> | string | null
    fromAddress?: JsonFilter<"Shipment">
    toAddress?: JsonFilter<"Shipment">
    packageCount?: IntFilter<"Shipment"> | number
    weight?: DecimalNullableFilter<"Shipment"> | Decimal | DecimalJsLike | number | string | null
    dimensions?: JsonNullableFilter<"Shipment">
    shippingCost?: DecimalNullableFilter<"Shipment"> | Decimal | DecimalJsLike | number | string | null
    insuranceValue?: DecimalNullableFilter<"Shipment"> | Decimal | DecimalJsLike | number | string | null
    status?: EnumShipmentStatusFilter<"Shipment"> | $Enums.ShipmentStatus
    shipDate?: DateTimeNullableFilter<"Shipment"> | Date | string | null
    estimatedDelivery?: DateTimeNullableFilter<"Shipment"> | Date | string | null
    actualDelivery?: DateTimeNullableFilter<"Shipment"> | Date | string | null
    notes?: StringNullableFilter<"Shipment"> | string | null
    createdAt?: DateTimeFilter<"Shipment"> | Date | string
    updatedAt?: DateTimeFilter<"Shipment"> | Date | string
    createdBy?: StringFilter<"Shipment"> | string
    order?: XOR<OrderNullableScalarRelationFilter, OrderWhereInput> | null
    warehouse?: XOR<WarehouseScalarRelationFilter, WarehouseWhereInput>
    packages?: ShipmentPackageListRelationFilter
    tracking?: ShipmentTrackingListRelationFilter
  }

  export type ShipmentOrderByWithRelationInput = {
    id?: SortOrder
    shipmentNumber?: SortOrder
    orderId?: SortOrderInput | SortOrder
    warehouseId?: SortOrder
    carrier?: SortOrder
    service?: SortOrderInput | SortOrder
    trackingNumber?: SortOrderInput | SortOrder
    fromAddress?: SortOrder
    toAddress?: SortOrder
    packageCount?: SortOrder
    weight?: SortOrderInput | SortOrder
    dimensions?: SortOrderInput | SortOrder
    shippingCost?: SortOrderInput | SortOrder
    insuranceValue?: SortOrderInput | SortOrder
    status?: SortOrder
    shipDate?: SortOrderInput | SortOrder
    estimatedDelivery?: SortOrderInput | SortOrder
    actualDelivery?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    order?: OrderOrderByWithRelationInput
    warehouse?: WarehouseOrderByWithRelationInput
    packages?: ShipmentPackageOrderByRelationAggregateInput
    tracking?: ShipmentTrackingOrderByRelationAggregateInput
  }

  export type ShipmentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    shipmentNumber?: string
    AND?: ShipmentWhereInput | ShipmentWhereInput[]
    OR?: ShipmentWhereInput[]
    NOT?: ShipmentWhereInput | ShipmentWhereInput[]
    orderId?: StringNullableFilter<"Shipment"> | string | null
    warehouseId?: StringFilter<"Shipment"> | string
    carrier?: StringFilter<"Shipment"> | string
    service?: StringNullableFilter<"Shipment"> | string | null
    trackingNumber?: StringNullableFilter<"Shipment"> | string | null
    fromAddress?: JsonFilter<"Shipment">
    toAddress?: JsonFilter<"Shipment">
    packageCount?: IntFilter<"Shipment"> | number
    weight?: DecimalNullableFilter<"Shipment"> | Decimal | DecimalJsLike | number | string | null
    dimensions?: JsonNullableFilter<"Shipment">
    shippingCost?: DecimalNullableFilter<"Shipment"> | Decimal | DecimalJsLike | number | string | null
    insuranceValue?: DecimalNullableFilter<"Shipment"> | Decimal | DecimalJsLike | number | string | null
    status?: EnumShipmentStatusFilter<"Shipment"> | $Enums.ShipmentStatus
    shipDate?: DateTimeNullableFilter<"Shipment"> | Date | string | null
    estimatedDelivery?: DateTimeNullableFilter<"Shipment"> | Date | string | null
    actualDelivery?: DateTimeNullableFilter<"Shipment"> | Date | string | null
    notes?: StringNullableFilter<"Shipment"> | string | null
    createdAt?: DateTimeFilter<"Shipment"> | Date | string
    updatedAt?: DateTimeFilter<"Shipment"> | Date | string
    createdBy?: StringFilter<"Shipment"> | string
    order?: XOR<OrderNullableScalarRelationFilter, OrderWhereInput> | null
    warehouse?: XOR<WarehouseScalarRelationFilter, WarehouseWhereInput>
    packages?: ShipmentPackageListRelationFilter
    tracking?: ShipmentTrackingListRelationFilter
  }, "id" | "shipmentNumber">

  export type ShipmentOrderByWithAggregationInput = {
    id?: SortOrder
    shipmentNumber?: SortOrder
    orderId?: SortOrderInput | SortOrder
    warehouseId?: SortOrder
    carrier?: SortOrder
    service?: SortOrderInput | SortOrder
    trackingNumber?: SortOrderInput | SortOrder
    fromAddress?: SortOrder
    toAddress?: SortOrder
    packageCount?: SortOrder
    weight?: SortOrderInput | SortOrder
    dimensions?: SortOrderInput | SortOrder
    shippingCost?: SortOrderInput | SortOrder
    insuranceValue?: SortOrderInput | SortOrder
    status?: SortOrder
    shipDate?: SortOrderInput | SortOrder
    estimatedDelivery?: SortOrderInput | SortOrder
    actualDelivery?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    _count?: ShipmentCountOrderByAggregateInput
    _avg?: ShipmentAvgOrderByAggregateInput
    _max?: ShipmentMaxOrderByAggregateInput
    _min?: ShipmentMinOrderByAggregateInput
    _sum?: ShipmentSumOrderByAggregateInput
  }

  export type ShipmentScalarWhereWithAggregatesInput = {
    AND?: ShipmentScalarWhereWithAggregatesInput | ShipmentScalarWhereWithAggregatesInput[]
    OR?: ShipmentScalarWhereWithAggregatesInput[]
    NOT?: ShipmentScalarWhereWithAggregatesInput | ShipmentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Shipment"> | string
    shipmentNumber?: StringWithAggregatesFilter<"Shipment"> | string
    orderId?: StringNullableWithAggregatesFilter<"Shipment"> | string | null
    warehouseId?: StringWithAggregatesFilter<"Shipment"> | string
    carrier?: StringWithAggregatesFilter<"Shipment"> | string
    service?: StringNullableWithAggregatesFilter<"Shipment"> | string | null
    trackingNumber?: StringNullableWithAggregatesFilter<"Shipment"> | string | null
    fromAddress?: JsonWithAggregatesFilter<"Shipment">
    toAddress?: JsonWithAggregatesFilter<"Shipment">
    packageCount?: IntWithAggregatesFilter<"Shipment"> | number
    weight?: DecimalNullableWithAggregatesFilter<"Shipment"> | Decimal | DecimalJsLike | number | string | null
    dimensions?: JsonNullableWithAggregatesFilter<"Shipment">
    shippingCost?: DecimalNullableWithAggregatesFilter<"Shipment"> | Decimal | DecimalJsLike | number | string | null
    insuranceValue?: DecimalNullableWithAggregatesFilter<"Shipment"> | Decimal | DecimalJsLike | number | string | null
    status?: EnumShipmentStatusWithAggregatesFilter<"Shipment"> | $Enums.ShipmentStatus
    shipDate?: DateTimeNullableWithAggregatesFilter<"Shipment"> | Date | string | null
    estimatedDelivery?: DateTimeNullableWithAggregatesFilter<"Shipment"> | Date | string | null
    actualDelivery?: DateTimeNullableWithAggregatesFilter<"Shipment"> | Date | string | null
    notes?: StringNullableWithAggregatesFilter<"Shipment"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Shipment"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Shipment"> | Date | string
    createdBy?: StringWithAggregatesFilter<"Shipment"> | string
  }

  export type ShipmentPackageWhereInput = {
    AND?: ShipmentPackageWhereInput | ShipmentPackageWhereInput[]
    OR?: ShipmentPackageWhereInput[]
    NOT?: ShipmentPackageWhereInput | ShipmentPackageWhereInput[]
    id?: StringFilter<"ShipmentPackage"> | string
    shipmentId?: StringFilter<"ShipmentPackage"> | string
    packageNumber?: StringFilter<"ShipmentPackage"> | string
    trackingNumber?: StringNullableFilter<"ShipmentPackage"> | string | null
    weight?: DecimalNullableFilter<"ShipmentPackage"> | Decimal | DecimalJsLike | number | string | null
    dimensions?: JsonNullableFilter<"ShipmentPackage">
    contents?: JsonNullableFilter<"ShipmentPackage">
    status?: StringNullableFilter<"ShipmentPackage"> | string | null
    createdAt?: DateTimeFilter<"ShipmentPackage"> | Date | string
    updatedAt?: DateTimeFilter<"ShipmentPackage"> | Date | string
    shipment?: XOR<ShipmentScalarRelationFilter, ShipmentWhereInput>
  }

  export type ShipmentPackageOrderByWithRelationInput = {
    id?: SortOrder
    shipmentId?: SortOrder
    packageNumber?: SortOrder
    trackingNumber?: SortOrderInput | SortOrder
    weight?: SortOrderInput | SortOrder
    dimensions?: SortOrderInput | SortOrder
    contents?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    shipment?: ShipmentOrderByWithRelationInput
  }

  export type ShipmentPackageWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ShipmentPackageWhereInput | ShipmentPackageWhereInput[]
    OR?: ShipmentPackageWhereInput[]
    NOT?: ShipmentPackageWhereInput | ShipmentPackageWhereInput[]
    shipmentId?: StringFilter<"ShipmentPackage"> | string
    packageNumber?: StringFilter<"ShipmentPackage"> | string
    trackingNumber?: StringNullableFilter<"ShipmentPackage"> | string | null
    weight?: DecimalNullableFilter<"ShipmentPackage"> | Decimal | DecimalJsLike | number | string | null
    dimensions?: JsonNullableFilter<"ShipmentPackage">
    contents?: JsonNullableFilter<"ShipmentPackage">
    status?: StringNullableFilter<"ShipmentPackage"> | string | null
    createdAt?: DateTimeFilter<"ShipmentPackage"> | Date | string
    updatedAt?: DateTimeFilter<"ShipmentPackage"> | Date | string
    shipment?: XOR<ShipmentScalarRelationFilter, ShipmentWhereInput>
  }, "id">

  export type ShipmentPackageOrderByWithAggregationInput = {
    id?: SortOrder
    shipmentId?: SortOrder
    packageNumber?: SortOrder
    trackingNumber?: SortOrderInput | SortOrder
    weight?: SortOrderInput | SortOrder
    dimensions?: SortOrderInput | SortOrder
    contents?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ShipmentPackageCountOrderByAggregateInput
    _avg?: ShipmentPackageAvgOrderByAggregateInput
    _max?: ShipmentPackageMaxOrderByAggregateInput
    _min?: ShipmentPackageMinOrderByAggregateInput
    _sum?: ShipmentPackageSumOrderByAggregateInput
  }

  export type ShipmentPackageScalarWhereWithAggregatesInput = {
    AND?: ShipmentPackageScalarWhereWithAggregatesInput | ShipmentPackageScalarWhereWithAggregatesInput[]
    OR?: ShipmentPackageScalarWhereWithAggregatesInput[]
    NOT?: ShipmentPackageScalarWhereWithAggregatesInput | ShipmentPackageScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ShipmentPackage"> | string
    shipmentId?: StringWithAggregatesFilter<"ShipmentPackage"> | string
    packageNumber?: StringWithAggregatesFilter<"ShipmentPackage"> | string
    trackingNumber?: StringNullableWithAggregatesFilter<"ShipmentPackage"> | string | null
    weight?: DecimalNullableWithAggregatesFilter<"ShipmentPackage"> | Decimal | DecimalJsLike | number | string | null
    dimensions?: JsonNullableWithAggregatesFilter<"ShipmentPackage">
    contents?: JsonNullableWithAggregatesFilter<"ShipmentPackage">
    status?: StringNullableWithAggregatesFilter<"ShipmentPackage"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"ShipmentPackage"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ShipmentPackage"> | Date | string
  }

  export type ShipmentTrackingWhereInput = {
    AND?: ShipmentTrackingWhereInput | ShipmentTrackingWhereInput[]
    OR?: ShipmentTrackingWhereInput[]
    NOT?: ShipmentTrackingWhereInput | ShipmentTrackingWhereInput[]
    id?: StringFilter<"ShipmentTracking"> | string
    shipmentId?: StringFilter<"ShipmentTracking"> | string
    status?: StringFilter<"ShipmentTracking"> | string
    description?: StringNullableFilter<"ShipmentTracking"> | string | null
    location?: StringNullableFilter<"ShipmentTracking"> | string | null
    eventDate?: DateTimeFilter<"ShipmentTracking"> | Date | string
    rawData?: JsonNullableFilter<"ShipmentTracking">
    createdAt?: DateTimeFilter<"ShipmentTracking"> | Date | string
    shipment?: XOR<ShipmentScalarRelationFilter, ShipmentWhereInput>
  }

  export type ShipmentTrackingOrderByWithRelationInput = {
    id?: SortOrder
    shipmentId?: SortOrder
    status?: SortOrder
    description?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    eventDate?: SortOrder
    rawData?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    shipment?: ShipmentOrderByWithRelationInput
  }

  export type ShipmentTrackingWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ShipmentTrackingWhereInput | ShipmentTrackingWhereInput[]
    OR?: ShipmentTrackingWhereInput[]
    NOT?: ShipmentTrackingWhereInput | ShipmentTrackingWhereInput[]
    shipmentId?: StringFilter<"ShipmentTracking"> | string
    status?: StringFilter<"ShipmentTracking"> | string
    description?: StringNullableFilter<"ShipmentTracking"> | string | null
    location?: StringNullableFilter<"ShipmentTracking"> | string | null
    eventDate?: DateTimeFilter<"ShipmentTracking"> | Date | string
    rawData?: JsonNullableFilter<"ShipmentTracking">
    createdAt?: DateTimeFilter<"ShipmentTracking"> | Date | string
    shipment?: XOR<ShipmentScalarRelationFilter, ShipmentWhereInput>
  }, "id">

  export type ShipmentTrackingOrderByWithAggregationInput = {
    id?: SortOrder
    shipmentId?: SortOrder
    status?: SortOrder
    description?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    eventDate?: SortOrder
    rawData?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: ShipmentTrackingCountOrderByAggregateInput
    _max?: ShipmentTrackingMaxOrderByAggregateInput
    _min?: ShipmentTrackingMinOrderByAggregateInput
  }

  export type ShipmentTrackingScalarWhereWithAggregatesInput = {
    AND?: ShipmentTrackingScalarWhereWithAggregatesInput | ShipmentTrackingScalarWhereWithAggregatesInput[]
    OR?: ShipmentTrackingScalarWhereWithAggregatesInput[]
    NOT?: ShipmentTrackingScalarWhereWithAggregatesInput | ShipmentTrackingScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ShipmentTracking"> | string
    shipmentId?: StringWithAggregatesFilter<"ShipmentTracking"> | string
    status?: StringWithAggregatesFilter<"ShipmentTracking"> | string
    description?: StringNullableWithAggregatesFilter<"ShipmentTracking"> | string | null
    location?: StringNullableWithAggregatesFilter<"ShipmentTracking"> | string | null
    eventDate?: DateTimeWithAggregatesFilter<"ShipmentTracking"> | Date | string
    rawData?: JsonNullableWithAggregatesFilter<"ShipmentTracking">
    createdAt?: DateTimeWithAggregatesFilter<"ShipmentTracking"> | Date | string
  }

  export type StockTransferWhereInput = {
    AND?: StockTransferWhereInput | StockTransferWhereInput[]
    OR?: StockTransferWhereInput[]
    NOT?: StockTransferWhereInput | StockTransferWhereInput[]
    id?: StringFilter<"StockTransfer"> | string
    transferNumber?: StringFilter<"StockTransfer"> | string
    fromWarehouseId?: StringFilter<"StockTransfer"> | string
    toWarehouseId?: StringFilter<"StockTransfer"> | string
    status?: EnumTransferStatusFilter<"StockTransfer"> | $Enums.TransferStatus
    requestedDate?: DateTimeFilter<"StockTransfer"> | Date | string
    shippedDate?: DateTimeNullableFilter<"StockTransfer"> | Date | string | null
    receivedDate?: DateTimeNullableFilter<"StockTransfer"> | Date | string | null
    approvedBy?: StringNullableFilter<"StockTransfer"> | string | null
    approvedAt?: DateTimeNullableFilter<"StockTransfer"> | Date | string | null
    reason?: StringNullableFilter<"StockTransfer"> | string | null
    notes?: StringNullableFilter<"StockTransfer"> | string | null
    createdAt?: DateTimeFilter<"StockTransfer"> | Date | string
    updatedAt?: DateTimeFilter<"StockTransfer"> | Date | string
    createdBy?: StringFilter<"StockTransfer"> | string
    fromWarehouse?: XOR<WarehouseScalarRelationFilter, WarehouseWhereInput>
    toWarehouse?: XOR<WarehouseScalarRelationFilter, WarehouseWhereInput>
    items?: StockTransferItemListRelationFilter
  }

  export type StockTransferOrderByWithRelationInput = {
    id?: SortOrder
    transferNumber?: SortOrder
    fromWarehouseId?: SortOrder
    toWarehouseId?: SortOrder
    status?: SortOrder
    requestedDate?: SortOrder
    shippedDate?: SortOrderInput | SortOrder
    receivedDate?: SortOrderInput | SortOrder
    approvedBy?: SortOrderInput | SortOrder
    approvedAt?: SortOrderInput | SortOrder
    reason?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    fromWarehouse?: WarehouseOrderByWithRelationInput
    toWarehouse?: WarehouseOrderByWithRelationInput
    items?: StockTransferItemOrderByRelationAggregateInput
  }

  export type StockTransferWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    transferNumber?: string
    AND?: StockTransferWhereInput | StockTransferWhereInput[]
    OR?: StockTransferWhereInput[]
    NOT?: StockTransferWhereInput | StockTransferWhereInput[]
    fromWarehouseId?: StringFilter<"StockTransfer"> | string
    toWarehouseId?: StringFilter<"StockTransfer"> | string
    status?: EnumTransferStatusFilter<"StockTransfer"> | $Enums.TransferStatus
    requestedDate?: DateTimeFilter<"StockTransfer"> | Date | string
    shippedDate?: DateTimeNullableFilter<"StockTransfer"> | Date | string | null
    receivedDate?: DateTimeNullableFilter<"StockTransfer"> | Date | string | null
    approvedBy?: StringNullableFilter<"StockTransfer"> | string | null
    approvedAt?: DateTimeNullableFilter<"StockTransfer"> | Date | string | null
    reason?: StringNullableFilter<"StockTransfer"> | string | null
    notes?: StringNullableFilter<"StockTransfer"> | string | null
    createdAt?: DateTimeFilter<"StockTransfer"> | Date | string
    updatedAt?: DateTimeFilter<"StockTransfer"> | Date | string
    createdBy?: StringFilter<"StockTransfer"> | string
    fromWarehouse?: XOR<WarehouseScalarRelationFilter, WarehouseWhereInput>
    toWarehouse?: XOR<WarehouseScalarRelationFilter, WarehouseWhereInput>
    items?: StockTransferItemListRelationFilter
  }, "id" | "transferNumber">

  export type StockTransferOrderByWithAggregationInput = {
    id?: SortOrder
    transferNumber?: SortOrder
    fromWarehouseId?: SortOrder
    toWarehouseId?: SortOrder
    status?: SortOrder
    requestedDate?: SortOrder
    shippedDate?: SortOrderInput | SortOrder
    receivedDate?: SortOrderInput | SortOrder
    approvedBy?: SortOrderInput | SortOrder
    approvedAt?: SortOrderInput | SortOrder
    reason?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    _count?: StockTransferCountOrderByAggregateInput
    _max?: StockTransferMaxOrderByAggregateInput
    _min?: StockTransferMinOrderByAggregateInput
  }

  export type StockTransferScalarWhereWithAggregatesInput = {
    AND?: StockTransferScalarWhereWithAggregatesInput | StockTransferScalarWhereWithAggregatesInput[]
    OR?: StockTransferScalarWhereWithAggregatesInput[]
    NOT?: StockTransferScalarWhereWithAggregatesInput | StockTransferScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"StockTransfer"> | string
    transferNumber?: StringWithAggregatesFilter<"StockTransfer"> | string
    fromWarehouseId?: StringWithAggregatesFilter<"StockTransfer"> | string
    toWarehouseId?: StringWithAggregatesFilter<"StockTransfer"> | string
    status?: EnumTransferStatusWithAggregatesFilter<"StockTransfer"> | $Enums.TransferStatus
    requestedDate?: DateTimeWithAggregatesFilter<"StockTransfer"> | Date | string
    shippedDate?: DateTimeNullableWithAggregatesFilter<"StockTransfer"> | Date | string | null
    receivedDate?: DateTimeNullableWithAggregatesFilter<"StockTransfer"> | Date | string | null
    approvedBy?: StringNullableWithAggregatesFilter<"StockTransfer"> | string | null
    approvedAt?: DateTimeNullableWithAggregatesFilter<"StockTransfer"> | Date | string | null
    reason?: StringNullableWithAggregatesFilter<"StockTransfer"> | string | null
    notes?: StringNullableWithAggregatesFilter<"StockTransfer"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"StockTransfer"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"StockTransfer"> | Date | string
    createdBy?: StringWithAggregatesFilter<"StockTransfer"> | string
  }

  export type StockTransferItemWhereInput = {
    AND?: StockTransferItemWhereInput | StockTransferItemWhereInput[]
    OR?: StockTransferItemWhereInput[]
    NOT?: StockTransferItemWhereInput | StockTransferItemWhereInput[]
    id?: StringFilter<"StockTransferItem"> | string
    transferId?: StringFilter<"StockTransferItem"> | string
    productId?: StringFilter<"StockTransferItem"> | string
    variantId?: StringNullableFilter<"StockTransferItem"> | string | null
    requestedQty?: IntFilter<"StockTransferItem"> | number
    shippedQty?: IntFilter<"StockTransferItem"> | number
    receivedQty?: IntFilter<"StockTransferItem"> | number
    productName?: StringFilter<"StockTransferItem"> | string
    productSku?: StringFilter<"StockTransferItem"> | string
    lotNumber?: StringNullableFilter<"StockTransferItem"> | string | null
    batchNumber?: StringNullableFilter<"StockTransferItem"> | string | null
    status?: EnumTransferItemStatusFilter<"StockTransferItem"> | $Enums.TransferItemStatus
    notes?: StringNullableFilter<"StockTransferItem"> | string | null
    createdAt?: DateTimeFilter<"StockTransferItem"> | Date | string
    updatedAt?: DateTimeFilter<"StockTransferItem"> | Date | string
    transfer?: XOR<StockTransferScalarRelationFilter, StockTransferWhereInput>
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    variant?: XOR<ProductVariantNullableScalarRelationFilter, ProductVariantWhereInput> | null
  }

  export type StockTransferItemOrderByWithRelationInput = {
    id?: SortOrder
    transferId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrderInput | SortOrder
    requestedQty?: SortOrder
    shippedQty?: SortOrder
    receivedQty?: SortOrder
    productName?: SortOrder
    productSku?: SortOrder
    lotNumber?: SortOrderInput | SortOrder
    batchNumber?: SortOrderInput | SortOrder
    status?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    transfer?: StockTransferOrderByWithRelationInput
    product?: ProductOrderByWithRelationInput
    variant?: ProductVariantOrderByWithRelationInput
  }

  export type StockTransferItemWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: StockTransferItemWhereInput | StockTransferItemWhereInput[]
    OR?: StockTransferItemWhereInput[]
    NOT?: StockTransferItemWhereInput | StockTransferItemWhereInput[]
    transferId?: StringFilter<"StockTransferItem"> | string
    productId?: StringFilter<"StockTransferItem"> | string
    variantId?: StringNullableFilter<"StockTransferItem"> | string | null
    requestedQty?: IntFilter<"StockTransferItem"> | number
    shippedQty?: IntFilter<"StockTransferItem"> | number
    receivedQty?: IntFilter<"StockTransferItem"> | number
    productName?: StringFilter<"StockTransferItem"> | string
    productSku?: StringFilter<"StockTransferItem"> | string
    lotNumber?: StringNullableFilter<"StockTransferItem"> | string | null
    batchNumber?: StringNullableFilter<"StockTransferItem"> | string | null
    status?: EnumTransferItemStatusFilter<"StockTransferItem"> | $Enums.TransferItemStatus
    notes?: StringNullableFilter<"StockTransferItem"> | string | null
    createdAt?: DateTimeFilter<"StockTransferItem"> | Date | string
    updatedAt?: DateTimeFilter<"StockTransferItem"> | Date | string
    transfer?: XOR<StockTransferScalarRelationFilter, StockTransferWhereInput>
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    variant?: XOR<ProductVariantNullableScalarRelationFilter, ProductVariantWhereInput> | null
  }, "id">

  export type StockTransferItemOrderByWithAggregationInput = {
    id?: SortOrder
    transferId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrderInput | SortOrder
    requestedQty?: SortOrder
    shippedQty?: SortOrder
    receivedQty?: SortOrder
    productName?: SortOrder
    productSku?: SortOrder
    lotNumber?: SortOrderInput | SortOrder
    batchNumber?: SortOrderInput | SortOrder
    status?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: StockTransferItemCountOrderByAggregateInput
    _avg?: StockTransferItemAvgOrderByAggregateInput
    _max?: StockTransferItemMaxOrderByAggregateInput
    _min?: StockTransferItemMinOrderByAggregateInput
    _sum?: StockTransferItemSumOrderByAggregateInput
  }

  export type StockTransferItemScalarWhereWithAggregatesInput = {
    AND?: StockTransferItemScalarWhereWithAggregatesInput | StockTransferItemScalarWhereWithAggregatesInput[]
    OR?: StockTransferItemScalarWhereWithAggregatesInput[]
    NOT?: StockTransferItemScalarWhereWithAggregatesInput | StockTransferItemScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"StockTransferItem"> | string
    transferId?: StringWithAggregatesFilter<"StockTransferItem"> | string
    productId?: StringWithAggregatesFilter<"StockTransferItem"> | string
    variantId?: StringNullableWithAggregatesFilter<"StockTransferItem"> | string | null
    requestedQty?: IntWithAggregatesFilter<"StockTransferItem"> | number
    shippedQty?: IntWithAggregatesFilter<"StockTransferItem"> | number
    receivedQty?: IntWithAggregatesFilter<"StockTransferItem"> | number
    productName?: StringWithAggregatesFilter<"StockTransferItem"> | string
    productSku?: StringWithAggregatesFilter<"StockTransferItem"> | string
    lotNumber?: StringNullableWithAggregatesFilter<"StockTransferItem"> | string | null
    batchNumber?: StringNullableWithAggregatesFilter<"StockTransferItem"> | string | null
    status?: EnumTransferItemStatusWithAggregatesFilter<"StockTransferItem"> | $Enums.TransferItemStatus
    notes?: StringNullableWithAggregatesFilter<"StockTransferItem"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"StockTransferItem"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"StockTransferItem"> | Date | string
  }

  export type StockReservationWhereInput = {
    AND?: StockReservationWhereInput | StockReservationWhereInput[]
    OR?: StockReservationWhereInput[]
    NOT?: StockReservationWhereInput | StockReservationWhereInput[]
    id?: StringFilter<"StockReservation"> | string
    inventoryItemId?: StringFilter<"StockReservation"> | string
    reservationType?: EnumReservationTypeFilter<"StockReservation"> | $Enums.ReservationType
    referenceType?: StringFilter<"StockReservation"> | string
    referenceId?: StringFilter<"StockReservation"> | string
    quantity?: IntFilter<"StockReservation"> | number
    status?: EnumReservationStatusFilter<"StockReservation"> | $Enums.ReservationStatus
    reservedAt?: DateTimeFilter<"StockReservation"> | Date | string
    expiresAt?: DateTimeNullableFilter<"StockReservation"> | Date | string | null
    releasedAt?: DateTimeNullableFilter<"StockReservation"> | Date | string | null
    reservedBy?: StringFilter<"StockReservation"> | string
    notes?: StringNullableFilter<"StockReservation"> | string | null
    createdAt?: DateTimeFilter<"StockReservation"> | Date | string
    updatedAt?: DateTimeFilter<"StockReservation"> | Date | string
    inventoryItem?: XOR<InventoryItemScalarRelationFilter, InventoryItemWhereInput>
  }

  export type StockReservationOrderByWithRelationInput = {
    id?: SortOrder
    inventoryItemId?: SortOrder
    reservationType?: SortOrder
    referenceType?: SortOrder
    referenceId?: SortOrder
    quantity?: SortOrder
    status?: SortOrder
    reservedAt?: SortOrder
    expiresAt?: SortOrderInput | SortOrder
    releasedAt?: SortOrderInput | SortOrder
    reservedBy?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    inventoryItem?: InventoryItemOrderByWithRelationInput
  }

  export type StockReservationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: StockReservationWhereInput | StockReservationWhereInput[]
    OR?: StockReservationWhereInput[]
    NOT?: StockReservationWhereInput | StockReservationWhereInput[]
    inventoryItemId?: StringFilter<"StockReservation"> | string
    reservationType?: EnumReservationTypeFilter<"StockReservation"> | $Enums.ReservationType
    referenceType?: StringFilter<"StockReservation"> | string
    referenceId?: StringFilter<"StockReservation"> | string
    quantity?: IntFilter<"StockReservation"> | number
    status?: EnumReservationStatusFilter<"StockReservation"> | $Enums.ReservationStatus
    reservedAt?: DateTimeFilter<"StockReservation"> | Date | string
    expiresAt?: DateTimeNullableFilter<"StockReservation"> | Date | string | null
    releasedAt?: DateTimeNullableFilter<"StockReservation"> | Date | string | null
    reservedBy?: StringFilter<"StockReservation"> | string
    notes?: StringNullableFilter<"StockReservation"> | string | null
    createdAt?: DateTimeFilter<"StockReservation"> | Date | string
    updatedAt?: DateTimeFilter<"StockReservation"> | Date | string
    inventoryItem?: XOR<InventoryItemScalarRelationFilter, InventoryItemWhereInput>
  }, "id">

  export type StockReservationOrderByWithAggregationInput = {
    id?: SortOrder
    inventoryItemId?: SortOrder
    reservationType?: SortOrder
    referenceType?: SortOrder
    referenceId?: SortOrder
    quantity?: SortOrder
    status?: SortOrder
    reservedAt?: SortOrder
    expiresAt?: SortOrderInput | SortOrder
    releasedAt?: SortOrderInput | SortOrder
    reservedBy?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: StockReservationCountOrderByAggregateInput
    _avg?: StockReservationAvgOrderByAggregateInput
    _max?: StockReservationMaxOrderByAggregateInput
    _min?: StockReservationMinOrderByAggregateInput
    _sum?: StockReservationSumOrderByAggregateInput
  }

  export type StockReservationScalarWhereWithAggregatesInput = {
    AND?: StockReservationScalarWhereWithAggregatesInput | StockReservationScalarWhereWithAggregatesInput[]
    OR?: StockReservationScalarWhereWithAggregatesInput[]
    NOT?: StockReservationScalarWhereWithAggregatesInput | StockReservationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"StockReservation"> | string
    inventoryItemId?: StringWithAggregatesFilter<"StockReservation"> | string
    reservationType?: EnumReservationTypeWithAggregatesFilter<"StockReservation"> | $Enums.ReservationType
    referenceType?: StringWithAggregatesFilter<"StockReservation"> | string
    referenceId?: StringWithAggregatesFilter<"StockReservation"> | string
    quantity?: IntWithAggregatesFilter<"StockReservation"> | number
    status?: EnumReservationStatusWithAggregatesFilter<"StockReservation"> | $Enums.ReservationStatus
    reservedAt?: DateTimeWithAggregatesFilter<"StockReservation"> | Date | string
    expiresAt?: DateTimeNullableWithAggregatesFilter<"StockReservation"> | Date | string | null
    releasedAt?: DateTimeNullableWithAggregatesFilter<"StockReservation"> | Date | string | null
    reservedBy?: StringWithAggregatesFilter<"StockReservation"> | string
    notes?: StringNullableWithAggregatesFilter<"StockReservation"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"StockReservation"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"StockReservation"> | Date | string
  }

  export type SupplierInvoiceWhereInput = {
    AND?: SupplierInvoiceWhereInput | SupplierInvoiceWhereInput[]
    OR?: SupplierInvoiceWhereInput[]
    NOT?: SupplierInvoiceWhereInput | SupplierInvoiceWhereInput[]
    id?: StringFilter<"SupplierInvoice"> | string
    invoiceNumber?: StringFilter<"SupplierInvoice"> | string
    supplierId?: StringFilter<"SupplierInvoice"> | string
    purchaseOrderId?: StringNullableFilter<"SupplierInvoice"> | string | null
    subtotal?: DecimalFilter<"SupplierInvoice"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFilter<"SupplierInvoice"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFilter<"SupplierInvoice"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"SupplierInvoice"> | string
    invoiceDate?: DateTimeFilter<"SupplierInvoice"> | Date | string
    dueDate?: DateTimeFilter<"SupplierInvoice"> | Date | string
    paidDate?: DateTimeNullableFilter<"SupplierInvoice"> | Date | string | null
    status?: EnumInvoiceStatusFilter<"SupplierInvoice"> | $Enums.InvoiceStatus
    paymentMethod?: StringNullableFilter<"SupplierInvoice"> | string | null
    paymentReference?: StringNullableFilter<"SupplierInvoice"> | string | null
    notes?: StringNullableFilter<"SupplierInvoice"> | string | null
    createdAt?: DateTimeFilter<"SupplierInvoice"> | Date | string
    updatedAt?: DateTimeFilter<"SupplierInvoice"> | Date | string
    supplier?: XOR<SupplierScalarRelationFilter, SupplierWhereInput>
    purchaseOrder?: XOR<PurchaseOrderNullableScalarRelationFilter, PurchaseOrderWhereInput> | null
  }

  export type SupplierInvoiceOrderByWithRelationInput = {
    id?: SortOrder
    invoiceNumber?: SortOrder
    supplierId?: SortOrder
    purchaseOrderId?: SortOrderInput | SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    totalAmount?: SortOrder
    currency?: SortOrder
    invoiceDate?: SortOrder
    dueDate?: SortOrder
    paidDate?: SortOrderInput | SortOrder
    status?: SortOrder
    paymentMethod?: SortOrderInput | SortOrder
    paymentReference?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    supplier?: SupplierOrderByWithRelationInput
    purchaseOrder?: PurchaseOrderOrderByWithRelationInput
  }

  export type SupplierInvoiceWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    invoiceNumber?: string
    AND?: SupplierInvoiceWhereInput | SupplierInvoiceWhereInput[]
    OR?: SupplierInvoiceWhereInput[]
    NOT?: SupplierInvoiceWhereInput | SupplierInvoiceWhereInput[]
    supplierId?: StringFilter<"SupplierInvoice"> | string
    purchaseOrderId?: StringNullableFilter<"SupplierInvoice"> | string | null
    subtotal?: DecimalFilter<"SupplierInvoice"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFilter<"SupplierInvoice"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFilter<"SupplierInvoice"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"SupplierInvoice"> | string
    invoiceDate?: DateTimeFilter<"SupplierInvoice"> | Date | string
    dueDate?: DateTimeFilter<"SupplierInvoice"> | Date | string
    paidDate?: DateTimeNullableFilter<"SupplierInvoice"> | Date | string | null
    status?: EnumInvoiceStatusFilter<"SupplierInvoice"> | $Enums.InvoiceStatus
    paymentMethod?: StringNullableFilter<"SupplierInvoice"> | string | null
    paymentReference?: StringNullableFilter<"SupplierInvoice"> | string | null
    notes?: StringNullableFilter<"SupplierInvoice"> | string | null
    createdAt?: DateTimeFilter<"SupplierInvoice"> | Date | string
    updatedAt?: DateTimeFilter<"SupplierInvoice"> | Date | string
    supplier?: XOR<SupplierScalarRelationFilter, SupplierWhereInput>
    purchaseOrder?: XOR<PurchaseOrderNullableScalarRelationFilter, PurchaseOrderWhereInput> | null
  }, "id" | "invoiceNumber">

  export type SupplierInvoiceOrderByWithAggregationInput = {
    id?: SortOrder
    invoiceNumber?: SortOrder
    supplierId?: SortOrder
    purchaseOrderId?: SortOrderInput | SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    totalAmount?: SortOrder
    currency?: SortOrder
    invoiceDate?: SortOrder
    dueDate?: SortOrder
    paidDate?: SortOrderInput | SortOrder
    status?: SortOrder
    paymentMethod?: SortOrderInput | SortOrder
    paymentReference?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: SupplierInvoiceCountOrderByAggregateInput
    _avg?: SupplierInvoiceAvgOrderByAggregateInput
    _max?: SupplierInvoiceMaxOrderByAggregateInput
    _min?: SupplierInvoiceMinOrderByAggregateInput
    _sum?: SupplierInvoiceSumOrderByAggregateInput
  }

  export type SupplierInvoiceScalarWhereWithAggregatesInput = {
    AND?: SupplierInvoiceScalarWhereWithAggregatesInput | SupplierInvoiceScalarWhereWithAggregatesInput[]
    OR?: SupplierInvoiceScalarWhereWithAggregatesInput[]
    NOT?: SupplierInvoiceScalarWhereWithAggregatesInput | SupplierInvoiceScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SupplierInvoice"> | string
    invoiceNumber?: StringWithAggregatesFilter<"SupplierInvoice"> | string
    supplierId?: StringWithAggregatesFilter<"SupplierInvoice"> | string
    purchaseOrderId?: StringNullableWithAggregatesFilter<"SupplierInvoice"> | string | null
    subtotal?: DecimalWithAggregatesFilter<"SupplierInvoice"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalWithAggregatesFilter<"SupplierInvoice"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalWithAggregatesFilter<"SupplierInvoice"> | Decimal | DecimalJsLike | number | string
    currency?: StringWithAggregatesFilter<"SupplierInvoice"> | string
    invoiceDate?: DateTimeWithAggregatesFilter<"SupplierInvoice"> | Date | string
    dueDate?: DateTimeWithAggregatesFilter<"SupplierInvoice"> | Date | string
    paidDate?: DateTimeNullableWithAggregatesFilter<"SupplierInvoice"> | Date | string | null
    status?: EnumInvoiceStatusWithAggregatesFilter<"SupplierInvoice"> | $Enums.InvoiceStatus
    paymentMethod?: StringNullableWithAggregatesFilter<"SupplierInvoice"> | string | null
    paymentReference?: StringNullableWithAggregatesFilter<"SupplierInvoice"> | string | null
    notes?: StringNullableWithAggregatesFilter<"SupplierInvoice"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"SupplierInvoice"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"SupplierInvoice"> | Date | string
  }

  export type CustomerInvoiceWhereInput = {
    AND?: CustomerInvoiceWhereInput | CustomerInvoiceWhereInput[]
    OR?: CustomerInvoiceWhereInput[]
    NOT?: CustomerInvoiceWhereInput | CustomerInvoiceWhereInput[]
    id?: StringFilter<"CustomerInvoice"> | string
    invoiceNumber?: StringFilter<"CustomerInvoice"> | string
    customerId?: StringFilter<"CustomerInvoice"> | string
    orderId?: StringNullableFilter<"CustomerInvoice"> | string | null
    subtotal?: DecimalFilter<"CustomerInvoice"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFilter<"CustomerInvoice"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFilter<"CustomerInvoice"> | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFilter<"CustomerInvoice"> | Decimal | DecimalJsLike | number | string
    balanceAmount?: DecimalFilter<"CustomerInvoice"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"CustomerInvoice"> | string
    invoiceDate?: DateTimeFilter<"CustomerInvoice"> | Date | string
    dueDate?: DateTimeFilter<"CustomerInvoice"> | Date | string
    paidDate?: DateTimeNullableFilter<"CustomerInvoice"> | Date | string | null
    status?: EnumInvoiceStatusFilter<"CustomerInvoice"> | $Enums.InvoiceStatus
    paymentMethod?: StringNullableFilter<"CustomerInvoice"> | string | null
    paymentReference?: StringNullableFilter<"CustomerInvoice"> | string | null
    notes?: StringNullableFilter<"CustomerInvoice"> | string | null
    createdAt?: DateTimeFilter<"CustomerInvoice"> | Date | string
    updatedAt?: DateTimeFilter<"CustomerInvoice"> | Date | string
    customer?: XOR<CustomerScalarRelationFilter, CustomerWhereInput>
    order?: XOR<OrderNullableScalarRelationFilter, OrderWhereInput> | null
  }

  export type CustomerInvoiceOrderByWithRelationInput = {
    id?: SortOrder
    invoiceNumber?: SortOrder
    customerId?: SortOrder
    orderId?: SortOrderInput | SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    totalAmount?: SortOrder
    paidAmount?: SortOrder
    balanceAmount?: SortOrder
    currency?: SortOrder
    invoiceDate?: SortOrder
    dueDate?: SortOrder
    paidDate?: SortOrderInput | SortOrder
    status?: SortOrder
    paymentMethod?: SortOrderInput | SortOrder
    paymentReference?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    customer?: CustomerOrderByWithRelationInput
    order?: OrderOrderByWithRelationInput
  }

  export type CustomerInvoiceWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    invoiceNumber?: string
    AND?: CustomerInvoiceWhereInput | CustomerInvoiceWhereInput[]
    OR?: CustomerInvoiceWhereInput[]
    NOT?: CustomerInvoiceWhereInput | CustomerInvoiceWhereInput[]
    customerId?: StringFilter<"CustomerInvoice"> | string
    orderId?: StringNullableFilter<"CustomerInvoice"> | string | null
    subtotal?: DecimalFilter<"CustomerInvoice"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFilter<"CustomerInvoice"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFilter<"CustomerInvoice"> | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFilter<"CustomerInvoice"> | Decimal | DecimalJsLike | number | string
    balanceAmount?: DecimalFilter<"CustomerInvoice"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"CustomerInvoice"> | string
    invoiceDate?: DateTimeFilter<"CustomerInvoice"> | Date | string
    dueDate?: DateTimeFilter<"CustomerInvoice"> | Date | string
    paidDate?: DateTimeNullableFilter<"CustomerInvoice"> | Date | string | null
    status?: EnumInvoiceStatusFilter<"CustomerInvoice"> | $Enums.InvoiceStatus
    paymentMethod?: StringNullableFilter<"CustomerInvoice"> | string | null
    paymentReference?: StringNullableFilter<"CustomerInvoice"> | string | null
    notes?: StringNullableFilter<"CustomerInvoice"> | string | null
    createdAt?: DateTimeFilter<"CustomerInvoice"> | Date | string
    updatedAt?: DateTimeFilter<"CustomerInvoice"> | Date | string
    customer?: XOR<CustomerScalarRelationFilter, CustomerWhereInput>
    order?: XOR<OrderNullableScalarRelationFilter, OrderWhereInput> | null
  }, "id" | "invoiceNumber">

  export type CustomerInvoiceOrderByWithAggregationInput = {
    id?: SortOrder
    invoiceNumber?: SortOrder
    customerId?: SortOrder
    orderId?: SortOrderInput | SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    totalAmount?: SortOrder
    paidAmount?: SortOrder
    balanceAmount?: SortOrder
    currency?: SortOrder
    invoiceDate?: SortOrder
    dueDate?: SortOrder
    paidDate?: SortOrderInput | SortOrder
    status?: SortOrder
    paymentMethod?: SortOrderInput | SortOrder
    paymentReference?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CustomerInvoiceCountOrderByAggregateInput
    _avg?: CustomerInvoiceAvgOrderByAggregateInput
    _max?: CustomerInvoiceMaxOrderByAggregateInput
    _min?: CustomerInvoiceMinOrderByAggregateInput
    _sum?: CustomerInvoiceSumOrderByAggregateInput
  }

  export type CustomerInvoiceScalarWhereWithAggregatesInput = {
    AND?: CustomerInvoiceScalarWhereWithAggregatesInput | CustomerInvoiceScalarWhereWithAggregatesInput[]
    OR?: CustomerInvoiceScalarWhereWithAggregatesInput[]
    NOT?: CustomerInvoiceScalarWhereWithAggregatesInput | CustomerInvoiceScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CustomerInvoice"> | string
    invoiceNumber?: StringWithAggregatesFilter<"CustomerInvoice"> | string
    customerId?: StringWithAggregatesFilter<"CustomerInvoice"> | string
    orderId?: StringNullableWithAggregatesFilter<"CustomerInvoice"> | string | null
    subtotal?: DecimalWithAggregatesFilter<"CustomerInvoice"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalWithAggregatesFilter<"CustomerInvoice"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalWithAggregatesFilter<"CustomerInvoice"> | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalWithAggregatesFilter<"CustomerInvoice"> | Decimal | DecimalJsLike | number | string
    balanceAmount?: DecimalWithAggregatesFilter<"CustomerInvoice"> | Decimal | DecimalJsLike | number | string
    currency?: StringWithAggregatesFilter<"CustomerInvoice"> | string
    invoiceDate?: DateTimeWithAggregatesFilter<"CustomerInvoice"> | Date | string
    dueDate?: DateTimeWithAggregatesFilter<"CustomerInvoice"> | Date | string
    paidDate?: DateTimeNullableWithAggregatesFilter<"CustomerInvoice"> | Date | string | null
    status?: EnumInvoiceStatusWithAggregatesFilter<"CustomerInvoice"> | $Enums.InvoiceStatus
    paymentMethod?: StringNullableWithAggregatesFilter<"CustomerInvoice"> | string | null
    paymentReference?: StringNullableWithAggregatesFilter<"CustomerInvoice"> | string | null
    notes?: StringNullableWithAggregatesFilter<"CustomerInvoice"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"CustomerInvoice"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CustomerInvoice"> | Date | string
  }

  export type InventoryAuditWhereInput = {
    AND?: InventoryAuditWhereInput | InventoryAuditWhereInput[]
    OR?: InventoryAuditWhereInput[]
    NOT?: InventoryAuditWhereInput | InventoryAuditWhereInput[]
    id?: StringFilter<"InventoryAudit"> | string
    auditNumber?: StringFilter<"InventoryAudit"> | string
    warehouseId?: StringNullableFilter<"InventoryAudit"> | string | null
    productId?: StringNullableFilter<"InventoryAudit"> | string | null
    type?: EnumAuditTypeFilter<"InventoryAudit"> | $Enums.AuditType
    method?: EnumAuditMethodFilter<"InventoryAudit"> | $Enums.AuditMethod
    status?: EnumAuditStatusFilter<"InventoryAudit"> | $Enums.AuditStatus
    plannedDate?: DateTimeFilter<"InventoryAudit"> | Date | string
    startedDate?: DateTimeNullableFilter<"InventoryAudit"> | Date | string | null
    completedDate?: DateTimeNullableFilter<"InventoryAudit"> | Date | string | null
    auditedBy?: StringFilter<"InventoryAudit"> | string
    supervisedBy?: StringNullableFilter<"InventoryAudit"> | string | null
    totalItems?: IntNullableFilter<"InventoryAudit"> | number | null
    itemsCounted?: IntNullableFilter<"InventoryAudit"> | number | null
    discrepancies?: IntNullableFilter<"InventoryAudit"> | number | null
    adjustmentValue?: DecimalNullableFilter<"InventoryAudit"> | Decimal | DecimalJsLike | number | string | null
    notes?: StringNullableFilter<"InventoryAudit"> | string | null
    createdAt?: DateTimeFilter<"InventoryAudit"> | Date | string
    updatedAt?: DateTimeFilter<"InventoryAudit"> | Date | string
    warehouse?: XOR<WarehouseNullableScalarRelationFilter, WarehouseWhereInput> | null
    product?: XOR<ProductNullableScalarRelationFilter, ProductWhereInput> | null
    items?: InventoryAuditItemListRelationFilter
  }

  export type InventoryAuditOrderByWithRelationInput = {
    id?: SortOrder
    auditNumber?: SortOrder
    warehouseId?: SortOrderInput | SortOrder
    productId?: SortOrderInput | SortOrder
    type?: SortOrder
    method?: SortOrder
    status?: SortOrder
    plannedDate?: SortOrder
    startedDate?: SortOrderInput | SortOrder
    completedDate?: SortOrderInput | SortOrder
    auditedBy?: SortOrder
    supervisedBy?: SortOrderInput | SortOrder
    totalItems?: SortOrderInput | SortOrder
    itemsCounted?: SortOrderInput | SortOrder
    discrepancies?: SortOrderInput | SortOrder
    adjustmentValue?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    warehouse?: WarehouseOrderByWithRelationInput
    product?: ProductOrderByWithRelationInput
    items?: InventoryAuditItemOrderByRelationAggregateInput
  }

  export type InventoryAuditWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    auditNumber?: string
    AND?: InventoryAuditWhereInput | InventoryAuditWhereInput[]
    OR?: InventoryAuditWhereInput[]
    NOT?: InventoryAuditWhereInput | InventoryAuditWhereInput[]
    warehouseId?: StringNullableFilter<"InventoryAudit"> | string | null
    productId?: StringNullableFilter<"InventoryAudit"> | string | null
    type?: EnumAuditTypeFilter<"InventoryAudit"> | $Enums.AuditType
    method?: EnumAuditMethodFilter<"InventoryAudit"> | $Enums.AuditMethod
    status?: EnumAuditStatusFilter<"InventoryAudit"> | $Enums.AuditStatus
    plannedDate?: DateTimeFilter<"InventoryAudit"> | Date | string
    startedDate?: DateTimeNullableFilter<"InventoryAudit"> | Date | string | null
    completedDate?: DateTimeNullableFilter<"InventoryAudit"> | Date | string | null
    auditedBy?: StringFilter<"InventoryAudit"> | string
    supervisedBy?: StringNullableFilter<"InventoryAudit"> | string | null
    totalItems?: IntNullableFilter<"InventoryAudit"> | number | null
    itemsCounted?: IntNullableFilter<"InventoryAudit"> | number | null
    discrepancies?: IntNullableFilter<"InventoryAudit"> | number | null
    adjustmentValue?: DecimalNullableFilter<"InventoryAudit"> | Decimal | DecimalJsLike | number | string | null
    notes?: StringNullableFilter<"InventoryAudit"> | string | null
    createdAt?: DateTimeFilter<"InventoryAudit"> | Date | string
    updatedAt?: DateTimeFilter<"InventoryAudit"> | Date | string
    warehouse?: XOR<WarehouseNullableScalarRelationFilter, WarehouseWhereInput> | null
    product?: XOR<ProductNullableScalarRelationFilter, ProductWhereInput> | null
    items?: InventoryAuditItemListRelationFilter
  }, "id" | "auditNumber">

  export type InventoryAuditOrderByWithAggregationInput = {
    id?: SortOrder
    auditNumber?: SortOrder
    warehouseId?: SortOrderInput | SortOrder
    productId?: SortOrderInput | SortOrder
    type?: SortOrder
    method?: SortOrder
    status?: SortOrder
    plannedDate?: SortOrder
    startedDate?: SortOrderInput | SortOrder
    completedDate?: SortOrderInput | SortOrder
    auditedBy?: SortOrder
    supervisedBy?: SortOrderInput | SortOrder
    totalItems?: SortOrderInput | SortOrder
    itemsCounted?: SortOrderInput | SortOrder
    discrepancies?: SortOrderInput | SortOrder
    adjustmentValue?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: InventoryAuditCountOrderByAggregateInput
    _avg?: InventoryAuditAvgOrderByAggregateInput
    _max?: InventoryAuditMaxOrderByAggregateInput
    _min?: InventoryAuditMinOrderByAggregateInput
    _sum?: InventoryAuditSumOrderByAggregateInput
  }

  export type InventoryAuditScalarWhereWithAggregatesInput = {
    AND?: InventoryAuditScalarWhereWithAggregatesInput | InventoryAuditScalarWhereWithAggregatesInput[]
    OR?: InventoryAuditScalarWhereWithAggregatesInput[]
    NOT?: InventoryAuditScalarWhereWithAggregatesInput | InventoryAuditScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"InventoryAudit"> | string
    auditNumber?: StringWithAggregatesFilter<"InventoryAudit"> | string
    warehouseId?: StringNullableWithAggregatesFilter<"InventoryAudit"> | string | null
    productId?: StringNullableWithAggregatesFilter<"InventoryAudit"> | string | null
    type?: EnumAuditTypeWithAggregatesFilter<"InventoryAudit"> | $Enums.AuditType
    method?: EnumAuditMethodWithAggregatesFilter<"InventoryAudit"> | $Enums.AuditMethod
    status?: EnumAuditStatusWithAggregatesFilter<"InventoryAudit"> | $Enums.AuditStatus
    plannedDate?: DateTimeWithAggregatesFilter<"InventoryAudit"> | Date | string
    startedDate?: DateTimeNullableWithAggregatesFilter<"InventoryAudit"> | Date | string | null
    completedDate?: DateTimeNullableWithAggregatesFilter<"InventoryAudit"> | Date | string | null
    auditedBy?: StringWithAggregatesFilter<"InventoryAudit"> | string
    supervisedBy?: StringNullableWithAggregatesFilter<"InventoryAudit"> | string | null
    totalItems?: IntNullableWithAggregatesFilter<"InventoryAudit"> | number | null
    itemsCounted?: IntNullableWithAggregatesFilter<"InventoryAudit"> | number | null
    discrepancies?: IntNullableWithAggregatesFilter<"InventoryAudit"> | number | null
    adjustmentValue?: DecimalNullableWithAggregatesFilter<"InventoryAudit"> | Decimal | DecimalJsLike | number | string | null
    notes?: StringNullableWithAggregatesFilter<"InventoryAudit"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"InventoryAudit"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"InventoryAudit"> | Date | string
  }

  export type InventoryAuditItemWhereInput = {
    AND?: InventoryAuditItemWhereInput | InventoryAuditItemWhereInput[]
    OR?: InventoryAuditItemWhereInput[]
    NOT?: InventoryAuditItemWhereInput | InventoryAuditItemWhereInput[]
    id?: StringFilter<"InventoryAuditItem"> | string
    auditId?: StringFilter<"InventoryAuditItem"> | string
    productId?: StringFilter<"InventoryAuditItem"> | string
    variantId?: StringNullableFilter<"InventoryAuditItem"> | string | null
    warehouseId?: StringFilter<"InventoryAuditItem"> | string
    systemQty?: IntFilter<"InventoryAuditItem"> | number
    countedQty?: IntNullableFilter<"InventoryAuditItem"> | number | null
    adjustmentQty?: IntNullableFilter<"InventoryAuditItem"> | number | null
    location?: StringNullableFilter<"InventoryAuditItem"> | string | null
    lotNumber?: StringNullableFilter<"InventoryAuditItem"> | string | null
    batchNumber?: StringNullableFilter<"InventoryAuditItem"> | string | null
    countedBy?: StringNullableFilter<"InventoryAuditItem"> | string | null
    countedAt?: DateTimeNullableFilter<"InventoryAuditItem"> | Date | string | null
    verifiedBy?: StringNullableFilter<"InventoryAuditItem"> | string | null
    verifiedAt?: DateTimeNullableFilter<"InventoryAuditItem"> | Date | string | null
    status?: EnumAuditItemStatusFilter<"InventoryAuditItem"> | $Enums.AuditItemStatus
    discrepancyReason?: StringNullableFilter<"InventoryAuditItem"> | string | null
    requiresInvestigation?: BoolFilter<"InventoryAuditItem"> | boolean
    notes?: StringNullableFilter<"InventoryAuditItem"> | string | null
    createdAt?: DateTimeFilter<"InventoryAuditItem"> | Date | string
    updatedAt?: DateTimeFilter<"InventoryAuditItem"> | Date | string
    audit?: XOR<InventoryAuditScalarRelationFilter, InventoryAuditWhereInput>
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    variant?: XOR<ProductVariantNullableScalarRelationFilter, ProductVariantWhereInput> | null
    warehouse?: XOR<WarehouseScalarRelationFilter, WarehouseWhereInput>
  }

  export type InventoryAuditItemOrderByWithRelationInput = {
    id?: SortOrder
    auditId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrderInput | SortOrder
    warehouseId?: SortOrder
    systemQty?: SortOrder
    countedQty?: SortOrderInput | SortOrder
    adjustmentQty?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    lotNumber?: SortOrderInput | SortOrder
    batchNumber?: SortOrderInput | SortOrder
    countedBy?: SortOrderInput | SortOrder
    countedAt?: SortOrderInput | SortOrder
    verifiedBy?: SortOrderInput | SortOrder
    verifiedAt?: SortOrderInput | SortOrder
    status?: SortOrder
    discrepancyReason?: SortOrderInput | SortOrder
    requiresInvestigation?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    audit?: InventoryAuditOrderByWithRelationInput
    product?: ProductOrderByWithRelationInput
    variant?: ProductVariantOrderByWithRelationInput
    warehouse?: WarehouseOrderByWithRelationInput
  }

  export type InventoryAuditItemWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: InventoryAuditItemWhereInput | InventoryAuditItemWhereInput[]
    OR?: InventoryAuditItemWhereInput[]
    NOT?: InventoryAuditItemWhereInput | InventoryAuditItemWhereInput[]
    auditId?: StringFilter<"InventoryAuditItem"> | string
    productId?: StringFilter<"InventoryAuditItem"> | string
    variantId?: StringNullableFilter<"InventoryAuditItem"> | string | null
    warehouseId?: StringFilter<"InventoryAuditItem"> | string
    systemQty?: IntFilter<"InventoryAuditItem"> | number
    countedQty?: IntNullableFilter<"InventoryAuditItem"> | number | null
    adjustmentQty?: IntNullableFilter<"InventoryAuditItem"> | number | null
    location?: StringNullableFilter<"InventoryAuditItem"> | string | null
    lotNumber?: StringNullableFilter<"InventoryAuditItem"> | string | null
    batchNumber?: StringNullableFilter<"InventoryAuditItem"> | string | null
    countedBy?: StringNullableFilter<"InventoryAuditItem"> | string | null
    countedAt?: DateTimeNullableFilter<"InventoryAuditItem"> | Date | string | null
    verifiedBy?: StringNullableFilter<"InventoryAuditItem"> | string | null
    verifiedAt?: DateTimeNullableFilter<"InventoryAuditItem"> | Date | string | null
    status?: EnumAuditItemStatusFilter<"InventoryAuditItem"> | $Enums.AuditItemStatus
    discrepancyReason?: StringNullableFilter<"InventoryAuditItem"> | string | null
    requiresInvestigation?: BoolFilter<"InventoryAuditItem"> | boolean
    notes?: StringNullableFilter<"InventoryAuditItem"> | string | null
    createdAt?: DateTimeFilter<"InventoryAuditItem"> | Date | string
    updatedAt?: DateTimeFilter<"InventoryAuditItem"> | Date | string
    audit?: XOR<InventoryAuditScalarRelationFilter, InventoryAuditWhereInput>
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    variant?: XOR<ProductVariantNullableScalarRelationFilter, ProductVariantWhereInput> | null
    warehouse?: XOR<WarehouseScalarRelationFilter, WarehouseWhereInput>
  }, "id">

  export type InventoryAuditItemOrderByWithAggregationInput = {
    id?: SortOrder
    auditId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrderInput | SortOrder
    warehouseId?: SortOrder
    systemQty?: SortOrder
    countedQty?: SortOrderInput | SortOrder
    adjustmentQty?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    lotNumber?: SortOrderInput | SortOrder
    batchNumber?: SortOrderInput | SortOrder
    countedBy?: SortOrderInput | SortOrder
    countedAt?: SortOrderInput | SortOrder
    verifiedBy?: SortOrderInput | SortOrder
    verifiedAt?: SortOrderInput | SortOrder
    status?: SortOrder
    discrepancyReason?: SortOrderInput | SortOrder
    requiresInvestigation?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: InventoryAuditItemCountOrderByAggregateInput
    _avg?: InventoryAuditItemAvgOrderByAggregateInput
    _max?: InventoryAuditItemMaxOrderByAggregateInput
    _min?: InventoryAuditItemMinOrderByAggregateInput
    _sum?: InventoryAuditItemSumOrderByAggregateInput
  }

  export type InventoryAuditItemScalarWhereWithAggregatesInput = {
    AND?: InventoryAuditItemScalarWhereWithAggregatesInput | InventoryAuditItemScalarWhereWithAggregatesInput[]
    OR?: InventoryAuditItemScalarWhereWithAggregatesInput[]
    NOT?: InventoryAuditItemScalarWhereWithAggregatesInput | InventoryAuditItemScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"InventoryAuditItem"> | string
    auditId?: StringWithAggregatesFilter<"InventoryAuditItem"> | string
    productId?: StringWithAggregatesFilter<"InventoryAuditItem"> | string
    variantId?: StringNullableWithAggregatesFilter<"InventoryAuditItem"> | string | null
    warehouseId?: StringWithAggregatesFilter<"InventoryAuditItem"> | string
    systemQty?: IntWithAggregatesFilter<"InventoryAuditItem"> | number
    countedQty?: IntNullableWithAggregatesFilter<"InventoryAuditItem"> | number | null
    adjustmentQty?: IntNullableWithAggregatesFilter<"InventoryAuditItem"> | number | null
    location?: StringNullableWithAggregatesFilter<"InventoryAuditItem"> | string | null
    lotNumber?: StringNullableWithAggregatesFilter<"InventoryAuditItem"> | string | null
    batchNumber?: StringNullableWithAggregatesFilter<"InventoryAuditItem"> | string | null
    countedBy?: StringNullableWithAggregatesFilter<"InventoryAuditItem"> | string | null
    countedAt?: DateTimeNullableWithAggregatesFilter<"InventoryAuditItem"> | Date | string | null
    verifiedBy?: StringNullableWithAggregatesFilter<"InventoryAuditItem"> | string | null
    verifiedAt?: DateTimeNullableWithAggregatesFilter<"InventoryAuditItem"> | Date | string | null
    status?: EnumAuditItemStatusWithAggregatesFilter<"InventoryAuditItem"> | $Enums.AuditItemStatus
    discrepancyReason?: StringNullableWithAggregatesFilter<"InventoryAuditItem"> | string | null
    requiresInvestigation?: BoolWithAggregatesFilter<"InventoryAuditItem"> | boolean
    notes?: StringNullableWithAggregatesFilter<"InventoryAuditItem"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"InventoryAuditItem"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"InventoryAuditItem"> | Date | string
  }

  export type ProductReviewWhereInput = {
    AND?: ProductReviewWhereInput | ProductReviewWhereInput[]
    OR?: ProductReviewWhereInput[]
    NOT?: ProductReviewWhereInput | ProductReviewWhereInput[]
    id?: StringFilter<"ProductReview"> | string
    productId?: StringFilter<"ProductReview"> | string
    rating?: IntFilter<"ProductReview"> | number
    title?: StringNullableFilter<"ProductReview"> | string | null
    review?: StringNullableFilter<"ProductReview"> | string | null
    reviewerName?: StringNullableFilter<"ProductReview"> | string | null
    reviewerEmail?: StringNullableFilter<"ProductReview"> | string | null
    isApproved?: BoolFilter<"ProductReview"> | boolean
    isVisible?: BoolFilter<"ProductReview"> | boolean
    createdAt?: DateTimeFilter<"ProductReview"> | Date | string
    updatedAt?: DateTimeFilter<"ProductReview"> | Date | string
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
  }

  export type ProductReviewOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    rating?: SortOrder
    title?: SortOrderInput | SortOrder
    review?: SortOrderInput | SortOrder
    reviewerName?: SortOrderInput | SortOrder
    reviewerEmail?: SortOrderInput | SortOrder
    isApproved?: SortOrder
    isVisible?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    product?: ProductOrderByWithRelationInput
  }

  export type ProductReviewWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ProductReviewWhereInput | ProductReviewWhereInput[]
    OR?: ProductReviewWhereInput[]
    NOT?: ProductReviewWhereInput | ProductReviewWhereInput[]
    productId?: StringFilter<"ProductReview"> | string
    rating?: IntFilter<"ProductReview"> | number
    title?: StringNullableFilter<"ProductReview"> | string | null
    review?: StringNullableFilter<"ProductReview"> | string | null
    reviewerName?: StringNullableFilter<"ProductReview"> | string | null
    reviewerEmail?: StringNullableFilter<"ProductReview"> | string | null
    isApproved?: BoolFilter<"ProductReview"> | boolean
    isVisible?: BoolFilter<"ProductReview"> | boolean
    createdAt?: DateTimeFilter<"ProductReview"> | Date | string
    updatedAt?: DateTimeFilter<"ProductReview"> | Date | string
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
  }, "id">

  export type ProductReviewOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    rating?: SortOrder
    title?: SortOrderInput | SortOrder
    review?: SortOrderInput | SortOrder
    reviewerName?: SortOrderInput | SortOrder
    reviewerEmail?: SortOrderInput | SortOrder
    isApproved?: SortOrder
    isVisible?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ProductReviewCountOrderByAggregateInput
    _avg?: ProductReviewAvgOrderByAggregateInput
    _max?: ProductReviewMaxOrderByAggregateInput
    _min?: ProductReviewMinOrderByAggregateInput
    _sum?: ProductReviewSumOrderByAggregateInput
  }

  export type ProductReviewScalarWhereWithAggregatesInput = {
    AND?: ProductReviewScalarWhereWithAggregatesInput | ProductReviewScalarWhereWithAggregatesInput[]
    OR?: ProductReviewScalarWhereWithAggregatesInput[]
    NOT?: ProductReviewScalarWhereWithAggregatesInput | ProductReviewScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProductReview"> | string
    productId?: StringWithAggregatesFilter<"ProductReview"> | string
    rating?: IntWithAggregatesFilter<"ProductReview"> | number
    title?: StringNullableWithAggregatesFilter<"ProductReview"> | string | null
    review?: StringNullableWithAggregatesFilter<"ProductReview"> | string | null
    reviewerName?: StringNullableWithAggregatesFilter<"ProductReview"> | string | null
    reviewerEmail?: StringNullableWithAggregatesFilter<"ProductReview"> | string | null
    isApproved?: BoolWithAggregatesFilter<"ProductReview"> | boolean
    isVisible?: BoolWithAggregatesFilter<"ProductReview"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"ProductReview"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ProductReview"> | Date | string
  }

  export type SystemConfigurationWhereInput = {
    AND?: SystemConfigurationWhereInput | SystemConfigurationWhereInput[]
    OR?: SystemConfigurationWhereInput[]
    NOT?: SystemConfigurationWhereInput | SystemConfigurationWhereInput[]
    id?: StringFilter<"SystemConfiguration"> | string
    category?: StringFilter<"SystemConfiguration"> | string
    key?: StringFilter<"SystemConfiguration"> | string
    value?: JsonFilter<"SystemConfiguration">
    description?: StringNullableFilter<"SystemConfiguration"> | string | null
    dataType?: StringNullableFilter<"SystemConfiguration"> | string | null
    createdAt?: DateTimeFilter<"SystemConfiguration"> | Date | string
    updatedAt?: DateTimeFilter<"SystemConfiguration"> | Date | string
  }

  export type SystemConfigurationOrderByWithRelationInput = {
    id?: SortOrder
    category?: SortOrder
    key?: SortOrder
    value?: SortOrder
    description?: SortOrderInput | SortOrder
    dataType?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SystemConfigurationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    category_key?: SystemConfigurationCategoryKeyCompoundUniqueInput
    AND?: SystemConfigurationWhereInput | SystemConfigurationWhereInput[]
    OR?: SystemConfigurationWhereInput[]
    NOT?: SystemConfigurationWhereInput | SystemConfigurationWhereInput[]
    category?: StringFilter<"SystemConfiguration"> | string
    key?: StringFilter<"SystemConfiguration"> | string
    value?: JsonFilter<"SystemConfiguration">
    description?: StringNullableFilter<"SystemConfiguration"> | string | null
    dataType?: StringNullableFilter<"SystemConfiguration"> | string | null
    createdAt?: DateTimeFilter<"SystemConfiguration"> | Date | string
    updatedAt?: DateTimeFilter<"SystemConfiguration"> | Date | string
  }, "id" | "category_key">

  export type SystemConfigurationOrderByWithAggregationInput = {
    id?: SortOrder
    category?: SortOrder
    key?: SortOrder
    value?: SortOrder
    description?: SortOrderInput | SortOrder
    dataType?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: SystemConfigurationCountOrderByAggregateInput
    _max?: SystemConfigurationMaxOrderByAggregateInput
    _min?: SystemConfigurationMinOrderByAggregateInput
  }

  export type SystemConfigurationScalarWhereWithAggregatesInput = {
    AND?: SystemConfigurationScalarWhereWithAggregatesInput | SystemConfigurationScalarWhereWithAggregatesInput[]
    OR?: SystemConfigurationScalarWhereWithAggregatesInput[]
    NOT?: SystemConfigurationScalarWhereWithAggregatesInput | SystemConfigurationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SystemConfiguration"> | string
    category?: StringWithAggregatesFilter<"SystemConfiguration"> | string
    key?: StringWithAggregatesFilter<"SystemConfiguration"> | string
    value?: JsonWithAggregatesFilter<"SystemConfiguration">
    description?: StringNullableWithAggregatesFilter<"SystemConfiguration"> | string | null
    dataType?: StringNullableWithAggregatesFilter<"SystemConfiguration"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"SystemConfiguration"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"SystemConfiguration"> | Date | string
  }

  export type ProductCreateInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    category?: CategoryCreateNestedOneWithoutProductsInput
    brand?: BrandCreateNestedOneWithoutProductsInput
    inventoryItems?: InventoryItemCreateNestedManyWithoutProductInput
    variants?: ProductVariantCreateNestedManyWithoutProductInput
    suppliers?: ProductSupplierCreateNestedManyWithoutProductInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
    purchaseItems?: PurchaseOrderItemCreateNestedManyWithoutProductInput
    movements?: InventoryMovementCreateNestedManyWithoutProductInput
    audits?: InventoryAuditCreateNestedManyWithoutProductInput
    reviews?: ProductReviewCreateNestedManyWithoutProductInput
    bundles?: ProductBundleCreateNestedManyWithoutProductsInput
    bundleItems?: ProductBundleCreateNestedManyWithoutBundleItemsInput
    goodsReceiptItems?: GoodsReceiptItemCreateNestedManyWithoutProductInput
    transferItems?: StockTransferItemCreateNestedManyWithoutProductInput
    auditItems?: InventoryAuditItemCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    categoryId?: string | null
    brandId?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    inventoryItems?: InventoryItemUncheckedCreateNestedManyWithoutProductInput
    variants?: ProductVariantUncheckedCreateNestedManyWithoutProductInput
    suppliers?: ProductSupplierUncheckedCreateNestedManyWithoutProductInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    purchaseItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutProductInput
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutProductInput
    audits?: InventoryAuditUncheckedCreateNestedManyWithoutProductInput
    reviews?: ProductReviewUncheckedCreateNestedManyWithoutProductInput
    bundles?: ProductBundleUncheckedCreateNestedManyWithoutProductsInput
    bundleItems?: ProductBundleUncheckedCreateNestedManyWithoutBundleItemsInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedCreateNestedManyWithoutProductInput
    transferItems?: StockTransferItemUncheckedCreateNestedManyWithoutProductInput
    auditItems?: InventoryAuditItemUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    category?: CategoryUpdateOneWithoutProductsNestedInput
    brand?: BrandUpdateOneWithoutProductsNestedInput
    inventoryItems?: InventoryItemUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUpdateManyWithoutProductNestedInput
    suppliers?: ProductSupplierUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
    purchaseItems?: PurchaseOrderItemUpdateManyWithoutProductNestedInput
    movements?: InventoryMovementUpdateManyWithoutProductNestedInput
    audits?: InventoryAuditUpdateManyWithoutProductNestedInput
    reviews?: ProductReviewUpdateManyWithoutProductNestedInput
    bundles?: ProductBundleUpdateManyWithoutProductsNestedInput
    bundleItems?: ProductBundleUpdateManyWithoutBundleItemsNestedInput
    goodsReceiptItems?: GoodsReceiptItemUpdateManyWithoutProductNestedInput
    transferItems?: StockTransferItemUpdateManyWithoutProductNestedInput
    auditItems?: InventoryAuditItemUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    inventoryItems?: InventoryItemUncheckedUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUncheckedUpdateManyWithoutProductNestedInput
    suppliers?: ProductSupplierUncheckedUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    purchaseItems?: PurchaseOrderItemUncheckedUpdateManyWithoutProductNestedInput
    movements?: InventoryMovementUncheckedUpdateManyWithoutProductNestedInput
    audits?: InventoryAuditUncheckedUpdateManyWithoutProductNestedInput
    reviews?: ProductReviewUncheckedUpdateManyWithoutProductNestedInput
    bundles?: ProductBundleUncheckedUpdateManyWithoutProductsNestedInput
    bundleItems?: ProductBundleUncheckedUpdateManyWithoutBundleItemsNestedInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedUpdateManyWithoutProductNestedInput
    transferItems?: StockTransferItemUncheckedUpdateManyWithoutProductNestedInput
    auditItems?: InventoryAuditItemUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    categoryId?: string | null
    brandId?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
  }

  export type ProductUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type ProductUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type ProductVariantCreateInput = {
    id?: string
    name: string
    sku: string
    barcode?: string | null
    attributes: JsonNullValueInput | InputJsonValue
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number | null
    reorderPoint?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutVariantsInput
    inventoryItems?: InventoryItemCreateNestedManyWithoutVariantInput
    movements?: InventoryMovementCreateNestedManyWithoutVariantInput
    purchaseItems?: PurchaseOrderItemCreateNestedManyWithoutVariantInput
    goodsReceiptItems?: GoodsReceiptItemCreateNestedManyWithoutVariantInput
    orderItems?: OrderItemCreateNestedManyWithoutVariantInput
    transferItems?: StockTransferItemCreateNestedManyWithoutVariantInput
    auditItems?: InventoryAuditItemCreateNestedManyWithoutVariantInput
  }

  export type ProductVariantUncheckedCreateInput = {
    id?: string
    productId: string
    name: string
    sku: string
    barcode?: string | null
    attributes: JsonNullValueInput | InputJsonValue
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number | null
    reorderPoint?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    inventoryItems?: InventoryItemUncheckedCreateNestedManyWithoutVariantInput
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutVariantInput
    purchaseItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutVariantInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedCreateNestedManyWithoutVariantInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutVariantInput
    transferItems?: StockTransferItemUncheckedCreateNestedManyWithoutVariantInput
    auditItems?: InventoryAuditItemUncheckedCreateNestedManyWithoutVariantInput
  }

  export type ProductVariantUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: JsonNullValueInput | InputJsonValue
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutVariantsNestedInput
    inventoryItems?: InventoryItemUpdateManyWithoutVariantNestedInput
    movements?: InventoryMovementUpdateManyWithoutVariantNestedInput
    purchaseItems?: PurchaseOrderItemUpdateManyWithoutVariantNestedInput
    goodsReceiptItems?: GoodsReceiptItemUpdateManyWithoutVariantNestedInput
    orderItems?: OrderItemUpdateManyWithoutVariantNestedInput
    transferItems?: StockTransferItemUpdateManyWithoutVariantNestedInput
    auditItems?: InventoryAuditItemUpdateManyWithoutVariantNestedInput
  }

  export type ProductVariantUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: JsonNullValueInput | InputJsonValue
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryItems?: InventoryItemUncheckedUpdateManyWithoutVariantNestedInput
    movements?: InventoryMovementUncheckedUpdateManyWithoutVariantNestedInput
    purchaseItems?: PurchaseOrderItemUncheckedUpdateManyWithoutVariantNestedInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedUpdateManyWithoutVariantNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutVariantNestedInput
    transferItems?: StockTransferItemUncheckedUpdateManyWithoutVariantNestedInput
    auditItems?: InventoryAuditItemUncheckedUpdateManyWithoutVariantNestedInput
  }

  export type ProductVariantCreateManyInput = {
    id?: string
    productId: string
    name: string
    sku: string
    barcode?: string | null
    attributes: JsonNullValueInput | InputJsonValue
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number | null
    reorderPoint?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductVariantUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: JsonNullValueInput | InputJsonValue
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductVariantUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: JsonNullValueInput | InputJsonValue
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryCreateInput = {
    id?: string
    name: string
    description?: string | null
    slug: string
    level?: number
    path?: string | null
    icon?: string | null
    color?: string | null
    image?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    parent?: CategoryCreateNestedOneWithoutChildrenInput
    children?: CategoryCreateNestedManyWithoutParentInput
    products?: ProductCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    slug: string
    parentId?: string | null
    level?: number
    path?: string | null
    icon?: string | null
    color?: string | null
    image?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    children?: CategoryUncheckedCreateNestedManyWithoutParentInput
    products?: ProductUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    path?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parent?: CategoryUpdateOneWithoutChildrenNestedInput
    children?: CategoryUpdateManyWithoutParentNestedInput
    products?: ProductUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    level?: IntFieldUpdateOperationsInput | number
    path?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    children?: CategoryUncheckedUpdateManyWithoutParentNestedInput
    products?: ProductUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    slug: string
    parentId?: string | null
    level?: number
    path?: string | null
    icon?: string | null
    color?: string | null
    image?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CategoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    path?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    level?: IntFieldUpdateOperationsInput | number
    path?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BrandCreateInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    website?: string | null
    contactEmail?: string | null
    contactPhone?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    products?: ProductCreateNestedManyWithoutBrandInput
  }

  export type BrandUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    website?: string | null
    contactEmail?: string | null
    contactPhone?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    products?: ProductUncheckedCreateNestedManyWithoutBrandInput
  }

  export type BrandUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: ProductUpdateManyWithoutBrandNestedInput
  }

  export type BrandUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: ProductUncheckedUpdateManyWithoutBrandNestedInput
  }

  export type BrandCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    website?: string | null
    contactEmail?: string | null
    contactPhone?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BrandUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BrandUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductBundleCreateInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    bundlePrice: Decimal | DecimalJsLike | number | string
    discount?: Decimal | DecimalJsLike | number | string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    products?: ProductCreateNestedManyWithoutBundlesInput
    bundleItems?: ProductCreateNestedManyWithoutBundleItemsInput
  }

  export type ProductBundleUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    bundlePrice: Decimal | DecimalJsLike | number | string
    discount?: Decimal | DecimalJsLike | number | string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    products?: ProductUncheckedCreateNestedManyWithoutBundlesInput
    bundleItems?: ProductUncheckedCreateNestedManyWithoutBundleItemsInput
  }

  export type ProductBundleUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    bundlePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: ProductUpdateManyWithoutBundlesNestedInput
    bundleItems?: ProductUpdateManyWithoutBundleItemsNestedInput
  }

  export type ProductBundleUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    bundlePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: ProductUncheckedUpdateManyWithoutBundlesNestedInput
    bundleItems?: ProductUncheckedUpdateManyWithoutBundleItemsNestedInput
  }

  export type ProductBundleCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    bundlePrice: Decimal | DecimalJsLike | number | string
    discount?: Decimal | DecimalJsLike | number | string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductBundleUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    bundlePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductBundleUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    bundlePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WarehouseCreateInput = {
    id?: string
    name: string
    code: string
    description?: string | null
    address: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: string | null
    managerName?: string | null
    managerEmail?: string | null
    managerPhone?: string | null
    phone?: string | null
    email?: string | null
    type?: $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    hasRfid?: boolean
    hasBarcode?: boolean
    temperatureControl?: boolean
    securityLevel?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    inventoryItems?: InventoryItemCreateNestedManyWithoutWarehouseInput
    movements?: InventoryMovementCreateNestedManyWithoutWarehouseInput
    transfers?: StockTransferCreateNestedManyWithoutFromWarehouseInput
    receivedTransfers?: StockTransferCreateNestedManyWithoutToWarehouseInput
    orders?: OrderCreateNestedManyWithoutWarehouseInput
    purchaseOrders?: PurchaseOrderCreateNestedManyWithoutWarehouseInput
    audits?: InventoryAuditCreateNestedManyWithoutWarehouseInput
    goodsReceipts?: GoodsReceiptCreateNestedManyWithoutWarehouseInput
    shipments?: ShipmentCreateNestedManyWithoutWarehouseInput
    auditItems?: InventoryAuditItemCreateNestedManyWithoutWarehouseInput
  }

  export type WarehouseUncheckedCreateInput = {
    id?: string
    name: string
    code: string
    description?: string | null
    address: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: string | null
    managerName?: string | null
    managerEmail?: string | null
    managerPhone?: string | null
    phone?: string | null
    email?: string | null
    type?: $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    hasRfid?: boolean
    hasBarcode?: boolean
    temperatureControl?: boolean
    securityLevel?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    inventoryItems?: InventoryItemUncheckedCreateNestedManyWithoutWarehouseInput
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutWarehouseInput
    transfers?: StockTransferUncheckedCreateNestedManyWithoutFromWarehouseInput
    receivedTransfers?: StockTransferUncheckedCreateNestedManyWithoutToWarehouseInput
    orders?: OrderUncheckedCreateNestedManyWithoutWarehouseInput
    purchaseOrders?: PurchaseOrderUncheckedCreateNestedManyWithoutWarehouseInput
    audits?: InventoryAuditUncheckedCreateNestedManyWithoutWarehouseInput
    goodsReceipts?: GoodsReceiptUncheckedCreateNestedManyWithoutWarehouseInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutWarehouseInput
    auditItems?: InventoryAuditItemUncheckedCreateNestedManyWithoutWarehouseInput
  }

  export type WarehouseUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    managerName?: NullableStringFieldUpdateOperationsInput | string | null
    managerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    managerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumWarehouseTypeFieldUpdateOperationsInput | $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hasRfid?: BoolFieldUpdateOperationsInput | boolean
    hasBarcode?: BoolFieldUpdateOperationsInput | boolean
    temperatureControl?: BoolFieldUpdateOperationsInput | boolean
    securityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryItems?: InventoryItemUpdateManyWithoutWarehouseNestedInput
    movements?: InventoryMovementUpdateManyWithoutWarehouseNestedInput
    transfers?: StockTransferUpdateManyWithoutFromWarehouseNestedInput
    receivedTransfers?: StockTransferUpdateManyWithoutToWarehouseNestedInput
    orders?: OrderUpdateManyWithoutWarehouseNestedInput
    purchaseOrders?: PurchaseOrderUpdateManyWithoutWarehouseNestedInput
    audits?: InventoryAuditUpdateManyWithoutWarehouseNestedInput
    goodsReceipts?: GoodsReceiptUpdateManyWithoutWarehouseNestedInput
    shipments?: ShipmentUpdateManyWithoutWarehouseNestedInput
    auditItems?: InventoryAuditItemUpdateManyWithoutWarehouseNestedInput
  }

  export type WarehouseUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    managerName?: NullableStringFieldUpdateOperationsInput | string | null
    managerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    managerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumWarehouseTypeFieldUpdateOperationsInput | $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hasRfid?: BoolFieldUpdateOperationsInput | boolean
    hasBarcode?: BoolFieldUpdateOperationsInput | boolean
    temperatureControl?: BoolFieldUpdateOperationsInput | boolean
    securityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryItems?: InventoryItemUncheckedUpdateManyWithoutWarehouseNestedInput
    movements?: InventoryMovementUncheckedUpdateManyWithoutWarehouseNestedInput
    transfers?: StockTransferUncheckedUpdateManyWithoutFromWarehouseNestedInput
    receivedTransfers?: StockTransferUncheckedUpdateManyWithoutToWarehouseNestedInput
    orders?: OrderUncheckedUpdateManyWithoutWarehouseNestedInput
    purchaseOrders?: PurchaseOrderUncheckedUpdateManyWithoutWarehouseNestedInput
    audits?: InventoryAuditUncheckedUpdateManyWithoutWarehouseNestedInput
    goodsReceipts?: GoodsReceiptUncheckedUpdateManyWithoutWarehouseNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutWarehouseNestedInput
    auditItems?: InventoryAuditItemUncheckedUpdateManyWithoutWarehouseNestedInput
  }

  export type WarehouseCreateManyInput = {
    id?: string
    name: string
    code: string
    description?: string | null
    address: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: string | null
    managerName?: string | null
    managerEmail?: string | null
    managerPhone?: string | null
    phone?: string | null
    email?: string | null
    type?: $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    hasRfid?: boolean
    hasBarcode?: boolean
    temperatureControl?: boolean
    securityLevel?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type WarehouseUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    managerName?: NullableStringFieldUpdateOperationsInput | string | null
    managerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    managerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumWarehouseTypeFieldUpdateOperationsInput | $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hasRfid?: BoolFieldUpdateOperationsInput | boolean
    hasBarcode?: BoolFieldUpdateOperationsInput | boolean
    temperatureControl?: BoolFieldUpdateOperationsInput | boolean
    securityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WarehouseUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    managerName?: NullableStringFieldUpdateOperationsInput | string | null
    managerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    managerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumWarehouseTypeFieldUpdateOperationsInput | $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hasRfid?: BoolFieldUpdateOperationsInput | boolean
    hasBarcode?: BoolFieldUpdateOperationsInput | boolean
    temperatureControl?: BoolFieldUpdateOperationsInput | boolean
    securityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryItemCreateInput = {
    id?: string
    zone?: string | null
    aisle?: string | null
    shelf?: string | null
    bin?: string | null
    locationCode?: string | null
    quantity?: number
    reservedQuantity?: number
    availableQuantity?: number
    averageCost?: Decimal | DecimalJsLike | number | string | null
    lastCost?: Decimal | DecimalJsLike | number | string | null
    lotNumber?: string | null
    batchNumber?: string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    expiryDate?: Date | string | null
    status?: $Enums.InventoryStatus
    qcStatus?: $Enums.QualityStatus
    quarantineReason?: string | null
    lastMovement?: Date | string | null
    lastCount?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutInventoryItemsInput
    variant?: ProductVariantCreateNestedOneWithoutInventoryItemsInput
    warehouse: WarehouseCreateNestedOneWithoutInventoryItemsInput
    movements?: InventoryMovementCreateNestedManyWithoutInventoryItemInput
    reservations?: StockReservationCreateNestedManyWithoutInventoryItemInput
  }

  export type InventoryItemUncheckedCreateInput = {
    id?: string
    productId: string
    variantId?: string | null
    warehouseId: string
    zone?: string | null
    aisle?: string | null
    shelf?: string | null
    bin?: string | null
    locationCode?: string | null
    quantity?: number
    reservedQuantity?: number
    availableQuantity?: number
    averageCost?: Decimal | DecimalJsLike | number | string | null
    lastCost?: Decimal | DecimalJsLike | number | string | null
    lotNumber?: string | null
    batchNumber?: string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    expiryDate?: Date | string | null
    status?: $Enums.InventoryStatus
    qcStatus?: $Enums.QualityStatus
    quarantineReason?: string | null
    lastMovement?: Date | string | null
    lastCount?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutInventoryItemInput
    reservations?: StockReservationUncheckedCreateNestedManyWithoutInventoryItemInput
  }

  export type InventoryItemUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    aisle?: NullableStringFieldUpdateOperationsInput | string | null
    shelf?: NullableStringFieldUpdateOperationsInput | string | null
    bin?: NullableStringFieldUpdateOperationsInput | string | null
    locationCode?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    reservedQuantity?: IntFieldUpdateOperationsInput | number
    availableQuantity?: IntFieldUpdateOperationsInput | number
    averageCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lastCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInventoryStatusFieldUpdateOperationsInput | $Enums.InventoryStatus
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    quarantineReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastMovement?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastCount?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutInventoryItemsNestedInput
    variant?: ProductVariantUpdateOneWithoutInventoryItemsNestedInput
    warehouse?: WarehouseUpdateOneRequiredWithoutInventoryItemsNestedInput
    movements?: InventoryMovementUpdateManyWithoutInventoryItemNestedInput
    reservations?: StockReservationUpdateManyWithoutInventoryItemNestedInput
  }

  export type InventoryItemUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    warehouseId?: StringFieldUpdateOperationsInput | string
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    aisle?: NullableStringFieldUpdateOperationsInput | string | null
    shelf?: NullableStringFieldUpdateOperationsInput | string | null
    bin?: NullableStringFieldUpdateOperationsInput | string | null
    locationCode?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    reservedQuantity?: IntFieldUpdateOperationsInput | number
    availableQuantity?: IntFieldUpdateOperationsInput | number
    averageCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lastCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInventoryStatusFieldUpdateOperationsInput | $Enums.InventoryStatus
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    quarantineReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastMovement?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastCount?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    movements?: InventoryMovementUncheckedUpdateManyWithoutInventoryItemNestedInput
    reservations?: StockReservationUncheckedUpdateManyWithoutInventoryItemNestedInput
  }

  export type InventoryItemCreateManyInput = {
    id?: string
    productId: string
    variantId?: string | null
    warehouseId: string
    zone?: string | null
    aisle?: string | null
    shelf?: string | null
    bin?: string | null
    locationCode?: string | null
    quantity?: number
    reservedQuantity?: number
    availableQuantity?: number
    averageCost?: Decimal | DecimalJsLike | number | string | null
    lastCost?: Decimal | DecimalJsLike | number | string | null
    lotNumber?: string | null
    batchNumber?: string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    expiryDate?: Date | string | null
    status?: $Enums.InventoryStatus
    qcStatus?: $Enums.QualityStatus
    quarantineReason?: string | null
    lastMovement?: Date | string | null
    lastCount?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InventoryItemUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    aisle?: NullableStringFieldUpdateOperationsInput | string | null
    shelf?: NullableStringFieldUpdateOperationsInput | string | null
    bin?: NullableStringFieldUpdateOperationsInput | string | null
    locationCode?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    reservedQuantity?: IntFieldUpdateOperationsInput | number
    availableQuantity?: IntFieldUpdateOperationsInput | number
    averageCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lastCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInventoryStatusFieldUpdateOperationsInput | $Enums.InventoryStatus
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    quarantineReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastMovement?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastCount?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryItemUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    warehouseId?: StringFieldUpdateOperationsInput | string
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    aisle?: NullableStringFieldUpdateOperationsInput | string | null
    shelf?: NullableStringFieldUpdateOperationsInput | string | null
    bin?: NullableStringFieldUpdateOperationsInput | string | null
    locationCode?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    reservedQuantity?: IntFieldUpdateOperationsInput | number
    availableQuantity?: IntFieldUpdateOperationsInput | number
    averageCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lastCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInventoryStatusFieldUpdateOperationsInput | $Enums.InventoryStatus
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    quarantineReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastMovement?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastCount?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryMovementCreateInput = {
    id?: string
    type: $Enums.MovementType
    subtype?: string | null
    quantity: number
    quantityBefore: number
    quantityAfter: number
    unitCost?: Decimal | DecimalJsLike | number | string | null
    totalCost?: Decimal | DecimalJsLike | number | string | null
    referenceType?: string | null
    referenceId?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    expiryDate?: Date | string | null
    reason?: string | null
    notes?: string | null
    userId: string
    approvedBy?: string | null
    approvedAt?: Date | string | null
    occurredAt?: Date | string
    createdAt?: Date | string
    product: ProductCreateNestedOneWithoutMovementsInput
    variant?: ProductVariantCreateNestedOneWithoutMovementsInput
    warehouse: WarehouseCreateNestedOneWithoutMovementsInput
    inventoryItem?: InventoryItemCreateNestedOneWithoutMovementsInput
  }

  export type InventoryMovementUncheckedCreateInput = {
    id?: string
    type: $Enums.MovementType
    subtype?: string | null
    productId: string
    variantId?: string | null
    warehouseId: string
    inventoryItemId?: string | null
    quantity: number
    quantityBefore: number
    quantityAfter: number
    unitCost?: Decimal | DecimalJsLike | number | string | null
    totalCost?: Decimal | DecimalJsLike | number | string | null
    referenceType?: string | null
    referenceId?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    expiryDate?: Date | string | null
    reason?: string | null
    notes?: string | null
    userId: string
    approvedBy?: string | null
    approvedAt?: Date | string | null
    occurredAt?: Date | string
    createdAt?: Date | string
  }

  export type InventoryMovementUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    subtype?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    quantityBefore?: IntFieldUpdateOperationsInput | number
    quantityAfter?: IntFieldUpdateOperationsInput | number
    unitCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    referenceType?: NullableStringFieldUpdateOperationsInput | string | null
    referenceId?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutMovementsNestedInput
    variant?: ProductVariantUpdateOneWithoutMovementsNestedInput
    warehouse?: WarehouseUpdateOneRequiredWithoutMovementsNestedInput
    inventoryItem?: InventoryItemUpdateOneWithoutMovementsNestedInput
  }

  export type InventoryMovementUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    subtype?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    warehouseId?: StringFieldUpdateOperationsInput | string
    inventoryItemId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    quantityBefore?: IntFieldUpdateOperationsInput | number
    quantityAfter?: IntFieldUpdateOperationsInput | number
    unitCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    referenceType?: NullableStringFieldUpdateOperationsInput | string | null
    referenceId?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryMovementCreateManyInput = {
    id?: string
    type: $Enums.MovementType
    subtype?: string | null
    productId: string
    variantId?: string | null
    warehouseId: string
    inventoryItemId?: string | null
    quantity: number
    quantityBefore: number
    quantityAfter: number
    unitCost?: Decimal | DecimalJsLike | number | string | null
    totalCost?: Decimal | DecimalJsLike | number | string | null
    referenceType?: string | null
    referenceId?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    expiryDate?: Date | string | null
    reason?: string | null
    notes?: string | null
    userId: string
    approvedBy?: string | null
    approvedAt?: Date | string | null
    occurredAt?: Date | string
    createdAt?: Date | string
  }

  export type InventoryMovementUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    subtype?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    quantityBefore?: IntFieldUpdateOperationsInput | number
    quantityAfter?: IntFieldUpdateOperationsInput | number
    unitCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    referenceType?: NullableStringFieldUpdateOperationsInput | string | null
    referenceId?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryMovementUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    subtype?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    warehouseId?: StringFieldUpdateOperationsInput | string
    inventoryItemId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    quantityBefore?: IntFieldUpdateOperationsInput | number
    quantityAfter?: IntFieldUpdateOperationsInput | number
    unitCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    referenceType?: NullableStringFieldUpdateOperationsInput | string | null
    referenceId?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplierCreateInput = {
    id?: string
    name: string
    code: string
    email?: string | null
    phone?: string | null
    website?: string | null
    companyType?: $Enums.CompanyType | null
    taxId?: string | null
    vatNumber?: string | null
    registrationNumber?: string | null
    billingAddress: JsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    contactName?: string | null
    contactEmail?: string | null
    contactPhone?: string | null
    contactTitle?: string | null
    paymentTerms?: string | null
    creditLimit?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    rating?: Decimal | DecimalJsLike | number | string | null
    onTimeDelivery?: Decimal | DecimalJsLike | number | string | null
    qualityRating?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.SupplierStatus
    certifications?: NullableJsonNullValueInput | InputJsonValue
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    products?: ProductSupplierCreateNestedManyWithoutSupplierInput
    purchaseOrders?: PurchaseOrderCreateNestedManyWithoutSupplierInput
    invoices?: SupplierInvoiceCreateNestedManyWithoutSupplierInput
    contacts?: SupplierContactCreateNestedManyWithoutSupplierInput
    documents?: SupplierDocumentCreateNestedManyWithoutSupplierInput
  }

  export type SupplierUncheckedCreateInput = {
    id?: string
    name: string
    code: string
    email?: string | null
    phone?: string | null
    website?: string | null
    companyType?: $Enums.CompanyType | null
    taxId?: string | null
    vatNumber?: string | null
    registrationNumber?: string | null
    billingAddress: JsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    contactName?: string | null
    contactEmail?: string | null
    contactPhone?: string | null
    contactTitle?: string | null
    paymentTerms?: string | null
    creditLimit?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    rating?: Decimal | DecimalJsLike | number | string | null
    onTimeDelivery?: Decimal | DecimalJsLike | number | string | null
    qualityRating?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.SupplierStatus
    certifications?: NullableJsonNullValueInput | InputJsonValue
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    products?: ProductSupplierUncheckedCreateNestedManyWithoutSupplierInput
    purchaseOrders?: PurchaseOrderUncheckedCreateNestedManyWithoutSupplierInput
    invoices?: SupplierInvoiceUncheckedCreateNestedManyWithoutSupplierInput
    contacts?: SupplierContactUncheckedCreateNestedManyWithoutSupplierInput
    documents?: SupplierDocumentUncheckedCreateNestedManyWithoutSupplierInput
  }

  export type SupplierUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    companyType?: NullableEnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    vatNumber?: NullableStringFieldUpdateOperationsInput | string | null
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: JsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactTitle?: NullableStringFieldUpdateOperationsInput | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    creditLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    onTimeDelivery?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    qualityRating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumSupplierStatusFieldUpdateOperationsInput | $Enums.SupplierStatus
    certifications?: NullableJsonNullValueInput | InputJsonValue
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    products?: ProductSupplierUpdateManyWithoutSupplierNestedInput
    purchaseOrders?: PurchaseOrderUpdateManyWithoutSupplierNestedInput
    invoices?: SupplierInvoiceUpdateManyWithoutSupplierNestedInput
    contacts?: SupplierContactUpdateManyWithoutSupplierNestedInput
    documents?: SupplierDocumentUpdateManyWithoutSupplierNestedInput
  }

  export type SupplierUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    companyType?: NullableEnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    vatNumber?: NullableStringFieldUpdateOperationsInput | string | null
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: JsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactTitle?: NullableStringFieldUpdateOperationsInput | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    creditLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    onTimeDelivery?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    qualityRating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumSupplierStatusFieldUpdateOperationsInput | $Enums.SupplierStatus
    certifications?: NullableJsonNullValueInput | InputJsonValue
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    products?: ProductSupplierUncheckedUpdateManyWithoutSupplierNestedInput
    purchaseOrders?: PurchaseOrderUncheckedUpdateManyWithoutSupplierNestedInput
    invoices?: SupplierInvoiceUncheckedUpdateManyWithoutSupplierNestedInput
    contacts?: SupplierContactUncheckedUpdateManyWithoutSupplierNestedInput
    documents?: SupplierDocumentUncheckedUpdateManyWithoutSupplierNestedInput
  }

  export type SupplierCreateManyInput = {
    id?: string
    name: string
    code: string
    email?: string | null
    phone?: string | null
    website?: string | null
    companyType?: $Enums.CompanyType | null
    taxId?: string | null
    vatNumber?: string | null
    registrationNumber?: string | null
    billingAddress: JsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    contactName?: string | null
    contactEmail?: string | null
    contactPhone?: string | null
    contactTitle?: string | null
    paymentTerms?: string | null
    creditLimit?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    rating?: Decimal | DecimalJsLike | number | string | null
    onTimeDelivery?: Decimal | DecimalJsLike | number | string | null
    qualityRating?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.SupplierStatus
    certifications?: NullableJsonNullValueInput | InputJsonValue
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
  }

  export type SupplierUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    companyType?: NullableEnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    vatNumber?: NullableStringFieldUpdateOperationsInput | string | null
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: JsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactTitle?: NullableStringFieldUpdateOperationsInput | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    creditLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    onTimeDelivery?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    qualityRating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumSupplierStatusFieldUpdateOperationsInput | $Enums.SupplierStatus
    certifications?: NullableJsonNullValueInput | InputJsonValue
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type SupplierUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    companyType?: NullableEnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    vatNumber?: NullableStringFieldUpdateOperationsInput | string | null
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: JsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactTitle?: NullableStringFieldUpdateOperationsInput | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    creditLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    onTimeDelivery?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    qualityRating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumSupplierStatusFieldUpdateOperationsInput | $Enums.SupplierStatus
    certifications?: NullableJsonNullValueInput | InputJsonValue
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type ProductSupplierCreateInput = {
    id?: string
    supplierSku?: string | null
    supplierName?: string | null
    unitCost: Decimal | DecimalJsLike | number | string
    currency?: string
    minOrderQty?: number | null
    maxOrderQty?: number | null
    leadTimeDays?: number | null
    isPreferred?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutSuppliersInput
    supplier: SupplierCreateNestedOneWithoutProductsInput
  }

  export type ProductSupplierUncheckedCreateInput = {
    id?: string
    productId: string
    supplierId: string
    supplierSku?: string | null
    supplierName?: string | null
    unitCost: Decimal | DecimalJsLike | number | string
    currency?: string
    minOrderQty?: number | null
    maxOrderQty?: number | null
    leadTimeDays?: number | null
    isPreferred?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductSupplierUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    supplierSku?: NullableStringFieldUpdateOperationsInput | string | null
    supplierName?: NullableStringFieldUpdateOperationsInput | string | null
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    minOrderQty?: NullableIntFieldUpdateOperationsInput | number | null
    maxOrderQty?: NullableIntFieldUpdateOperationsInput | number | null
    leadTimeDays?: NullableIntFieldUpdateOperationsInput | number | null
    isPreferred?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutSuppliersNestedInput
    supplier?: SupplierUpdateOneRequiredWithoutProductsNestedInput
  }

  export type ProductSupplierUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    supplierId?: StringFieldUpdateOperationsInput | string
    supplierSku?: NullableStringFieldUpdateOperationsInput | string | null
    supplierName?: NullableStringFieldUpdateOperationsInput | string | null
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    minOrderQty?: NullableIntFieldUpdateOperationsInput | number | null
    maxOrderQty?: NullableIntFieldUpdateOperationsInput | number | null
    leadTimeDays?: NullableIntFieldUpdateOperationsInput | number | null
    isPreferred?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductSupplierCreateManyInput = {
    id?: string
    productId: string
    supplierId: string
    supplierSku?: string | null
    supplierName?: string | null
    unitCost: Decimal | DecimalJsLike | number | string
    currency?: string
    minOrderQty?: number | null
    maxOrderQty?: number | null
    leadTimeDays?: number | null
    isPreferred?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductSupplierUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    supplierSku?: NullableStringFieldUpdateOperationsInput | string | null
    supplierName?: NullableStringFieldUpdateOperationsInput | string | null
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    minOrderQty?: NullableIntFieldUpdateOperationsInput | number | null
    maxOrderQty?: NullableIntFieldUpdateOperationsInput | number | null
    leadTimeDays?: NullableIntFieldUpdateOperationsInput | number | null
    isPreferred?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductSupplierUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    supplierId?: StringFieldUpdateOperationsInput | string
    supplierSku?: NullableStringFieldUpdateOperationsInput | string | null
    supplierName?: NullableStringFieldUpdateOperationsInput | string | null
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    minOrderQty?: NullableIntFieldUpdateOperationsInput | number | null
    maxOrderQty?: NullableIntFieldUpdateOperationsInput | number | null
    leadTimeDays?: NullableIntFieldUpdateOperationsInput | number | null
    isPreferred?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplierContactCreateInput = {
    id?: string
    name: string
    title?: string | null
    email?: string | null
    phone?: string | null
    mobile?: string | null
    isPrimary?: boolean
    department?: string | null
    isActive?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    supplier: SupplierCreateNestedOneWithoutContactsInput
  }

  export type SupplierContactUncheckedCreateInput = {
    id?: string
    supplierId: string
    name: string
    title?: string | null
    email?: string | null
    phone?: string | null
    mobile?: string | null
    isPrimary?: boolean
    department?: string | null
    isActive?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SupplierContactUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    supplier?: SupplierUpdateOneRequiredWithoutContactsNestedInput
  }

  export type SupplierContactUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    supplierId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplierContactCreateManyInput = {
    id?: string
    supplierId: string
    name: string
    title?: string | null
    email?: string | null
    phone?: string | null
    mobile?: string | null
    isPrimary?: boolean
    department?: string | null
    isActive?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SupplierContactUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplierContactUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    supplierId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplierDocumentCreateInput = {
    id?: string
    name: string
    type: $Enums.DocumentType
    category?: string | null
    fileName: string
    fileSize?: number | null
    fileType?: string | null
    filePath: string
    uploadedBy: string
    uploadedAt?: Date | string
    expiresAt?: Date | string | null
    isActive?: boolean
    supplier: SupplierCreateNestedOneWithoutDocumentsInput
  }

  export type SupplierDocumentUncheckedCreateInput = {
    id?: string
    supplierId: string
    name: string
    type: $Enums.DocumentType
    category?: string | null
    fileName: string
    fileSize?: number | null
    fileType?: string | null
    filePath: string
    uploadedBy: string
    uploadedAt?: Date | string
    expiresAt?: Date | string | null
    isActive?: boolean
  }

  export type SupplierDocumentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    category?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    fileType?: NullableStringFieldUpdateOperationsInput | string | null
    filePath?: StringFieldUpdateOperationsInput | string
    uploadedBy?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    supplier?: SupplierUpdateOneRequiredWithoutDocumentsNestedInput
  }

  export type SupplierDocumentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    supplierId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    category?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    fileType?: NullableStringFieldUpdateOperationsInput | string | null
    filePath?: StringFieldUpdateOperationsInput | string
    uploadedBy?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type SupplierDocumentCreateManyInput = {
    id?: string
    supplierId: string
    name: string
    type: $Enums.DocumentType
    category?: string | null
    fileName: string
    fileSize?: number | null
    fileType?: string | null
    filePath: string
    uploadedBy: string
    uploadedAt?: Date | string
    expiresAt?: Date | string | null
    isActive?: boolean
  }

  export type SupplierDocumentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    category?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    fileType?: NullableStringFieldUpdateOperationsInput | string | null
    filePath?: StringFieldUpdateOperationsInput | string
    uploadedBy?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type SupplierDocumentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    supplierId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    category?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    fileType?: NullableStringFieldUpdateOperationsInput | string | null
    filePath?: StringFieldUpdateOperationsInput | string
    uploadedBy?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PurchaseOrderCreateInput = {
    id?: string
    orderNumber: string
    subtotal?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingCost?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount?: Decimal | DecimalJsLike | number | string
    currency?: string
    status?: $Enums.PurchaseOrderStatus
    orderDate?: Date | string
    expectedDate?: Date | string | null
    deliveryDate?: Date | string | null
    paymentTerms?: string | null
    shippingTerms?: string | null
    trackingNumber?: string | null
    carrier?: string | null
    approvedBy?: string | null
    approvedAt?: Date | string | null
    notes?: string | null
    internalNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    supplier: SupplierCreateNestedOneWithoutPurchaseOrdersInput
    warehouse?: WarehouseCreateNestedOneWithoutPurchaseOrdersInput
    items?: PurchaseOrderItemCreateNestedManyWithoutPurchaseOrderInput
    receipts?: GoodsReceiptCreateNestedManyWithoutPurchaseOrderInput
    invoices?: SupplierInvoiceCreateNestedManyWithoutPurchaseOrderInput
  }

  export type PurchaseOrderUncheckedCreateInput = {
    id?: string
    orderNumber: string
    supplierId: string
    warehouseId?: string | null
    subtotal?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingCost?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount?: Decimal | DecimalJsLike | number | string
    currency?: string
    status?: $Enums.PurchaseOrderStatus
    orderDate?: Date | string
    expectedDate?: Date | string | null
    deliveryDate?: Date | string | null
    paymentTerms?: string | null
    shippingTerms?: string | null
    trackingNumber?: string | null
    carrier?: string | null
    approvedBy?: string | null
    approvedAt?: Date | string | null
    notes?: string | null
    internalNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    items?: PurchaseOrderItemUncheckedCreateNestedManyWithoutPurchaseOrderInput
    receipts?: GoodsReceiptUncheckedCreateNestedManyWithoutPurchaseOrderInput
    invoices?: SupplierInvoiceUncheckedCreateNestedManyWithoutPurchaseOrderInput
  }

  export type PurchaseOrderUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPurchaseOrderStatusFieldUpdateOperationsInput | $Enums.PurchaseOrderStatus
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expectedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    shippingTerms?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    carrier?: NullableStringFieldUpdateOperationsInput | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    supplier?: SupplierUpdateOneRequiredWithoutPurchaseOrdersNestedInput
    warehouse?: WarehouseUpdateOneWithoutPurchaseOrdersNestedInput
    items?: PurchaseOrderItemUpdateManyWithoutPurchaseOrderNestedInput
    receipts?: GoodsReceiptUpdateManyWithoutPurchaseOrderNestedInput
    invoices?: SupplierInvoiceUpdateManyWithoutPurchaseOrderNestedInput
  }

  export type PurchaseOrderUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    supplierId?: StringFieldUpdateOperationsInput | string
    warehouseId?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPurchaseOrderStatusFieldUpdateOperationsInput | $Enums.PurchaseOrderStatus
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expectedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    shippingTerms?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    carrier?: NullableStringFieldUpdateOperationsInput | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    items?: PurchaseOrderItemUncheckedUpdateManyWithoutPurchaseOrderNestedInput
    receipts?: GoodsReceiptUncheckedUpdateManyWithoutPurchaseOrderNestedInput
    invoices?: SupplierInvoiceUncheckedUpdateManyWithoutPurchaseOrderNestedInput
  }

  export type PurchaseOrderCreateManyInput = {
    id?: string
    orderNumber: string
    supplierId: string
    warehouseId?: string | null
    subtotal?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingCost?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount?: Decimal | DecimalJsLike | number | string
    currency?: string
    status?: $Enums.PurchaseOrderStatus
    orderDate?: Date | string
    expectedDate?: Date | string | null
    deliveryDate?: Date | string | null
    paymentTerms?: string | null
    shippingTerms?: string | null
    trackingNumber?: string | null
    carrier?: string | null
    approvedBy?: string | null
    approvedAt?: Date | string | null
    notes?: string | null
    internalNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
  }

  export type PurchaseOrderUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPurchaseOrderStatusFieldUpdateOperationsInput | $Enums.PurchaseOrderStatus
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expectedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    shippingTerms?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    carrier?: NullableStringFieldUpdateOperationsInput | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type PurchaseOrderUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    supplierId?: StringFieldUpdateOperationsInput | string
    warehouseId?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPurchaseOrderStatusFieldUpdateOperationsInput | $Enums.PurchaseOrderStatus
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expectedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    shippingTerms?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    carrier?: NullableStringFieldUpdateOperationsInput | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type PurchaseOrderItemCreateInput = {
    id?: string
    orderedQty: number
    receivedQty?: number
    remainingQty: number
    unitCost: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    productName: string
    productSku: string
    supplierSku?: string | null
    expectedDate?: Date | string | null
    status?: $Enums.PurchaseItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    purchaseOrder: PurchaseOrderCreateNestedOneWithoutItemsInput
    product: ProductCreateNestedOneWithoutPurchaseItemsInput
    variant?: ProductVariantCreateNestedOneWithoutPurchaseItemsInput
  }

  export type PurchaseOrderItemUncheckedCreateInput = {
    id?: string
    purchaseOrderId: string
    productId: string
    variantId?: string | null
    orderedQty: number
    receivedQty?: number
    remainingQty: number
    unitCost: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    productName: string
    productSku: string
    supplierSku?: string | null
    expectedDate?: Date | string | null
    status?: $Enums.PurchaseItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PurchaseOrderItemUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    remainingQty?: IntFieldUpdateOperationsInput | number
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    supplierSku?: NullableStringFieldUpdateOperationsInput | string | null
    expectedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPurchaseItemStatusFieldUpdateOperationsInput | $Enums.PurchaseItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    purchaseOrder?: PurchaseOrderUpdateOneRequiredWithoutItemsNestedInput
    product?: ProductUpdateOneRequiredWithoutPurchaseItemsNestedInput
    variant?: ProductVariantUpdateOneWithoutPurchaseItemsNestedInput
  }

  export type PurchaseOrderItemUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    purchaseOrderId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    orderedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    remainingQty?: IntFieldUpdateOperationsInput | number
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    supplierSku?: NullableStringFieldUpdateOperationsInput | string | null
    expectedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPurchaseItemStatusFieldUpdateOperationsInput | $Enums.PurchaseItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PurchaseOrderItemCreateManyInput = {
    id?: string
    purchaseOrderId: string
    productId: string
    variantId?: string | null
    orderedQty: number
    receivedQty?: number
    remainingQty: number
    unitCost: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    productName: string
    productSku: string
    supplierSku?: string | null
    expectedDate?: Date | string | null
    status?: $Enums.PurchaseItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PurchaseOrderItemUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    remainingQty?: IntFieldUpdateOperationsInput | number
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    supplierSku?: NullableStringFieldUpdateOperationsInput | string | null
    expectedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPurchaseItemStatusFieldUpdateOperationsInput | $Enums.PurchaseItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PurchaseOrderItemUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    purchaseOrderId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    orderedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    remainingQty?: IntFieldUpdateOperationsInput | number
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    supplierSku?: NullableStringFieldUpdateOperationsInput | string | null
    expectedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPurchaseItemStatusFieldUpdateOperationsInput | $Enums.PurchaseItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GoodsReceiptCreateInput = {
    id?: string
    receiptNumber: string
    receivedDate?: Date | string
    qcStatus?: $Enums.QualityStatus
    qcNotes?: string | null
    qcBy?: string | null
    qcDate?: Date | string | null
    status?: $Enums.ReceiptStatus
    notes?: string | null
    receivedBy: string
    createdAt?: Date | string
    updatedAt?: Date | string
    purchaseOrder: PurchaseOrderCreateNestedOneWithoutReceiptsInput
    warehouse: WarehouseCreateNestedOneWithoutGoodsReceiptsInput
    items?: GoodsReceiptItemCreateNestedManyWithoutGoodsReceiptInput
  }

  export type GoodsReceiptUncheckedCreateInput = {
    id?: string
    purchaseOrderId: string
    warehouseId: string
    receiptNumber: string
    receivedDate?: Date | string
    qcStatus?: $Enums.QualityStatus
    qcNotes?: string | null
    qcBy?: string | null
    qcDate?: Date | string | null
    status?: $Enums.ReceiptStatus
    notes?: string | null
    receivedBy: string
    createdAt?: Date | string
    updatedAt?: Date | string
    items?: GoodsReceiptItemUncheckedCreateNestedManyWithoutGoodsReceiptInput
  }

  export type GoodsReceiptUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    receiptNumber?: StringFieldUpdateOperationsInput | string
    receivedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    qcNotes?: NullableStringFieldUpdateOperationsInput | string | null
    qcBy?: NullableStringFieldUpdateOperationsInput | string | null
    qcDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumReceiptStatusFieldUpdateOperationsInput | $Enums.ReceiptStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    receivedBy?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    purchaseOrder?: PurchaseOrderUpdateOneRequiredWithoutReceiptsNestedInput
    warehouse?: WarehouseUpdateOneRequiredWithoutGoodsReceiptsNestedInput
    items?: GoodsReceiptItemUpdateManyWithoutGoodsReceiptNestedInput
  }

  export type GoodsReceiptUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    purchaseOrderId?: StringFieldUpdateOperationsInput | string
    warehouseId?: StringFieldUpdateOperationsInput | string
    receiptNumber?: StringFieldUpdateOperationsInput | string
    receivedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    qcNotes?: NullableStringFieldUpdateOperationsInput | string | null
    qcBy?: NullableStringFieldUpdateOperationsInput | string | null
    qcDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumReceiptStatusFieldUpdateOperationsInput | $Enums.ReceiptStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    receivedBy?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: GoodsReceiptItemUncheckedUpdateManyWithoutGoodsReceiptNestedInput
  }

  export type GoodsReceiptCreateManyInput = {
    id?: string
    purchaseOrderId: string
    warehouseId: string
    receiptNumber: string
    receivedDate?: Date | string
    qcStatus?: $Enums.QualityStatus
    qcNotes?: string | null
    qcBy?: string | null
    qcDate?: Date | string | null
    status?: $Enums.ReceiptStatus
    notes?: string | null
    receivedBy: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type GoodsReceiptUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    receiptNumber?: StringFieldUpdateOperationsInput | string
    receivedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    qcNotes?: NullableStringFieldUpdateOperationsInput | string | null
    qcBy?: NullableStringFieldUpdateOperationsInput | string | null
    qcDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumReceiptStatusFieldUpdateOperationsInput | $Enums.ReceiptStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    receivedBy?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GoodsReceiptUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    purchaseOrderId?: StringFieldUpdateOperationsInput | string
    warehouseId?: StringFieldUpdateOperationsInput | string
    receiptNumber?: StringFieldUpdateOperationsInput | string
    receivedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    qcNotes?: NullableStringFieldUpdateOperationsInput | string | null
    qcBy?: NullableStringFieldUpdateOperationsInput | string | null
    qcDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumReceiptStatusFieldUpdateOperationsInput | $Enums.ReceiptStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    receivedBy?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GoodsReceiptItemCreateInput = {
    id?: string
    expectedQty: number
    receivedQty: number
    acceptedQty: number
    rejectedQty: number
    qcStatus?: $Enums.QualityStatus
    qcNotes?: string | null
    rejectionReason?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    expiryDate?: Date | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    receivedLocation?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    goodsReceipt: GoodsReceiptCreateNestedOneWithoutItemsInput
    product: ProductCreateNestedOneWithoutGoodsReceiptItemsInput
    variant?: ProductVariantCreateNestedOneWithoutGoodsReceiptItemsInput
  }

  export type GoodsReceiptItemUncheckedCreateInput = {
    id?: string
    goodsReceiptId: string
    productId: string
    variantId?: string | null
    expectedQty: number
    receivedQty: number
    acceptedQty: number
    rejectedQty: number
    qcStatus?: $Enums.QualityStatus
    qcNotes?: string | null
    rejectionReason?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    expiryDate?: Date | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    receivedLocation?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type GoodsReceiptItemUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    expectedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    acceptedQty?: IntFieldUpdateOperationsInput | number
    rejectedQty?: IntFieldUpdateOperationsInput | number
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    qcNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    receivedLocation?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    goodsReceipt?: GoodsReceiptUpdateOneRequiredWithoutItemsNestedInput
    product?: ProductUpdateOneRequiredWithoutGoodsReceiptItemsNestedInput
    variant?: ProductVariantUpdateOneWithoutGoodsReceiptItemsNestedInput
  }

  export type GoodsReceiptItemUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    goodsReceiptId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    expectedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    acceptedQty?: IntFieldUpdateOperationsInput | number
    rejectedQty?: IntFieldUpdateOperationsInput | number
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    qcNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    receivedLocation?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GoodsReceiptItemCreateManyInput = {
    id?: string
    goodsReceiptId: string
    productId: string
    variantId?: string | null
    expectedQty: number
    receivedQty: number
    acceptedQty: number
    rejectedQty: number
    qcStatus?: $Enums.QualityStatus
    qcNotes?: string | null
    rejectionReason?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    expiryDate?: Date | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    receivedLocation?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type GoodsReceiptItemUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    expectedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    acceptedQty?: IntFieldUpdateOperationsInput | number
    rejectedQty?: IntFieldUpdateOperationsInput | number
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    qcNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    receivedLocation?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GoodsReceiptItemUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    goodsReceiptId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    expectedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    acceptedQty?: IntFieldUpdateOperationsInput | number
    rejectedQty?: IntFieldUpdateOperationsInput | number
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    qcNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    receivedLocation?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomerCreateInput = {
    id?: string
    customerNumber: string
    type?: $Enums.CustomerType
    firstName?: string | null
    lastName?: string | null
    companyName?: string | null
    taxId?: string | null
    email?: string | null
    phone?: string | null
    mobile?: string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    creditLimit?: Decimal | DecimalJsLike | number | string | null
    paymentTerms?: string | null
    currency?: string
    preferredLanguage?: string | null
    timezone?: string | null
    allowMarketing?: boolean
    source?: string | null
    status?: $Enums.CustomerStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    orders?: OrderCreateNestedManyWithoutCustomerInput
    invoices?: CustomerInvoiceCreateNestedManyWithoutCustomerInput
    contacts?: CustomerContactCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUncheckedCreateInput = {
    id?: string
    customerNumber: string
    type?: $Enums.CustomerType
    firstName?: string | null
    lastName?: string | null
    companyName?: string | null
    taxId?: string | null
    email?: string | null
    phone?: string | null
    mobile?: string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    creditLimit?: Decimal | DecimalJsLike | number | string | null
    paymentTerms?: string | null
    currency?: string
    preferredLanguage?: string | null
    timezone?: string | null
    allowMarketing?: boolean
    source?: string | null
    status?: $Enums.CustomerStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    orders?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    invoices?: CustomerInvoiceUncheckedCreateNestedManyWithoutCustomerInput
    contacts?: CustomerContactUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    customerNumber?: StringFieldUpdateOperationsInput | string
    type?: EnumCustomerTypeFieldUpdateOperationsInput | $Enums.CustomerType
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    creditLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    allowMarketing?: BoolFieldUpdateOperationsInput | boolean
    source?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCustomerStatusFieldUpdateOperationsInput | $Enums.CustomerStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    orders?: OrderUpdateManyWithoutCustomerNestedInput
    invoices?: CustomerInvoiceUpdateManyWithoutCustomerNestedInput
    contacts?: CustomerContactUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    customerNumber?: StringFieldUpdateOperationsInput | string
    type?: EnumCustomerTypeFieldUpdateOperationsInput | $Enums.CustomerType
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    creditLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    allowMarketing?: BoolFieldUpdateOperationsInput | boolean
    source?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCustomerStatusFieldUpdateOperationsInput | $Enums.CustomerStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    orders?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    invoices?: CustomerInvoiceUncheckedUpdateManyWithoutCustomerNestedInput
    contacts?: CustomerContactUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerCreateManyInput = {
    id?: string
    customerNumber: string
    type?: $Enums.CustomerType
    firstName?: string | null
    lastName?: string | null
    companyName?: string | null
    taxId?: string | null
    email?: string | null
    phone?: string | null
    mobile?: string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    creditLimit?: Decimal | DecimalJsLike | number | string | null
    paymentTerms?: string | null
    currency?: string
    preferredLanguage?: string | null
    timezone?: string | null
    allowMarketing?: boolean
    source?: string | null
    status?: $Enums.CustomerStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
  }

  export type CustomerUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    customerNumber?: StringFieldUpdateOperationsInput | string
    type?: EnumCustomerTypeFieldUpdateOperationsInput | $Enums.CustomerType
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    creditLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    allowMarketing?: BoolFieldUpdateOperationsInput | boolean
    source?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCustomerStatusFieldUpdateOperationsInput | $Enums.CustomerStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type CustomerUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    customerNumber?: StringFieldUpdateOperationsInput | string
    type?: EnumCustomerTypeFieldUpdateOperationsInput | $Enums.CustomerType
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    creditLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    allowMarketing?: BoolFieldUpdateOperationsInput | boolean
    source?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCustomerStatusFieldUpdateOperationsInput | $Enums.CustomerStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type CustomerContactCreateInput = {
    id?: string
    name: string
    title?: string | null
    email?: string | null
    phone?: string | null
    mobile?: string | null
    isPrimary?: boolean
    department?: string | null
    isActive?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    customer: CustomerCreateNestedOneWithoutContactsInput
  }

  export type CustomerContactUncheckedCreateInput = {
    id?: string
    customerId: string
    name: string
    title?: string | null
    email?: string | null
    phone?: string | null
    mobile?: string | null
    isPrimary?: boolean
    department?: string | null
    isActive?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CustomerContactUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    customer?: CustomerUpdateOneRequiredWithoutContactsNestedInput
  }

  export type CustomerContactUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomerContactCreateManyInput = {
    id?: string
    customerId: string
    name: string
    title?: string | null
    email?: string | null
    phone?: string | null
    mobile?: string | null
    isPrimary?: boolean
    department?: string | null
    isActive?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CustomerContactUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomerContactUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderCreateInput = {
    id?: string
    orderNumber: string
    type?: $Enums.OrderType
    channel?: $Enums.OrderChannel
    subtotal?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingCost?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount?: Decimal | DecimalJsLike | number | string
    currency?: string
    status?: $Enums.OrderStatus
    fulfillmentStatus?: $Enums.FulfillmentStatus
    paymentStatus?: $Enums.PaymentStatus
    orderDate?: Date | string
    requiredDate?: Date | string | null
    promisedDate?: Date | string | null
    shippedDate?: Date | string | null
    deliveredDate?: Date | string | null
    shippingMethod?: string | null
    trackingNumber?: string | null
    carrier?: string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    priority?: $Enums.OrderPriority
    rushOrder?: boolean
    notes?: string | null
    internalNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    customer: CustomerCreateNestedOneWithoutOrdersInput
    warehouse: WarehouseCreateNestedOneWithoutOrdersInput
    items?: OrderItemCreateNestedManyWithoutOrderInput
    shipments?: ShipmentCreateNestedManyWithoutOrderInput
    invoices?: CustomerInvoiceCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateInput = {
    id?: string
    orderNumber: string
    customerId: string
    warehouseId: string
    type?: $Enums.OrderType
    channel?: $Enums.OrderChannel
    subtotal?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingCost?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount?: Decimal | DecimalJsLike | number | string
    currency?: string
    status?: $Enums.OrderStatus
    fulfillmentStatus?: $Enums.FulfillmentStatus
    paymentStatus?: $Enums.PaymentStatus
    orderDate?: Date | string
    requiredDate?: Date | string | null
    promisedDate?: Date | string | null
    shippedDate?: Date | string | null
    deliveredDate?: Date | string | null
    shippingMethod?: string | null
    trackingNumber?: string | null
    carrier?: string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    priority?: $Enums.OrderPriority
    rushOrder?: boolean
    notes?: string | null
    internalNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    items?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutOrderInput
    invoices?: CustomerInvoiceUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    type?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    channel?: EnumOrderChannelFieldUpdateOperationsInput | $Enums.OrderChannel
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    fulfillmentStatus?: EnumFulfillmentStatusFieldUpdateOperationsInput | $Enums.FulfillmentStatus
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    requiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    promisedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingMethod?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    carrier?: NullableStringFieldUpdateOperationsInput | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    priority?: EnumOrderPriorityFieldUpdateOperationsInput | $Enums.OrderPriority
    rushOrder?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    customer?: CustomerUpdateOneRequiredWithoutOrdersNestedInput
    warehouse?: WarehouseUpdateOneRequiredWithoutOrdersNestedInput
    items?: OrderItemUpdateManyWithoutOrderNestedInput
    shipments?: ShipmentUpdateManyWithoutOrderNestedInput
    invoices?: CustomerInvoiceUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    warehouseId?: StringFieldUpdateOperationsInput | string
    type?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    channel?: EnumOrderChannelFieldUpdateOperationsInput | $Enums.OrderChannel
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    fulfillmentStatus?: EnumFulfillmentStatusFieldUpdateOperationsInput | $Enums.FulfillmentStatus
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    requiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    promisedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingMethod?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    carrier?: NullableStringFieldUpdateOperationsInput | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    priority?: EnumOrderPriorityFieldUpdateOperationsInput | $Enums.OrderPriority
    rushOrder?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    items?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutOrderNestedInput
    invoices?: CustomerInvoiceUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderCreateManyInput = {
    id?: string
    orderNumber: string
    customerId: string
    warehouseId: string
    type?: $Enums.OrderType
    channel?: $Enums.OrderChannel
    subtotal?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingCost?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount?: Decimal | DecimalJsLike | number | string
    currency?: string
    status?: $Enums.OrderStatus
    fulfillmentStatus?: $Enums.FulfillmentStatus
    paymentStatus?: $Enums.PaymentStatus
    orderDate?: Date | string
    requiredDate?: Date | string | null
    promisedDate?: Date | string | null
    shippedDate?: Date | string | null
    deliveredDate?: Date | string | null
    shippingMethod?: string | null
    trackingNumber?: string | null
    carrier?: string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    priority?: $Enums.OrderPriority
    rushOrder?: boolean
    notes?: string | null
    internalNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
  }

  export type OrderUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    type?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    channel?: EnumOrderChannelFieldUpdateOperationsInput | $Enums.OrderChannel
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    fulfillmentStatus?: EnumFulfillmentStatusFieldUpdateOperationsInput | $Enums.FulfillmentStatus
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    requiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    promisedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingMethod?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    carrier?: NullableStringFieldUpdateOperationsInput | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    priority?: EnumOrderPriorityFieldUpdateOperationsInput | $Enums.OrderPriority
    rushOrder?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type OrderUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    warehouseId?: StringFieldUpdateOperationsInput | string
    type?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    channel?: EnumOrderChannelFieldUpdateOperationsInput | $Enums.OrderChannel
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    fulfillmentStatus?: EnumFulfillmentStatusFieldUpdateOperationsInput | $Enums.FulfillmentStatus
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    requiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    promisedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingMethod?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    carrier?: NullableStringFieldUpdateOperationsInput | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    priority?: EnumOrderPriorityFieldUpdateOperationsInput | $Enums.OrderPriority
    rushOrder?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type OrderItemCreateInput = {
    id?: string
    orderedQty: number
    shippedQty?: number
    remainingQty: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    productName: string
    productSku: string
    status?: $Enums.OrderItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    order: OrderCreateNestedOneWithoutItemsInput
    product: ProductCreateNestedOneWithoutOrderItemsInput
    variant?: ProductVariantCreateNestedOneWithoutOrderItemsInput
  }

  export type OrderItemUncheckedCreateInput = {
    id?: string
    orderId: string
    productId: string
    variantId?: string | null
    orderedQty: number
    shippedQty?: number
    remainingQty: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    productName: string
    productSku: string
    status?: $Enums.OrderItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderItemUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderedQty?: IntFieldUpdateOperationsInput | number
    shippedQty?: IntFieldUpdateOperationsInput | number
    remainingQty?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderItemStatusFieldUpdateOperationsInput | $Enums.OrderItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneRequiredWithoutItemsNestedInput
    product?: ProductUpdateOneRequiredWithoutOrderItemsNestedInput
    variant?: ProductVariantUpdateOneWithoutOrderItemsNestedInput
  }

  export type OrderItemUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    orderedQty?: IntFieldUpdateOperationsInput | number
    shippedQty?: IntFieldUpdateOperationsInput | number
    remainingQty?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderItemStatusFieldUpdateOperationsInput | $Enums.OrderItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderItemCreateManyInput = {
    id?: string
    orderId: string
    productId: string
    variantId?: string | null
    orderedQty: number
    shippedQty?: number
    remainingQty: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    productName: string
    productSku: string
    status?: $Enums.OrderItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderItemUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderedQty?: IntFieldUpdateOperationsInput | number
    shippedQty?: IntFieldUpdateOperationsInput | number
    remainingQty?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderItemStatusFieldUpdateOperationsInput | $Enums.OrderItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderItemUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    orderedQty?: IntFieldUpdateOperationsInput | number
    shippedQty?: IntFieldUpdateOperationsInput | number
    remainingQty?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderItemStatusFieldUpdateOperationsInput | $Enums.OrderItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShipmentCreateInput = {
    id?: string
    shipmentNumber: string
    carrier: string
    service?: string | null
    trackingNumber?: string | null
    fromAddress: JsonNullValueInput | InputJsonValue
    toAddress: JsonNullValueInput | InputJsonValue
    packageCount?: number
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    shippingCost?: Decimal | DecimalJsLike | number | string | null
    insuranceValue?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.ShipmentStatus
    shipDate?: Date | string | null
    estimatedDelivery?: Date | string | null
    actualDelivery?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    order?: OrderCreateNestedOneWithoutShipmentsInput
    warehouse: WarehouseCreateNestedOneWithoutShipmentsInput
    packages?: ShipmentPackageCreateNestedManyWithoutShipmentInput
    tracking?: ShipmentTrackingCreateNestedManyWithoutShipmentInput
  }

  export type ShipmentUncheckedCreateInput = {
    id?: string
    shipmentNumber: string
    orderId?: string | null
    warehouseId: string
    carrier: string
    service?: string | null
    trackingNumber?: string | null
    fromAddress: JsonNullValueInput | InputJsonValue
    toAddress: JsonNullValueInput | InputJsonValue
    packageCount?: number
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    shippingCost?: Decimal | DecimalJsLike | number | string | null
    insuranceValue?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.ShipmentStatus
    shipDate?: Date | string | null
    estimatedDelivery?: Date | string | null
    actualDelivery?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    packages?: ShipmentPackageUncheckedCreateNestedManyWithoutShipmentInput
    tracking?: ShipmentTrackingUncheckedCreateNestedManyWithoutShipmentInput
  }

  export type ShipmentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    shipmentNumber?: StringFieldUpdateOperationsInput | string
    carrier?: StringFieldUpdateOperationsInput | string
    service?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    fromAddress?: JsonNullValueInput | InputJsonValue
    toAddress?: JsonNullValueInput | InputJsonValue
    packageCount?: IntFieldUpdateOperationsInput | number
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    shippingCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insuranceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumShipmentStatusFieldUpdateOperationsInput | $Enums.ShipmentStatus
    shipDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    order?: OrderUpdateOneWithoutShipmentsNestedInput
    warehouse?: WarehouseUpdateOneRequiredWithoutShipmentsNestedInput
    packages?: ShipmentPackageUpdateManyWithoutShipmentNestedInput
    tracking?: ShipmentTrackingUpdateManyWithoutShipmentNestedInput
  }

  export type ShipmentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    shipmentNumber?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    warehouseId?: StringFieldUpdateOperationsInput | string
    carrier?: StringFieldUpdateOperationsInput | string
    service?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    fromAddress?: JsonNullValueInput | InputJsonValue
    toAddress?: JsonNullValueInput | InputJsonValue
    packageCount?: IntFieldUpdateOperationsInput | number
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    shippingCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insuranceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumShipmentStatusFieldUpdateOperationsInput | $Enums.ShipmentStatus
    shipDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    packages?: ShipmentPackageUncheckedUpdateManyWithoutShipmentNestedInput
    tracking?: ShipmentTrackingUncheckedUpdateManyWithoutShipmentNestedInput
  }

  export type ShipmentCreateManyInput = {
    id?: string
    shipmentNumber: string
    orderId?: string | null
    warehouseId: string
    carrier: string
    service?: string | null
    trackingNumber?: string | null
    fromAddress: JsonNullValueInput | InputJsonValue
    toAddress: JsonNullValueInput | InputJsonValue
    packageCount?: number
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    shippingCost?: Decimal | DecimalJsLike | number | string | null
    insuranceValue?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.ShipmentStatus
    shipDate?: Date | string | null
    estimatedDelivery?: Date | string | null
    actualDelivery?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
  }

  export type ShipmentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    shipmentNumber?: StringFieldUpdateOperationsInput | string
    carrier?: StringFieldUpdateOperationsInput | string
    service?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    fromAddress?: JsonNullValueInput | InputJsonValue
    toAddress?: JsonNullValueInput | InputJsonValue
    packageCount?: IntFieldUpdateOperationsInput | number
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    shippingCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insuranceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumShipmentStatusFieldUpdateOperationsInput | $Enums.ShipmentStatus
    shipDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type ShipmentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    shipmentNumber?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    warehouseId?: StringFieldUpdateOperationsInput | string
    carrier?: StringFieldUpdateOperationsInput | string
    service?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    fromAddress?: JsonNullValueInput | InputJsonValue
    toAddress?: JsonNullValueInput | InputJsonValue
    packageCount?: IntFieldUpdateOperationsInput | number
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    shippingCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insuranceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumShipmentStatusFieldUpdateOperationsInput | $Enums.ShipmentStatus
    shipDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type ShipmentPackageCreateInput = {
    id?: string
    packageNumber: string
    trackingNumber?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    contents?: NullableJsonNullValueInput | InputJsonValue
    status?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    shipment: ShipmentCreateNestedOneWithoutPackagesInput
  }

  export type ShipmentPackageUncheckedCreateInput = {
    id?: string
    shipmentId: string
    packageNumber: string
    trackingNumber?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    contents?: NullableJsonNullValueInput | InputJsonValue
    status?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ShipmentPackageUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    packageNumber?: StringFieldUpdateOperationsInput | string
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    contents?: NullableJsonNullValueInput | InputJsonValue
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shipment?: ShipmentUpdateOneRequiredWithoutPackagesNestedInput
  }

  export type ShipmentPackageUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    shipmentId?: StringFieldUpdateOperationsInput | string
    packageNumber?: StringFieldUpdateOperationsInput | string
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    contents?: NullableJsonNullValueInput | InputJsonValue
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShipmentPackageCreateManyInput = {
    id?: string
    shipmentId: string
    packageNumber: string
    trackingNumber?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    contents?: NullableJsonNullValueInput | InputJsonValue
    status?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ShipmentPackageUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    packageNumber?: StringFieldUpdateOperationsInput | string
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    contents?: NullableJsonNullValueInput | InputJsonValue
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShipmentPackageUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    shipmentId?: StringFieldUpdateOperationsInput | string
    packageNumber?: StringFieldUpdateOperationsInput | string
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    contents?: NullableJsonNullValueInput | InputJsonValue
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShipmentTrackingCreateInput = {
    id?: string
    status: string
    description?: string | null
    location?: string | null
    eventDate: Date | string
    rawData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    shipment: ShipmentCreateNestedOneWithoutTrackingInput
  }

  export type ShipmentTrackingUncheckedCreateInput = {
    id?: string
    shipmentId: string
    status: string
    description?: string | null
    location?: string | null
    eventDate: Date | string
    rawData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type ShipmentTrackingUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    eventDate?: DateTimeFieldUpdateOperationsInput | Date | string
    rawData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shipment?: ShipmentUpdateOneRequiredWithoutTrackingNestedInput
  }

  export type ShipmentTrackingUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    shipmentId?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    eventDate?: DateTimeFieldUpdateOperationsInput | Date | string
    rawData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShipmentTrackingCreateManyInput = {
    id?: string
    shipmentId: string
    status: string
    description?: string | null
    location?: string | null
    eventDate: Date | string
    rawData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type ShipmentTrackingUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    eventDate?: DateTimeFieldUpdateOperationsInput | Date | string
    rawData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShipmentTrackingUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    shipmentId?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    eventDate?: DateTimeFieldUpdateOperationsInput | Date | string
    rawData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StockTransferCreateInput = {
    id?: string
    transferNumber: string
    status?: $Enums.TransferStatus
    requestedDate?: Date | string
    shippedDate?: Date | string | null
    receivedDate?: Date | string | null
    approvedBy?: string | null
    approvedAt?: Date | string | null
    reason?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    fromWarehouse: WarehouseCreateNestedOneWithoutTransfersInput
    toWarehouse: WarehouseCreateNestedOneWithoutReceivedTransfersInput
    items?: StockTransferItemCreateNestedManyWithoutTransferInput
  }

  export type StockTransferUncheckedCreateInput = {
    id?: string
    transferNumber: string
    fromWarehouseId: string
    toWarehouseId: string
    status?: $Enums.TransferStatus
    requestedDate?: Date | string
    shippedDate?: Date | string | null
    receivedDate?: Date | string | null
    approvedBy?: string | null
    approvedAt?: Date | string | null
    reason?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    items?: StockTransferItemUncheckedCreateNestedManyWithoutTransferInput
  }

  export type StockTransferUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    transferNumber?: StringFieldUpdateOperationsInput | string
    status?: EnumTransferStatusFieldUpdateOperationsInput | $Enums.TransferStatus
    requestedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    shippedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    receivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    fromWarehouse?: WarehouseUpdateOneRequiredWithoutTransfersNestedInput
    toWarehouse?: WarehouseUpdateOneRequiredWithoutReceivedTransfersNestedInput
    items?: StockTransferItemUpdateManyWithoutTransferNestedInput
  }

  export type StockTransferUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    transferNumber?: StringFieldUpdateOperationsInput | string
    fromWarehouseId?: StringFieldUpdateOperationsInput | string
    toWarehouseId?: StringFieldUpdateOperationsInput | string
    status?: EnumTransferStatusFieldUpdateOperationsInput | $Enums.TransferStatus
    requestedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    shippedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    receivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    items?: StockTransferItemUncheckedUpdateManyWithoutTransferNestedInput
  }

  export type StockTransferCreateManyInput = {
    id?: string
    transferNumber: string
    fromWarehouseId: string
    toWarehouseId: string
    status?: $Enums.TransferStatus
    requestedDate?: Date | string
    shippedDate?: Date | string | null
    receivedDate?: Date | string | null
    approvedBy?: string | null
    approvedAt?: Date | string | null
    reason?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
  }

  export type StockTransferUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    transferNumber?: StringFieldUpdateOperationsInput | string
    status?: EnumTransferStatusFieldUpdateOperationsInput | $Enums.TransferStatus
    requestedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    shippedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    receivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type StockTransferUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    transferNumber?: StringFieldUpdateOperationsInput | string
    fromWarehouseId?: StringFieldUpdateOperationsInput | string
    toWarehouseId?: StringFieldUpdateOperationsInput | string
    status?: EnumTransferStatusFieldUpdateOperationsInput | $Enums.TransferStatus
    requestedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    shippedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    receivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type StockTransferItemCreateInput = {
    id?: string
    requestedQty: number
    shippedQty?: number
    receivedQty?: number
    productName: string
    productSku: string
    lotNumber?: string | null
    batchNumber?: string | null
    status?: $Enums.TransferItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    transfer: StockTransferCreateNestedOneWithoutItemsInput
    product: ProductCreateNestedOneWithoutTransferItemsInput
    variant?: ProductVariantCreateNestedOneWithoutTransferItemsInput
  }

  export type StockTransferItemUncheckedCreateInput = {
    id?: string
    transferId: string
    productId: string
    variantId?: string | null
    requestedQty: number
    shippedQty?: number
    receivedQty?: number
    productName: string
    productSku: string
    lotNumber?: string | null
    batchNumber?: string | null
    status?: $Enums.TransferItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type StockTransferItemUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    requestedQty?: IntFieldUpdateOperationsInput | number
    shippedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTransferItemStatusFieldUpdateOperationsInput | $Enums.TransferItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    transfer?: StockTransferUpdateOneRequiredWithoutItemsNestedInput
    product?: ProductUpdateOneRequiredWithoutTransferItemsNestedInput
    variant?: ProductVariantUpdateOneWithoutTransferItemsNestedInput
  }

  export type StockTransferItemUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    transferId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    requestedQty?: IntFieldUpdateOperationsInput | number
    shippedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTransferItemStatusFieldUpdateOperationsInput | $Enums.TransferItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StockTransferItemCreateManyInput = {
    id?: string
    transferId: string
    productId: string
    variantId?: string | null
    requestedQty: number
    shippedQty?: number
    receivedQty?: number
    productName: string
    productSku: string
    lotNumber?: string | null
    batchNumber?: string | null
    status?: $Enums.TransferItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type StockTransferItemUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    requestedQty?: IntFieldUpdateOperationsInput | number
    shippedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTransferItemStatusFieldUpdateOperationsInput | $Enums.TransferItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StockTransferItemUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    transferId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    requestedQty?: IntFieldUpdateOperationsInput | number
    shippedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTransferItemStatusFieldUpdateOperationsInput | $Enums.TransferItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StockReservationCreateInput = {
    id?: string
    reservationType: $Enums.ReservationType
    referenceType: string
    referenceId: string
    quantity: number
    status?: $Enums.ReservationStatus
    reservedAt?: Date | string
    expiresAt?: Date | string | null
    releasedAt?: Date | string | null
    reservedBy: string
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    inventoryItem: InventoryItemCreateNestedOneWithoutReservationsInput
  }

  export type StockReservationUncheckedCreateInput = {
    id?: string
    inventoryItemId: string
    reservationType: $Enums.ReservationType
    referenceType: string
    referenceId: string
    quantity: number
    status?: $Enums.ReservationStatus
    reservedAt?: Date | string
    expiresAt?: Date | string | null
    releasedAt?: Date | string | null
    reservedBy: string
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type StockReservationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    reservationType?: EnumReservationTypeFieldUpdateOperationsInput | $Enums.ReservationType
    referenceType?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumReservationStatusFieldUpdateOperationsInput | $Enums.ReservationStatus
    reservedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reservedBy?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryItem?: InventoryItemUpdateOneRequiredWithoutReservationsNestedInput
  }

  export type StockReservationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    inventoryItemId?: StringFieldUpdateOperationsInput | string
    reservationType?: EnumReservationTypeFieldUpdateOperationsInput | $Enums.ReservationType
    referenceType?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumReservationStatusFieldUpdateOperationsInput | $Enums.ReservationStatus
    reservedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reservedBy?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StockReservationCreateManyInput = {
    id?: string
    inventoryItemId: string
    reservationType: $Enums.ReservationType
    referenceType: string
    referenceId: string
    quantity: number
    status?: $Enums.ReservationStatus
    reservedAt?: Date | string
    expiresAt?: Date | string | null
    releasedAt?: Date | string | null
    reservedBy: string
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type StockReservationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    reservationType?: EnumReservationTypeFieldUpdateOperationsInput | $Enums.ReservationType
    referenceType?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumReservationStatusFieldUpdateOperationsInput | $Enums.ReservationStatus
    reservedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reservedBy?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StockReservationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    inventoryItemId?: StringFieldUpdateOperationsInput | string
    reservationType?: EnumReservationTypeFieldUpdateOperationsInput | $Enums.ReservationType
    referenceType?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumReservationStatusFieldUpdateOperationsInput | $Enums.ReservationStatus
    reservedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reservedBy?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplierInvoiceCreateInput = {
    id?: string
    invoiceNumber: string
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    invoiceDate: Date | string
    dueDate: Date | string
    paidDate?: Date | string | null
    status?: $Enums.InvoiceStatus
    paymentMethod?: string | null
    paymentReference?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    supplier: SupplierCreateNestedOneWithoutInvoicesInput
    purchaseOrder?: PurchaseOrderCreateNestedOneWithoutInvoicesInput
  }

  export type SupplierInvoiceUncheckedCreateInput = {
    id?: string
    invoiceNumber: string
    supplierId: string
    purchaseOrderId?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    invoiceDate: Date | string
    dueDate: Date | string
    paidDate?: Date | string | null
    status?: $Enums.InvoiceStatus
    paymentMethod?: string | null
    paymentReference?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SupplierInvoiceUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    invoiceDate?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    paidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    supplier?: SupplierUpdateOneRequiredWithoutInvoicesNestedInput
    purchaseOrder?: PurchaseOrderUpdateOneWithoutInvoicesNestedInput
  }

  export type SupplierInvoiceUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    supplierId?: StringFieldUpdateOperationsInput | string
    purchaseOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    invoiceDate?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    paidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplierInvoiceCreateManyInput = {
    id?: string
    invoiceNumber: string
    supplierId: string
    purchaseOrderId?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    invoiceDate: Date | string
    dueDate: Date | string
    paidDate?: Date | string | null
    status?: $Enums.InvoiceStatus
    paymentMethod?: string | null
    paymentReference?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SupplierInvoiceUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    invoiceDate?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    paidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplierInvoiceUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    supplierId?: StringFieldUpdateOperationsInput | string
    purchaseOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    invoiceDate?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    paidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomerInvoiceCreateInput = {
    id?: string
    invoiceNumber: string
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paidAmount?: Decimal | DecimalJsLike | number | string
    balanceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    invoiceDate?: Date | string
    dueDate: Date | string
    paidDate?: Date | string | null
    status?: $Enums.InvoiceStatus
    paymentMethod?: string | null
    paymentReference?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    customer: CustomerCreateNestedOneWithoutInvoicesInput
    order?: OrderCreateNestedOneWithoutInvoicesInput
  }

  export type CustomerInvoiceUncheckedCreateInput = {
    id?: string
    invoiceNumber: string
    customerId: string
    orderId?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paidAmount?: Decimal | DecimalJsLike | number | string
    balanceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    invoiceDate?: Date | string
    dueDate: Date | string
    paidDate?: Date | string | null
    status?: $Enums.InvoiceStatus
    paymentMethod?: string | null
    paymentReference?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CustomerInvoiceUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    balanceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    invoiceDate?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    paidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    customer?: CustomerUpdateOneRequiredWithoutInvoicesNestedInput
    order?: OrderUpdateOneWithoutInvoicesNestedInput
  }

  export type CustomerInvoiceUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    balanceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    invoiceDate?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    paidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomerInvoiceCreateManyInput = {
    id?: string
    invoiceNumber: string
    customerId: string
    orderId?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paidAmount?: Decimal | DecimalJsLike | number | string
    balanceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    invoiceDate?: Date | string
    dueDate: Date | string
    paidDate?: Date | string | null
    status?: $Enums.InvoiceStatus
    paymentMethod?: string | null
    paymentReference?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CustomerInvoiceUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    balanceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    invoiceDate?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    paidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomerInvoiceUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    balanceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    invoiceDate?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    paidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryAuditCreateInput = {
    id?: string
    auditNumber: string
    type: $Enums.AuditType
    method?: $Enums.AuditMethod
    status?: $Enums.AuditStatus
    plannedDate: Date | string
    startedDate?: Date | string | null
    completedDate?: Date | string | null
    auditedBy: string
    supervisedBy?: string | null
    totalItems?: number | null
    itemsCounted?: number | null
    discrepancies?: number | null
    adjustmentValue?: Decimal | DecimalJsLike | number | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    warehouse?: WarehouseCreateNestedOneWithoutAuditsInput
    product?: ProductCreateNestedOneWithoutAuditsInput
    items?: InventoryAuditItemCreateNestedManyWithoutAuditInput
  }

  export type InventoryAuditUncheckedCreateInput = {
    id?: string
    auditNumber: string
    warehouseId?: string | null
    productId?: string | null
    type: $Enums.AuditType
    method?: $Enums.AuditMethod
    status?: $Enums.AuditStatus
    plannedDate: Date | string
    startedDate?: Date | string | null
    completedDate?: Date | string | null
    auditedBy: string
    supervisedBy?: string | null
    totalItems?: number | null
    itemsCounted?: number | null
    discrepancies?: number | null
    adjustmentValue?: Decimal | DecimalJsLike | number | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    items?: InventoryAuditItemUncheckedCreateNestedManyWithoutAuditInput
  }

  export type InventoryAuditUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    auditNumber?: StringFieldUpdateOperationsInput | string
    type?: EnumAuditTypeFieldUpdateOperationsInput | $Enums.AuditType
    method?: EnumAuditMethodFieldUpdateOperationsInput | $Enums.AuditMethod
    status?: EnumAuditStatusFieldUpdateOperationsInput | $Enums.AuditStatus
    plannedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    startedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auditedBy?: StringFieldUpdateOperationsInput | string
    supervisedBy?: NullableStringFieldUpdateOperationsInput | string | null
    totalItems?: NullableIntFieldUpdateOperationsInput | number | null
    itemsCounted?: NullableIntFieldUpdateOperationsInput | number | null
    discrepancies?: NullableIntFieldUpdateOperationsInput | number | null
    adjustmentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    warehouse?: WarehouseUpdateOneWithoutAuditsNestedInput
    product?: ProductUpdateOneWithoutAuditsNestedInput
    items?: InventoryAuditItemUpdateManyWithoutAuditNestedInput
  }

  export type InventoryAuditUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    auditNumber?: StringFieldUpdateOperationsInput | string
    warehouseId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumAuditTypeFieldUpdateOperationsInput | $Enums.AuditType
    method?: EnumAuditMethodFieldUpdateOperationsInput | $Enums.AuditMethod
    status?: EnumAuditStatusFieldUpdateOperationsInput | $Enums.AuditStatus
    plannedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    startedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auditedBy?: StringFieldUpdateOperationsInput | string
    supervisedBy?: NullableStringFieldUpdateOperationsInput | string | null
    totalItems?: NullableIntFieldUpdateOperationsInput | number | null
    itemsCounted?: NullableIntFieldUpdateOperationsInput | number | null
    discrepancies?: NullableIntFieldUpdateOperationsInput | number | null
    adjustmentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: InventoryAuditItemUncheckedUpdateManyWithoutAuditNestedInput
  }

  export type InventoryAuditCreateManyInput = {
    id?: string
    auditNumber: string
    warehouseId?: string | null
    productId?: string | null
    type: $Enums.AuditType
    method?: $Enums.AuditMethod
    status?: $Enums.AuditStatus
    plannedDate: Date | string
    startedDate?: Date | string | null
    completedDate?: Date | string | null
    auditedBy: string
    supervisedBy?: string | null
    totalItems?: number | null
    itemsCounted?: number | null
    discrepancies?: number | null
    adjustmentValue?: Decimal | DecimalJsLike | number | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InventoryAuditUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    auditNumber?: StringFieldUpdateOperationsInput | string
    type?: EnumAuditTypeFieldUpdateOperationsInput | $Enums.AuditType
    method?: EnumAuditMethodFieldUpdateOperationsInput | $Enums.AuditMethod
    status?: EnumAuditStatusFieldUpdateOperationsInput | $Enums.AuditStatus
    plannedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    startedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auditedBy?: StringFieldUpdateOperationsInput | string
    supervisedBy?: NullableStringFieldUpdateOperationsInput | string | null
    totalItems?: NullableIntFieldUpdateOperationsInput | number | null
    itemsCounted?: NullableIntFieldUpdateOperationsInput | number | null
    discrepancies?: NullableIntFieldUpdateOperationsInput | number | null
    adjustmentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryAuditUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    auditNumber?: StringFieldUpdateOperationsInput | string
    warehouseId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumAuditTypeFieldUpdateOperationsInput | $Enums.AuditType
    method?: EnumAuditMethodFieldUpdateOperationsInput | $Enums.AuditMethod
    status?: EnumAuditStatusFieldUpdateOperationsInput | $Enums.AuditStatus
    plannedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    startedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auditedBy?: StringFieldUpdateOperationsInput | string
    supervisedBy?: NullableStringFieldUpdateOperationsInput | string | null
    totalItems?: NullableIntFieldUpdateOperationsInput | number | null
    itemsCounted?: NullableIntFieldUpdateOperationsInput | number | null
    discrepancies?: NullableIntFieldUpdateOperationsInput | number | null
    adjustmentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryAuditItemCreateInput = {
    id?: string
    systemQty: number
    countedQty?: number | null
    adjustmentQty?: number | null
    location?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    countedBy?: string | null
    countedAt?: Date | string | null
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    status?: $Enums.AuditItemStatus
    discrepancyReason?: string | null
    requiresInvestigation?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    audit: InventoryAuditCreateNestedOneWithoutItemsInput
    product: ProductCreateNestedOneWithoutAuditItemsInput
    variant?: ProductVariantCreateNestedOneWithoutAuditItemsInput
    warehouse: WarehouseCreateNestedOneWithoutAuditItemsInput
  }

  export type InventoryAuditItemUncheckedCreateInput = {
    id?: string
    auditId: string
    productId: string
    variantId?: string | null
    warehouseId: string
    systemQty: number
    countedQty?: number | null
    adjustmentQty?: number | null
    location?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    countedBy?: string | null
    countedAt?: Date | string | null
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    status?: $Enums.AuditItemStatus
    discrepancyReason?: string | null
    requiresInvestigation?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InventoryAuditItemUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    systemQty?: IntFieldUpdateOperationsInput | number
    countedQty?: NullableIntFieldUpdateOperationsInput | number | null
    adjustmentQty?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    countedBy?: NullableStringFieldUpdateOperationsInput | string | null
    countedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAuditItemStatusFieldUpdateOperationsInput | $Enums.AuditItemStatus
    discrepancyReason?: NullableStringFieldUpdateOperationsInput | string | null
    requiresInvestigation?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    audit?: InventoryAuditUpdateOneRequiredWithoutItemsNestedInput
    product?: ProductUpdateOneRequiredWithoutAuditItemsNestedInput
    variant?: ProductVariantUpdateOneWithoutAuditItemsNestedInput
    warehouse?: WarehouseUpdateOneRequiredWithoutAuditItemsNestedInput
  }

  export type InventoryAuditItemUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    auditId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    warehouseId?: StringFieldUpdateOperationsInput | string
    systemQty?: IntFieldUpdateOperationsInput | number
    countedQty?: NullableIntFieldUpdateOperationsInput | number | null
    adjustmentQty?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    countedBy?: NullableStringFieldUpdateOperationsInput | string | null
    countedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAuditItemStatusFieldUpdateOperationsInput | $Enums.AuditItemStatus
    discrepancyReason?: NullableStringFieldUpdateOperationsInput | string | null
    requiresInvestigation?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryAuditItemCreateManyInput = {
    id?: string
    auditId: string
    productId: string
    variantId?: string | null
    warehouseId: string
    systemQty: number
    countedQty?: number | null
    adjustmentQty?: number | null
    location?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    countedBy?: string | null
    countedAt?: Date | string | null
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    status?: $Enums.AuditItemStatus
    discrepancyReason?: string | null
    requiresInvestigation?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InventoryAuditItemUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    systemQty?: IntFieldUpdateOperationsInput | number
    countedQty?: NullableIntFieldUpdateOperationsInput | number | null
    adjustmentQty?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    countedBy?: NullableStringFieldUpdateOperationsInput | string | null
    countedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAuditItemStatusFieldUpdateOperationsInput | $Enums.AuditItemStatus
    discrepancyReason?: NullableStringFieldUpdateOperationsInput | string | null
    requiresInvestigation?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryAuditItemUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    auditId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    warehouseId?: StringFieldUpdateOperationsInput | string
    systemQty?: IntFieldUpdateOperationsInput | number
    countedQty?: NullableIntFieldUpdateOperationsInput | number | null
    adjustmentQty?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    countedBy?: NullableStringFieldUpdateOperationsInput | string | null
    countedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAuditItemStatusFieldUpdateOperationsInput | $Enums.AuditItemStatus
    discrepancyReason?: NullableStringFieldUpdateOperationsInput | string | null
    requiresInvestigation?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductReviewCreateInput = {
    id?: string
    rating: number
    title?: string | null
    review?: string | null
    reviewerName?: string | null
    reviewerEmail?: string | null
    isApproved?: boolean
    isVisible?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutReviewsInput
  }

  export type ProductReviewUncheckedCreateInput = {
    id?: string
    productId: string
    rating: number
    title?: string | null
    review?: string | null
    reviewerName?: string | null
    reviewerEmail?: string | null
    isApproved?: boolean
    isVisible?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductReviewUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    review?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerName?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutReviewsNestedInput
  }

  export type ProductReviewUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    review?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerName?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductReviewCreateManyInput = {
    id?: string
    productId: string
    rating: number
    title?: string | null
    review?: string | null
    reviewerName?: string | null
    reviewerEmail?: string | null
    isApproved?: boolean
    isVisible?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductReviewUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    review?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerName?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductReviewUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    review?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerName?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SystemConfigurationCreateInput = {
    id?: string
    category: string
    key: string
    value: JsonNullValueInput | InputJsonValue
    description?: string | null
    dataType?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SystemConfigurationUncheckedCreateInput = {
    id?: string
    category: string
    key: string
    value: JsonNullValueInput | InputJsonValue
    description?: string | null
    dataType?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SystemConfigurationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    value?: JsonNullValueInput | InputJsonValue
    description?: NullableStringFieldUpdateOperationsInput | string | null
    dataType?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SystemConfigurationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    value?: JsonNullValueInput | InputJsonValue
    description?: NullableStringFieldUpdateOperationsInput | string | null
    dataType?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SystemConfigurationCreateManyInput = {
    id?: string
    category: string
    key: string
    value: JsonNullValueInput | InputJsonValue
    description?: string | null
    dataType?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SystemConfigurationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    value?: JsonNullValueInput | InputJsonValue
    description?: NullableStringFieldUpdateOperationsInput | string | null
    dataType?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SystemConfigurationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    value?: JsonNullValueInput | InputJsonValue
    description?: NullableStringFieldUpdateOperationsInput | string | null
    dataType?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type EnumProductStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductStatus | EnumProductStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ProductStatus[] | ListEnumProductStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductStatus[] | ListEnumProductStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumProductStatusFilter<$PrismaModel> | $Enums.ProductStatus
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type CategoryNullableScalarRelationFilter = {
    is?: CategoryWhereInput | null
    isNot?: CategoryWhereInput | null
  }

  export type BrandNullableScalarRelationFilter = {
    is?: BrandWhereInput | null
    isNot?: BrandWhereInput | null
  }

  export type InventoryItemListRelationFilter = {
    every?: InventoryItemWhereInput
    some?: InventoryItemWhereInput
    none?: InventoryItemWhereInput
  }

  export type ProductVariantListRelationFilter = {
    every?: ProductVariantWhereInput
    some?: ProductVariantWhereInput
    none?: ProductVariantWhereInput
  }

  export type ProductSupplierListRelationFilter = {
    every?: ProductSupplierWhereInput
    some?: ProductSupplierWhereInput
    none?: ProductSupplierWhereInput
  }

  export type OrderItemListRelationFilter = {
    every?: OrderItemWhereInput
    some?: OrderItemWhereInput
    none?: OrderItemWhereInput
  }

  export type PurchaseOrderItemListRelationFilter = {
    every?: PurchaseOrderItemWhereInput
    some?: PurchaseOrderItemWhereInput
    none?: PurchaseOrderItemWhereInput
  }

  export type InventoryMovementListRelationFilter = {
    every?: InventoryMovementWhereInput
    some?: InventoryMovementWhereInput
    none?: InventoryMovementWhereInput
  }

  export type InventoryAuditListRelationFilter = {
    every?: InventoryAuditWhereInput
    some?: InventoryAuditWhereInput
    none?: InventoryAuditWhereInput
  }

  export type ProductReviewListRelationFilter = {
    every?: ProductReviewWhereInput
    some?: ProductReviewWhereInput
    none?: ProductReviewWhereInput
  }

  export type ProductBundleListRelationFilter = {
    every?: ProductBundleWhereInput
    some?: ProductBundleWhereInput
    none?: ProductBundleWhereInput
  }

  export type GoodsReceiptItemListRelationFilter = {
    every?: GoodsReceiptItemWhereInput
    some?: GoodsReceiptItemWhereInput
    none?: GoodsReceiptItemWhereInput
  }

  export type StockTransferItemListRelationFilter = {
    every?: StockTransferItemWhereInput
    some?: StockTransferItemWhereInput
    none?: StockTransferItemWhereInput
  }

  export type InventoryAuditItemListRelationFilter = {
    every?: InventoryAuditItemWhereInput
    some?: InventoryAuditItemWhereInput
    none?: InventoryAuditItemWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type InventoryItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductVariantOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductSupplierOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrderItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PurchaseOrderItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type InventoryMovementOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type InventoryAuditOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductReviewOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductBundleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type GoodsReceiptItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type StockTransferItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type InventoryAuditItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    sku?: SortOrder
    barcode?: SortOrder
    slug?: SortOrder
    categoryId?: SortOrder
    brandId?: SortOrder
    weight?: SortOrder
    dimensions?: SortOrder
    color?: SortOrder
    size?: SortOrder
    material?: SortOrder
    costPrice?: SortOrder
    sellingPrice?: SortOrder
    wholesalePrice?: SortOrder
    minStockLevel?: SortOrder
    maxStockLevel?: SortOrder
    reorderPoint?: SortOrder
    reorderQuantity?: SortOrder
    status?: SortOrder
    isTrackable?: SortOrder
    isSerialized?: SortOrder
    images?: SortOrder
    primaryImage?: SortOrder
    metaTitle?: SortOrder
    metaDescription?: SortOrder
    tags?: SortOrder
    leadTimeSupply?: SortOrder
    shelfLife?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type ProductAvgOrderByAggregateInput = {
    weight?: SortOrder
    costPrice?: SortOrder
    sellingPrice?: SortOrder
    wholesalePrice?: SortOrder
    minStockLevel?: SortOrder
    maxStockLevel?: SortOrder
    reorderPoint?: SortOrder
    reorderQuantity?: SortOrder
    leadTimeSupply?: SortOrder
    shelfLife?: SortOrder
  }

  export type ProductMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    sku?: SortOrder
    barcode?: SortOrder
    slug?: SortOrder
    categoryId?: SortOrder
    brandId?: SortOrder
    weight?: SortOrder
    color?: SortOrder
    size?: SortOrder
    material?: SortOrder
    costPrice?: SortOrder
    sellingPrice?: SortOrder
    wholesalePrice?: SortOrder
    minStockLevel?: SortOrder
    maxStockLevel?: SortOrder
    reorderPoint?: SortOrder
    reorderQuantity?: SortOrder
    status?: SortOrder
    isTrackable?: SortOrder
    isSerialized?: SortOrder
    primaryImage?: SortOrder
    metaTitle?: SortOrder
    metaDescription?: SortOrder
    leadTimeSupply?: SortOrder
    shelfLife?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type ProductMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    sku?: SortOrder
    barcode?: SortOrder
    slug?: SortOrder
    categoryId?: SortOrder
    brandId?: SortOrder
    weight?: SortOrder
    color?: SortOrder
    size?: SortOrder
    material?: SortOrder
    costPrice?: SortOrder
    sellingPrice?: SortOrder
    wholesalePrice?: SortOrder
    minStockLevel?: SortOrder
    maxStockLevel?: SortOrder
    reorderPoint?: SortOrder
    reorderQuantity?: SortOrder
    status?: SortOrder
    isTrackable?: SortOrder
    isSerialized?: SortOrder
    primaryImage?: SortOrder
    metaTitle?: SortOrder
    metaDescription?: SortOrder
    leadTimeSupply?: SortOrder
    shelfLife?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type ProductSumOrderByAggregateInput = {
    weight?: SortOrder
    costPrice?: SortOrder
    sellingPrice?: SortOrder
    wholesalePrice?: SortOrder
    minStockLevel?: SortOrder
    maxStockLevel?: SortOrder
    reorderPoint?: SortOrder
    reorderQuantity?: SortOrder
    leadTimeSupply?: SortOrder
    shelfLife?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type EnumProductStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductStatus | EnumProductStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ProductStatus[] | ListEnumProductStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductStatus[] | ListEnumProductStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumProductStatusWithAggregatesFilter<$PrismaModel> | $Enums.ProductStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProductStatusFilter<$PrismaModel>
    _max?: NestedEnumProductStatusFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }
  export type JsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type ProductScalarRelationFilter = {
    is?: ProductWhereInput
    isNot?: ProductWhereInput
  }

  export type ProductVariantCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    name?: SortOrder
    sku?: SortOrder
    barcode?: SortOrder
    attributes?: SortOrder
    costPrice?: SortOrder
    sellingPrice?: SortOrder
    minStockLevel?: SortOrder
    reorderPoint?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductVariantAvgOrderByAggregateInput = {
    costPrice?: SortOrder
    sellingPrice?: SortOrder
    minStockLevel?: SortOrder
    reorderPoint?: SortOrder
  }

  export type ProductVariantMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    name?: SortOrder
    sku?: SortOrder
    barcode?: SortOrder
    costPrice?: SortOrder
    sellingPrice?: SortOrder
    minStockLevel?: SortOrder
    reorderPoint?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductVariantMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    name?: SortOrder
    sku?: SortOrder
    barcode?: SortOrder
    costPrice?: SortOrder
    sellingPrice?: SortOrder
    minStockLevel?: SortOrder
    reorderPoint?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductVariantSumOrderByAggregateInput = {
    costPrice?: SortOrder
    sellingPrice?: SortOrder
    minStockLevel?: SortOrder
    reorderPoint?: SortOrder
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type CategoryListRelationFilter = {
    every?: CategoryWhereInput
    some?: CategoryWhereInput
    none?: CategoryWhereInput
  }

  export type ProductListRelationFilter = {
    every?: ProductWhereInput
    some?: ProductWhereInput
    none?: ProductWhereInput
  }

  export type CategoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CategoryCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    slug?: SortOrder
    parentId?: SortOrder
    level?: SortOrder
    path?: SortOrder
    icon?: SortOrder
    color?: SortOrder
    image?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CategoryAvgOrderByAggregateInput = {
    level?: SortOrder
  }

  export type CategoryMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    slug?: SortOrder
    parentId?: SortOrder
    level?: SortOrder
    path?: SortOrder
    icon?: SortOrder
    color?: SortOrder
    image?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CategoryMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    slug?: SortOrder
    parentId?: SortOrder
    level?: SortOrder
    path?: SortOrder
    icon?: SortOrder
    color?: SortOrder
    image?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CategorySumOrderByAggregateInput = {
    level?: SortOrder
  }

  export type BrandCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    logo?: SortOrder
    website?: SortOrder
    contactEmail?: SortOrder
    contactPhone?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BrandMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    logo?: SortOrder
    website?: SortOrder
    contactEmail?: SortOrder
    contactPhone?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BrandMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    logo?: SortOrder
    website?: SortOrder
    contactEmail?: SortOrder
    contactPhone?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type ProductBundleCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    sku?: SortOrder
    bundlePrice?: SortOrder
    discount?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductBundleAvgOrderByAggregateInput = {
    bundlePrice?: SortOrder
    discount?: SortOrder
  }

  export type ProductBundleMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    sku?: SortOrder
    bundlePrice?: SortOrder
    discount?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductBundleMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    sku?: SortOrder
    bundlePrice?: SortOrder
    discount?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductBundleSumOrderByAggregateInput = {
    bundlePrice?: SortOrder
    discount?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type EnumWarehouseTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.WarehouseType | EnumWarehouseTypeFieldRefInput<$PrismaModel>
    in?: $Enums.WarehouseType[] | ListEnumWarehouseTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.WarehouseType[] | ListEnumWarehouseTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumWarehouseTypeFilter<$PrismaModel> | $Enums.WarehouseType
  }

  export type StockTransferListRelationFilter = {
    every?: StockTransferWhereInput
    some?: StockTransferWhereInput
    none?: StockTransferWhereInput
  }

  export type OrderListRelationFilter = {
    every?: OrderWhereInput
    some?: OrderWhereInput
    none?: OrderWhereInput
  }

  export type PurchaseOrderListRelationFilter = {
    every?: PurchaseOrderWhereInput
    some?: PurchaseOrderWhereInput
    none?: PurchaseOrderWhereInput
  }

  export type GoodsReceiptListRelationFilter = {
    every?: GoodsReceiptWhereInput
    some?: GoodsReceiptWhereInput
    none?: GoodsReceiptWhereInput
  }

  export type ShipmentListRelationFilter = {
    every?: ShipmentWhereInput
    some?: ShipmentWhereInput
    none?: ShipmentWhereInput
  }

  export type StockTransferOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrderOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PurchaseOrderOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type GoodsReceiptOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ShipmentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type WarehouseCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    description?: SortOrder
    address?: SortOrder
    coordinates?: SortOrder
    timezone?: SortOrder
    managerName?: SortOrder
    managerEmail?: SortOrder
    managerPhone?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    type?: SortOrder
    capacity?: SortOrder
    isActive?: SortOrder
    hasRfid?: SortOrder
    hasBarcode?: SortOrder
    temperatureControl?: SortOrder
    securityLevel?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type WarehouseMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    description?: SortOrder
    timezone?: SortOrder
    managerName?: SortOrder
    managerEmail?: SortOrder
    managerPhone?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    type?: SortOrder
    isActive?: SortOrder
    hasRfid?: SortOrder
    hasBarcode?: SortOrder
    temperatureControl?: SortOrder
    securityLevel?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type WarehouseMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    description?: SortOrder
    timezone?: SortOrder
    managerName?: SortOrder
    managerEmail?: SortOrder
    managerPhone?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    type?: SortOrder
    isActive?: SortOrder
    hasRfid?: SortOrder
    hasBarcode?: SortOrder
    temperatureControl?: SortOrder
    securityLevel?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumWarehouseTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.WarehouseType | EnumWarehouseTypeFieldRefInput<$PrismaModel>
    in?: $Enums.WarehouseType[] | ListEnumWarehouseTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.WarehouseType[] | ListEnumWarehouseTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumWarehouseTypeWithAggregatesFilter<$PrismaModel> | $Enums.WarehouseType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumWarehouseTypeFilter<$PrismaModel>
    _max?: NestedEnumWarehouseTypeFilter<$PrismaModel>
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type EnumInventoryStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.InventoryStatus | EnumInventoryStatusFieldRefInput<$PrismaModel>
    in?: $Enums.InventoryStatus[] | ListEnumInventoryStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.InventoryStatus[] | ListEnumInventoryStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumInventoryStatusFilter<$PrismaModel> | $Enums.InventoryStatus
  }

  export type EnumQualityStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.QualityStatus | EnumQualityStatusFieldRefInput<$PrismaModel>
    in?: $Enums.QualityStatus[] | ListEnumQualityStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.QualityStatus[] | ListEnumQualityStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumQualityStatusFilter<$PrismaModel> | $Enums.QualityStatus
  }

  export type ProductVariantNullableScalarRelationFilter = {
    is?: ProductVariantWhereInput | null
    isNot?: ProductVariantWhereInput | null
  }

  export type WarehouseScalarRelationFilter = {
    is?: WarehouseWhereInput
    isNot?: WarehouseWhereInput
  }

  export type StockReservationListRelationFilter = {
    every?: StockReservationWhereInput
    some?: StockReservationWhereInput
    none?: StockReservationWhereInput
  }

  export type StockReservationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type InventoryItemProductIdVariantIdWarehouseIdLotNumberCompoundUniqueInput = {
    productId: string
    variantId: string
    warehouseId: string
    lotNumber: string
  }

  export type InventoryItemCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    variantId?: SortOrder
    warehouseId?: SortOrder
    zone?: SortOrder
    aisle?: SortOrder
    shelf?: SortOrder
    bin?: SortOrder
    locationCode?: SortOrder
    quantity?: SortOrder
    reservedQuantity?: SortOrder
    availableQuantity?: SortOrder
    averageCost?: SortOrder
    lastCost?: SortOrder
    lotNumber?: SortOrder
    batchNumber?: SortOrder
    serialNumbers?: SortOrder
    expiryDate?: SortOrder
    status?: SortOrder
    qcStatus?: SortOrder
    quarantineReason?: SortOrder
    lastMovement?: SortOrder
    lastCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type InventoryItemAvgOrderByAggregateInput = {
    quantity?: SortOrder
    reservedQuantity?: SortOrder
    availableQuantity?: SortOrder
    averageCost?: SortOrder
    lastCost?: SortOrder
  }

  export type InventoryItemMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    variantId?: SortOrder
    warehouseId?: SortOrder
    zone?: SortOrder
    aisle?: SortOrder
    shelf?: SortOrder
    bin?: SortOrder
    locationCode?: SortOrder
    quantity?: SortOrder
    reservedQuantity?: SortOrder
    availableQuantity?: SortOrder
    averageCost?: SortOrder
    lastCost?: SortOrder
    lotNumber?: SortOrder
    batchNumber?: SortOrder
    expiryDate?: SortOrder
    status?: SortOrder
    qcStatus?: SortOrder
    quarantineReason?: SortOrder
    lastMovement?: SortOrder
    lastCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type InventoryItemMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    variantId?: SortOrder
    warehouseId?: SortOrder
    zone?: SortOrder
    aisle?: SortOrder
    shelf?: SortOrder
    bin?: SortOrder
    locationCode?: SortOrder
    quantity?: SortOrder
    reservedQuantity?: SortOrder
    availableQuantity?: SortOrder
    averageCost?: SortOrder
    lastCost?: SortOrder
    lotNumber?: SortOrder
    batchNumber?: SortOrder
    expiryDate?: SortOrder
    status?: SortOrder
    qcStatus?: SortOrder
    quarantineReason?: SortOrder
    lastMovement?: SortOrder
    lastCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type InventoryItemSumOrderByAggregateInput = {
    quantity?: SortOrder
    reservedQuantity?: SortOrder
    availableQuantity?: SortOrder
    averageCost?: SortOrder
    lastCost?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type EnumInventoryStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.InventoryStatus | EnumInventoryStatusFieldRefInput<$PrismaModel>
    in?: $Enums.InventoryStatus[] | ListEnumInventoryStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.InventoryStatus[] | ListEnumInventoryStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumInventoryStatusWithAggregatesFilter<$PrismaModel> | $Enums.InventoryStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumInventoryStatusFilter<$PrismaModel>
    _max?: NestedEnumInventoryStatusFilter<$PrismaModel>
  }

  export type EnumQualityStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.QualityStatus | EnumQualityStatusFieldRefInput<$PrismaModel>
    in?: $Enums.QualityStatus[] | ListEnumQualityStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.QualityStatus[] | ListEnumQualityStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumQualityStatusWithAggregatesFilter<$PrismaModel> | $Enums.QualityStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumQualityStatusFilter<$PrismaModel>
    _max?: NestedEnumQualityStatusFilter<$PrismaModel>
  }

  export type EnumMovementTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.MovementType | EnumMovementTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MovementType[] | ListEnumMovementTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.MovementType[] | ListEnumMovementTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumMovementTypeFilter<$PrismaModel> | $Enums.MovementType
  }

  export type InventoryItemNullableScalarRelationFilter = {
    is?: InventoryItemWhereInput | null
    isNot?: InventoryItemWhereInput | null
  }

  export type InventoryMovementCountOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    subtype?: SortOrder
    productId?: SortOrder
    variantId?: SortOrder
    warehouseId?: SortOrder
    inventoryItemId?: SortOrder
    quantity?: SortOrder
    quantityBefore?: SortOrder
    quantityAfter?: SortOrder
    unitCost?: SortOrder
    totalCost?: SortOrder
    referenceType?: SortOrder
    referenceId?: SortOrder
    fromLocation?: SortOrder
    toLocation?: SortOrder
    lotNumber?: SortOrder
    batchNumber?: SortOrder
    expiryDate?: SortOrder
    reason?: SortOrder
    notes?: SortOrder
    userId?: SortOrder
    approvedBy?: SortOrder
    approvedAt?: SortOrder
    occurredAt?: SortOrder
    createdAt?: SortOrder
  }

  export type InventoryMovementAvgOrderByAggregateInput = {
    quantity?: SortOrder
    quantityBefore?: SortOrder
    quantityAfter?: SortOrder
    unitCost?: SortOrder
    totalCost?: SortOrder
  }

  export type InventoryMovementMaxOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    subtype?: SortOrder
    productId?: SortOrder
    variantId?: SortOrder
    warehouseId?: SortOrder
    inventoryItemId?: SortOrder
    quantity?: SortOrder
    quantityBefore?: SortOrder
    quantityAfter?: SortOrder
    unitCost?: SortOrder
    totalCost?: SortOrder
    referenceType?: SortOrder
    referenceId?: SortOrder
    fromLocation?: SortOrder
    toLocation?: SortOrder
    lotNumber?: SortOrder
    batchNumber?: SortOrder
    expiryDate?: SortOrder
    reason?: SortOrder
    notes?: SortOrder
    userId?: SortOrder
    approvedBy?: SortOrder
    approvedAt?: SortOrder
    occurredAt?: SortOrder
    createdAt?: SortOrder
  }

  export type InventoryMovementMinOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    subtype?: SortOrder
    productId?: SortOrder
    variantId?: SortOrder
    warehouseId?: SortOrder
    inventoryItemId?: SortOrder
    quantity?: SortOrder
    quantityBefore?: SortOrder
    quantityAfter?: SortOrder
    unitCost?: SortOrder
    totalCost?: SortOrder
    referenceType?: SortOrder
    referenceId?: SortOrder
    fromLocation?: SortOrder
    toLocation?: SortOrder
    lotNumber?: SortOrder
    batchNumber?: SortOrder
    expiryDate?: SortOrder
    reason?: SortOrder
    notes?: SortOrder
    userId?: SortOrder
    approvedBy?: SortOrder
    approvedAt?: SortOrder
    occurredAt?: SortOrder
    createdAt?: SortOrder
  }

  export type InventoryMovementSumOrderByAggregateInput = {
    quantity?: SortOrder
    quantityBefore?: SortOrder
    quantityAfter?: SortOrder
    unitCost?: SortOrder
    totalCost?: SortOrder
  }

  export type EnumMovementTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MovementType | EnumMovementTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MovementType[] | ListEnumMovementTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.MovementType[] | ListEnumMovementTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumMovementTypeWithAggregatesFilter<$PrismaModel> | $Enums.MovementType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMovementTypeFilter<$PrismaModel>
    _max?: NestedEnumMovementTypeFilter<$PrismaModel>
  }

  export type EnumCompanyTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.CompanyType | EnumCompanyTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.CompanyType[] | ListEnumCompanyTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.CompanyType[] | ListEnumCompanyTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumCompanyTypeNullableFilter<$PrismaModel> | $Enums.CompanyType | null
  }

  export type EnumSupplierStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.SupplierStatus | EnumSupplierStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SupplierStatus[] | ListEnumSupplierStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SupplierStatus[] | ListEnumSupplierStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSupplierStatusFilter<$PrismaModel> | $Enums.SupplierStatus
  }

  export type SupplierInvoiceListRelationFilter = {
    every?: SupplierInvoiceWhereInput
    some?: SupplierInvoiceWhereInput
    none?: SupplierInvoiceWhereInput
  }

  export type SupplierContactListRelationFilter = {
    every?: SupplierContactWhereInput
    some?: SupplierContactWhereInput
    none?: SupplierContactWhereInput
  }

  export type SupplierDocumentListRelationFilter = {
    every?: SupplierDocumentWhereInput
    some?: SupplierDocumentWhereInput
    none?: SupplierDocumentWhereInput
  }

  export type SupplierInvoiceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SupplierContactOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SupplierDocumentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SupplierCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    website?: SortOrder
    companyType?: SortOrder
    taxId?: SortOrder
    vatNumber?: SortOrder
    registrationNumber?: SortOrder
    billingAddress?: SortOrder
    shippingAddress?: SortOrder
    contactName?: SortOrder
    contactEmail?: SortOrder
    contactPhone?: SortOrder
    contactTitle?: SortOrder
    paymentTerms?: SortOrder
    creditLimit?: SortOrder
    currency?: SortOrder
    rating?: SortOrder
    onTimeDelivery?: SortOrder
    qualityRating?: SortOrder
    status?: SortOrder
    certifications?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type SupplierAvgOrderByAggregateInput = {
    creditLimit?: SortOrder
    rating?: SortOrder
    onTimeDelivery?: SortOrder
    qualityRating?: SortOrder
  }

  export type SupplierMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    website?: SortOrder
    companyType?: SortOrder
    taxId?: SortOrder
    vatNumber?: SortOrder
    registrationNumber?: SortOrder
    contactName?: SortOrder
    contactEmail?: SortOrder
    contactPhone?: SortOrder
    contactTitle?: SortOrder
    paymentTerms?: SortOrder
    creditLimit?: SortOrder
    currency?: SortOrder
    rating?: SortOrder
    onTimeDelivery?: SortOrder
    qualityRating?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type SupplierMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    website?: SortOrder
    companyType?: SortOrder
    taxId?: SortOrder
    vatNumber?: SortOrder
    registrationNumber?: SortOrder
    contactName?: SortOrder
    contactEmail?: SortOrder
    contactPhone?: SortOrder
    contactTitle?: SortOrder
    paymentTerms?: SortOrder
    creditLimit?: SortOrder
    currency?: SortOrder
    rating?: SortOrder
    onTimeDelivery?: SortOrder
    qualityRating?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type SupplierSumOrderByAggregateInput = {
    creditLimit?: SortOrder
    rating?: SortOrder
    onTimeDelivery?: SortOrder
    qualityRating?: SortOrder
  }

  export type EnumCompanyTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CompanyType | EnumCompanyTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.CompanyType[] | ListEnumCompanyTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.CompanyType[] | ListEnumCompanyTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumCompanyTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.CompanyType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumCompanyTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumCompanyTypeNullableFilter<$PrismaModel>
  }

  export type EnumSupplierStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SupplierStatus | EnumSupplierStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SupplierStatus[] | ListEnumSupplierStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SupplierStatus[] | ListEnumSupplierStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSupplierStatusWithAggregatesFilter<$PrismaModel> | $Enums.SupplierStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSupplierStatusFilter<$PrismaModel>
    _max?: NestedEnumSupplierStatusFilter<$PrismaModel>
  }

  export type SupplierScalarRelationFilter = {
    is?: SupplierWhereInput
    isNot?: SupplierWhereInput
  }

  export type ProductSupplierProductIdSupplierIdCompoundUniqueInput = {
    productId: string
    supplierId: string
  }

  export type ProductSupplierCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    supplierId?: SortOrder
    supplierSku?: SortOrder
    supplierName?: SortOrder
    unitCost?: SortOrder
    currency?: SortOrder
    minOrderQty?: SortOrder
    maxOrderQty?: SortOrder
    leadTimeDays?: SortOrder
    isPreferred?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductSupplierAvgOrderByAggregateInput = {
    unitCost?: SortOrder
    minOrderQty?: SortOrder
    maxOrderQty?: SortOrder
    leadTimeDays?: SortOrder
  }

  export type ProductSupplierMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    supplierId?: SortOrder
    supplierSku?: SortOrder
    supplierName?: SortOrder
    unitCost?: SortOrder
    currency?: SortOrder
    minOrderQty?: SortOrder
    maxOrderQty?: SortOrder
    leadTimeDays?: SortOrder
    isPreferred?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductSupplierMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    supplierId?: SortOrder
    supplierSku?: SortOrder
    supplierName?: SortOrder
    unitCost?: SortOrder
    currency?: SortOrder
    minOrderQty?: SortOrder
    maxOrderQty?: SortOrder
    leadTimeDays?: SortOrder
    isPreferred?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductSupplierSumOrderByAggregateInput = {
    unitCost?: SortOrder
    minOrderQty?: SortOrder
    maxOrderQty?: SortOrder
    leadTimeDays?: SortOrder
  }

  export type SupplierContactCountOrderByAggregateInput = {
    id?: SortOrder
    supplierId?: SortOrder
    name?: SortOrder
    title?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    mobile?: SortOrder
    isPrimary?: SortOrder
    department?: SortOrder
    isActive?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SupplierContactMaxOrderByAggregateInput = {
    id?: SortOrder
    supplierId?: SortOrder
    name?: SortOrder
    title?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    mobile?: SortOrder
    isPrimary?: SortOrder
    department?: SortOrder
    isActive?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SupplierContactMinOrderByAggregateInput = {
    id?: SortOrder
    supplierId?: SortOrder
    name?: SortOrder
    title?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    mobile?: SortOrder
    isPrimary?: SortOrder
    department?: SortOrder
    isActive?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumDocumentTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.DocumentType | EnumDocumentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDocumentTypeFilter<$PrismaModel> | $Enums.DocumentType
  }

  export type SupplierDocumentCountOrderByAggregateInput = {
    id?: SortOrder
    supplierId?: SortOrder
    name?: SortOrder
    type?: SortOrder
    category?: SortOrder
    fileName?: SortOrder
    fileSize?: SortOrder
    fileType?: SortOrder
    filePath?: SortOrder
    uploadedBy?: SortOrder
    uploadedAt?: SortOrder
    expiresAt?: SortOrder
    isActive?: SortOrder
  }

  export type SupplierDocumentAvgOrderByAggregateInput = {
    fileSize?: SortOrder
  }

  export type SupplierDocumentMaxOrderByAggregateInput = {
    id?: SortOrder
    supplierId?: SortOrder
    name?: SortOrder
    type?: SortOrder
    category?: SortOrder
    fileName?: SortOrder
    fileSize?: SortOrder
    fileType?: SortOrder
    filePath?: SortOrder
    uploadedBy?: SortOrder
    uploadedAt?: SortOrder
    expiresAt?: SortOrder
    isActive?: SortOrder
  }

  export type SupplierDocumentMinOrderByAggregateInput = {
    id?: SortOrder
    supplierId?: SortOrder
    name?: SortOrder
    type?: SortOrder
    category?: SortOrder
    fileName?: SortOrder
    fileSize?: SortOrder
    fileType?: SortOrder
    filePath?: SortOrder
    uploadedBy?: SortOrder
    uploadedAt?: SortOrder
    expiresAt?: SortOrder
    isActive?: SortOrder
  }

  export type SupplierDocumentSumOrderByAggregateInput = {
    fileSize?: SortOrder
  }

  export type EnumDocumentTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DocumentType | EnumDocumentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDocumentTypeWithAggregatesFilter<$PrismaModel> | $Enums.DocumentType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDocumentTypeFilter<$PrismaModel>
    _max?: NestedEnumDocumentTypeFilter<$PrismaModel>
  }

  export type EnumPurchaseOrderStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PurchaseOrderStatus | EnumPurchaseOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PurchaseOrderStatus[] | ListEnumPurchaseOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PurchaseOrderStatus[] | ListEnumPurchaseOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPurchaseOrderStatusFilter<$PrismaModel> | $Enums.PurchaseOrderStatus
  }

  export type WarehouseNullableScalarRelationFilter = {
    is?: WarehouseWhereInput | null
    isNot?: WarehouseWhereInput | null
  }

  export type PurchaseOrderCountOrderByAggregateInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    supplierId?: SortOrder
    warehouseId?: SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    shippingCost?: SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    orderDate?: SortOrder
    expectedDate?: SortOrder
    deliveryDate?: SortOrder
    paymentTerms?: SortOrder
    shippingTerms?: SortOrder
    trackingNumber?: SortOrder
    carrier?: SortOrder
    approvedBy?: SortOrder
    approvedAt?: SortOrder
    notes?: SortOrder
    internalNotes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type PurchaseOrderAvgOrderByAggregateInput = {
    subtotal?: SortOrder
    taxAmount?: SortOrder
    shippingCost?: SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
  }

  export type PurchaseOrderMaxOrderByAggregateInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    supplierId?: SortOrder
    warehouseId?: SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    shippingCost?: SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    orderDate?: SortOrder
    expectedDate?: SortOrder
    deliveryDate?: SortOrder
    paymentTerms?: SortOrder
    shippingTerms?: SortOrder
    trackingNumber?: SortOrder
    carrier?: SortOrder
    approvedBy?: SortOrder
    approvedAt?: SortOrder
    notes?: SortOrder
    internalNotes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type PurchaseOrderMinOrderByAggregateInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    supplierId?: SortOrder
    warehouseId?: SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    shippingCost?: SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    orderDate?: SortOrder
    expectedDate?: SortOrder
    deliveryDate?: SortOrder
    paymentTerms?: SortOrder
    shippingTerms?: SortOrder
    trackingNumber?: SortOrder
    carrier?: SortOrder
    approvedBy?: SortOrder
    approvedAt?: SortOrder
    notes?: SortOrder
    internalNotes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type PurchaseOrderSumOrderByAggregateInput = {
    subtotal?: SortOrder
    taxAmount?: SortOrder
    shippingCost?: SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
  }

  export type EnumPurchaseOrderStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PurchaseOrderStatus | EnumPurchaseOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PurchaseOrderStatus[] | ListEnumPurchaseOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PurchaseOrderStatus[] | ListEnumPurchaseOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPurchaseOrderStatusWithAggregatesFilter<$PrismaModel> | $Enums.PurchaseOrderStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPurchaseOrderStatusFilter<$PrismaModel>
    _max?: NestedEnumPurchaseOrderStatusFilter<$PrismaModel>
  }

  export type EnumPurchaseItemStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PurchaseItemStatus | EnumPurchaseItemStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PurchaseItemStatus[] | ListEnumPurchaseItemStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PurchaseItemStatus[] | ListEnumPurchaseItemStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPurchaseItemStatusFilter<$PrismaModel> | $Enums.PurchaseItemStatus
  }

  export type PurchaseOrderScalarRelationFilter = {
    is?: PurchaseOrderWhereInput
    isNot?: PurchaseOrderWhereInput
  }

  export type PurchaseOrderItemCountOrderByAggregateInput = {
    id?: SortOrder
    purchaseOrderId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrder
    orderedQty?: SortOrder
    receivedQty?: SortOrder
    remainingQty?: SortOrder
    unitCost?: SortOrder
    totalCost?: SortOrder
    productName?: SortOrder
    productSku?: SortOrder
    supplierSku?: SortOrder
    expectedDate?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PurchaseOrderItemAvgOrderByAggregateInput = {
    orderedQty?: SortOrder
    receivedQty?: SortOrder
    remainingQty?: SortOrder
    unitCost?: SortOrder
    totalCost?: SortOrder
  }

  export type PurchaseOrderItemMaxOrderByAggregateInput = {
    id?: SortOrder
    purchaseOrderId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrder
    orderedQty?: SortOrder
    receivedQty?: SortOrder
    remainingQty?: SortOrder
    unitCost?: SortOrder
    totalCost?: SortOrder
    productName?: SortOrder
    productSku?: SortOrder
    supplierSku?: SortOrder
    expectedDate?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PurchaseOrderItemMinOrderByAggregateInput = {
    id?: SortOrder
    purchaseOrderId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrder
    orderedQty?: SortOrder
    receivedQty?: SortOrder
    remainingQty?: SortOrder
    unitCost?: SortOrder
    totalCost?: SortOrder
    productName?: SortOrder
    productSku?: SortOrder
    supplierSku?: SortOrder
    expectedDate?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PurchaseOrderItemSumOrderByAggregateInput = {
    orderedQty?: SortOrder
    receivedQty?: SortOrder
    remainingQty?: SortOrder
    unitCost?: SortOrder
    totalCost?: SortOrder
  }

  export type EnumPurchaseItemStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PurchaseItemStatus | EnumPurchaseItemStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PurchaseItemStatus[] | ListEnumPurchaseItemStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PurchaseItemStatus[] | ListEnumPurchaseItemStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPurchaseItemStatusWithAggregatesFilter<$PrismaModel> | $Enums.PurchaseItemStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPurchaseItemStatusFilter<$PrismaModel>
    _max?: NestedEnumPurchaseItemStatusFilter<$PrismaModel>
  }

  export type EnumReceiptStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ReceiptStatus | EnumReceiptStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ReceiptStatus[] | ListEnumReceiptStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReceiptStatus[] | ListEnumReceiptStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumReceiptStatusFilter<$PrismaModel> | $Enums.ReceiptStatus
  }

  export type GoodsReceiptCountOrderByAggregateInput = {
    id?: SortOrder
    purchaseOrderId?: SortOrder
    warehouseId?: SortOrder
    receiptNumber?: SortOrder
    receivedDate?: SortOrder
    qcStatus?: SortOrder
    qcNotes?: SortOrder
    qcBy?: SortOrder
    qcDate?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    receivedBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type GoodsReceiptMaxOrderByAggregateInput = {
    id?: SortOrder
    purchaseOrderId?: SortOrder
    warehouseId?: SortOrder
    receiptNumber?: SortOrder
    receivedDate?: SortOrder
    qcStatus?: SortOrder
    qcNotes?: SortOrder
    qcBy?: SortOrder
    qcDate?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    receivedBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type GoodsReceiptMinOrderByAggregateInput = {
    id?: SortOrder
    purchaseOrderId?: SortOrder
    warehouseId?: SortOrder
    receiptNumber?: SortOrder
    receivedDate?: SortOrder
    qcStatus?: SortOrder
    qcNotes?: SortOrder
    qcBy?: SortOrder
    qcDate?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    receivedBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumReceiptStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReceiptStatus | EnumReceiptStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ReceiptStatus[] | ListEnumReceiptStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReceiptStatus[] | ListEnumReceiptStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumReceiptStatusWithAggregatesFilter<$PrismaModel> | $Enums.ReceiptStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReceiptStatusFilter<$PrismaModel>
    _max?: NestedEnumReceiptStatusFilter<$PrismaModel>
  }

  export type GoodsReceiptScalarRelationFilter = {
    is?: GoodsReceiptWhereInput
    isNot?: GoodsReceiptWhereInput
  }

  export type GoodsReceiptItemCountOrderByAggregateInput = {
    id?: SortOrder
    goodsReceiptId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrder
    expectedQty?: SortOrder
    receivedQty?: SortOrder
    acceptedQty?: SortOrder
    rejectedQty?: SortOrder
    qcStatus?: SortOrder
    qcNotes?: SortOrder
    rejectionReason?: SortOrder
    lotNumber?: SortOrder
    batchNumber?: SortOrder
    expiryDate?: SortOrder
    serialNumbers?: SortOrder
    receivedLocation?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type GoodsReceiptItemAvgOrderByAggregateInput = {
    expectedQty?: SortOrder
    receivedQty?: SortOrder
    acceptedQty?: SortOrder
    rejectedQty?: SortOrder
  }

  export type GoodsReceiptItemMaxOrderByAggregateInput = {
    id?: SortOrder
    goodsReceiptId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrder
    expectedQty?: SortOrder
    receivedQty?: SortOrder
    acceptedQty?: SortOrder
    rejectedQty?: SortOrder
    qcStatus?: SortOrder
    qcNotes?: SortOrder
    rejectionReason?: SortOrder
    lotNumber?: SortOrder
    batchNumber?: SortOrder
    expiryDate?: SortOrder
    receivedLocation?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type GoodsReceiptItemMinOrderByAggregateInput = {
    id?: SortOrder
    goodsReceiptId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrder
    expectedQty?: SortOrder
    receivedQty?: SortOrder
    acceptedQty?: SortOrder
    rejectedQty?: SortOrder
    qcStatus?: SortOrder
    qcNotes?: SortOrder
    rejectionReason?: SortOrder
    lotNumber?: SortOrder
    batchNumber?: SortOrder
    expiryDate?: SortOrder
    receivedLocation?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type GoodsReceiptItemSumOrderByAggregateInput = {
    expectedQty?: SortOrder
    receivedQty?: SortOrder
    acceptedQty?: SortOrder
    rejectedQty?: SortOrder
  }

  export type EnumCustomerTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.CustomerType | EnumCustomerTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CustomerType[] | ListEnumCustomerTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.CustomerType[] | ListEnumCustomerTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumCustomerTypeFilter<$PrismaModel> | $Enums.CustomerType
  }

  export type EnumCustomerStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.CustomerStatus | EnumCustomerStatusFieldRefInput<$PrismaModel>
    in?: $Enums.CustomerStatus[] | ListEnumCustomerStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.CustomerStatus[] | ListEnumCustomerStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumCustomerStatusFilter<$PrismaModel> | $Enums.CustomerStatus
  }

  export type CustomerInvoiceListRelationFilter = {
    every?: CustomerInvoiceWhereInput
    some?: CustomerInvoiceWhereInput
    none?: CustomerInvoiceWhereInput
  }

  export type CustomerContactListRelationFilter = {
    every?: CustomerContactWhereInput
    some?: CustomerContactWhereInput
    none?: CustomerContactWhereInput
  }

  export type CustomerInvoiceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CustomerContactOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CustomerCountOrderByAggregateInput = {
    id?: SortOrder
    customerNumber?: SortOrder
    type?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    companyName?: SortOrder
    taxId?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    mobile?: SortOrder
    billingAddress?: SortOrder
    shippingAddress?: SortOrder
    creditLimit?: SortOrder
    paymentTerms?: SortOrder
    currency?: SortOrder
    preferredLanguage?: SortOrder
    timezone?: SortOrder
    allowMarketing?: SortOrder
    source?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type CustomerAvgOrderByAggregateInput = {
    creditLimit?: SortOrder
  }

  export type CustomerMaxOrderByAggregateInput = {
    id?: SortOrder
    customerNumber?: SortOrder
    type?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    companyName?: SortOrder
    taxId?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    mobile?: SortOrder
    creditLimit?: SortOrder
    paymentTerms?: SortOrder
    currency?: SortOrder
    preferredLanguage?: SortOrder
    timezone?: SortOrder
    allowMarketing?: SortOrder
    source?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type CustomerMinOrderByAggregateInput = {
    id?: SortOrder
    customerNumber?: SortOrder
    type?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    companyName?: SortOrder
    taxId?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    mobile?: SortOrder
    creditLimit?: SortOrder
    paymentTerms?: SortOrder
    currency?: SortOrder
    preferredLanguage?: SortOrder
    timezone?: SortOrder
    allowMarketing?: SortOrder
    source?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type CustomerSumOrderByAggregateInput = {
    creditLimit?: SortOrder
  }

  export type EnumCustomerTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CustomerType | EnumCustomerTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CustomerType[] | ListEnumCustomerTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.CustomerType[] | ListEnumCustomerTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumCustomerTypeWithAggregatesFilter<$PrismaModel> | $Enums.CustomerType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCustomerTypeFilter<$PrismaModel>
    _max?: NestedEnumCustomerTypeFilter<$PrismaModel>
  }

  export type EnumCustomerStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CustomerStatus | EnumCustomerStatusFieldRefInput<$PrismaModel>
    in?: $Enums.CustomerStatus[] | ListEnumCustomerStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.CustomerStatus[] | ListEnumCustomerStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumCustomerStatusWithAggregatesFilter<$PrismaModel> | $Enums.CustomerStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCustomerStatusFilter<$PrismaModel>
    _max?: NestedEnumCustomerStatusFilter<$PrismaModel>
  }

  export type CustomerScalarRelationFilter = {
    is?: CustomerWhereInput
    isNot?: CustomerWhereInput
  }

  export type CustomerContactCountOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    name?: SortOrder
    title?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    mobile?: SortOrder
    isPrimary?: SortOrder
    department?: SortOrder
    isActive?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CustomerContactMaxOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    name?: SortOrder
    title?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    mobile?: SortOrder
    isPrimary?: SortOrder
    department?: SortOrder
    isActive?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CustomerContactMinOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    name?: SortOrder
    title?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    mobile?: SortOrder
    isPrimary?: SortOrder
    department?: SortOrder
    isActive?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumOrderTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderType | EnumOrderTypeFieldRefInput<$PrismaModel>
    in?: $Enums.OrderType[] | ListEnumOrderTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderType[] | ListEnumOrderTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderTypeFilter<$PrismaModel> | $Enums.OrderType
  }

  export type EnumOrderChannelFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderChannel | EnumOrderChannelFieldRefInput<$PrismaModel>
    in?: $Enums.OrderChannel[] | ListEnumOrderChannelFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderChannel[] | ListEnumOrderChannelFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderChannelFilter<$PrismaModel> | $Enums.OrderChannel
  }

  export type EnumOrderStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusFilter<$PrismaModel> | $Enums.OrderStatus
  }

  export type EnumFulfillmentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.FulfillmentStatus | EnumFulfillmentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.FulfillmentStatus[] | ListEnumFulfillmentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.FulfillmentStatus[] | ListEnumFulfillmentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumFulfillmentStatusFilter<$PrismaModel> | $Enums.FulfillmentStatus
  }

  export type EnumPaymentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusFilter<$PrismaModel> | $Enums.PaymentStatus
  }

  export type EnumOrderPriorityFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderPriority | EnumOrderPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.OrderPriority[] | ListEnumOrderPriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderPriority[] | ListEnumOrderPriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderPriorityFilter<$PrismaModel> | $Enums.OrderPriority
  }

  export type OrderCountOrderByAggregateInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    customerId?: SortOrder
    warehouseId?: SortOrder
    type?: SortOrder
    channel?: SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    shippingCost?: SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    fulfillmentStatus?: SortOrder
    paymentStatus?: SortOrder
    orderDate?: SortOrder
    requiredDate?: SortOrder
    promisedDate?: SortOrder
    shippedDate?: SortOrder
    deliveredDate?: SortOrder
    shippingMethod?: SortOrder
    trackingNumber?: SortOrder
    carrier?: SortOrder
    shippingAddress?: SortOrder
    priority?: SortOrder
    rushOrder?: SortOrder
    notes?: SortOrder
    internalNotes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type OrderAvgOrderByAggregateInput = {
    subtotal?: SortOrder
    taxAmount?: SortOrder
    shippingCost?: SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
  }

  export type OrderMaxOrderByAggregateInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    customerId?: SortOrder
    warehouseId?: SortOrder
    type?: SortOrder
    channel?: SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    shippingCost?: SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    fulfillmentStatus?: SortOrder
    paymentStatus?: SortOrder
    orderDate?: SortOrder
    requiredDate?: SortOrder
    promisedDate?: SortOrder
    shippedDate?: SortOrder
    deliveredDate?: SortOrder
    shippingMethod?: SortOrder
    trackingNumber?: SortOrder
    carrier?: SortOrder
    priority?: SortOrder
    rushOrder?: SortOrder
    notes?: SortOrder
    internalNotes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type OrderMinOrderByAggregateInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    customerId?: SortOrder
    warehouseId?: SortOrder
    type?: SortOrder
    channel?: SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    shippingCost?: SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    fulfillmentStatus?: SortOrder
    paymentStatus?: SortOrder
    orderDate?: SortOrder
    requiredDate?: SortOrder
    promisedDate?: SortOrder
    shippedDate?: SortOrder
    deliveredDate?: SortOrder
    shippingMethod?: SortOrder
    trackingNumber?: SortOrder
    carrier?: SortOrder
    priority?: SortOrder
    rushOrder?: SortOrder
    notes?: SortOrder
    internalNotes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type OrderSumOrderByAggregateInput = {
    subtotal?: SortOrder
    taxAmount?: SortOrder
    shippingCost?: SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
  }

  export type EnumOrderTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderType | EnumOrderTypeFieldRefInput<$PrismaModel>
    in?: $Enums.OrderType[] | ListEnumOrderTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderType[] | ListEnumOrderTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderTypeWithAggregatesFilter<$PrismaModel> | $Enums.OrderType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderTypeFilter<$PrismaModel>
    _max?: NestedEnumOrderTypeFilter<$PrismaModel>
  }

  export type EnumOrderChannelWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderChannel | EnumOrderChannelFieldRefInput<$PrismaModel>
    in?: $Enums.OrderChannel[] | ListEnumOrderChannelFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderChannel[] | ListEnumOrderChannelFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderChannelWithAggregatesFilter<$PrismaModel> | $Enums.OrderChannel
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderChannelFilter<$PrismaModel>
    _max?: NestedEnumOrderChannelFilter<$PrismaModel>
  }

  export type EnumOrderStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusWithAggregatesFilter<$PrismaModel> | $Enums.OrderStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderStatusFilter<$PrismaModel>
    _max?: NestedEnumOrderStatusFilter<$PrismaModel>
  }

  export type EnumFulfillmentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.FulfillmentStatus | EnumFulfillmentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.FulfillmentStatus[] | ListEnumFulfillmentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.FulfillmentStatus[] | ListEnumFulfillmentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumFulfillmentStatusWithAggregatesFilter<$PrismaModel> | $Enums.FulfillmentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumFulfillmentStatusFilter<$PrismaModel>
    _max?: NestedEnumFulfillmentStatusFilter<$PrismaModel>
  }

  export type EnumPaymentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel> | $Enums.PaymentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentStatusFilter<$PrismaModel>
    _max?: NestedEnumPaymentStatusFilter<$PrismaModel>
  }

  export type EnumOrderPriorityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderPriority | EnumOrderPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.OrderPriority[] | ListEnumOrderPriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderPriority[] | ListEnumOrderPriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderPriorityWithAggregatesFilter<$PrismaModel> | $Enums.OrderPriority
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderPriorityFilter<$PrismaModel>
    _max?: NestedEnumOrderPriorityFilter<$PrismaModel>
  }

  export type EnumOrderItemStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderItemStatus | EnumOrderItemStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderItemStatus[] | ListEnumOrderItemStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderItemStatus[] | ListEnumOrderItemStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderItemStatusFilter<$PrismaModel> | $Enums.OrderItemStatus
  }

  export type OrderScalarRelationFilter = {
    is?: OrderWhereInput
    isNot?: OrderWhereInput
  }

  export type OrderItemCountOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrder
    orderedQty?: SortOrder
    shippedQty?: SortOrder
    remainingQty?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    discountAmount?: SortOrder
    productName?: SortOrder
    productSku?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderItemAvgOrderByAggregateInput = {
    orderedQty?: SortOrder
    shippedQty?: SortOrder
    remainingQty?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    discountAmount?: SortOrder
  }

  export type OrderItemMaxOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrder
    orderedQty?: SortOrder
    shippedQty?: SortOrder
    remainingQty?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    discountAmount?: SortOrder
    productName?: SortOrder
    productSku?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderItemMinOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrder
    orderedQty?: SortOrder
    shippedQty?: SortOrder
    remainingQty?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    discountAmount?: SortOrder
    productName?: SortOrder
    productSku?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderItemSumOrderByAggregateInput = {
    orderedQty?: SortOrder
    shippedQty?: SortOrder
    remainingQty?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    discountAmount?: SortOrder
  }

  export type EnumOrderItemStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderItemStatus | EnumOrderItemStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderItemStatus[] | ListEnumOrderItemStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderItemStatus[] | ListEnumOrderItemStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderItemStatusWithAggregatesFilter<$PrismaModel> | $Enums.OrderItemStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderItemStatusFilter<$PrismaModel>
    _max?: NestedEnumOrderItemStatusFilter<$PrismaModel>
  }

  export type EnumShipmentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ShipmentStatus | EnumShipmentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ShipmentStatus[] | ListEnumShipmentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ShipmentStatus[] | ListEnumShipmentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumShipmentStatusFilter<$PrismaModel> | $Enums.ShipmentStatus
  }

  export type OrderNullableScalarRelationFilter = {
    is?: OrderWhereInput | null
    isNot?: OrderWhereInput | null
  }

  export type ShipmentPackageListRelationFilter = {
    every?: ShipmentPackageWhereInput
    some?: ShipmentPackageWhereInput
    none?: ShipmentPackageWhereInput
  }

  export type ShipmentTrackingListRelationFilter = {
    every?: ShipmentTrackingWhereInput
    some?: ShipmentTrackingWhereInput
    none?: ShipmentTrackingWhereInput
  }

  export type ShipmentPackageOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ShipmentTrackingOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ShipmentCountOrderByAggregateInput = {
    id?: SortOrder
    shipmentNumber?: SortOrder
    orderId?: SortOrder
    warehouseId?: SortOrder
    carrier?: SortOrder
    service?: SortOrder
    trackingNumber?: SortOrder
    fromAddress?: SortOrder
    toAddress?: SortOrder
    packageCount?: SortOrder
    weight?: SortOrder
    dimensions?: SortOrder
    shippingCost?: SortOrder
    insuranceValue?: SortOrder
    status?: SortOrder
    shipDate?: SortOrder
    estimatedDelivery?: SortOrder
    actualDelivery?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type ShipmentAvgOrderByAggregateInput = {
    packageCount?: SortOrder
    weight?: SortOrder
    shippingCost?: SortOrder
    insuranceValue?: SortOrder
  }

  export type ShipmentMaxOrderByAggregateInput = {
    id?: SortOrder
    shipmentNumber?: SortOrder
    orderId?: SortOrder
    warehouseId?: SortOrder
    carrier?: SortOrder
    service?: SortOrder
    trackingNumber?: SortOrder
    packageCount?: SortOrder
    weight?: SortOrder
    shippingCost?: SortOrder
    insuranceValue?: SortOrder
    status?: SortOrder
    shipDate?: SortOrder
    estimatedDelivery?: SortOrder
    actualDelivery?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type ShipmentMinOrderByAggregateInput = {
    id?: SortOrder
    shipmentNumber?: SortOrder
    orderId?: SortOrder
    warehouseId?: SortOrder
    carrier?: SortOrder
    service?: SortOrder
    trackingNumber?: SortOrder
    packageCount?: SortOrder
    weight?: SortOrder
    shippingCost?: SortOrder
    insuranceValue?: SortOrder
    status?: SortOrder
    shipDate?: SortOrder
    estimatedDelivery?: SortOrder
    actualDelivery?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type ShipmentSumOrderByAggregateInput = {
    packageCount?: SortOrder
    weight?: SortOrder
    shippingCost?: SortOrder
    insuranceValue?: SortOrder
  }

  export type EnumShipmentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ShipmentStatus | EnumShipmentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ShipmentStatus[] | ListEnumShipmentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ShipmentStatus[] | ListEnumShipmentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumShipmentStatusWithAggregatesFilter<$PrismaModel> | $Enums.ShipmentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumShipmentStatusFilter<$PrismaModel>
    _max?: NestedEnumShipmentStatusFilter<$PrismaModel>
  }

  export type ShipmentScalarRelationFilter = {
    is?: ShipmentWhereInput
    isNot?: ShipmentWhereInput
  }

  export type ShipmentPackageCountOrderByAggregateInput = {
    id?: SortOrder
    shipmentId?: SortOrder
    packageNumber?: SortOrder
    trackingNumber?: SortOrder
    weight?: SortOrder
    dimensions?: SortOrder
    contents?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ShipmentPackageAvgOrderByAggregateInput = {
    weight?: SortOrder
  }

  export type ShipmentPackageMaxOrderByAggregateInput = {
    id?: SortOrder
    shipmentId?: SortOrder
    packageNumber?: SortOrder
    trackingNumber?: SortOrder
    weight?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ShipmentPackageMinOrderByAggregateInput = {
    id?: SortOrder
    shipmentId?: SortOrder
    packageNumber?: SortOrder
    trackingNumber?: SortOrder
    weight?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ShipmentPackageSumOrderByAggregateInput = {
    weight?: SortOrder
  }

  export type ShipmentTrackingCountOrderByAggregateInput = {
    id?: SortOrder
    shipmentId?: SortOrder
    status?: SortOrder
    description?: SortOrder
    location?: SortOrder
    eventDate?: SortOrder
    rawData?: SortOrder
    createdAt?: SortOrder
  }

  export type ShipmentTrackingMaxOrderByAggregateInput = {
    id?: SortOrder
    shipmentId?: SortOrder
    status?: SortOrder
    description?: SortOrder
    location?: SortOrder
    eventDate?: SortOrder
    createdAt?: SortOrder
  }

  export type ShipmentTrackingMinOrderByAggregateInput = {
    id?: SortOrder
    shipmentId?: SortOrder
    status?: SortOrder
    description?: SortOrder
    location?: SortOrder
    eventDate?: SortOrder
    createdAt?: SortOrder
  }

  export type EnumTransferStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.TransferStatus | EnumTransferStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TransferStatus[] | ListEnumTransferStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransferStatus[] | ListEnumTransferStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTransferStatusFilter<$PrismaModel> | $Enums.TransferStatus
  }

  export type StockTransferCountOrderByAggregateInput = {
    id?: SortOrder
    transferNumber?: SortOrder
    fromWarehouseId?: SortOrder
    toWarehouseId?: SortOrder
    status?: SortOrder
    requestedDate?: SortOrder
    shippedDate?: SortOrder
    receivedDate?: SortOrder
    approvedBy?: SortOrder
    approvedAt?: SortOrder
    reason?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type StockTransferMaxOrderByAggregateInput = {
    id?: SortOrder
    transferNumber?: SortOrder
    fromWarehouseId?: SortOrder
    toWarehouseId?: SortOrder
    status?: SortOrder
    requestedDate?: SortOrder
    shippedDate?: SortOrder
    receivedDate?: SortOrder
    approvedBy?: SortOrder
    approvedAt?: SortOrder
    reason?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type StockTransferMinOrderByAggregateInput = {
    id?: SortOrder
    transferNumber?: SortOrder
    fromWarehouseId?: SortOrder
    toWarehouseId?: SortOrder
    status?: SortOrder
    requestedDate?: SortOrder
    shippedDate?: SortOrder
    receivedDate?: SortOrder
    approvedBy?: SortOrder
    approvedAt?: SortOrder
    reason?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type EnumTransferStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TransferStatus | EnumTransferStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TransferStatus[] | ListEnumTransferStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransferStatus[] | ListEnumTransferStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTransferStatusWithAggregatesFilter<$PrismaModel> | $Enums.TransferStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTransferStatusFilter<$PrismaModel>
    _max?: NestedEnumTransferStatusFilter<$PrismaModel>
  }

  export type EnumTransferItemStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.TransferItemStatus | EnumTransferItemStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TransferItemStatus[] | ListEnumTransferItemStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransferItemStatus[] | ListEnumTransferItemStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTransferItemStatusFilter<$PrismaModel> | $Enums.TransferItemStatus
  }

  export type StockTransferScalarRelationFilter = {
    is?: StockTransferWhereInput
    isNot?: StockTransferWhereInput
  }

  export type StockTransferItemCountOrderByAggregateInput = {
    id?: SortOrder
    transferId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrder
    requestedQty?: SortOrder
    shippedQty?: SortOrder
    receivedQty?: SortOrder
    productName?: SortOrder
    productSku?: SortOrder
    lotNumber?: SortOrder
    batchNumber?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StockTransferItemAvgOrderByAggregateInput = {
    requestedQty?: SortOrder
    shippedQty?: SortOrder
    receivedQty?: SortOrder
  }

  export type StockTransferItemMaxOrderByAggregateInput = {
    id?: SortOrder
    transferId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrder
    requestedQty?: SortOrder
    shippedQty?: SortOrder
    receivedQty?: SortOrder
    productName?: SortOrder
    productSku?: SortOrder
    lotNumber?: SortOrder
    batchNumber?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StockTransferItemMinOrderByAggregateInput = {
    id?: SortOrder
    transferId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrder
    requestedQty?: SortOrder
    shippedQty?: SortOrder
    receivedQty?: SortOrder
    productName?: SortOrder
    productSku?: SortOrder
    lotNumber?: SortOrder
    batchNumber?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StockTransferItemSumOrderByAggregateInput = {
    requestedQty?: SortOrder
    shippedQty?: SortOrder
    receivedQty?: SortOrder
  }

  export type EnumTransferItemStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TransferItemStatus | EnumTransferItemStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TransferItemStatus[] | ListEnumTransferItemStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransferItemStatus[] | ListEnumTransferItemStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTransferItemStatusWithAggregatesFilter<$PrismaModel> | $Enums.TransferItemStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTransferItemStatusFilter<$PrismaModel>
    _max?: NestedEnumTransferItemStatusFilter<$PrismaModel>
  }

  export type EnumReservationTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ReservationType | EnumReservationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ReservationType[] | ListEnumReservationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReservationType[] | ListEnumReservationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumReservationTypeFilter<$PrismaModel> | $Enums.ReservationType
  }

  export type EnumReservationStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ReservationStatus | EnumReservationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ReservationStatus[] | ListEnumReservationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReservationStatus[] | ListEnumReservationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumReservationStatusFilter<$PrismaModel> | $Enums.ReservationStatus
  }

  export type InventoryItemScalarRelationFilter = {
    is?: InventoryItemWhereInput
    isNot?: InventoryItemWhereInput
  }

  export type StockReservationCountOrderByAggregateInput = {
    id?: SortOrder
    inventoryItemId?: SortOrder
    reservationType?: SortOrder
    referenceType?: SortOrder
    referenceId?: SortOrder
    quantity?: SortOrder
    status?: SortOrder
    reservedAt?: SortOrder
    expiresAt?: SortOrder
    releasedAt?: SortOrder
    reservedBy?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StockReservationAvgOrderByAggregateInput = {
    quantity?: SortOrder
  }

  export type StockReservationMaxOrderByAggregateInput = {
    id?: SortOrder
    inventoryItemId?: SortOrder
    reservationType?: SortOrder
    referenceType?: SortOrder
    referenceId?: SortOrder
    quantity?: SortOrder
    status?: SortOrder
    reservedAt?: SortOrder
    expiresAt?: SortOrder
    releasedAt?: SortOrder
    reservedBy?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StockReservationMinOrderByAggregateInput = {
    id?: SortOrder
    inventoryItemId?: SortOrder
    reservationType?: SortOrder
    referenceType?: SortOrder
    referenceId?: SortOrder
    quantity?: SortOrder
    status?: SortOrder
    reservedAt?: SortOrder
    expiresAt?: SortOrder
    releasedAt?: SortOrder
    reservedBy?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StockReservationSumOrderByAggregateInput = {
    quantity?: SortOrder
  }

  export type EnumReservationTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReservationType | EnumReservationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ReservationType[] | ListEnumReservationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReservationType[] | ListEnumReservationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumReservationTypeWithAggregatesFilter<$PrismaModel> | $Enums.ReservationType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReservationTypeFilter<$PrismaModel>
    _max?: NestedEnumReservationTypeFilter<$PrismaModel>
  }

  export type EnumReservationStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReservationStatus | EnumReservationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ReservationStatus[] | ListEnumReservationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReservationStatus[] | ListEnumReservationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumReservationStatusWithAggregatesFilter<$PrismaModel> | $Enums.ReservationStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReservationStatusFilter<$PrismaModel>
    _max?: NestedEnumReservationStatusFilter<$PrismaModel>
  }

  export type EnumInvoiceStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.InvoiceStatus | EnumInvoiceStatusFieldRefInput<$PrismaModel>
    in?: $Enums.InvoiceStatus[] | ListEnumInvoiceStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.InvoiceStatus[] | ListEnumInvoiceStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumInvoiceStatusFilter<$PrismaModel> | $Enums.InvoiceStatus
  }

  export type PurchaseOrderNullableScalarRelationFilter = {
    is?: PurchaseOrderWhereInput | null
    isNot?: PurchaseOrderWhereInput | null
  }

  export type SupplierInvoiceCountOrderByAggregateInput = {
    id?: SortOrder
    invoiceNumber?: SortOrder
    supplierId?: SortOrder
    purchaseOrderId?: SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    totalAmount?: SortOrder
    currency?: SortOrder
    invoiceDate?: SortOrder
    dueDate?: SortOrder
    paidDate?: SortOrder
    status?: SortOrder
    paymentMethod?: SortOrder
    paymentReference?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SupplierInvoiceAvgOrderByAggregateInput = {
    subtotal?: SortOrder
    taxAmount?: SortOrder
    totalAmount?: SortOrder
  }

  export type SupplierInvoiceMaxOrderByAggregateInput = {
    id?: SortOrder
    invoiceNumber?: SortOrder
    supplierId?: SortOrder
    purchaseOrderId?: SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    totalAmount?: SortOrder
    currency?: SortOrder
    invoiceDate?: SortOrder
    dueDate?: SortOrder
    paidDate?: SortOrder
    status?: SortOrder
    paymentMethod?: SortOrder
    paymentReference?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SupplierInvoiceMinOrderByAggregateInput = {
    id?: SortOrder
    invoiceNumber?: SortOrder
    supplierId?: SortOrder
    purchaseOrderId?: SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    totalAmount?: SortOrder
    currency?: SortOrder
    invoiceDate?: SortOrder
    dueDate?: SortOrder
    paidDate?: SortOrder
    status?: SortOrder
    paymentMethod?: SortOrder
    paymentReference?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SupplierInvoiceSumOrderByAggregateInput = {
    subtotal?: SortOrder
    taxAmount?: SortOrder
    totalAmount?: SortOrder
  }

  export type EnumInvoiceStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.InvoiceStatus | EnumInvoiceStatusFieldRefInput<$PrismaModel>
    in?: $Enums.InvoiceStatus[] | ListEnumInvoiceStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.InvoiceStatus[] | ListEnumInvoiceStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumInvoiceStatusWithAggregatesFilter<$PrismaModel> | $Enums.InvoiceStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumInvoiceStatusFilter<$PrismaModel>
    _max?: NestedEnumInvoiceStatusFilter<$PrismaModel>
  }

  export type CustomerInvoiceCountOrderByAggregateInput = {
    id?: SortOrder
    invoiceNumber?: SortOrder
    customerId?: SortOrder
    orderId?: SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    totalAmount?: SortOrder
    paidAmount?: SortOrder
    balanceAmount?: SortOrder
    currency?: SortOrder
    invoiceDate?: SortOrder
    dueDate?: SortOrder
    paidDate?: SortOrder
    status?: SortOrder
    paymentMethod?: SortOrder
    paymentReference?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CustomerInvoiceAvgOrderByAggregateInput = {
    subtotal?: SortOrder
    taxAmount?: SortOrder
    totalAmount?: SortOrder
    paidAmount?: SortOrder
    balanceAmount?: SortOrder
  }

  export type CustomerInvoiceMaxOrderByAggregateInput = {
    id?: SortOrder
    invoiceNumber?: SortOrder
    customerId?: SortOrder
    orderId?: SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    totalAmount?: SortOrder
    paidAmount?: SortOrder
    balanceAmount?: SortOrder
    currency?: SortOrder
    invoiceDate?: SortOrder
    dueDate?: SortOrder
    paidDate?: SortOrder
    status?: SortOrder
    paymentMethod?: SortOrder
    paymentReference?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CustomerInvoiceMinOrderByAggregateInput = {
    id?: SortOrder
    invoiceNumber?: SortOrder
    customerId?: SortOrder
    orderId?: SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    totalAmount?: SortOrder
    paidAmount?: SortOrder
    balanceAmount?: SortOrder
    currency?: SortOrder
    invoiceDate?: SortOrder
    dueDate?: SortOrder
    paidDate?: SortOrder
    status?: SortOrder
    paymentMethod?: SortOrder
    paymentReference?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CustomerInvoiceSumOrderByAggregateInput = {
    subtotal?: SortOrder
    taxAmount?: SortOrder
    totalAmount?: SortOrder
    paidAmount?: SortOrder
    balanceAmount?: SortOrder
  }

  export type EnumAuditTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditType | EnumAuditTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AuditType[] | ListEnumAuditTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditType[] | ListEnumAuditTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditTypeFilter<$PrismaModel> | $Enums.AuditType
  }

  export type EnumAuditMethodFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditMethod | EnumAuditMethodFieldRefInput<$PrismaModel>
    in?: $Enums.AuditMethod[] | ListEnumAuditMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditMethod[] | ListEnumAuditMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditMethodFilter<$PrismaModel> | $Enums.AuditMethod
  }

  export type EnumAuditStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditStatus | EnumAuditStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AuditStatus[] | ListEnumAuditStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditStatus[] | ListEnumAuditStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditStatusFilter<$PrismaModel> | $Enums.AuditStatus
  }

  export type ProductNullableScalarRelationFilter = {
    is?: ProductWhereInput | null
    isNot?: ProductWhereInput | null
  }

  export type InventoryAuditCountOrderByAggregateInput = {
    id?: SortOrder
    auditNumber?: SortOrder
    warehouseId?: SortOrder
    productId?: SortOrder
    type?: SortOrder
    method?: SortOrder
    status?: SortOrder
    plannedDate?: SortOrder
    startedDate?: SortOrder
    completedDate?: SortOrder
    auditedBy?: SortOrder
    supervisedBy?: SortOrder
    totalItems?: SortOrder
    itemsCounted?: SortOrder
    discrepancies?: SortOrder
    adjustmentValue?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type InventoryAuditAvgOrderByAggregateInput = {
    totalItems?: SortOrder
    itemsCounted?: SortOrder
    discrepancies?: SortOrder
    adjustmentValue?: SortOrder
  }

  export type InventoryAuditMaxOrderByAggregateInput = {
    id?: SortOrder
    auditNumber?: SortOrder
    warehouseId?: SortOrder
    productId?: SortOrder
    type?: SortOrder
    method?: SortOrder
    status?: SortOrder
    plannedDate?: SortOrder
    startedDate?: SortOrder
    completedDate?: SortOrder
    auditedBy?: SortOrder
    supervisedBy?: SortOrder
    totalItems?: SortOrder
    itemsCounted?: SortOrder
    discrepancies?: SortOrder
    adjustmentValue?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type InventoryAuditMinOrderByAggregateInput = {
    id?: SortOrder
    auditNumber?: SortOrder
    warehouseId?: SortOrder
    productId?: SortOrder
    type?: SortOrder
    method?: SortOrder
    status?: SortOrder
    plannedDate?: SortOrder
    startedDate?: SortOrder
    completedDate?: SortOrder
    auditedBy?: SortOrder
    supervisedBy?: SortOrder
    totalItems?: SortOrder
    itemsCounted?: SortOrder
    discrepancies?: SortOrder
    adjustmentValue?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type InventoryAuditSumOrderByAggregateInput = {
    totalItems?: SortOrder
    itemsCounted?: SortOrder
    discrepancies?: SortOrder
    adjustmentValue?: SortOrder
  }

  export type EnumAuditTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditType | EnumAuditTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AuditType[] | ListEnumAuditTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditType[] | ListEnumAuditTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditTypeWithAggregatesFilter<$PrismaModel> | $Enums.AuditType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAuditTypeFilter<$PrismaModel>
    _max?: NestedEnumAuditTypeFilter<$PrismaModel>
  }

  export type EnumAuditMethodWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditMethod | EnumAuditMethodFieldRefInput<$PrismaModel>
    in?: $Enums.AuditMethod[] | ListEnumAuditMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditMethod[] | ListEnumAuditMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditMethodWithAggregatesFilter<$PrismaModel> | $Enums.AuditMethod
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAuditMethodFilter<$PrismaModel>
    _max?: NestedEnumAuditMethodFilter<$PrismaModel>
  }

  export type EnumAuditStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditStatus | EnumAuditStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AuditStatus[] | ListEnumAuditStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditStatus[] | ListEnumAuditStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditStatusWithAggregatesFilter<$PrismaModel> | $Enums.AuditStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAuditStatusFilter<$PrismaModel>
    _max?: NestedEnumAuditStatusFilter<$PrismaModel>
  }

  export type EnumAuditItemStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditItemStatus | EnumAuditItemStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AuditItemStatus[] | ListEnumAuditItemStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditItemStatus[] | ListEnumAuditItemStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditItemStatusFilter<$PrismaModel> | $Enums.AuditItemStatus
  }

  export type InventoryAuditScalarRelationFilter = {
    is?: InventoryAuditWhereInput
    isNot?: InventoryAuditWhereInput
  }

  export type InventoryAuditItemCountOrderByAggregateInput = {
    id?: SortOrder
    auditId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrder
    warehouseId?: SortOrder
    systemQty?: SortOrder
    countedQty?: SortOrder
    adjustmentQty?: SortOrder
    location?: SortOrder
    lotNumber?: SortOrder
    batchNumber?: SortOrder
    countedBy?: SortOrder
    countedAt?: SortOrder
    verifiedBy?: SortOrder
    verifiedAt?: SortOrder
    status?: SortOrder
    discrepancyReason?: SortOrder
    requiresInvestigation?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type InventoryAuditItemAvgOrderByAggregateInput = {
    systemQty?: SortOrder
    countedQty?: SortOrder
    adjustmentQty?: SortOrder
  }

  export type InventoryAuditItemMaxOrderByAggregateInput = {
    id?: SortOrder
    auditId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrder
    warehouseId?: SortOrder
    systemQty?: SortOrder
    countedQty?: SortOrder
    adjustmentQty?: SortOrder
    location?: SortOrder
    lotNumber?: SortOrder
    batchNumber?: SortOrder
    countedBy?: SortOrder
    countedAt?: SortOrder
    verifiedBy?: SortOrder
    verifiedAt?: SortOrder
    status?: SortOrder
    discrepancyReason?: SortOrder
    requiresInvestigation?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type InventoryAuditItemMinOrderByAggregateInput = {
    id?: SortOrder
    auditId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrder
    warehouseId?: SortOrder
    systemQty?: SortOrder
    countedQty?: SortOrder
    adjustmentQty?: SortOrder
    location?: SortOrder
    lotNumber?: SortOrder
    batchNumber?: SortOrder
    countedBy?: SortOrder
    countedAt?: SortOrder
    verifiedBy?: SortOrder
    verifiedAt?: SortOrder
    status?: SortOrder
    discrepancyReason?: SortOrder
    requiresInvestigation?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type InventoryAuditItemSumOrderByAggregateInput = {
    systemQty?: SortOrder
    countedQty?: SortOrder
    adjustmentQty?: SortOrder
  }

  export type EnumAuditItemStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditItemStatus | EnumAuditItemStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AuditItemStatus[] | ListEnumAuditItemStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditItemStatus[] | ListEnumAuditItemStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditItemStatusWithAggregatesFilter<$PrismaModel> | $Enums.AuditItemStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAuditItemStatusFilter<$PrismaModel>
    _max?: NestedEnumAuditItemStatusFilter<$PrismaModel>
  }

  export type ProductReviewCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    rating?: SortOrder
    title?: SortOrder
    review?: SortOrder
    reviewerName?: SortOrder
    reviewerEmail?: SortOrder
    isApproved?: SortOrder
    isVisible?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductReviewAvgOrderByAggregateInput = {
    rating?: SortOrder
  }

  export type ProductReviewMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    rating?: SortOrder
    title?: SortOrder
    review?: SortOrder
    reviewerName?: SortOrder
    reviewerEmail?: SortOrder
    isApproved?: SortOrder
    isVisible?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductReviewMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    rating?: SortOrder
    title?: SortOrder
    review?: SortOrder
    reviewerName?: SortOrder
    reviewerEmail?: SortOrder
    isApproved?: SortOrder
    isVisible?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductReviewSumOrderByAggregateInput = {
    rating?: SortOrder
  }

  export type SystemConfigurationCategoryKeyCompoundUniqueInput = {
    category: string
    key: string
  }

  export type SystemConfigurationCountOrderByAggregateInput = {
    id?: SortOrder
    category?: SortOrder
    key?: SortOrder
    value?: SortOrder
    description?: SortOrder
    dataType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SystemConfigurationMaxOrderByAggregateInput = {
    id?: SortOrder
    category?: SortOrder
    key?: SortOrder
    description?: SortOrder
    dataType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SystemConfigurationMinOrderByAggregateInput = {
    id?: SortOrder
    category?: SortOrder
    key?: SortOrder
    description?: SortOrder
    dataType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CategoryCreateNestedOneWithoutProductsInput = {
    create?: XOR<CategoryCreateWithoutProductsInput, CategoryUncheckedCreateWithoutProductsInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutProductsInput
    connect?: CategoryWhereUniqueInput
  }

  export type BrandCreateNestedOneWithoutProductsInput = {
    create?: XOR<BrandCreateWithoutProductsInput, BrandUncheckedCreateWithoutProductsInput>
    connectOrCreate?: BrandCreateOrConnectWithoutProductsInput
    connect?: BrandWhereUniqueInput
  }

  export type InventoryItemCreateNestedManyWithoutProductInput = {
    create?: XOR<InventoryItemCreateWithoutProductInput, InventoryItemUncheckedCreateWithoutProductInput> | InventoryItemCreateWithoutProductInput[] | InventoryItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: InventoryItemCreateOrConnectWithoutProductInput | InventoryItemCreateOrConnectWithoutProductInput[]
    createMany?: InventoryItemCreateManyProductInputEnvelope
    connect?: InventoryItemWhereUniqueInput | InventoryItemWhereUniqueInput[]
  }

  export type ProductVariantCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductVariantCreateWithoutProductInput, ProductVariantUncheckedCreateWithoutProductInput> | ProductVariantCreateWithoutProductInput[] | ProductVariantUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductVariantCreateOrConnectWithoutProductInput | ProductVariantCreateOrConnectWithoutProductInput[]
    createMany?: ProductVariantCreateManyProductInputEnvelope
    connect?: ProductVariantWhereUniqueInput | ProductVariantWhereUniqueInput[]
  }

  export type ProductSupplierCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductSupplierCreateWithoutProductInput, ProductSupplierUncheckedCreateWithoutProductInput> | ProductSupplierCreateWithoutProductInput[] | ProductSupplierUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductSupplierCreateOrConnectWithoutProductInput | ProductSupplierCreateOrConnectWithoutProductInput[]
    createMany?: ProductSupplierCreateManyProductInputEnvelope
    connect?: ProductSupplierWhereUniqueInput | ProductSupplierWhereUniqueInput[]
  }

  export type OrderItemCreateNestedManyWithoutProductInput = {
    create?: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput> | OrderItemCreateWithoutProductInput[] | OrderItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutProductInput | OrderItemCreateOrConnectWithoutProductInput[]
    createMany?: OrderItemCreateManyProductInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type PurchaseOrderItemCreateNestedManyWithoutProductInput = {
    create?: XOR<PurchaseOrderItemCreateWithoutProductInput, PurchaseOrderItemUncheckedCreateWithoutProductInput> | PurchaseOrderItemCreateWithoutProductInput[] | PurchaseOrderItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: PurchaseOrderItemCreateOrConnectWithoutProductInput | PurchaseOrderItemCreateOrConnectWithoutProductInput[]
    createMany?: PurchaseOrderItemCreateManyProductInputEnvelope
    connect?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
  }

  export type InventoryMovementCreateNestedManyWithoutProductInput = {
    create?: XOR<InventoryMovementCreateWithoutProductInput, InventoryMovementUncheckedCreateWithoutProductInput> | InventoryMovementCreateWithoutProductInput[] | InventoryMovementUncheckedCreateWithoutProductInput[]
    connectOrCreate?: InventoryMovementCreateOrConnectWithoutProductInput | InventoryMovementCreateOrConnectWithoutProductInput[]
    createMany?: InventoryMovementCreateManyProductInputEnvelope
    connect?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
  }

  export type InventoryAuditCreateNestedManyWithoutProductInput = {
    create?: XOR<InventoryAuditCreateWithoutProductInput, InventoryAuditUncheckedCreateWithoutProductInput> | InventoryAuditCreateWithoutProductInput[] | InventoryAuditUncheckedCreateWithoutProductInput[]
    connectOrCreate?: InventoryAuditCreateOrConnectWithoutProductInput | InventoryAuditCreateOrConnectWithoutProductInput[]
    createMany?: InventoryAuditCreateManyProductInputEnvelope
    connect?: InventoryAuditWhereUniqueInput | InventoryAuditWhereUniqueInput[]
  }

  export type ProductReviewCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductReviewCreateWithoutProductInput, ProductReviewUncheckedCreateWithoutProductInput> | ProductReviewCreateWithoutProductInput[] | ProductReviewUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductReviewCreateOrConnectWithoutProductInput | ProductReviewCreateOrConnectWithoutProductInput[]
    createMany?: ProductReviewCreateManyProductInputEnvelope
    connect?: ProductReviewWhereUniqueInput | ProductReviewWhereUniqueInput[]
  }

  export type ProductBundleCreateNestedManyWithoutProductsInput = {
    create?: XOR<ProductBundleCreateWithoutProductsInput, ProductBundleUncheckedCreateWithoutProductsInput> | ProductBundleCreateWithoutProductsInput[] | ProductBundleUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: ProductBundleCreateOrConnectWithoutProductsInput | ProductBundleCreateOrConnectWithoutProductsInput[]
    connect?: ProductBundleWhereUniqueInput | ProductBundleWhereUniqueInput[]
  }

  export type ProductBundleCreateNestedManyWithoutBundleItemsInput = {
    create?: XOR<ProductBundleCreateWithoutBundleItemsInput, ProductBundleUncheckedCreateWithoutBundleItemsInput> | ProductBundleCreateWithoutBundleItemsInput[] | ProductBundleUncheckedCreateWithoutBundleItemsInput[]
    connectOrCreate?: ProductBundleCreateOrConnectWithoutBundleItemsInput | ProductBundleCreateOrConnectWithoutBundleItemsInput[]
    connect?: ProductBundleWhereUniqueInput | ProductBundleWhereUniqueInput[]
  }

  export type GoodsReceiptItemCreateNestedManyWithoutProductInput = {
    create?: XOR<GoodsReceiptItemCreateWithoutProductInput, GoodsReceiptItemUncheckedCreateWithoutProductInput> | GoodsReceiptItemCreateWithoutProductInput[] | GoodsReceiptItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: GoodsReceiptItemCreateOrConnectWithoutProductInput | GoodsReceiptItemCreateOrConnectWithoutProductInput[]
    createMany?: GoodsReceiptItemCreateManyProductInputEnvelope
    connect?: GoodsReceiptItemWhereUniqueInput | GoodsReceiptItemWhereUniqueInput[]
  }

  export type StockTransferItemCreateNestedManyWithoutProductInput = {
    create?: XOR<StockTransferItemCreateWithoutProductInput, StockTransferItemUncheckedCreateWithoutProductInput> | StockTransferItemCreateWithoutProductInput[] | StockTransferItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: StockTransferItemCreateOrConnectWithoutProductInput | StockTransferItemCreateOrConnectWithoutProductInput[]
    createMany?: StockTransferItemCreateManyProductInputEnvelope
    connect?: StockTransferItemWhereUniqueInput | StockTransferItemWhereUniqueInput[]
  }

  export type InventoryAuditItemCreateNestedManyWithoutProductInput = {
    create?: XOR<InventoryAuditItemCreateWithoutProductInput, InventoryAuditItemUncheckedCreateWithoutProductInput> | InventoryAuditItemCreateWithoutProductInput[] | InventoryAuditItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: InventoryAuditItemCreateOrConnectWithoutProductInput | InventoryAuditItemCreateOrConnectWithoutProductInput[]
    createMany?: InventoryAuditItemCreateManyProductInputEnvelope
    connect?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
  }

  export type InventoryItemUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<InventoryItemCreateWithoutProductInput, InventoryItemUncheckedCreateWithoutProductInput> | InventoryItemCreateWithoutProductInput[] | InventoryItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: InventoryItemCreateOrConnectWithoutProductInput | InventoryItemCreateOrConnectWithoutProductInput[]
    createMany?: InventoryItemCreateManyProductInputEnvelope
    connect?: InventoryItemWhereUniqueInput | InventoryItemWhereUniqueInput[]
  }

  export type ProductVariantUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductVariantCreateWithoutProductInput, ProductVariantUncheckedCreateWithoutProductInput> | ProductVariantCreateWithoutProductInput[] | ProductVariantUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductVariantCreateOrConnectWithoutProductInput | ProductVariantCreateOrConnectWithoutProductInput[]
    createMany?: ProductVariantCreateManyProductInputEnvelope
    connect?: ProductVariantWhereUniqueInput | ProductVariantWhereUniqueInput[]
  }

  export type ProductSupplierUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductSupplierCreateWithoutProductInput, ProductSupplierUncheckedCreateWithoutProductInput> | ProductSupplierCreateWithoutProductInput[] | ProductSupplierUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductSupplierCreateOrConnectWithoutProductInput | ProductSupplierCreateOrConnectWithoutProductInput[]
    createMany?: ProductSupplierCreateManyProductInputEnvelope
    connect?: ProductSupplierWhereUniqueInput | ProductSupplierWhereUniqueInput[]
  }

  export type OrderItemUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput> | OrderItemCreateWithoutProductInput[] | OrderItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutProductInput | OrderItemCreateOrConnectWithoutProductInput[]
    createMany?: OrderItemCreateManyProductInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type PurchaseOrderItemUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<PurchaseOrderItemCreateWithoutProductInput, PurchaseOrderItemUncheckedCreateWithoutProductInput> | PurchaseOrderItemCreateWithoutProductInput[] | PurchaseOrderItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: PurchaseOrderItemCreateOrConnectWithoutProductInput | PurchaseOrderItemCreateOrConnectWithoutProductInput[]
    createMany?: PurchaseOrderItemCreateManyProductInputEnvelope
    connect?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
  }

  export type InventoryMovementUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<InventoryMovementCreateWithoutProductInput, InventoryMovementUncheckedCreateWithoutProductInput> | InventoryMovementCreateWithoutProductInput[] | InventoryMovementUncheckedCreateWithoutProductInput[]
    connectOrCreate?: InventoryMovementCreateOrConnectWithoutProductInput | InventoryMovementCreateOrConnectWithoutProductInput[]
    createMany?: InventoryMovementCreateManyProductInputEnvelope
    connect?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
  }

  export type InventoryAuditUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<InventoryAuditCreateWithoutProductInput, InventoryAuditUncheckedCreateWithoutProductInput> | InventoryAuditCreateWithoutProductInput[] | InventoryAuditUncheckedCreateWithoutProductInput[]
    connectOrCreate?: InventoryAuditCreateOrConnectWithoutProductInput | InventoryAuditCreateOrConnectWithoutProductInput[]
    createMany?: InventoryAuditCreateManyProductInputEnvelope
    connect?: InventoryAuditWhereUniqueInput | InventoryAuditWhereUniqueInput[]
  }

  export type ProductReviewUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductReviewCreateWithoutProductInput, ProductReviewUncheckedCreateWithoutProductInput> | ProductReviewCreateWithoutProductInput[] | ProductReviewUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductReviewCreateOrConnectWithoutProductInput | ProductReviewCreateOrConnectWithoutProductInput[]
    createMany?: ProductReviewCreateManyProductInputEnvelope
    connect?: ProductReviewWhereUniqueInput | ProductReviewWhereUniqueInput[]
  }

  export type ProductBundleUncheckedCreateNestedManyWithoutProductsInput = {
    create?: XOR<ProductBundleCreateWithoutProductsInput, ProductBundleUncheckedCreateWithoutProductsInput> | ProductBundleCreateWithoutProductsInput[] | ProductBundleUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: ProductBundleCreateOrConnectWithoutProductsInput | ProductBundleCreateOrConnectWithoutProductsInput[]
    connect?: ProductBundleWhereUniqueInput | ProductBundleWhereUniqueInput[]
  }

  export type ProductBundleUncheckedCreateNestedManyWithoutBundleItemsInput = {
    create?: XOR<ProductBundleCreateWithoutBundleItemsInput, ProductBundleUncheckedCreateWithoutBundleItemsInput> | ProductBundleCreateWithoutBundleItemsInput[] | ProductBundleUncheckedCreateWithoutBundleItemsInput[]
    connectOrCreate?: ProductBundleCreateOrConnectWithoutBundleItemsInput | ProductBundleCreateOrConnectWithoutBundleItemsInput[]
    connect?: ProductBundleWhereUniqueInput | ProductBundleWhereUniqueInput[]
  }

  export type GoodsReceiptItemUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<GoodsReceiptItemCreateWithoutProductInput, GoodsReceiptItemUncheckedCreateWithoutProductInput> | GoodsReceiptItemCreateWithoutProductInput[] | GoodsReceiptItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: GoodsReceiptItemCreateOrConnectWithoutProductInput | GoodsReceiptItemCreateOrConnectWithoutProductInput[]
    createMany?: GoodsReceiptItemCreateManyProductInputEnvelope
    connect?: GoodsReceiptItemWhereUniqueInput | GoodsReceiptItemWhereUniqueInput[]
  }

  export type StockTransferItemUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<StockTransferItemCreateWithoutProductInput, StockTransferItemUncheckedCreateWithoutProductInput> | StockTransferItemCreateWithoutProductInput[] | StockTransferItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: StockTransferItemCreateOrConnectWithoutProductInput | StockTransferItemCreateOrConnectWithoutProductInput[]
    createMany?: StockTransferItemCreateManyProductInputEnvelope
    connect?: StockTransferItemWhereUniqueInput | StockTransferItemWhereUniqueInput[]
  }

  export type InventoryAuditItemUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<InventoryAuditItemCreateWithoutProductInput, InventoryAuditItemUncheckedCreateWithoutProductInput> | InventoryAuditItemCreateWithoutProductInput[] | InventoryAuditItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: InventoryAuditItemCreateOrConnectWithoutProductInput | InventoryAuditItemCreateOrConnectWithoutProductInput[]
    createMany?: InventoryAuditItemCreateManyProductInputEnvelope
    connect?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EnumProductStatusFieldUpdateOperationsInput = {
    set?: $Enums.ProductStatus
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type CategoryUpdateOneWithoutProductsNestedInput = {
    create?: XOR<CategoryCreateWithoutProductsInput, CategoryUncheckedCreateWithoutProductsInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutProductsInput
    upsert?: CategoryUpsertWithoutProductsInput
    disconnect?: CategoryWhereInput | boolean
    delete?: CategoryWhereInput | boolean
    connect?: CategoryWhereUniqueInput
    update?: XOR<XOR<CategoryUpdateToOneWithWhereWithoutProductsInput, CategoryUpdateWithoutProductsInput>, CategoryUncheckedUpdateWithoutProductsInput>
  }

  export type BrandUpdateOneWithoutProductsNestedInput = {
    create?: XOR<BrandCreateWithoutProductsInput, BrandUncheckedCreateWithoutProductsInput>
    connectOrCreate?: BrandCreateOrConnectWithoutProductsInput
    upsert?: BrandUpsertWithoutProductsInput
    disconnect?: BrandWhereInput | boolean
    delete?: BrandWhereInput | boolean
    connect?: BrandWhereUniqueInput
    update?: XOR<XOR<BrandUpdateToOneWithWhereWithoutProductsInput, BrandUpdateWithoutProductsInput>, BrandUncheckedUpdateWithoutProductsInput>
  }

  export type InventoryItemUpdateManyWithoutProductNestedInput = {
    create?: XOR<InventoryItemCreateWithoutProductInput, InventoryItemUncheckedCreateWithoutProductInput> | InventoryItemCreateWithoutProductInput[] | InventoryItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: InventoryItemCreateOrConnectWithoutProductInput | InventoryItemCreateOrConnectWithoutProductInput[]
    upsert?: InventoryItemUpsertWithWhereUniqueWithoutProductInput | InventoryItemUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: InventoryItemCreateManyProductInputEnvelope
    set?: InventoryItemWhereUniqueInput | InventoryItemWhereUniqueInput[]
    disconnect?: InventoryItemWhereUniqueInput | InventoryItemWhereUniqueInput[]
    delete?: InventoryItemWhereUniqueInput | InventoryItemWhereUniqueInput[]
    connect?: InventoryItemWhereUniqueInput | InventoryItemWhereUniqueInput[]
    update?: InventoryItemUpdateWithWhereUniqueWithoutProductInput | InventoryItemUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: InventoryItemUpdateManyWithWhereWithoutProductInput | InventoryItemUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: InventoryItemScalarWhereInput | InventoryItemScalarWhereInput[]
  }

  export type ProductVariantUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductVariantCreateWithoutProductInput, ProductVariantUncheckedCreateWithoutProductInput> | ProductVariantCreateWithoutProductInput[] | ProductVariantUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductVariantCreateOrConnectWithoutProductInput | ProductVariantCreateOrConnectWithoutProductInput[]
    upsert?: ProductVariantUpsertWithWhereUniqueWithoutProductInput | ProductVariantUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductVariantCreateManyProductInputEnvelope
    set?: ProductVariantWhereUniqueInput | ProductVariantWhereUniqueInput[]
    disconnect?: ProductVariantWhereUniqueInput | ProductVariantWhereUniqueInput[]
    delete?: ProductVariantWhereUniqueInput | ProductVariantWhereUniqueInput[]
    connect?: ProductVariantWhereUniqueInput | ProductVariantWhereUniqueInput[]
    update?: ProductVariantUpdateWithWhereUniqueWithoutProductInput | ProductVariantUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductVariantUpdateManyWithWhereWithoutProductInput | ProductVariantUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductVariantScalarWhereInput | ProductVariantScalarWhereInput[]
  }

  export type ProductSupplierUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductSupplierCreateWithoutProductInput, ProductSupplierUncheckedCreateWithoutProductInput> | ProductSupplierCreateWithoutProductInput[] | ProductSupplierUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductSupplierCreateOrConnectWithoutProductInput | ProductSupplierCreateOrConnectWithoutProductInput[]
    upsert?: ProductSupplierUpsertWithWhereUniqueWithoutProductInput | ProductSupplierUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductSupplierCreateManyProductInputEnvelope
    set?: ProductSupplierWhereUniqueInput | ProductSupplierWhereUniqueInput[]
    disconnect?: ProductSupplierWhereUniqueInput | ProductSupplierWhereUniqueInput[]
    delete?: ProductSupplierWhereUniqueInput | ProductSupplierWhereUniqueInput[]
    connect?: ProductSupplierWhereUniqueInput | ProductSupplierWhereUniqueInput[]
    update?: ProductSupplierUpdateWithWhereUniqueWithoutProductInput | ProductSupplierUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductSupplierUpdateManyWithWhereWithoutProductInput | ProductSupplierUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductSupplierScalarWhereInput | ProductSupplierScalarWhereInput[]
  }

  export type OrderItemUpdateManyWithoutProductNestedInput = {
    create?: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput> | OrderItemCreateWithoutProductInput[] | OrderItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutProductInput | OrderItemCreateOrConnectWithoutProductInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutProductInput | OrderItemUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: OrderItemCreateManyProductInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutProductInput | OrderItemUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutProductInput | OrderItemUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type PurchaseOrderItemUpdateManyWithoutProductNestedInput = {
    create?: XOR<PurchaseOrderItemCreateWithoutProductInput, PurchaseOrderItemUncheckedCreateWithoutProductInput> | PurchaseOrderItemCreateWithoutProductInput[] | PurchaseOrderItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: PurchaseOrderItemCreateOrConnectWithoutProductInput | PurchaseOrderItemCreateOrConnectWithoutProductInput[]
    upsert?: PurchaseOrderItemUpsertWithWhereUniqueWithoutProductInput | PurchaseOrderItemUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: PurchaseOrderItemCreateManyProductInputEnvelope
    set?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    disconnect?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    delete?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    connect?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    update?: PurchaseOrderItemUpdateWithWhereUniqueWithoutProductInput | PurchaseOrderItemUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: PurchaseOrderItemUpdateManyWithWhereWithoutProductInput | PurchaseOrderItemUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: PurchaseOrderItemScalarWhereInput | PurchaseOrderItemScalarWhereInput[]
  }

  export type InventoryMovementUpdateManyWithoutProductNestedInput = {
    create?: XOR<InventoryMovementCreateWithoutProductInput, InventoryMovementUncheckedCreateWithoutProductInput> | InventoryMovementCreateWithoutProductInput[] | InventoryMovementUncheckedCreateWithoutProductInput[]
    connectOrCreate?: InventoryMovementCreateOrConnectWithoutProductInput | InventoryMovementCreateOrConnectWithoutProductInput[]
    upsert?: InventoryMovementUpsertWithWhereUniqueWithoutProductInput | InventoryMovementUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: InventoryMovementCreateManyProductInputEnvelope
    set?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
    disconnect?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
    delete?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
    connect?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
    update?: InventoryMovementUpdateWithWhereUniqueWithoutProductInput | InventoryMovementUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: InventoryMovementUpdateManyWithWhereWithoutProductInput | InventoryMovementUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: InventoryMovementScalarWhereInput | InventoryMovementScalarWhereInput[]
  }

  export type InventoryAuditUpdateManyWithoutProductNestedInput = {
    create?: XOR<InventoryAuditCreateWithoutProductInput, InventoryAuditUncheckedCreateWithoutProductInput> | InventoryAuditCreateWithoutProductInput[] | InventoryAuditUncheckedCreateWithoutProductInput[]
    connectOrCreate?: InventoryAuditCreateOrConnectWithoutProductInput | InventoryAuditCreateOrConnectWithoutProductInput[]
    upsert?: InventoryAuditUpsertWithWhereUniqueWithoutProductInput | InventoryAuditUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: InventoryAuditCreateManyProductInputEnvelope
    set?: InventoryAuditWhereUniqueInput | InventoryAuditWhereUniqueInput[]
    disconnect?: InventoryAuditWhereUniqueInput | InventoryAuditWhereUniqueInput[]
    delete?: InventoryAuditWhereUniqueInput | InventoryAuditWhereUniqueInput[]
    connect?: InventoryAuditWhereUniqueInput | InventoryAuditWhereUniqueInput[]
    update?: InventoryAuditUpdateWithWhereUniqueWithoutProductInput | InventoryAuditUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: InventoryAuditUpdateManyWithWhereWithoutProductInput | InventoryAuditUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: InventoryAuditScalarWhereInput | InventoryAuditScalarWhereInput[]
  }

  export type ProductReviewUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductReviewCreateWithoutProductInput, ProductReviewUncheckedCreateWithoutProductInput> | ProductReviewCreateWithoutProductInput[] | ProductReviewUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductReviewCreateOrConnectWithoutProductInput | ProductReviewCreateOrConnectWithoutProductInput[]
    upsert?: ProductReviewUpsertWithWhereUniqueWithoutProductInput | ProductReviewUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductReviewCreateManyProductInputEnvelope
    set?: ProductReviewWhereUniqueInput | ProductReviewWhereUniqueInput[]
    disconnect?: ProductReviewWhereUniqueInput | ProductReviewWhereUniqueInput[]
    delete?: ProductReviewWhereUniqueInput | ProductReviewWhereUniqueInput[]
    connect?: ProductReviewWhereUniqueInput | ProductReviewWhereUniqueInput[]
    update?: ProductReviewUpdateWithWhereUniqueWithoutProductInput | ProductReviewUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductReviewUpdateManyWithWhereWithoutProductInput | ProductReviewUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductReviewScalarWhereInput | ProductReviewScalarWhereInput[]
  }

  export type ProductBundleUpdateManyWithoutProductsNestedInput = {
    create?: XOR<ProductBundleCreateWithoutProductsInput, ProductBundleUncheckedCreateWithoutProductsInput> | ProductBundleCreateWithoutProductsInput[] | ProductBundleUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: ProductBundleCreateOrConnectWithoutProductsInput | ProductBundleCreateOrConnectWithoutProductsInput[]
    upsert?: ProductBundleUpsertWithWhereUniqueWithoutProductsInput | ProductBundleUpsertWithWhereUniqueWithoutProductsInput[]
    set?: ProductBundleWhereUniqueInput | ProductBundleWhereUniqueInput[]
    disconnect?: ProductBundleWhereUniqueInput | ProductBundleWhereUniqueInput[]
    delete?: ProductBundleWhereUniqueInput | ProductBundleWhereUniqueInput[]
    connect?: ProductBundleWhereUniqueInput | ProductBundleWhereUniqueInput[]
    update?: ProductBundleUpdateWithWhereUniqueWithoutProductsInput | ProductBundleUpdateWithWhereUniqueWithoutProductsInput[]
    updateMany?: ProductBundleUpdateManyWithWhereWithoutProductsInput | ProductBundleUpdateManyWithWhereWithoutProductsInput[]
    deleteMany?: ProductBundleScalarWhereInput | ProductBundleScalarWhereInput[]
  }

  export type ProductBundleUpdateManyWithoutBundleItemsNestedInput = {
    create?: XOR<ProductBundleCreateWithoutBundleItemsInput, ProductBundleUncheckedCreateWithoutBundleItemsInput> | ProductBundleCreateWithoutBundleItemsInput[] | ProductBundleUncheckedCreateWithoutBundleItemsInput[]
    connectOrCreate?: ProductBundleCreateOrConnectWithoutBundleItemsInput | ProductBundleCreateOrConnectWithoutBundleItemsInput[]
    upsert?: ProductBundleUpsertWithWhereUniqueWithoutBundleItemsInput | ProductBundleUpsertWithWhereUniqueWithoutBundleItemsInput[]
    set?: ProductBundleWhereUniqueInput | ProductBundleWhereUniqueInput[]
    disconnect?: ProductBundleWhereUniqueInput | ProductBundleWhereUniqueInput[]
    delete?: ProductBundleWhereUniqueInput | ProductBundleWhereUniqueInput[]
    connect?: ProductBundleWhereUniqueInput | ProductBundleWhereUniqueInput[]
    update?: ProductBundleUpdateWithWhereUniqueWithoutBundleItemsInput | ProductBundleUpdateWithWhereUniqueWithoutBundleItemsInput[]
    updateMany?: ProductBundleUpdateManyWithWhereWithoutBundleItemsInput | ProductBundleUpdateManyWithWhereWithoutBundleItemsInput[]
    deleteMany?: ProductBundleScalarWhereInput | ProductBundleScalarWhereInput[]
  }

  export type GoodsReceiptItemUpdateManyWithoutProductNestedInput = {
    create?: XOR<GoodsReceiptItemCreateWithoutProductInput, GoodsReceiptItemUncheckedCreateWithoutProductInput> | GoodsReceiptItemCreateWithoutProductInput[] | GoodsReceiptItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: GoodsReceiptItemCreateOrConnectWithoutProductInput | GoodsReceiptItemCreateOrConnectWithoutProductInput[]
    upsert?: GoodsReceiptItemUpsertWithWhereUniqueWithoutProductInput | GoodsReceiptItemUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: GoodsReceiptItemCreateManyProductInputEnvelope
    set?: GoodsReceiptItemWhereUniqueInput | GoodsReceiptItemWhereUniqueInput[]
    disconnect?: GoodsReceiptItemWhereUniqueInput | GoodsReceiptItemWhereUniqueInput[]
    delete?: GoodsReceiptItemWhereUniqueInput | GoodsReceiptItemWhereUniqueInput[]
    connect?: GoodsReceiptItemWhereUniqueInput | GoodsReceiptItemWhereUniqueInput[]
    update?: GoodsReceiptItemUpdateWithWhereUniqueWithoutProductInput | GoodsReceiptItemUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: GoodsReceiptItemUpdateManyWithWhereWithoutProductInput | GoodsReceiptItemUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: GoodsReceiptItemScalarWhereInput | GoodsReceiptItemScalarWhereInput[]
  }

  export type StockTransferItemUpdateManyWithoutProductNestedInput = {
    create?: XOR<StockTransferItemCreateWithoutProductInput, StockTransferItemUncheckedCreateWithoutProductInput> | StockTransferItemCreateWithoutProductInput[] | StockTransferItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: StockTransferItemCreateOrConnectWithoutProductInput | StockTransferItemCreateOrConnectWithoutProductInput[]
    upsert?: StockTransferItemUpsertWithWhereUniqueWithoutProductInput | StockTransferItemUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: StockTransferItemCreateManyProductInputEnvelope
    set?: StockTransferItemWhereUniqueInput | StockTransferItemWhereUniqueInput[]
    disconnect?: StockTransferItemWhereUniqueInput | StockTransferItemWhereUniqueInput[]
    delete?: StockTransferItemWhereUniqueInput | StockTransferItemWhereUniqueInput[]
    connect?: StockTransferItemWhereUniqueInput | StockTransferItemWhereUniqueInput[]
    update?: StockTransferItemUpdateWithWhereUniqueWithoutProductInput | StockTransferItemUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: StockTransferItemUpdateManyWithWhereWithoutProductInput | StockTransferItemUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: StockTransferItemScalarWhereInput | StockTransferItemScalarWhereInput[]
  }

  export type InventoryAuditItemUpdateManyWithoutProductNestedInput = {
    create?: XOR<InventoryAuditItemCreateWithoutProductInput, InventoryAuditItemUncheckedCreateWithoutProductInput> | InventoryAuditItemCreateWithoutProductInput[] | InventoryAuditItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: InventoryAuditItemCreateOrConnectWithoutProductInput | InventoryAuditItemCreateOrConnectWithoutProductInput[]
    upsert?: InventoryAuditItemUpsertWithWhereUniqueWithoutProductInput | InventoryAuditItemUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: InventoryAuditItemCreateManyProductInputEnvelope
    set?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
    disconnect?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
    delete?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
    connect?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
    update?: InventoryAuditItemUpdateWithWhereUniqueWithoutProductInput | InventoryAuditItemUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: InventoryAuditItemUpdateManyWithWhereWithoutProductInput | InventoryAuditItemUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: InventoryAuditItemScalarWhereInput | InventoryAuditItemScalarWhereInput[]
  }

  export type InventoryItemUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<InventoryItemCreateWithoutProductInput, InventoryItemUncheckedCreateWithoutProductInput> | InventoryItemCreateWithoutProductInput[] | InventoryItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: InventoryItemCreateOrConnectWithoutProductInput | InventoryItemCreateOrConnectWithoutProductInput[]
    upsert?: InventoryItemUpsertWithWhereUniqueWithoutProductInput | InventoryItemUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: InventoryItemCreateManyProductInputEnvelope
    set?: InventoryItemWhereUniqueInput | InventoryItemWhereUniqueInput[]
    disconnect?: InventoryItemWhereUniqueInput | InventoryItemWhereUniqueInput[]
    delete?: InventoryItemWhereUniqueInput | InventoryItemWhereUniqueInput[]
    connect?: InventoryItemWhereUniqueInput | InventoryItemWhereUniqueInput[]
    update?: InventoryItemUpdateWithWhereUniqueWithoutProductInput | InventoryItemUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: InventoryItemUpdateManyWithWhereWithoutProductInput | InventoryItemUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: InventoryItemScalarWhereInput | InventoryItemScalarWhereInput[]
  }

  export type ProductVariantUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductVariantCreateWithoutProductInput, ProductVariantUncheckedCreateWithoutProductInput> | ProductVariantCreateWithoutProductInput[] | ProductVariantUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductVariantCreateOrConnectWithoutProductInput | ProductVariantCreateOrConnectWithoutProductInput[]
    upsert?: ProductVariantUpsertWithWhereUniqueWithoutProductInput | ProductVariantUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductVariantCreateManyProductInputEnvelope
    set?: ProductVariantWhereUniqueInput | ProductVariantWhereUniqueInput[]
    disconnect?: ProductVariantWhereUniqueInput | ProductVariantWhereUniqueInput[]
    delete?: ProductVariantWhereUniqueInput | ProductVariantWhereUniqueInput[]
    connect?: ProductVariantWhereUniqueInput | ProductVariantWhereUniqueInput[]
    update?: ProductVariantUpdateWithWhereUniqueWithoutProductInput | ProductVariantUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductVariantUpdateManyWithWhereWithoutProductInput | ProductVariantUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductVariantScalarWhereInput | ProductVariantScalarWhereInput[]
  }

  export type ProductSupplierUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductSupplierCreateWithoutProductInput, ProductSupplierUncheckedCreateWithoutProductInput> | ProductSupplierCreateWithoutProductInput[] | ProductSupplierUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductSupplierCreateOrConnectWithoutProductInput | ProductSupplierCreateOrConnectWithoutProductInput[]
    upsert?: ProductSupplierUpsertWithWhereUniqueWithoutProductInput | ProductSupplierUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductSupplierCreateManyProductInputEnvelope
    set?: ProductSupplierWhereUniqueInput | ProductSupplierWhereUniqueInput[]
    disconnect?: ProductSupplierWhereUniqueInput | ProductSupplierWhereUniqueInput[]
    delete?: ProductSupplierWhereUniqueInput | ProductSupplierWhereUniqueInput[]
    connect?: ProductSupplierWhereUniqueInput | ProductSupplierWhereUniqueInput[]
    update?: ProductSupplierUpdateWithWhereUniqueWithoutProductInput | ProductSupplierUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductSupplierUpdateManyWithWhereWithoutProductInput | ProductSupplierUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductSupplierScalarWhereInput | ProductSupplierScalarWhereInput[]
  }

  export type OrderItemUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput> | OrderItemCreateWithoutProductInput[] | OrderItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutProductInput | OrderItemCreateOrConnectWithoutProductInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutProductInput | OrderItemUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: OrderItemCreateManyProductInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutProductInput | OrderItemUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutProductInput | OrderItemUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type PurchaseOrderItemUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<PurchaseOrderItemCreateWithoutProductInput, PurchaseOrderItemUncheckedCreateWithoutProductInput> | PurchaseOrderItemCreateWithoutProductInput[] | PurchaseOrderItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: PurchaseOrderItemCreateOrConnectWithoutProductInput | PurchaseOrderItemCreateOrConnectWithoutProductInput[]
    upsert?: PurchaseOrderItemUpsertWithWhereUniqueWithoutProductInput | PurchaseOrderItemUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: PurchaseOrderItemCreateManyProductInputEnvelope
    set?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    disconnect?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    delete?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    connect?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    update?: PurchaseOrderItemUpdateWithWhereUniqueWithoutProductInput | PurchaseOrderItemUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: PurchaseOrderItemUpdateManyWithWhereWithoutProductInput | PurchaseOrderItemUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: PurchaseOrderItemScalarWhereInput | PurchaseOrderItemScalarWhereInput[]
  }

  export type InventoryMovementUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<InventoryMovementCreateWithoutProductInput, InventoryMovementUncheckedCreateWithoutProductInput> | InventoryMovementCreateWithoutProductInput[] | InventoryMovementUncheckedCreateWithoutProductInput[]
    connectOrCreate?: InventoryMovementCreateOrConnectWithoutProductInput | InventoryMovementCreateOrConnectWithoutProductInput[]
    upsert?: InventoryMovementUpsertWithWhereUniqueWithoutProductInput | InventoryMovementUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: InventoryMovementCreateManyProductInputEnvelope
    set?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
    disconnect?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
    delete?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
    connect?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
    update?: InventoryMovementUpdateWithWhereUniqueWithoutProductInput | InventoryMovementUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: InventoryMovementUpdateManyWithWhereWithoutProductInput | InventoryMovementUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: InventoryMovementScalarWhereInput | InventoryMovementScalarWhereInput[]
  }

  export type InventoryAuditUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<InventoryAuditCreateWithoutProductInput, InventoryAuditUncheckedCreateWithoutProductInput> | InventoryAuditCreateWithoutProductInput[] | InventoryAuditUncheckedCreateWithoutProductInput[]
    connectOrCreate?: InventoryAuditCreateOrConnectWithoutProductInput | InventoryAuditCreateOrConnectWithoutProductInput[]
    upsert?: InventoryAuditUpsertWithWhereUniqueWithoutProductInput | InventoryAuditUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: InventoryAuditCreateManyProductInputEnvelope
    set?: InventoryAuditWhereUniqueInput | InventoryAuditWhereUniqueInput[]
    disconnect?: InventoryAuditWhereUniqueInput | InventoryAuditWhereUniqueInput[]
    delete?: InventoryAuditWhereUniqueInput | InventoryAuditWhereUniqueInput[]
    connect?: InventoryAuditWhereUniqueInput | InventoryAuditWhereUniqueInput[]
    update?: InventoryAuditUpdateWithWhereUniqueWithoutProductInput | InventoryAuditUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: InventoryAuditUpdateManyWithWhereWithoutProductInput | InventoryAuditUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: InventoryAuditScalarWhereInput | InventoryAuditScalarWhereInput[]
  }

  export type ProductReviewUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductReviewCreateWithoutProductInput, ProductReviewUncheckedCreateWithoutProductInput> | ProductReviewCreateWithoutProductInput[] | ProductReviewUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductReviewCreateOrConnectWithoutProductInput | ProductReviewCreateOrConnectWithoutProductInput[]
    upsert?: ProductReviewUpsertWithWhereUniqueWithoutProductInput | ProductReviewUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductReviewCreateManyProductInputEnvelope
    set?: ProductReviewWhereUniqueInput | ProductReviewWhereUniqueInput[]
    disconnect?: ProductReviewWhereUniqueInput | ProductReviewWhereUniqueInput[]
    delete?: ProductReviewWhereUniqueInput | ProductReviewWhereUniqueInput[]
    connect?: ProductReviewWhereUniqueInput | ProductReviewWhereUniqueInput[]
    update?: ProductReviewUpdateWithWhereUniqueWithoutProductInput | ProductReviewUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductReviewUpdateManyWithWhereWithoutProductInput | ProductReviewUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductReviewScalarWhereInput | ProductReviewScalarWhereInput[]
  }

  export type ProductBundleUncheckedUpdateManyWithoutProductsNestedInput = {
    create?: XOR<ProductBundleCreateWithoutProductsInput, ProductBundleUncheckedCreateWithoutProductsInput> | ProductBundleCreateWithoutProductsInput[] | ProductBundleUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: ProductBundleCreateOrConnectWithoutProductsInput | ProductBundleCreateOrConnectWithoutProductsInput[]
    upsert?: ProductBundleUpsertWithWhereUniqueWithoutProductsInput | ProductBundleUpsertWithWhereUniqueWithoutProductsInput[]
    set?: ProductBundleWhereUniqueInput | ProductBundleWhereUniqueInput[]
    disconnect?: ProductBundleWhereUniqueInput | ProductBundleWhereUniqueInput[]
    delete?: ProductBundleWhereUniqueInput | ProductBundleWhereUniqueInput[]
    connect?: ProductBundleWhereUniqueInput | ProductBundleWhereUniqueInput[]
    update?: ProductBundleUpdateWithWhereUniqueWithoutProductsInput | ProductBundleUpdateWithWhereUniqueWithoutProductsInput[]
    updateMany?: ProductBundleUpdateManyWithWhereWithoutProductsInput | ProductBundleUpdateManyWithWhereWithoutProductsInput[]
    deleteMany?: ProductBundleScalarWhereInput | ProductBundleScalarWhereInput[]
  }

  export type ProductBundleUncheckedUpdateManyWithoutBundleItemsNestedInput = {
    create?: XOR<ProductBundleCreateWithoutBundleItemsInput, ProductBundleUncheckedCreateWithoutBundleItemsInput> | ProductBundleCreateWithoutBundleItemsInput[] | ProductBundleUncheckedCreateWithoutBundleItemsInput[]
    connectOrCreate?: ProductBundleCreateOrConnectWithoutBundleItemsInput | ProductBundleCreateOrConnectWithoutBundleItemsInput[]
    upsert?: ProductBundleUpsertWithWhereUniqueWithoutBundleItemsInput | ProductBundleUpsertWithWhereUniqueWithoutBundleItemsInput[]
    set?: ProductBundleWhereUniqueInput | ProductBundleWhereUniqueInput[]
    disconnect?: ProductBundleWhereUniqueInput | ProductBundleWhereUniqueInput[]
    delete?: ProductBundleWhereUniqueInput | ProductBundleWhereUniqueInput[]
    connect?: ProductBundleWhereUniqueInput | ProductBundleWhereUniqueInput[]
    update?: ProductBundleUpdateWithWhereUniqueWithoutBundleItemsInput | ProductBundleUpdateWithWhereUniqueWithoutBundleItemsInput[]
    updateMany?: ProductBundleUpdateManyWithWhereWithoutBundleItemsInput | ProductBundleUpdateManyWithWhereWithoutBundleItemsInput[]
    deleteMany?: ProductBundleScalarWhereInput | ProductBundleScalarWhereInput[]
  }

  export type GoodsReceiptItemUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<GoodsReceiptItemCreateWithoutProductInput, GoodsReceiptItemUncheckedCreateWithoutProductInput> | GoodsReceiptItemCreateWithoutProductInput[] | GoodsReceiptItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: GoodsReceiptItemCreateOrConnectWithoutProductInput | GoodsReceiptItemCreateOrConnectWithoutProductInput[]
    upsert?: GoodsReceiptItemUpsertWithWhereUniqueWithoutProductInput | GoodsReceiptItemUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: GoodsReceiptItemCreateManyProductInputEnvelope
    set?: GoodsReceiptItemWhereUniqueInput | GoodsReceiptItemWhereUniqueInput[]
    disconnect?: GoodsReceiptItemWhereUniqueInput | GoodsReceiptItemWhereUniqueInput[]
    delete?: GoodsReceiptItemWhereUniqueInput | GoodsReceiptItemWhereUniqueInput[]
    connect?: GoodsReceiptItemWhereUniqueInput | GoodsReceiptItemWhereUniqueInput[]
    update?: GoodsReceiptItemUpdateWithWhereUniqueWithoutProductInput | GoodsReceiptItemUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: GoodsReceiptItemUpdateManyWithWhereWithoutProductInput | GoodsReceiptItemUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: GoodsReceiptItemScalarWhereInput | GoodsReceiptItemScalarWhereInput[]
  }

  export type StockTransferItemUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<StockTransferItemCreateWithoutProductInput, StockTransferItemUncheckedCreateWithoutProductInput> | StockTransferItemCreateWithoutProductInput[] | StockTransferItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: StockTransferItemCreateOrConnectWithoutProductInput | StockTransferItemCreateOrConnectWithoutProductInput[]
    upsert?: StockTransferItemUpsertWithWhereUniqueWithoutProductInput | StockTransferItemUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: StockTransferItemCreateManyProductInputEnvelope
    set?: StockTransferItemWhereUniqueInput | StockTransferItemWhereUniqueInput[]
    disconnect?: StockTransferItemWhereUniqueInput | StockTransferItemWhereUniqueInput[]
    delete?: StockTransferItemWhereUniqueInput | StockTransferItemWhereUniqueInput[]
    connect?: StockTransferItemWhereUniqueInput | StockTransferItemWhereUniqueInput[]
    update?: StockTransferItemUpdateWithWhereUniqueWithoutProductInput | StockTransferItemUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: StockTransferItemUpdateManyWithWhereWithoutProductInput | StockTransferItemUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: StockTransferItemScalarWhereInput | StockTransferItemScalarWhereInput[]
  }

  export type InventoryAuditItemUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<InventoryAuditItemCreateWithoutProductInput, InventoryAuditItemUncheckedCreateWithoutProductInput> | InventoryAuditItemCreateWithoutProductInput[] | InventoryAuditItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: InventoryAuditItemCreateOrConnectWithoutProductInput | InventoryAuditItemCreateOrConnectWithoutProductInput[]
    upsert?: InventoryAuditItemUpsertWithWhereUniqueWithoutProductInput | InventoryAuditItemUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: InventoryAuditItemCreateManyProductInputEnvelope
    set?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
    disconnect?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
    delete?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
    connect?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
    update?: InventoryAuditItemUpdateWithWhereUniqueWithoutProductInput | InventoryAuditItemUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: InventoryAuditItemUpdateManyWithWhereWithoutProductInput | InventoryAuditItemUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: InventoryAuditItemScalarWhereInput | InventoryAuditItemScalarWhereInput[]
  }

  export type ProductCreateNestedOneWithoutVariantsInput = {
    create?: XOR<ProductCreateWithoutVariantsInput, ProductUncheckedCreateWithoutVariantsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutVariantsInput
    connect?: ProductWhereUniqueInput
  }

  export type InventoryItemCreateNestedManyWithoutVariantInput = {
    create?: XOR<InventoryItemCreateWithoutVariantInput, InventoryItemUncheckedCreateWithoutVariantInput> | InventoryItemCreateWithoutVariantInput[] | InventoryItemUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: InventoryItemCreateOrConnectWithoutVariantInput | InventoryItemCreateOrConnectWithoutVariantInput[]
    createMany?: InventoryItemCreateManyVariantInputEnvelope
    connect?: InventoryItemWhereUniqueInput | InventoryItemWhereUniqueInput[]
  }

  export type InventoryMovementCreateNestedManyWithoutVariantInput = {
    create?: XOR<InventoryMovementCreateWithoutVariantInput, InventoryMovementUncheckedCreateWithoutVariantInput> | InventoryMovementCreateWithoutVariantInput[] | InventoryMovementUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: InventoryMovementCreateOrConnectWithoutVariantInput | InventoryMovementCreateOrConnectWithoutVariantInput[]
    createMany?: InventoryMovementCreateManyVariantInputEnvelope
    connect?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
  }

  export type PurchaseOrderItemCreateNestedManyWithoutVariantInput = {
    create?: XOR<PurchaseOrderItemCreateWithoutVariantInput, PurchaseOrderItemUncheckedCreateWithoutVariantInput> | PurchaseOrderItemCreateWithoutVariantInput[] | PurchaseOrderItemUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: PurchaseOrderItemCreateOrConnectWithoutVariantInput | PurchaseOrderItemCreateOrConnectWithoutVariantInput[]
    createMany?: PurchaseOrderItemCreateManyVariantInputEnvelope
    connect?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
  }

  export type GoodsReceiptItemCreateNestedManyWithoutVariantInput = {
    create?: XOR<GoodsReceiptItemCreateWithoutVariantInput, GoodsReceiptItemUncheckedCreateWithoutVariantInput> | GoodsReceiptItemCreateWithoutVariantInput[] | GoodsReceiptItemUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: GoodsReceiptItemCreateOrConnectWithoutVariantInput | GoodsReceiptItemCreateOrConnectWithoutVariantInput[]
    createMany?: GoodsReceiptItemCreateManyVariantInputEnvelope
    connect?: GoodsReceiptItemWhereUniqueInput | GoodsReceiptItemWhereUniqueInput[]
  }

  export type OrderItemCreateNestedManyWithoutVariantInput = {
    create?: XOR<OrderItemCreateWithoutVariantInput, OrderItemUncheckedCreateWithoutVariantInput> | OrderItemCreateWithoutVariantInput[] | OrderItemUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutVariantInput | OrderItemCreateOrConnectWithoutVariantInput[]
    createMany?: OrderItemCreateManyVariantInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type StockTransferItemCreateNestedManyWithoutVariantInput = {
    create?: XOR<StockTransferItemCreateWithoutVariantInput, StockTransferItemUncheckedCreateWithoutVariantInput> | StockTransferItemCreateWithoutVariantInput[] | StockTransferItemUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: StockTransferItemCreateOrConnectWithoutVariantInput | StockTransferItemCreateOrConnectWithoutVariantInput[]
    createMany?: StockTransferItemCreateManyVariantInputEnvelope
    connect?: StockTransferItemWhereUniqueInput | StockTransferItemWhereUniqueInput[]
  }

  export type InventoryAuditItemCreateNestedManyWithoutVariantInput = {
    create?: XOR<InventoryAuditItemCreateWithoutVariantInput, InventoryAuditItemUncheckedCreateWithoutVariantInput> | InventoryAuditItemCreateWithoutVariantInput[] | InventoryAuditItemUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: InventoryAuditItemCreateOrConnectWithoutVariantInput | InventoryAuditItemCreateOrConnectWithoutVariantInput[]
    createMany?: InventoryAuditItemCreateManyVariantInputEnvelope
    connect?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
  }

  export type InventoryItemUncheckedCreateNestedManyWithoutVariantInput = {
    create?: XOR<InventoryItemCreateWithoutVariantInput, InventoryItemUncheckedCreateWithoutVariantInput> | InventoryItemCreateWithoutVariantInput[] | InventoryItemUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: InventoryItemCreateOrConnectWithoutVariantInput | InventoryItemCreateOrConnectWithoutVariantInput[]
    createMany?: InventoryItemCreateManyVariantInputEnvelope
    connect?: InventoryItemWhereUniqueInput | InventoryItemWhereUniqueInput[]
  }

  export type InventoryMovementUncheckedCreateNestedManyWithoutVariantInput = {
    create?: XOR<InventoryMovementCreateWithoutVariantInput, InventoryMovementUncheckedCreateWithoutVariantInput> | InventoryMovementCreateWithoutVariantInput[] | InventoryMovementUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: InventoryMovementCreateOrConnectWithoutVariantInput | InventoryMovementCreateOrConnectWithoutVariantInput[]
    createMany?: InventoryMovementCreateManyVariantInputEnvelope
    connect?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
  }

  export type PurchaseOrderItemUncheckedCreateNestedManyWithoutVariantInput = {
    create?: XOR<PurchaseOrderItemCreateWithoutVariantInput, PurchaseOrderItemUncheckedCreateWithoutVariantInput> | PurchaseOrderItemCreateWithoutVariantInput[] | PurchaseOrderItemUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: PurchaseOrderItemCreateOrConnectWithoutVariantInput | PurchaseOrderItemCreateOrConnectWithoutVariantInput[]
    createMany?: PurchaseOrderItemCreateManyVariantInputEnvelope
    connect?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
  }

  export type GoodsReceiptItemUncheckedCreateNestedManyWithoutVariantInput = {
    create?: XOR<GoodsReceiptItemCreateWithoutVariantInput, GoodsReceiptItemUncheckedCreateWithoutVariantInput> | GoodsReceiptItemCreateWithoutVariantInput[] | GoodsReceiptItemUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: GoodsReceiptItemCreateOrConnectWithoutVariantInput | GoodsReceiptItemCreateOrConnectWithoutVariantInput[]
    createMany?: GoodsReceiptItemCreateManyVariantInputEnvelope
    connect?: GoodsReceiptItemWhereUniqueInput | GoodsReceiptItemWhereUniqueInput[]
  }

  export type OrderItemUncheckedCreateNestedManyWithoutVariantInput = {
    create?: XOR<OrderItemCreateWithoutVariantInput, OrderItemUncheckedCreateWithoutVariantInput> | OrderItemCreateWithoutVariantInput[] | OrderItemUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutVariantInput | OrderItemCreateOrConnectWithoutVariantInput[]
    createMany?: OrderItemCreateManyVariantInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type StockTransferItemUncheckedCreateNestedManyWithoutVariantInput = {
    create?: XOR<StockTransferItemCreateWithoutVariantInput, StockTransferItemUncheckedCreateWithoutVariantInput> | StockTransferItemCreateWithoutVariantInput[] | StockTransferItemUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: StockTransferItemCreateOrConnectWithoutVariantInput | StockTransferItemCreateOrConnectWithoutVariantInput[]
    createMany?: StockTransferItemCreateManyVariantInputEnvelope
    connect?: StockTransferItemWhereUniqueInput | StockTransferItemWhereUniqueInput[]
  }

  export type InventoryAuditItemUncheckedCreateNestedManyWithoutVariantInput = {
    create?: XOR<InventoryAuditItemCreateWithoutVariantInput, InventoryAuditItemUncheckedCreateWithoutVariantInput> | InventoryAuditItemCreateWithoutVariantInput[] | InventoryAuditItemUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: InventoryAuditItemCreateOrConnectWithoutVariantInput | InventoryAuditItemCreateOrConnectWithoutVariantInput[]
    createMany?: InventoryAuditItemCreateManyVariantInputEnvelope
    connect?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
  }

  export type ProductUpdateOneRequiredWithoutVariantsNestedInput = {
    create?: XOR<ProductCreateWithoutVariantsInput, ProductUncheckedCreateWithoutVariantsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutVariantsInput
    upsert?: ProductUpsertWithoutVariantsInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutVariantsInput, ProductUpdateWithoutVariantsInput>, ProductUncheckedUpdateWithoutVariantsInput>
  }

  export type InventoryItemUpdateManyWithoutVariantNestedInput = {
    create?: XOR<InventoryItemCreateWithoutVariantInput, InventoryItemUncheckedCreateWithoutVariantInput> | InventoryItemCreateWithoutVariantInput[] | InventoryItemUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: InventoryItemCreateOrConnectWithoutVariantInput | InventoryItemCreateOrConnectWithoutVariantInput[]
    upsert?: InventoryItemUpsertWithWhereUniqueWithoutVariantInput | InventoryItemUpsertWithWhereUniqueWithoutVariantInput[]
    createMany?: InventoryItemCreateManyVariantInputEnvelope
    set?: InventoryItemWhereUniqueInput | InventoryItemWhereUniqueInput[]
    disconnect?: InventoryItemWhereUniqueInput | InventoryItemWhereUniqueInput[]
    delete?: InventoryItemWhereUniqueInput | InventoryItemWhereUniqueInput[]
    connect?: InventoryItemWhereUniqueInput | InventoryItemWhereUniqueInput[]
    update?: InventoryItemUpdateWithWhereUniqueWithoutVariantInput | InventoryItemUpdateWithWhereUniqueWithoutVariantInput[]
    updateMany?: InventoryItemUpdateManyWithWhereWithoutVariantInput | InventoryItemUpdateManyWithWhereWithoutVariantInput[]
    deleteMany?: InventoryItemScalarWhereInput | InventoryItemScalarWhereInput[]
  }

  export type InventoryMovementUpdateManyWithoutVariantNestedInput = {
    create?: XOR<InventoryMovementCreateWithoutVariantInput, InventoryMovementUncheckedCreateWithoutVariantInput> | InventoryMovementCreateWithoutVariantInput[] | InventoryMovementUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: InventoryMovementCreateOrConnectWithoutVariantInput | InventoryMovementCreateOrConnectWithoutVariantInput[]
    upsert?: InventoryMovementUpsertWithWhereUniqueWithoutVariantInput | InventoryMovementUpsertWithWhereUniqueWithoutVariantInput[]
    createMany?: InventoryMovementCreateManyVariantInputEnvelope
    set?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
    disconnect?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
    delete?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
    connect?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
    update?: InventoryMovementUpdateWithWhereUniqueWithoutVariantInput | InventoryMovementUpdateWithWhereUniqueWithoutVariantInput[]
    updateMany?: InventoryMovementUpdateManyWithWhereWithoutVariantInput | InventoryMovementUpdateManyWithWhereWithoutVariantInput[]
    deleteMany?: InventoryMovementScalarWhereInput | InventoryMovementScalarWhereInput[]
  }

  export type PurchaseOrderItemUpdateManyWithoutVariantNestedInput = {
    create?: XOR<PurchaseOrderItemCreateWithoutVariantInput, PurchaseOrderItemUncheckedCreateWithoutVariantInput> | PurchaseOrderItemCreateWithoutVariantInput[] | PurchaseOrderItemUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: PurchaseOrderItemCreateOrConnectWithoutVariantInput | PurchaseOrderItemCreateOrConnectWithoutVariantInput[]
    upsert?: PurchaseOrderItemUpsertWithWhereUniqueWithoutVariantInput | PurchaseOrderItemUpsertWithWhereUniqueWithoutVariantInput[]
    createMany?: PurchaseOrderItemCreateManyVariantInputEnvelope
    set?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    disconnect?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    delete?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    connect?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    update?: PurchaseOrderItemUpdateWithWhereUniqueWithoutVariantInput | PurchaseOrderItemUpdateWithWhereUniqueWithoutVariantInput[]
    updateMany?: PurchaseOrderItemUpdateManyWithWhereWithoutVariantInput | PurchaseOrderItemUpdateManyWithWhereWithoutVariantInput[]
    deleteMany?: PurchaseOrderItemScalarWhereInput | PurchaseOrderItemScalarWhereInput[]
  }

  export type GoodsReceiptItemUpdateManyWithoutVariantNestedInput = {
    create?: XOR<GoodsReceiptItemCreateWithoutVariantInput, GoodsReceiptItemUncheckedCreateWithoutVariantInput> | GoodsReceiptItemCreateWithoutVariantInput[] | GoodsReceiptItemUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: GoodsReceiptItemCreateOrConnectWithoutVariantInput | GoodsReceiptItemCreateOrConnectWithoutVariantInput[]
    upsert?: GoodsReceiptItemUpsertWithWhereUniqueWithoutVariantInput | GoodsReceiptItemUpsertWithWhereUniqueWithoutVariantInput[]
    createMany?: GoodsReceiptItemCreateManyVariantInputEnvelope
    set?: GoodsReceiptItemWhereUniqueInput | GoodsReceiptItemWhereUniqueInput[]
    disconnect?: GoodsReceiptItemWhereUniqueInput | GoodsReceiptItemWhereUniqueInput[]
    delete?: GoodsReceiptItemWhereUniqueInput | GoodsReceiptItemWhereUniqueInput[]
    connect?: GoodsReceiptItemWhereUniqueInput | GoodsReceiptItemWhereUniqueInput[]
    update?: GoodsReceiptItemUpdateWithWhereUniqueWithoutVariantInput | GoodsReceiptItemUpdateWithWhereUniqueWithoutVariantInput[]
    updateMany?: GoodsReceiptItemUpdateManyWithWhereWithoutVariantInput | GoodsReceiptItemUpdateManyWithWhereWithoutVariantInput[]
    deleteMany?: GoodsReceiptItemScalarWhereInput | GoodsReceiptItemScalarWhereInput[]
  }

  export type OrderItemUpdateManyWithoutVariantNestedInput = {
    create?: XOR<OrderItemCreateWithoutVariantInput, OrderItemUncheckedCreateWithoutVariantInput> | OrderItemCreateWithoutVariantInput[] | OrderItemUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutVariantInput | OrderItemCreateOrConnectWithoutVariantInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutVariantInput | OrderItemUpsertWithWhereUniqueWithoutVariantInput[]
    createMany?: OrderItemCreateManyVariantInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutVariantInput | OrderItemUpdateWithWhereUniqueWithoutVariantInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutVariantInput | OrderItemUpdateManyWithWhereWithoutVariantInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type StockTransferItemUpdateManyWithoutVariantNestedInput = {
    create?: XOR<StockTransferItemCreateWithoutVariantInput, StockTransferItemUncheckedCreateWithoutVariantInput> | StockTransferItemCreateWithoutVariantInput[] | StockTransferItemUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: StockTransferItemCreateOrConnectWithoutVariantInput | StockTransferItemCreateOrConnectWithoutVariantInput[]
    upsert?: StockTransferItemUpsertWithWhereUniqueWithoutVariantInput | StockTransferItemUpsertWithWhereUniqueWithoutVariantInput[]
    createMany?: StockTransferItemCreateManyVariantInputEnvelope
    set?: StockTransferItemWhereUniqueInput | StockTransferItemWhereUniqueInput[]
    disconnect?: StockTransferItemWhereUniqueInput | StockTransferItemWhereUniqueInput[]
    delete?: StockTransferItemWhereUniqueInput | StockTransferItemWhereUniqueInput[]
    connect?: StockTransferItemWhereUniqueInput | StockTransferItemWhereUniqueInput[]
    update?: StockTransferItemUpdateWithWhereUniqueWithoutVariantInput | StockTransferItemUpdateWithWhereUniqueWithoutVariantInput[]
    updateMany?: StockTransferItemUpdateManyWithWhereWithoutVariantInput | StockTransferItemUpdateManyWithWhereWithoutVariantInput[]
    deleteMany?: StockTransferItemScalarWhereInput | StockTransferItemScalarWhereInput[]
  }

  export type InventoryAuditItemUpdateManyWithoutVariantNestedInput = {
    create?: XOR<InventoryAuditItemCreateWithoutVariantInput, InventoryAuditItemUncheckedCreateWithoutVariantInput> | InventoryAuditItemCreateWithoutVariantInput[] | InventoryAuditItemUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: InventoryAuditItemCreateOrConnectWithoutVariantInput | InventoryAuditItemCreateOrConnectWithoutVariantInput[]
    upsert?: InventoryAuditItemUpsertWithWhereUniqueWithoutVariantInput | InventoryAuditItemUpsertWithWhereUniqueWithoutVariantInput[]
    createMany?: InventoryAuditItemCreateManyVariantInputEnvelope
    set?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
    disconnect?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
    delete?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
    connect?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
    update?: InventoryAuditItemUpdateWithWhereUniqueWithoutVariantInput | InventoryAuditItemUpdateWithWhereUniqueWithoutVariantInput[]
    updateMany?: InventoryAuditItemUpdateManyWithWhereWithoutVariantInput | InventoryAuditItemUpdateManyWithWhereWithoutVariantInput[]
    deleteMany?: InventoryAuditItemScalarWhereInput | InventoryAuditItemScalarWhereInput[]
  }

  export type InventoryItemUncheckedUpdateManyWithoutVariantNestedInput = {
    create?: XOR<InventoryItemCreateWithoutVariantInput, InventoryItemUncheckedCreateWithoutVariantInput> | InventoryItemCreateWithoutVariantInput[] | InventoryItemUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: InventoryItemCreateOrConnectWithoutVariantInput | InventoryItemCreateOrConnectWithoutVariantInput[]
    upsert?: InventoryItemUpsertWithWhereUniqueWithoutVariantInput | InventoryItemUpsertWithWhereUniqueWithoutVariantInput[]
    createMany?: InventoryItemCreateManyVariantInputEnvelope
    set?: InventoryItemWhereUniqueInput | InventoryItemWhereUniqueInput[]
    disconnect?: InventoryItemWhereUniqueInput | InventoryItemWhereUniqueInput[]
    delete?: InventoryItemWhereUniqueInput | InventoryItemWhereUniqueInput[]
    connect?: InventoryItemWhereUniqueInput | InventoryItemWhereUniqueInput[]
    update?: InventoryItemUpdateWithWhereUniqueWithoutVariantInput | InventoryItemUpdateWithWhereUniqueWithoutVariantInput[]
    updateMany?: InventoryItemUpdateManyWithWhereWithoutVariantInput | InventoryItemUpdateManyWithWhereWithoutVariantInput[]
    deleteMany?: InventoryItemScalarWhereInput | InventoryItemScalarWhereInput[]
  }

  export type InventoryMovementUncheckedUpdateManyWithoutVariantNestedInput = {
    create?: XOR<InventoryMovementCreateWithoutVariantInput, InventoryMovementUncheckedCreateWithoutVariantInput> | InventoryMovementCreateWithoutVariantInput[] | InventoryMovementUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: InventoryMovementCreateOrConnectWithoutVariantInput | InventoryMovementCreateOrConnectWithoutVariantInput[]
    upsert?: InventoryMovementUpsertWithWhereUniqueWithoutVariantInput | InventoryMovementUpsertWithWhereUniqueWithoutVariantInput[]
    createMany?: InventoryMovementCreateManyVariantInputEnvelope
    set?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
    disconnect?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
    delete?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
    connect?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
    update?: InventoryMovementUpdateWithWhereUniqueWithoutVariantInput | InventoryMovementUpdateWithWhereUniqueWithoutVariantInput[]
    updateMany?: InventoryMovementUpdateManyWithWhereWithoutVariantInput | InventoryMovementUpdateManyWithWhereWithoutVariantInput[]
    deleteMany?: InventoryMovementScalarWhereInput | InventoryMovementScalarWhereInput[]
  }

  export type PurchaseOrderItemUncheckedUpdateManyWithoutVariantNestedInput = {
    create?: XOR<PurchaseOrderItemCreateWithoutVariantInput, PurchaseOrderItemUncheckedCreateWithoutVariantInput> | PurchaseOrderItemCreateWithoutVariantInput[] | PurchaseOrderItemUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: PurchaseOrderItemCreateOrConnectWithoutVariantInput | PurchaseOrderItemCreateOrConnectWithoutVariantInput[]
    upsert?: PurchaseOrderItemUpsertWithWhereUniqueWithoutVariantInput | PurchaseOrderItemUpsertWithWhereUniqueWithoutVariantInput[]
    createMany?: PurchaseOrderItemCreateManyVariantInputEnvelope
    set?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    disconnect?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    delete?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    connect?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    update?: PurchaseOrderItemUpdateWithWhereUniqueWithoutVariantInput | PurchaseOrderItemUpdateWithWhereUniqueWithoutVariantInput[]
    updateMany?: PurchaseOrderItemUpdateManyWithWhereWithoutVariantInput | PurchaseOrderItemUpdateManyWithWhereWithoutVariantInput[]
    deleteMany?: PurchaseOrderItemScalarWhereInput | PurchaseOrderItemScalarWhereInput[]
  }

  export type GoodsReceiptItemUncheckedUpdateManyWithoutVariantNestedInput = {
    create?: XOR<GoodsReceiptItemCreateWithoutVariantInput, GoodsReceiptItemUncheckedCreateWithoutVariantInput> | GoodsReceiptItemCreateWithoutVariantInput[] | GoodsReceiptItemUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: GoodsReceiptItemCreateOrConnectWithoutVariantInput | GoodsReceiptItemCreateOrConnectWithoutVariantInput[]
    upsert?: GoodsReceiptItemUpsertWithWhereUniqueWithoutVariantInput | GoodsReceiptItemUpsertWithWhereUniqueWithoutVariantInput[]
    createMany?: GoodsReceiptItemCreateManyVariantInputEnvelope
    set?: GoodsReceiptItemWhereUniqueInput | GoodsReceiptItemWhereUniqueInput[]
    disconnect?: GoodsReceiptItemWhereUniqueInput | GoodsReceiptItemWhereUniqueInput[]
    delete?: GoodsReceiptItemWhereUniqueInput | GoodsReceiptItemWhereUniqueInput[]
    connect?: GoodsReceiptItemWhereUniqueInput | GoodsReceiptItemWhereUniqueInput[]
    update?: GoodsReceiptItemUpdateWithWhereUniqueWithoutVariantInput | GoodsReceiptItemUpdateWithWhereUniqueWithoutVariantInput[]
    updateMany?: GoodsReceiptItemUpdateManyWithWhereWithoutVariantInput | GoodsReceiptItemUpdateManyWithWhereWithoutVariantInput[]
    deleteMany?: GoodsReceiptItemScalarWhereInput | GoodsReceiptItemScalarWhereInput[]
  }

  export type OrderItemUncheckedUpdateManyWithoutVariantNestedInput = {
    create?: XOR<OrderItemCreateWithoutVariantInput, OrderItemUncheckedCreateWithoutVariantInput> | OrderItemCreateWithoutVariantInput[] | OrderItemUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutVariantInput | OrderItemCreateOrConnectWithoutVariantInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutVariantInput | OrderItemUpsertWithWhereUniqueWithoutVariantInput[]
    createMany?: OrderItemCreateManyVariantInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutVariantInput | OrderItemUpdateWithWhereUniqueWithoutVariantInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutVariantInput | OrderItemUpdateManyWithWhereWithoutVariantInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type StockTransferItemUncheckedUpdateManyWithoutVariantNestedInput = {
    create?: XOR<StockTransferItemCreateWithoutVariantInput, StockTransferItemUncheckedCreateWithoutVariantInput> | StockTransferItemCreateWithoutVariantInput[] | StockTransferItemUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: StockTransferItemCreateOrConnectWithoutVariantInput | StockTransferItemCreateOrConnectWithoutVariantInput[]
    upsert?: StockTransferItemUpsertWithWhereUniqueWithoutVariantInput | StockTransferItemUpsertWithWhereUniqueWithoutVariantInput[]
    createMany?: StockTransferItemCreateManyVariantInputEnvelope
    set?: StockTransferItemWhereUniqueInput | StockTransferItemWhereUniqueInput[]
    disconnect?: StockTransferItemWhereUniqueInput | StockTransferItemWhereUniqueInput[]
    delete?: StockTransferItemWhereUniqueInput | StockTransferItemWhereUniqueInput[]
    connect?: StockTransferItemWhereUniqueInput | StockTransferItemWhereUniqueInput[]
    update?: StockTransferItemUpdateWithWhereUniqueWithoutVariantInput | StockTransferItemUpdateWithWhereUniqueWithoutVariantInput[]
    updateMany?: StockTransferItemUpdateManyWithWhereWithoutVariantInput | StockTransferItemUpdateManyWithWhereWithoutVariantInput[]
    deleteMany?: StockTransferItemScalarWhereInput | StockTransferItemScalarWhereInput[]
  }

  export type InventoryAuditItemUncheckedUpdateManyWithoutVariantNestedInput = {
    create?: XOR<InventoryAuditItemCreateWithoutVariantInput, InventoryAuditItemUncheckedCreateWithoutVariantInput> | InventoryAuditItemCreateWithoutVariantInput[] | InventoryAuditItemUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: InventoryAuditItemCreateOrConnectWithoutVariantInput | InventoryAuditItemCreateOrConnectWithoutVariantInput[]
    upsert?: InventoryAuditItemUpsertWithWhereUniqueWithoutVariantInput | InventoryAuditItemUpsertWithWhereUniqueWithoutVariantInput[]
    createMany?: InventoryAuditItemCreateManyVariantInputEnvelope
    set?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
    disconnect?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
    delete?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
    connect?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
    update?: InventoryAuditItemUpdateWithWhereUniqueWithoutVariantInput | InventoryAuditItemUpdateWithWhereUniqueWithoutVariantInput[]
    updateMany?: InventoryAuditItemUpdateManyWithWhereWithoutVariantInput | InventoryAuditItemUpdateManyWithWhereWithoutVariantInput[]
    deleteMany?: InventoryAuditItemScalarWhereInput | InventoryAuditItemScalarWhereInput[]
  }

  export type CategoryCreateNestedOneWithoutChildrenInput = {
    create?: XOR<CategoryCreateWithoutChildrenInput, CategoryUncheckedCreateWithoutChildrenInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutChildrenInput
    connect?: CategoryWhereUniqueInput
  }

  export type CategoryCreateNestedManyWithoutParentInput = {
    create?: XOR<CategoryCreateWithoutParentInput, CategoryUncheckedCreateWithoutParentInput> | CategoryCreateWithoutParentInput[] | CategoryUncheckedCreateWithoutParentInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutParentInput | CategoryCreateOrConnectWithoutParentInput[]
    createMany?: CategoryCreateManyParentInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type ProductCreateNestedManyWithoutCategoryInput = {
    create?: XOR<ProductCreateWithoutCategoryInput, ProductUncheckedCreateWithoutCategoryInput> | ProductCreateWithoutCategoryInput[] | ProductUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCategoryInput | ProductCreateOrConnectWithoutCategoryInput[]
    createMany?: ProductCreateManyCategoryInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type CategoryUncheckedCreateNestedManyWithoutParentInput = {
    create?: XOR<CategoryCreateWithoutParentInput, CategoryUncheckedCreateWithoutParentInput> | CategoryCreateWithoutParentInput[] | CategoryUncheckedCreateWithoutParentInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutParentInput | CategoryCreateOrConnectWithoutParentInput[]
    createMany?: CategoryCreateManyParentInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<ProductCreateWithoutCategoryInput, ProductUncheckedCreateWithoutCategoryInput> | ProductCreateWithoutCategoryInput[] | ProductUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCategoryInput | ProductCreateOrConnectWithoutCategoryInput[]
    createMany?: ProductCreateManyCategoryInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type CategoryUpdateOneWithoutChildrenNestedInput = {
    create?: XOR<CategoryCreateWithoutChildrenInput, CategoryUncheckedCreateWithoutChildrenInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutChildrenInput
    upsert?: CategoryUpsertWithoutChildrenInput
    disconnect?: CategoryWhereInput | boolean
    delete?: CategoryWhereInput | boolean
    connect?: CategoryWhereUniqueInput
    update?: XOR<XOR<CategoryUpdateToOneWithWhereWithoutChildrenInput, CategoryUpdateWithoutChildrenInput>, CategoryUncheckedUpdateWithoutChildrenInput>
  }

  export type CategoryUpdateManyWithoutParentNestedInput = {
    create?: XOR<CategoryCreateWithoutParentInput, CategoryUncheckedCreateWithoutParentInput> | CategoryCreateWithoutParentInput[] | CategoryUncheckedCreateWithoutParentInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutParentInput | CategoryCreateOrConnectWithoutParentInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutParentInput | CategoryUpsertWithWhereUniqueWithoutParentInput[]
    createMany?: CategoryCreateManyParentInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutParentInput | CategoryUpdateWithWhereUniqueWithoutParentInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutParentInput | CategoryUpdateManyWithWhereWithoutParentInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type ProductUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<ProductCreateWithoutCategoryInput, ProductUncheckedCreateWithoutCategoryInput> | ProductCreateWithoutCategoryInput[] | ProductUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCategoryInput | ProductCreateOrConnectWithoutCategoryInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutCategoryInput | ProductUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: ProductCreateManyCategoryInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutCategoryInput | ProductUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutCategoryInput | ProductUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type CategoryUncheckedUpdateManyWithoutParentNestedInput = {
    create?: XOR<CategoryCreateWithoutParentInput, CategoryUncheckedCreateWithoutParentInput> | CategoryCreateWithoutParentInput[] | CategoryUncheckedCreateWithoutParentInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutParentInput | CategoryCreateOrConnectWithoutParentInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutParentInput | CategoryUpsertWithWhereUniqueWithoutParentInput[]
    createMany?: CategoryCreateManyParentInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutParentInput | CategoryUpdateWithWhereUniqueWithoutParentInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutParentInput | CategoryUpdateManyWithWhereWithoutParentInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<ProductCreateWithoutCategoryInput, ProductUncheckedCreateWithoutCategoryInput> | ProductCreateWithoutCategoryInput[] | ProductUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCategoryInput | ProductCreateOrConnectWithoutCategoryInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutCategoryInput | ProductUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: ProductCreateManyCategoryInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutCategoryInput | ProductUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutCategoryInput | ProductUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductCreateNestedManyWithoutBrandInput = {
    create?: XOR<ProductCreateWithoutBrandInput, ProductUncheckedCreateWithoutBrandInput> | ProductCreateWithoutBrandInput[] | ProductUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutBrandInput | ProductCreateOrConnectWithoutBrandInput[]
    createMany?: ProductCreateManyBrandInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutBrandInput = {
    create?: XOR<ProductCreateWithoutBrandInput, ProductUncheckedCreateWithoutBrandInput> | ProductCreateWithoutBrandInput[] | ProductUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutBrandInput | ProductCreateOrConnectWithoutBrandInput[]
    createMany?: ProductCreateManyBrandInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProductUpdateManyWithoutBrandNestedInput = {
    create?: XOR<ProductCreateWithoutBrandInput, ProductUncheckedCreateWithoutBrandInput> | ProductCreateWithoutBrandInput[] | ProductUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutBrandInput | ProductCreateOrConnectWithoutBrandInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutBrandInput | ProductUpsertWithWhereUniqueWithoutBrandInput[]
    createMany?: ProductCreateManyBrandInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutBrandInput | ProductUpdateWithWhereUniqueWithoutBrandInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutBrandInput | ProductUpdateManyWithWhereWithoutBrandInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutBrandNestedInput = {
    create?: XOR<ProductCreateWithoutBrandInput, ProductUncheckedCreateWithoutBrandInput> | ProductCreateWithoutBrandInput[] | ProductUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutBrandInput | ProductCreateOrConnectWithoutBrandInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutBrandInput | ProductUpsertWithWhereUniqueWithoutBrandInput[]
    createMany?: ProductCreateManyBrandInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutBrandInput | ProductUpdateWithWhereUniqueWithoutBrandInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutBrandInput | ProductUpdateManyWithWhereWithoutBrandInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductCreateNestedManyWithoutBundlesInput = {
    create?: XOR<ProductCreateWithoutBundlesInput, ProductUncheckedCreateWithoutBundlesInput> | ProductCreateWithoutBundlesInput[] | ProductUncheckedCreateWithoutBundlesInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutBundlesInput | ProductCreateOrConnectWithoutBundlesInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProductCreateNestedManyWithoutBundleItemsInput = {
    create?: XOR<ProductCreateWithoutBundleItemsInput, ProductUncheckedCreateWithoutBundleItemsInput> | ProductCreateWithoutBundleItemsInput[] | ProductUncheckedCreateWithoutBundleItemsInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutBundleItemsInput | ProductCreateOrConnectWithoutBundleItemsInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutBundlesInput = {
    create?: XOR<ProductCreateWithoutBundlesInput, ProductUncheckedCreateWithoutBundlesInput> | ProductCreateWithoutBundlesInput[] | ProductUncheckedCreateWithoutBundlesInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutBundlesInput | ProductCreateOrConnectWithoutBundlesInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutBundleItemsInput = {
    create?: XOR<ProductCreateWithoutBundleItemsInput, ProductUncheckedCreateWithoutBundleItemsInput> | ProductCreateWithoutBundleItemsInput[] | ProductUncheckedCreateWithoutBundleItemsInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutBundleItemsInput | ProductCreateOrConnectWithoutBundleItemsInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type ProductUpdateManyWithoutBundlesNestedInput = {
    create?: XOR<ProductCreateWithoutBundlesInput, ProductUncheckedCreateWithoutBundlesInput> | ProductCreateWithoutBundlesInput[] | ProductUncheckedCreateWithoutBundlesInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutBundlesInput | ProductCreateOrConnectWithoutBundlesInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutBundlesInput | ProductUpsertWithWhereUniqueWithoutBundlesInput[]
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutBundlesInput | ProductUpdateWithWhereUniqueWithoutBundlesInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutBundlesInput | ProductUpdateManyWithWhereWithoutBundlesInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductUpdateManyWithoutBundleItemsNestedInput = {
    create?: XOR<ProductCreateWithoutBundleItemsInput, ProductUncheckedCreateWithoutBundleItemsInput> | ProductCreateWithoutBundleItemsInput[] | ProductUncheckedCreateWithoutBundleItemsInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutBundleItemsInput | ProductCreateOrConnectWithoutBundleItemsInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutBundleItemsInput | ProductUpsertWithWhereUniqueWithoutBundleItemsInput[]
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutBundleItemsInput | ProductUpdateWithWhereUniqueWithoutBundleItemsInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutBundleItemsInput | ProductUpdateManyWithWhereWithoutBundleItemsInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutBundlesNestedInput = {
    create?: XOR<ProductCreateWithoutBundlesInput, ProductUncheckedCreateWithoutBundlesInput> | ProductCreateWithoutBundlesInput[] | ProductUncheckedCreateWithoutBundlesInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutBundlesInput | ProductCreateOrConnectWithoutBundlesInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutBundlesInput | ProductUpsertWithWhereUniqueWithoutBundlesInput[]
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutBundlesInput | ProductUpdateWithWhereUniqueWithoutBundlesInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutBundlesInput | ProductUpdateManyWithWhereWithoutBundlesInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutBundleItemsNestedInput = {
    create?: XOR<ProductCreateWithoutBundleItemsInput, ProductUncheckedCreateWithoutBundleItemsInput> | ProductCreateWithoutBundleItemsInput[] | ProductUncheckedCreateWithoutBundleItemsInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutBundleItemsInput | ProductCreateOrConnectWithoutBundleItemsInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutBundleItemsInput | ProductUpsertWithWhereUniqueWithoutBundleItemsInput[]
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutBundleItemsInput | ProductUpdateWithWhereUniqueWithoutBundleItemsInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutBundleItemsInput | ProductUpdateManyWithWhereWithoutBundleItemsInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type InventoryItemCreateNestedManyWithoutWarehouseInput = {
    create?: XOR<InventoryItemCreateWithoutWarehouseInput, InventoryItemUncheckedCreateWithoutWarehouseInput> | InventoryItemCreateWithoutWarehouseInput[] | InventoryItemUncheckedCreateWithoutWarehouseInput[]
    connectOrCreate?: InventoryItemCreateOrConnectWithoutWarehouseInput | InventoryItemCreateOrConnectWithoutWarehouseInput[]
    createMany?: InventoryItemCreateManyWarehouseInputEnvelope
    connect?: InventoryItemWhereUniqueInput | InventoryItemWhereUniqueInput[]
  }

  export type InventoryMovementCreateNestedManyWithoutWarehouseInput = {
    create?: XOR<InventoryMovementCreateWithoutWarehouseInput, InventoryMovementUncheckedCreateWithoutWarehouseInput> | InventoryMovementCreateWithoutWarehouseInput[] | InventoryMovementUncheckedCreateWithoutWarehouseInput[]
    connectOrCreate?: InventoryMovementCreateOrConnectWithoutWarehouseInput | InventoryMovementCreateOrConnectWithoutWarehouseInput[]
    createMany?: InventoryMovementCreateManyWarehouseInputEnvelope
    connect?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
  }

  export type StockTransferCreateNestedManyWithoutFromWarehouseInput = {
    create?: XOR<StockTransferCreateWithoutFromWarehouseInput, StockTransferUncheckedCreateWithoutFromWarehouseInput> | StockTransferCreateWithoutFromWarehouseInput[] | StockTransferUncheckedCreateWithoutFromWarehouseInput[]
    connectOrCreate?: StockTransferCreateOrConnectWithoutFromWarehouseInput | StockTransferCreateOrConnectWithoutFromWarehouseInput[]
    createMany?: StockTransferCreateManyFromWarehouseInputEnvelope
    connect?: StockTransferWhereUniqueInput | StockTransferWhereUniqueInput[]
  }

  export type StockTransferCreateNestedManyWithoutToWarehouseInput = {
    create?: XOR<StockTransferCreateWithoutToWarehouseInput, StockTransferUncheckedCreateWithoutToWarehouseInput> | StockTransferCreateWithoutToWarehouseInput[] | StockTransferUncheckedCreateWithoutToWarehouseInput[]
    connectOrCreate?: StockTransferCreateOrConnectWithoutToWarehouseInput | StockTransferCreateOrConnectWithoutToWarehouseInput[]
    createMany?: StockTransferCreateManyToWarehouseInputEnvelope
    connect?: StockTransferWhereUniqueInput | StockTransferWhereUniqueInput[]
  }

  export type OrderCreateNestedManyWithoutWarehouseInput = {
    create?: XOR<OrderCreateWithoutWarehouseInput, OrderUncheckedCreateWithoutWarehouseInput> | OrderCreateWithoutWarehouseInput[] | OrderUncheckedCreateWithoutWarehouseInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutWarehouseInput | OrderCreateOrConnectWithoutWarehouseInput[]
    createMany?: OrderCreateManyWarehouseInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type PurchaseOrderCreateNestedManyWithoutWarehouseInput = {
    create?: XOR<PurchaseOrderCreateWithoutWarehouseInput, PurchaseOrderUncheckedCreateWithoutWarehouseInput> | PurchaseOrderCreateWithoutWarehouseInput[] | PurchaseOrderUncheckedCreateWithoutWarehouseInput[]
    connectOrCreate?: PurchaseOrderCreateOrConnectWithoutWarehouseInput | PurchaseOrderCreateOrConnectWithoutWarehouseInput[]
    createMany?: PurchaseOrderCreateManyWarehouseInputEnvelope
    connect?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
  }

  export type InventoryAuditCreateNestedManyWithoutWarehouseInput = {
    create?: XOR<InventoryAuditCreateWithoutWarehouseInput, InventoryAuditUncheckedCreateWithoutWarehouseInput> | InventoryAuditCreateWithoutWarehouseInput[] | InventoryAuditUncheckedCreateWithoutWarehouseInput[]
    connectOrCreate?: InventoryAuditCreateOrConnectWithoutWarehouseInput | InventoryAuditCreateOrConnectWithoutWarehouseInput[]
    createMany?: InventoryAuditCreateManyWarehouseInputEnvelope
    connect?: InventoryAuditWhereUniqueInput | InventoryAuditWhereUniqueInput[]
  }

  export type GoodsReceiptCreateNestedManyWithoutWarehouseInput = {
    create?: XOR<GoodsReceiptCreateWithoutWarehouseInput, GoodsReceiptUncheckedCreateWithoutWarehouseInput> | GoodsReceiptCreateWithoutWarehouseInput[] | GoodsReceiptUncheckedCreateWithoutWarehouseInput[]
    connectOrCreate?: GoodsReceiptCreateOrConnectWithoutWarehouseInput | GoodsReceiptCreateOrConnectWithoutWarehouseInput[]
    createMany?: GoodsReceiptCreateManyWarehouseInputEnvelope
    connect?: GoodsReceiptWhereUniqueInput | GoodsReceiptWhereUniqueInput[]
  }

  export type ShipmentCreateNestedManyWithoutWarehouseInput = {
    create?: XOR<ShipmentCreateWithoutWarehouseInput, ShipmentUncheckedCreateWithoutWarehouseInput> | ShipmentCreateWithoutWarehouseInput[] | ShipmentUncheckedCreateWithoutWarehouseInput[]
    connectOrCreate?: ShipmentCreateOrConnectWithoutWarehouseInput | ShipmentCreateOrConnectWithoutWarehouseInput[]
    createMany?: ShipmentCreateManyWarehouseInputEnvelope
    connect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
  }

  export type InventoryAuditItemCreateNestedManyWithoutWarehouseInput = {
    create?: XOR<InventoryAuditItemCreateWithoutWarehouseInput, InventoryAuditItemUncheckedCreateWithoutWarehouseInput> | InventoryAuditItemCreateWithoutWarehouseInput[] | InventoryAuditItemUncheckedCreateWithoutWarehouseInput[]
    connectOrCreate?: InventoryAuditItemCreateOrConnectWithoutWarehouseInput | InventoryAuditItemCreateOrConnectWithoutWarehouseInput[]
    createMany?: InventoryAuditItemCreateManyWarehouseInputEnvelope
    connect?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
  }

  export type InventoryItemUncheckedCreateNestedManyWithoutWarehouseInput = {
    create?: XOR<InventoryItemCreateWithoutWarehouseInput, InventoryItemUncheckedCreateWithoutWarehouseInput> | InventoryItemCreateWithoutWarehouseInput[] | InventoryItemUncheckedCreateWithoutWarehouseInput[]
    connectOrCreate?: InventoryItemCreateOrConnectWithoutWarehouseInput | InventoryItemCreateOrConnectWithoutWarehouseInput[]
    createMany?: InventoryItemCreateManyWarehouseInputEnvelope
    connect?: InventoryItemWhereUniqueInput | InventoryItemWhereUniqueInput[]
  }

  export type InventoryMovementUncheckedCreateNestedManyWithoutWarehouseInput = {
    create?: XOR<InventoryMovementCreateWithoutWarehouseInput, InventoryMovementUncheckedCreateWithoutWarehouseInput> | InventoryMovementCreateWithoutWarehouseInput[] | InventoryMovementUncheckedCreateWithoutWarehouseInput[]
    connectOrCreate?: InventoryMovementCreateOrConnectWithoutWarehouseInput | InventoryMovementCreateOrConnectWithoutWarehouseInput[]
    createMany?: InventoryMovementCreateManyWarehouseInputEnvelope
    connect?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
  }

  export type StockTransferUncheckedCreateNestedManyWithoutFromWarehouseInput = {
    create?: XOR<StockTransferCreateWithoutFromWarehouseInput, StockTransferUncheckedCreateWithoutFromWarehouseInput> | StockTransferCreateWithoutFromWarehouseInput[] | StockTransferUncheckedCreateWithoutFromWarehouseInput[]
    connectOrCreate?: StockTransferCreateOrConnectWithoutFromWarehouseInput | StockTransferCreateOrConnectWithoutFromWarehouseInput[]
    createMany?: StockTransferCreateManyFromWarehouseInputEnvelope
    connect?: StockTransferWhereUniqueInput | StockTransferWhereUniqueInput[]
  }

  export type StockTransferUncheckedCreateNestedManyWithoutToWarehouseInput = {
    create?: XOR<StockTransferCreateWithoutToWarehouseInput, StockTransferUncheckedCreateWithoutToWarehouseInput> | StockTransferCreateWithoutToWarehouseInput[] | StockTransferUncheckedCreateWithoutToWarehouseInput[]
    connectOrCreate?: StockTransferCreateOrConnectWithoutToWarehouseInput | StockTransferCreateOrConnectWithoutToWarehouseInput[]
    createMany?: StockTransferCreateManyToWarehouseInputEnvelope
    connect?: StockTransferWhereUniqueInput | StockTransferWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutWarehouseInput = {
    create?: XOR<OrderCreateWithoutWarehouseInput, OrderUncheckedCreateWithoutWarehouseInput> | OrderCreateWithoutWarehouseInput[] | OrderUncheckedCreateWithoutWarehouseInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutWarehouseInput | OrderCreateOrConnectWithoutWarehouseInput[]
    createMany?: OrderCreateManyWarehouseInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type PurchaseOrderUncheckedCreateNestedManyWithoutWarehouseInput = {
    create?: XOR<PurchaseOrderCreateWithoutWarehouseInput, PurchaseOrderUncheckedCreateWithoutWarehouseInput> | PurchaseOrderCreateWithoutWarehouseInput[] | PurchaseOrderUncheckedCreateWithoutWarehouseInput[]
    connectOrCreate?: PurchaseOrderCreateOrConnectWithoutWarehouseInput | PurchaseOrderCreateOrConnectWithoutWarehouseInput[]
    createMany?: PurchaseOrderCreateManyWarehouseInputEnvelope
    connect?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
  }

  export type InventoryAuditUncheckedCreateNestedManyWithoutWarehouseInput = {
    create?: XOR<InventoryAuditCreateWithoutWarehouseInput, InventoryAuditUncheckedCreateWithoutWarehouseInput> | InventoryAuditCreateWithoutWarehouseInput[] | InventoryAuditUncheckedCreateWithoutWarehouseInput[]
    connectOrCreate?: InventoryAuditCreateOrConnectWithoutWarehouseInput | InventoryAuditCreateOrConnectWithoutWarehouseInput[]
    createMany?: InventoryAuditCreateManyWarehouseInputEnvelope
    connect?: InventoryAuditWhereUniqueInput | InventoryAuditWhereUniqueInput[]
  }

  export type GoodsReceiptUncheckedCreateNestedManyWithoutWarehouseInput = {
    create?: XOR<GoodsReceiptCreateWithoutWarehouseInput, GoodsReceiptUncheckedCreateWithoutWarehouseInput> | GoodsReceiptCreateWithoutWarehouseInput[] | GoodsReceiptUncheckedCreateWithoutWarehouseInput[]
    connectOrCreate?: GoodsReceiptCreateOrConnectWithoutWarehouseInput | GoodsReceiptCreateOrConnectWithoutWarehouseInput[]
    createMany?: GoodsReceiptCreateManyWarehouseInputEnvelope
    connect?: GoodsReceiptWhereUniqueInput | GoodsReceiptWhereUniqueInput[]
  }

  export type ShipmentUncheckedCreateNestedManyWithoutWarehouseInput = {
    create?: XOR<ShipmentCreateWithoutWarehouseInput, ShipmentUncheckedCreateWithoutWarehouseInput> | ShipmentCreateWithoutWarehouseInput[] | ShipmentUncheckedCreateWithoutWarehouseInput[]
    connectOrCreate?: ShipmentCreateOrConnectWithoutWarehouseInput | ShipmentCreateOrConnectWithoutWarehouseInput[]
    createMany?: ShipmentCreateManyWarehouseInputEnvelope
    connect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
  }

  export type InventoryAuditItemUncheckedCreateNestedManyWithoutWarehouseInput = {
    create?: XOR<InventoryAuditItemCreateWithoutWarehouseInput, InventoryAuditItemUncheckedCreateWithoutWarehouseInput> | InventoryAuditItemCreateWithoutWarehouseInput[] | InventoryAuditItemUncheckedCreateWithoutWarehouseInput[]
    connectOrCreate?: InventoryAuditItemCreateOrConnectWithoutWarehouseInput | InventoryAuditItemCreateOrConnectWithoutWarehouseInput[]
    createMany?: InventoryAuditItemCreateManyWarehouseInputEnvelope
    connect?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
  }

  export type EnumWarehouseTypeFieldUpdateOperationsInput = {
    set?: $Enums.WarehouseType
  }

  export type InventoryItemUpdateManyWithoutWarehouseNestedInput = {
    create?: XOR<InventoryItemCreateWithoutWarehouseInput, InventoryItemUncheckedCreateWithoutWarehouseInput> | InventoryItemCreateWithoutWarehouseInput[] | InventoryItemUncheckedCreateWithoutWarehouseInput[]
    connectOrCreate?: InventoryItemCreateOrConnectWithoutWarehouseInput | InventoryItemCreateOrConnectWithoutWarehouseInput[]
    upsert?: InventoryItemUpsertWithWhereUniqueWithoutWarehouseInput | InventoryItemUpsertWithWhereUniqueWithoutWarehouseInput[]
    createMany?: InventoryItemCreateManyWarehouseInputEnvelope
    set?: InventoryItemWhereUniqueInput | InventoryItemWhereUniqueInput[]
    disconnect?: InventoryItemWhereUniqueInput | InventoryItemWhereUniqueInput[]
    delete?: InventoryItemWhereUniqueInput | InventoryItemWhereUniqueInput[]
    connect?: InventoryItemWhereUniqueInput | InventoryItemWhereUniqueInput[]
    update?: InventoryItemUpdateWithWhereUniqueWithoutWarehouseInput | InventoryItemUpdateWithWhereUniqueWithoutWarehouseInput[]
    updateMany?: InventoryItemUpdateManyWithWhereWithoutWarehouseInput | InventoryItemUpdateManyWithWhereWithoutWarehouseInput[]
    deleteMany?: InventoryItemScalarWhereInput | InventoryItemScalarWhereInput[]
  }

  export type InventoryMovementUpdateManyWithoutWarehouseNestedInput = {
    create?: XOR<InventoryMovementCreateWithoutWarehouseInput, InventoryMovementUncheckedCreateWithoutWarehouseInput> | InventoryMovementCreateWithoutWarehouseInput[] | InventoryMovementUncheckedCreateWithoutWarehouseInput[]
    connectOrCreate?: InventoryMovementCreateOrConnectWithoutWarehouseInput | InventoryMovementCreateOrConnectWithoutWarehouseInput[]
    upsert?: InventoryMovementUpsertWithWhereUniqueWithoutWarehouseInput | InventoryMovementUpsertWithWhereUniqueWithoutWarehouseInput[]
    createMany?: InventoryMovementCreateManyWarehouseInputEnvelope
    set?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
    disconnect?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
    delete?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
    connect?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
    update?: InventoryMovementUpdateWithWhereUniqueWithoutWarehouseInput | InventoryMovementUpdateWithWhereUniqueWithoutWarehouseInput[]
    updateMany?: InventoryMovementUpdateManyWithWhereWithoutWarehouseInput | InventoryMovementUpdateManyWithWhereWithoutWarehouseInput[]
    deleteMany?: InventoryMovementScalarWhereInput | InventoryMovementScalarWhereInput[]
  }

  export type StockTransferUpdateManyWithoutFromWarehouseNestedInput = {
    create?: XOR<StockTransferCreateWithoutFromWarehouseInput, StockTransferUncheckedCreateWithoutFromWarehouseInput> | StockTransferCreateWithoutFromWarehouseInput[] | StockTransferUncheckedCreateWithoutFromWarehouseInput[]
    connectOrCreate?: StockTransferCreateOrConnectWithoutFromWarehouseInput | StockTransferCreateOrConnectWithoutFromWarehouseInput[]
    upsert?: StockTransferUpsertWithWhereUniqueWithoutFromWarehouseInput | StockTransferUpsertWithWhereUniqueWithoutFromWarehouseInput[]
    createMany?: StockTransferCreateManyFromWarehouseInputEnvelope
    set?: StockTransferWhereUniqueInput | StockTransferWhereUniqueInput[]
    disconnect?: StockTransferWhereUniqueInput | StockTransferWhereUniqueInput[]
    delete?: StockTransferWhereUniqueInput | StockTransferWhereUniqueInput[]
    connect?: StockTransferWhereUniqueInput | StockTransferWhereUniqueInput[]
    update?: StockTransferUpdateWithWhereUniqueWithoutFromWarehouseInput | StockTransferUpdateWithWhereUniqueWithoutFromWarehouseInput[]
    updateMany?: StockTransferUpdateManyWithWhereWithoutFromWarehouseInput | StockTransferUpdateManyWithWhereWithoutFromWarehouseInput[]
    deleteMany?: StockTransferScalarWhereInput | StockTransferScalarWhereInput[]
  }

  export type StockTransferUpdateManyWithoutToWarehouseNestedInput = {
    create?: XOR<StockTransferCreateWithoutToWarehouseInput, StockTransferUncheckedCreateWithoutToWarehouseInput> | StockTransferCreateWithoutToWarehouseInput[] | StockTransferUncheckedCreateWithoutToWarehouseInput[]
    connectOrCreate?: StockTransferCreateOrConnectWithoutToWarehouseInput | StockTransferCreateOrConnectWithoutToWarehouseInput[]
    upsert?: StockTransferUpsertWithWhereUniqueWithoutToWarehouseInput | StockTransferUpsertWithWhereUniqueWithoutToWarehouseInput[]
    createMany?: StockTransferCreateManyToWarehouseInputEnvelope
    set?: StockTransferWhereUniqueInput | StockTransferWhereUniqueInput[]
    disconnect?: StockTransferWhereUniqueInput | StockTransferWhereUniqueInput[]
    delete?: StockTransferWhereUniqueInput | StockTransferWhereUniqueInput[]
    connect?: StockTransferWhereUniqueInput | StockTransferWhereUniqueInput[]
    update?: StockTransferUpdateWithWhereUniqueWithoutToWarehouseInput | StockTransferUpdateWithWhereUniqueWithoutToWarehouseInput[]
    updateMany?: StockTransferUpdateManyWithWhereWithoutToWarehouseInput | StockTransferUpdateManyWithWhereWithoutToWarehouseInput[]
    deleteMany?: StockTransferScalarWhereInput | StockTransferScalarWhereInput[]
  }

  export type OrderUpdateManyWithoutWarehouseNestedInput = {
    create?: XOR<OrderCreateWithoutWarehouseInput, OrderUncheckedCreateWithoutWarehouseInput> | OrderCreateWithoutWarehouseInput[] | OrderUncheckedCreateWithoutWarehouseInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutWarehouseInput | OrderCreateOrConnectWithoutWarehouseInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutWarehouseInput | OrderUpsertWithWhereUniqueWithoutWarehouseInput[]
    createMany?: OrderCreateManyWarehouseInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutWarehouseInput | OrderUpdateWithWhereUniqueWithoutWarehouseInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutWarehouseInput | OrderUpdateManyWithWhereWithoutWarehouseInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type PurchaseOrderUpdateManyWithoutWarehouseNestedInput = {
    create?: XOR<PurchaseOrderCreateWithoutWarehouseInput, PurchaseOrderUncheckedCreateWithoutWarehouseInput> | PurchaseOrderCreateWithoutWarehouseInput[] | PurchaseOrderUncheckedCreateWithoutWarehouseInput[]
    connectOrCreate?: PurchaseOrderCreateOrConnectWithoutWarehouseInput | PurchaseOrderCreateOrConnectWithoutWarehouseInput[]
    upsert?: PurchaseOrderUpsertWithWhereUniqueWithoutWarehouseInput | PurchaseOrderUpsertWithWhereUniqueWithoutWarehouseInput[]
    createMany?: PurchaseOrderCreateManyWarehouseInputEnvelope
    set?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
    disconnect?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
    delete?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
    connect?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
    update?: PurchaseOrderUpdateWithWhereUniqueWithoutWarehouseInput | PurchaseOrderUpdateWithWhereUniqueWithoutWarehouseInput[]
    updateMany?: PurchaseOrderUpdateManyWithWhereWithoutWarehouseInput | PurchaseOrderUpdateManyWithWhereWithoutWarehouseInput[]
    deleteMany?: PurchaseOrderScalarWhereInput | PurchaseOrderScalarWhereInput[]
  }

  export type InventoryAuditUpdateManyWithoutWarehouseNestedInput = {
    create?: XOR<InventoryAuditCreateWithoutWarehouseInput, InventoryAuditUncheckedCreateWithoutWarehouseInput> | InventoryAuditCreateWithoutWarehouseInput[] | InventoryAuditUncheckedCreateWithoutWarehouseInput[]
    connectOrCreate?: InventoryAuditCreateOrConnectWithoutWarehouseInput | InventoryAuditCreateOrConnectWithoutWarehouseInput[]
    upsert?: InventoryAuditUpsertWithWhereUniqueWithoutWarehouseInput | InventoryAuditUpsertWithWhereUniqueWithoutWarehouseInput[]
    createMany?: InventoryAuditCreateManyWarehouseInputEnvelope
    set?: InventoryAuditWhereUniqueInput | InventoryAuditWhereUniqueInput[]
    disconnect?: InventoryAuditWhereUniqueInput | InventoryAuditWhereUniqueInput[]
    delete?: InventoryAuditWhereUniqueInput | InventoryAuditWhereUniqueInput[]
    connect?: InventoryAuditWhereUniqueInput | InventoryAuditWhereUniqueInput[]
    update?: InventoryAuditUpdateWithWhereUniqueWithoutWarehouseInput | InventoryAuditUpdateWithWhereUniqueWithoutWarehouseInput[]
    updateMany?: InventoryAuditUpdateManyWithWhereWithoutWarehouseInput | InventoryAuditUpdateManyWithWhereWithoutWarehouseInput[]
    deleteMany?: InventoryAuditScalarWhereInput | InventoryAuditScalarWhereInput[]
  }

  export type GoodsReceiptUpdateManyWithoutWarehouseNestedInput = {
    create?: XOR<GoodsReceiptCreateWithoutWarehouseInput, GoodsReceiptUncheckedCreateWithoutWarehouseInput> | GoodsReceiptCreateWithoutWarehouseInput[] | GoodsReceiptUncheckedCreateWithoutWarehouseInput[]
    connectOrCreate?: GoodsReceiptCreateOrConnectWithoutWarehouseInput | GoodsReceiptCreateOrConnectWithoutWarehouseInput[]
    upsert?: GoodsReceiptUpsertWithWhereUniqueWithoutWarehouseInput | GoodsReceiptUpsertWithWhereUniqueWithoutWarehouseInput[]
    createMany?: GoodsReceiptCreateManyWarehouseInputEnvelope
    set?: GoodsReceiptWhereUniqueInput | GoodsReceiptWhereUniqueInput[]
    disconnect?: GoodsReceiptWhereUniqueInput | GoodsReceiptWhereUniqueInput[]
    delete?: GoodsReceiptWhereUniqueInput | GoodsReceiptWhereUniqueInput[]
    connect?: GoodsReceiptWhereUniqueInput | GoodsReceiptWhereUniqueInput[]
    update?: GoodsReceiptUpdateWithWhereUniqueWithoutWarehouseInput | GoodsReceiptUpdateWithWhereUniqueWithoutWarehouseInput[]
    updateMany?: GoodsReceiptUpdateManyWithWhereWithoutWarehouseInput | GoodsReceiptUpdateManyWithWhereWithoutWarehouseInput[]
    deleteMany?: GoodsReceiptScalarWhereInput | GoodsReceiptScalarWhereInput[]
  }

  export type ShipmentUpdateManyWithoutWarehouseNestedInput = {
    create?: XOR<ShipmentCreateWithoutWarehouseInput, ShipmentUncheckedCreateWithoutWarehouseInput> | ShipmentCreateWithoutWarehouseInput[] | ShipmentUncheckedCreateWithoutWarehouseInput[]
    connectOrCreate?: ShipmentCreateOrConnectWithoutWarehouseInput | ShipmentCreateOrConnectWithoutWarehouseInput[]
    upsert?: ShipmentUpsertWithWhereUniqueWithoutWarehouseInput | ShipmentUpsertWithWhereUniqueWithoutWarehouseInput[]
    createMany?: ShipmentCreateManyWarehouseInputEnvelope
    set?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    disconnect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    delete?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    connect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    update?: ShipmentUpdateWithWhereUniqueWithoutWarehouseInput | ShipmentUpdateWithWhereUniqueWithoutWarehouseInput[]
    updateMany?: ShipmentUpdateManyWithWhereWithoutWarehouseInput | ShipmentUpdateManyWithWhereWithoutWarehouseInput[]
    deleteMany?: ShipmentScalarWhereInput | ShipmentScalarWhereInput[]
  }

  export type InventoryAuditItemUpdateManyWithoutWarehouseNestedInput = {
    create?: XOR<InventoryAuditItemCreateWithoutWarehouseInput, InventoryAuditItemUncheckedCreateWithoutWarehouseInput> | InventoryAuditItemCreateWithoutWarehouseInput[] | InventoryAuditItemUncheckedCreateWithoutWarehouseInput[]
    connectOrCreate?: InventoryAuditItemCreateOrConnectWithoutWarehouseInput | InventoryAuditItemCreateOrConnectWithoutWarehouseInput[]
    upsert?: InventoryAuditItemUpsertWithWhereUniqueWithoutWarehouseInput | InventoryAuditItemUpsertWithWhereUniqueWithoutWarehouseInput[]
    createMany?: InventoryAuditItemCreateManyWarehouseInputEnvelope
    set?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
    disconnect?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
    delete?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
    connect?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
    update?: InventoryAuditItemUpdateWithWhereUniqueWithoutWarehouseInput | InventoryAuditItemUpdateWithWhereUniqueWithoutWarehouseInput[]
    updateMany?: InventoryAuditItemUpdateManyWithWhereWithoutWarehouseInput | InventoryAuditItemUpdateManyWithWhereWithoutWarehouseInput[]
    deleteMany?: InventoryAuditItemScalarWhereInput | InventoryAuditItemScalarWhereInput[]
  }

  export type InventoryItemUncheckedUpdateManyWithoutWarehouseNestedInput = {
    create?: XOR<InventoryItemCreateWithoutWarehouseInput, InventoryItemUncheckedCreateWithoutWarehouseInput> | InventoryItemCreateWithoutWarehouseInput[] | InventoryItemUncheckedCreateWithoutWarehouseInput[]
    connectOrCreate?: InventoryItemCreateOrConnectWithoutWarehouseInput | InventoryItemCreateOrConnectWithoutWarehouseInput[]
    upsert?: InventoryItemUpsertWithWhereUniqueWithoutWarehouseInput | InventoryItemUpsertWithWhereUniqueWithoutWarehouseInput[]
    createMany?: InventoryItemCreateManyWarehouseInputEnvelope
    set?: InventoryItemWhereUniqueInput | InventoryItemWhereUniqueInput[]
    disconnect?: InventoryItemWhereUniqueInput | InventoryItemWhereUniqueInput[]
    delete?: InventoryItemWhereUniqueInput | InventoryItemWhereUniqueInput[]
    connect?: InventoryItemWhereUniqueInput | InventoryItemWhereUniqueInput[]
    update?: InventoryItemUpdateWithWhereUniqueWithoutWarehouseInput | InventoryItemUpdateWithWhereUniqueWithoutWarehouseInput[]
    updateMany?: InventoryItemUpdateManyWithWhereWithoutWarehouseInput | InventoryItemUpdateManyWithWhereWithoutWarehouseInput[]
    deleteMany?: InventoryItemScalarWhereInput | InventoryItemScalarWhereInput[]
  }

  export type InventoryMovementUncheckedUpdateManyWithoutWarehouseNestedInput = {
    create?: XOR<InventoryMovementCreateWithoutWarehouseInput, InventoryMovementUncheckedCreateWithoutWarehouseInput> | InventoryMovementCreateWithoutWarehouseInput[] | InventoryMovementUncheckedCreateWithoutWarehouseInput[]
    connectOrCreate?: InventoryMovementCreateOrConnectWithoutWarehouseInput | InventoryMovementCreateOrConnectWithoutWarehouseInput[]
    upsert?: InventoryMovementUpsertWithWhereUniqueWithoutWarehouseInput | InventoryMovementUpsertWithWhereUniqueWithoutWarehouseInput[]
    createMany?: InventoryMovementCreateManyWarehouseInputEnvelope
    set?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
    disconnect?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
    delete?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
    connect?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
    update?: InventoryMovementUpdateWithWhereUniqueWithoutWarehouseInput | InventoryMovementUpdateWithWhereUniqueWithoutWarehouseInput[]
    updateMany?: InventoryMovementUpdateManyWithWhereWithoutWarehouseInput | InventoryMovementUpdateManyWithWhereWithoutWarehouseInput[]
    deleteMany?: InventoryMovementScalarWhereInput | InventoryMovementScalarWhereInput[]
  }

  export type StockTransferUncheckedUpdateManyWithoutFromWarehouseNestedInput = {
    create?: XOR<StockTransferCreateWithoutFromWarehouseInput, StockTransferUncheckedCreateWithoutFromWarehouseInput> | StockTransferCreateWithoutFromWarehouseInput[] | StockTransferUncheckedCreateWithoutFromWarehouseInput[]
    connectOrCreate?: StockTransferCreateOrConnectWithoutFromWarehouseInput | StockTransferCreateOrConnectWithoutFromWarehouseInput[]
    upsert?: StockTransferUpsertWithWhereUniqueWithoutFromWarehouseInput | StockTransferUpsertWithWhereUniqueWithoutFromWarehouseInput[]
    createMany?: StockTransferCreateManyFromWarehouseInputEnvelope
    set?: StockTransferWhereUniqueInput | StockTransferWhereUniqueInput[]
    disconnect?: StockTransferWhereUniqueInput | StockTransferWhereUniqueInput[]
    delete?: StockTransferWhereUniqueInput | StockTransferWhereUniqueInput[]
    connect?: StockTransferWhereUniqueInput | StockTransferWhereUniqueInput[]
    update?: StockTransferUpdateWithWhereUniqueWithoutFromWarehouseInput | StockTransferUpdateWithWhereUniqueWithoutFromWarehouseInput[]
    updateMany?: StockTransferUpdateManyWithWhereWithoutFromWarehouseInput | StockTransferUpdateManyWithWhereWithoutFromWarehouseInput[]
    deleteMany?: StockTransferScalarWhereInput | StockTransferScalarWhereInput[]
  }

  export type StockTransferUncheckedUpdateManyWithoutToWarehouseNestedInput = {
    create?: XOR<StockTransferCreateWithoutToWarehouseInput, StockTransferUncheckedCreateWithoutToWarehouseInput> | StockTransferCreateWithoutToWarehouseInput[] | StockTransferUncheckedCreateWithoutToWarehouseInput[]
    connectOrCreate?: StockTransferCreateOrConnectWithoutToWarehouseInput | StockTransferCreateOrConnectWithoutToWarehouseInput[]
    upsert?: StockTransferUpsertWithWhereUniqueWithoutToWarehouseInput | StockTransferUpsertWithWhereUniqueWithoutToWarehouseInput[]
    createMany?: StockTransferCreateManyToWarehouseInputEnvelope
    set?: StockTransferWhereUniqueInput | StockTransferWhereUniqueInput[]
    disconnect?: StockTransferWhereUniqueInput | StockTransferWhereUniqueInput[]
    delete?: StockTransferWhereUniqueInput | StockTransferWhereUniqueInput[]
    connect?: StockTransferWhereUniqueInput | StockTransferWhereUniqueInput[]
    update?: StockTransferUpdateWithWhereUniqueWithoutToWarehouseInput | StockTransferUpdateWithWhereUniqueWithoutToWarehouseInput[]
    updateMany?: StockTransferUpdateManyWithWhereWithoutToWarehouseInput | StockTransferUpdateManyWithWhereWithoutToWarehouseInput[]
    deleteMany?: StockTransferScalarWhereInput | StockTransferScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutWarehouseNestedInput = {
    create?: XOR<OrderCreateWithoutWarehouseInput, OrderUncheckedCreateWithoutWarehouseInput> | OrderCreateWithoutWarehouseInput[] | OrderUncheckedCreateWithoutWarehouseInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutWarehouseInput | OrderCreateOrConnectWithoutWarehouseInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutWarehouseInput | OrderUpsertWithWhereUniqueWithoutWarehouseInput[]
    createMany?: OrderCreateManyWarehouseInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutWarehouseInput | OrderUpdateWithWhereUniqueWithoutWarehouseInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutWarehouseInput | OrderUpdateManyWithWhereWithoutWarehouseInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type PurchaseOrderUncheckedUpdateManyWithoutWarehouseNestedInput = {
    create?: XOR<PurchaseOrderCreateWithoutWarehouseInput, PurchaseOrderUncheckedCreateWithoutWarehouseInput> | PurchaseOrderCreateWithoutWarehouseInput[] | PurchaseOrderUncheckedCreateWithoutWarehouseInput[]
    connectOrCreate?: PurchaseOrderCreateOrConnectWithoutWarehouseInput | PurchaseOrderCreateOrConnectWithoutWarehouseInput[]
    upsert?: PurchaseOrderUpsertWithWhereUniqueWithoutWarehouseInput | PurchaseOrderUpsertWithWhereUniqueWithoutWarehouseInput[]
    createMany?: PurchaseOrderCreateManyWarehouseInputEnvelope
    set?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
    disconnect?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
    delete?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
    connect?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
    update?: PurchaseOrderUpdateWithWhereUniqueWithoutWarehouseInput | PurchaseOrderUpdateWithWhereUniqueWithoutWarehouseInput[]
    updateMany?: PurchaseOrderUpdateManyWithWhereWithoutWarehouseInput | PurchaseOrderUpdateManyWithWhereWithoutWarehouseInput[]
    deleteMany?: PurchaseOrderScalarWhereInput | PurchaseOrderScalarWhereInput[]
  }

  export type InventoryAuditUncheckedUpdateManyWithoutWarehouseNestedInput = {
    create?: XOR<InventoryAuditCreateWithoutWarehouseInput, InventoryAuditUncheckedCreateWithoutWarehouseInput> | InventoryAuditCreateWithoutWarehouseInput[] | InventoryAuditUncheckedCreateWithoutWarehouseInput[]
    connectOrCreate?: InventoryAuditCreateOrConnectWithoutWarehouseInput | InventoryAuditCreateOrConnectWithoutWarehouseInput[]
    upsert?: InventoryAuditUpsertWithWhereUniqueWithoutWarehouseInput | InventoryAuditUpsertWithWhereUniqueWithoutWarehouseInput[]
    createMany?: InventoryAuditCreateManyWarehouseInputEnvelope
    set?: InventoryAuditWhereUniqueInput | InventoryAuditWhereUniqueInput[]
    disconnect?: InventoryAuditWhereUniqueInput | InventoryAuditWhereUniqueInput[]
    delete?: InventoryAuditWhereUniqueInput | InventoryAuditWhereUniqueInput[]
    connect?: InventoryAuditWhereUniqueInput | InventoryAuditWhereUniqueInput[]
    update?: InventoryAuditUpdateWithWhereUniqueWithoutWarehouseInput | InventoryAuditUpdateWithWhereUniqueWithoutWarehouseInput[]
    updateMany?: InventoryAuditUpdateManyWithWhereWithoutWarehouseInput | InventoryAuditUpdateManyWithWhereWithoutWarehouseInput[]
    deleteMany?: InventoryAuditScalarWhereInput | InventoryAuditScalarWhereInput[]
  }

  export type GoodsReceiptUncheckedUpdateManyWithoutWarehouseNestedInput = {
    create?: XOR<GoodsReceiptCreateWithoutWarehouseInput, GoodsReceiptUncheckedCreateWithoutWarehouseInput> | GoodsReceiptCreateWithoutWarehouseInput[] | GoodsReceiptUncheckedCreateWithoutWarehouseInput[]
    connectOrCreate?: GoodsReceiptCreateOrConnectWithoutWarehouseInput | GoodsReceiptCreateOrConnectWithoutWarehouseInput[]
    upsert?: GoodsReceiptUpsertWithWhereUniqueWithoutWarehouseInput | GoodsReceiptUpsertWithWhereUniqueWithoutWarehouseInput[]
    createMany?: GoodsReceiptCreateManyWarehouseInputEnvelope
    set?: GoodsReceiptWhereUniqueInput | GoodsReceiptWhereUniqueInput[]
    disconnect?: GoodsReceiptWhereUniqueInput | GoodsReceiptWhereUniqueInput[]
    delete?: GoodsReceiptWhereUniqueInput | GoodsReceiptWhereUniqueInput[]
    connect?: GoodsReceiptWhereUniqueInput | GoodsReceiptWhereUniqueInput[]
    update?: GoodsReceiptUpdateWithWhereUniqueWithoutWarehouseInput | GoodsReceiptUpdateWithWhereUniqueWithoutWarehouseInput[]
    updateMany?: GoodsReceiptUpdateManyWithWhereWithoutWarehouseInput | GoodsReceiptUpdateManyWithWhereWithoutWarehouseInput[]
    deleteMany?: GoodsReceiptScalarWhereInput | GoodsReceiptScalarWhereInput[]
  }

  export type ShipmentUncheckedUpdateManyWithoutWarehouseNestedInput = {
    create?: XOR<ShipmentCreateWithoutWarehouseInput, ShipmentUncheckedCreateWithoutWarehouseInput> | ShipmentCreateWithoutWarehouseInput[] | ShipmentUncheckedCreateWithoutWarehouseInput[]
    connectOrCreate?: ShipmentCreateOrConnectWithoutWarehouseInput | ShipmentCreateOrConnectWithoutWarehouseInput[]
    upsert?: ShipmentUpsertWithWhereUniqueWithoutWarehouseInput | ShipmentUpsertWithWhereUniqueWithoutWarehouseInput[]
    createMany?: ShipmentCreateManyWarehouseInputEnvelope
    set?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    disconnect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    delete?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    connect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    update?: ShipmentUpdateWithWhereUniqueWithoutWarehouseInput | ShipmentUpdateWithWhereUniqueWithoutWarehouseInput[]
    updateMany?: ShipmentUpdateManyWithWhereWithoutWarehouseInput | ShipmentUpdateManyWithWhereWithoutWarehouseInput[]
    deleteMany?: ShipmentScalarWhereInput | ShipmentScalarWhereInput[]
  }

  export type InventoryAuditItemUncheckedUpdateManyWithoutWarehouseNestedInput = {
    create?: XOR<InventoryAuditItemCreateWithoutWarehouseInput, InventoryAuditItemUncheckedCreateWithoutWarehouseInput> | InventoryAuditItemCreateWithoutWarehouseInput[] | InventoryAuditItemUncheckedCreateWithoutWarehouseInput[]
    connectOrCreate?: InventoryAuditItemCreateOrConnectWithoutWarehouseInput | InventoryAuditItemCreateOrConnectWithoutWarehouseInput[]
    upsert?: InventoryAuditItemUpsertWithWhereUniqueWithoutWarehouseInput | InventoryAuditItemUpsertWithWhereUniqueWithoutWarehouseInput[]
    createMany?: InventoryAuditItemCreateManyWarehouseInputEnvelope
    set?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
    disconnect?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
    delete?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
    connect?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
    update?: InventoryAuditItemUpdateWithWhereUniqueWithoutWarehouseInput | InventoryAuditItemUpdateWithWhereUniqueWithoutWarehouseInput[]
    updateMany?: InventoryAuditItemUpdateManyWithWhereWithoutWarehouseInput | InventoryAuditItemUpdateManyWithWhereWithoutWarehouseInput[]
    deleteMany?: InventoryAuditItemScalarWhereInput | InventoryAuditItemScalarWhereInput[]
  }

  export type ProductCreateNestedOneWithoutInventoryItemsInput = {
    create?: XOR<ProductCreateWithoutInventoryItemsInput, ProductUncheckedCreateWithoutInventoryItemsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutInventoryItemsInput
    connect?: ProductWhereUniqueInput
  }

  export type ProductVariantCreateNestedOneWithoutInventoryItemsInput = {
    create?: XOR<ProductVariantCreateWithoutInventoryItemsInput, ProductVariantUncheckedCreateWithoutInventoryItemsInput>
    connectOrCreate?: ProductVariantCreateOrConnectWithoutInventoryItemsInput
    connect?: ProductVariantWhereUniqueInput
  }

  export type WarehouseCreateNestedOneWithoutInventoryItemsInput = {
    create?: XOR<WarehouseCreateWithoutInventoryItemsInput, WarehouseUncheckedCreateWithoutInventoryItemsInput>
    connectOrCreate?: WarehouseCreateOrConnectWithoutInventoryItemsInput
    connect?: WarehouseWhereUniqueInput
  }

  export type InventoryMovementCreateNestedManyWithoutInventoryItemInput = {
    create?: XOR<InventoryMovementCreateWithoutInventoryItemInput, InventoryMovementUncheckedCreateWithoutInventoryItemInput> | InventoryMovementCreateWithoutInventoryItemInput[] | InventoryMovementUncheckedCreateWithoutInventoryItemInput[]
    connectOrCreate?: InventoryMovementCreateOrConnectWithoutInventoryItemInput | InventoryMovementCreateOrConnectWithoutInventoryItemInput[]
    createMany?: InventoryMovementCreateManyInventoryItemInputEnvelope
    connect?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
  }

  export type StockReservationCreateNestedManyWithoutInventoryItemInput = {
    create?: XOR<StockReservationCreateWithoutInventoryItemInput, StockReservationUncheckedCreateWithoutInventoryItemInput> | StockReservationCreateWithoutInventoryItemInput[] | StockReservationUncheckedCreateWithoutInventoryItemInput[]
    connectOrCreate?: StockReservationCreateOrConnectWithoutInventoryItemInput | StockReservationCreateOrConnectWithoutInventoryItemInput[]
    createMany?: StockReservationCreateManyInventoryItemInputEnvelope
    connect?: StockReservationWhereUniqueInput | StockReservationWhereUniqueInput[]
  }

  export type InventoryMovementUncheckedCreateNestedManyWithoutInventoryItemInput = {
    create?: XOR<InventoryMovementCreateWithoutInventoryItemInput, InventoryMovementUncheckedCreateWithoutInventoryItemInput> | InventoryMovementCreateWithoutInventoryItemInput[] | InventoryMovementUncheckedCreateWithoutInventoryItemInput[]
    connectOrCreate?: InventoryMovementCreateOrConnectWithoutInventoryItemInput | InventoryMovementCreateOrConnectWithoutInventoryItemInput[]
    createMany?: InventoryMovementCreateManyInventoryItemInputEnvelope
    connect?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
  }

  export type StockReservationUncheckedCreateNestedManyWithoutInventoryItemInput = {
    create?: XOR<StockReservationCreateWithoutInventoryItemInput, StockReservationUncheckedCreateWithoutInventoryItemInput> | StockReservationCreateWithoutInventoryItemInput[] | StockReservationUncheckedCreateWithoutInventoryItemInput[]
    connectOrCreate?: StockReservationCreateOrConnectWithoutInventoryItemInput | StockReservationCreateOrConnectWithoutInventoryItemInput[]
    createMany?: StockReservationCreateManyInventoryItemInputEnvelope
    connect?: StockReservationWhereUniqueInput | StockReservationWhereUniqueInput[]
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type EnumInventoryStatusFieldUpdateOperationsInput = {
    set?: $Enums.InventoryStatus
  }

  export type EnumQualityStatusFieldUpdateOperationsInput = {
    set?: $Enums.QualityStatus
  }

  export type ProductUpdateOneRequiredWithoutInventoryItemsNestedInput = {
    create?: XOR<ProductCreateWithoutInventoryItemsInput, ProductUncheckedCreateWithoutInventoryItemsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutInventoryItemsInput
    upsert?: ProductUpsertWithoutInventoryItemsInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutInventoryItemsInput, ProductUpdateWithoutInventoryItemsInput>, ProductUncheckedUpdateWithoutInventoryItemsInput>
  }

  export type ProductVariantUpdateOneWithoutInventoryItemsNestedInput = {
    create?: XOR<ProductVariantCreateWithoutInventoryItemsInput, ProductVariantUncheckedCreateWithoutInventoryItemsInput>
    connectOrCreate?: ProductVariantCreateOrConnectWithoutInventoryItemsInput
    upsert?: ProductVariantUpsertWithoutInventoryItemsInput
    disconnect?: ProductVariantWhereInput | boolean
    delete?: ProductVariantWhereInput | boolean
    connect?: ProductVariantWhereUniqueInput
    update?: XOR<XOR<ProductVariantUpdateToOneWithWhereWithoutInventoryItemsInput, ProductVariantUpdateWithoutInventoryItemsInput>, ProductVariantUncheckedUpdateWithoutInventoryItemsInput>
  }

  export type WarehouseUpdateOneRequiredWithoutInventoryItemsNestedInput = {
    create?: XOR<WarehouseCreateWithoutInventoryItemsInput, WarehouseUncheckedCreateWithoutInventoryItemsInput>
    connectOrCreate?: WarehouseCreateOrConnectWithoutInventoryItemsInput
    upsert?: WarehouseUpsertWithoutInventoryItemsInput
    connect?: WarehouseWhereUniqueInput
    update?: XOR<XOR<WarehouseUpdateToOneWithWhereWithoutInventoryItemsInput, WarehouseUpdateWithoutInventoryItemsInput>, WarehouseUncheckedUpdateWithoutInventoryItemsInput>
  }

  export type InventoryMovementUpdateManyWithoutInventoryItemNestedInput = {
    create?: XOR<InventoryMovementCreateWithoutInventoryItemInput, InventoryMovementUncheckedCreateWithoutInventoryItemInput> | InventoryMovementCreateWithoutInventoryItemInput[] | InventoryMovementUncheckedCreateWithoutInventoryItemInput[]
    connectOrCreate?: InventoryMovementCreateOrConnectWithoutInventoryItemInput | InventoryMovementCreateOrConnectWithoutInventoryItemInput[]
    upsert?: InventoryMovementUpsertWithWhereUniqueWithoutInventoryItemInput | InventoryMovementUpsertWithWhereUniqueWithoutInventoryItemInput[]
    createMany?: InventoryMovementCreateManyInventoryItemInputEnvelope
    set?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
    disconnect?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
    delete?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
    connect?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
    update?: InventoryMovementUpdateWithWhereUniqueWithoutInventoryItemInput | InventoryMovementUpdateWithWhereUniqueWithoutInventoryItemInput[]
    updateMany?: InventoryMovementUpdateManyWithWhereWithoutInventoryItemInput | InventoryMovementUpdateManyWithWhereWithoutInventoryItemInput[]
    deleteMany?: InventoryMovementScalarWhereInput | InventoryMovementScalarWhereInput[]
  }

  export type StockReservationUpdateManyWithoutInventoryItemNestedInput = {
    create?: XOR<StockReservationCreateWithoutInventoryItemInput, StockReservationUncheckedCreateWithoutInventoryItemInput> | StockReservationCreateWithoutInventoryItemInput[] | StockReservationUncheckedCreateWithoutInventoryItemInput[]
    connectOrCreate?: StockReservationCreateOrConnectWithoutInventoryItemInput | StockReservationCreateOrConnectWithoutInventoryItemInput[]
    upsert?: StockReservationUpsertWithWhereUniqueWithoutInventoryItemInput | StockReservationUpsertWithWhereUniqueWithoutInventoryItemInput[]
    createMany?: StockReservationCreateManyInventoryItemInputEnvelope
    set?: StockReservationWhereUniqueInput | StockReservationWhereUniqueInput[]
    disconnect?: StockReservationWhereUniqueInput | StockReservationWhereUniqueInput[]
    delete?: StockReservationWhereUniqueInput | StockReservationWhereUniqueInput[]
    connect?: StockReservationWhereUniqueInput | StockReservationWhereUniqueInput[]
    update?: StockReservationUpdateWithWhereUniqueWithoutInventoryItemInput | StockReservationUpdateWithWhereUniqueWithoutInventoryItemInput[]
    updateMany?: StockReservationUpdateManyWithWhereWithoutInventoryItemInput | StockReservationUpdateManyWithWhereWithoutInventoryItemInput[]
    deleteMany?: StockReservationScalarWhereInput | StockReservationScalarWhereInput[]
  }

  export type InventoryMovementUncheckedUpdateManyWithoutInventoryItemNestedInput = {
    create?: XOR<InventoryMovementCreateWithoutInventoryItemInput, InventoryMovementUncheckedCreateWithoutInventoryItemInput> | InventoryMovementCreateWithoutInventoryItemInput[] | InventoryMovementUncheckedCreateWithoutInventoryItemInput[]
    connectOrCreate?: InventoryMovementCreateOrConnectWithoutInventoryItemInput | InventoryMovementCreateOrConnectWithoutInventoryItemInput[]
    upsert?: InventoryMovementUpsertWithWhereUniqueWithoutInventoryItemInput | InventoryMovementUpsertWithWhereUniqueWithoutInventoryItemInput[]
    createMany?: InventoryMovementCreateManyInventoryItemInputEnvelope
    set?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
    disconnect?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
    delete?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
    connect?: InventoryMovementWhereUniqueInput | InventoryMovementWhereUniqueInput[]
    update?: InventoryMovementUpdateWithWhereUniqueWithoutInventoryItemInput | InventoryMovementUpdateWithWhereUniqueWithoutInventoryItemInput[]
    updateMany?: InventoryMovementUpdateManyWithWhereWithoutInventoryItemInput | InventoryMovementUpdateManyWithWhereWithoutInventoryItemInput[]
    deleteMany?: InventoryMovementScalarWhereInput | InventoryMovementScalarWhereInput[]
  }

  export type StockReservationUncheckedUpdateManyWithoutInventoryItemNestedInput = {
    create?: XOR<StockReservationCreateWithoutInventoryItemInput, StockReservationUncheckedCreateWithoutInventoryItemInput> | StockReservationCreateWithoutInventoryItemInput[] | StockReservationUncheckedCreateWithoutInventoryItemInput[]
    connectOrCreate?: StockReservationCreateOrConnectWithoutInventoryItemInput | StockReservationCreateOrConnectWithoutInventoryItemInput[]
    upsert?: StockReservationUpsertWithWhereUniqueWithoutInventoryItemInput | StockReservationUpsertWithWhereUniqueWithoutInventoryItemInput[]
    createMany?: StockReservationCreateManyInventoryItemInputEnvelope
    set?: StockReservationWhereUniqueInput | StockReservationWhereUniqueInput[]
    disconnect?: StockReservationWhereUniqueInput | StockReservationWhereUniqueInput[]
    delete?: StockReservationWhereUniqueInput | StockReservationWhereUniqueInput[]
    connect?: StockReservationWhereUniqueInput | StockReservationWhereUniqueInput[]
    update?: StockReservationUpdateWithWhereUniqueWithoutInventoryItemInput | StockReservationUpdateWithWhereUniqueWithoutInventoryItemInput[]
    updateMany?: StockReservationUpdateManyWithWhereWithoutInventoryItemInput | StockReservationUpdateManyWithWhereWithoutInventoryItemInput[]
    deleteMany?: StockReservationScalarWhereInput | StockReservationScalarWhereInput[]
  }

  export type ProductCreateNestedOneWithoutMovementsInput = {
    create?: XOR<ProductCreateWithoutMovementsInput, ProductUncheckedCreateWithoutMovementsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutMovementsInput
    connect?: ProductWhereUniqueInput
  }

  export type ProductVariantCreateNestedOneWithoutMovementsInput = {
    create?: XOR<ProductVariantCreateWithoutMovementsInput, ProductVariantUncheckedCreateWithoutMovementsInput>
    connectOrCreate?: ProductVariantCreateOrConnectWithoutMovementsInput
    connect?: ProductVariantWhereUniqueInput
  }

  export type WarehouseCreateNestedOneWithoutMovementsInput = {
    create?: XOR<WarehouseCreateWithoutMovementsInput, WarehouseUncheckedCreateWithoutMovementsInput>
    connectOrCreate?: WarehouseCreateOrConnectWithoutMovementsInput
    connect?: WarehouseWhereUniqueInput
  }

  export type InventoryItemCreateNestedOneWithoutMovementsInput = {
    create?: XOR<InventoryItemCreateWithoutMovementsInput, InventoryItemUncheckedCreateWithoutMovementsInput>
    connectOrCreate?: InventoryItemCreateOrConnectWithoutMovementsInput
    connect?: InventoryItemWhereUniqueInput
  }

  export type EnumMovementTypeFieldUpdateOperationsInput = {
    set?: $Enums.MovementType
  }

  export type ProductUpdateOneRequiredWithoutMovementsNestedInput = {
    create?: XOR<ProductCreateWithoutMovementsInput, ProductUncheckedCreateWithoutMovementsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutMovementsInput
    upsert?: ProductUpsertWithoutMovementsInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutMovementsInput, ProductUpdateWithoutMovementsInput>, ProductUncheckedUpdateWithoutMovementsInput>
  }

  export type ProductVariantUpdateOneWithoutMovementsNestedInput = {
    create?: XOR<ProductVariantCreateWithoutMovementsInput, ProductVariantUncheckedCreateWithoutMovementsInput>
    connectOrCreate?: ProductVariantCreateOrConnectWithoutMovementsInput
    upsert?: ProductVariantUpsertWithoutMovementsInput
    disconnect?: ProductVariantWhereInput | boolean
    delete?: ProductVariantWhereInput | boolean
    connect?: ProductVariantWhereUniqueInput
    update?: XOR<XOR<ProductVariantUpdateToOneWithWhereWithoutMovementsInput, ProductVariantUpdateWithoutMovementsInput>, ProductVariantUncheckedUpdateWithoutMovementsInput>
  }

  export type WarehouseUpdateOneRequiredWithoutMovementsNestedInput = {
    create?: XOR<WarehouseCreateWithoutMovementsInput, WarehouseUncheckedCreateWithoutMovementsInput>
    connectOrCreate?: WarehouseCreateOrConnectWithoutMovementsInput
    upsert?: WarehouseUpsertWithoutMovementsInput
    connect?: WarehouseWhereUniqueInput
    update?: XOR<XOR<WarehouseUpdateToOneWithWhereWithoutMovementsInput, WarehouseUpdateWithoutMovementsInput>, WarehouseUncheckedUpdateWithoutMovementsInput>
  }

  export type InventoryItemUpdateOneWithoutMovementsNestedInput = {
    create?: XOR<InventoryItemCreateWithoutMovementsInput, InventoryItemUncheckedCreateWithoutMovementsInput>
    connectOrCreate?: InventoryItemCreateOrConnectWithoutMovementsInput
    upsert?: InventoryItemUpsertWithoutMovementsInput
    disconnect?: InventoryItemWhereInput | boolean
    delete?: InventoryItemWhereInput | boolean
    connect?: InventoryItemWhereUniqueInput
    update?: XOR<XOR<InventoryItemUpdateToOneWithWhereWithoutMovementsInput, InventoryItemUpdateWithoutMovementsInput>, InventoryItemUncheckedUpdateWithoutMovementsInput>
  }

  export type ProductSupplierCreateNestedManyWithoutSupplierInput = {
    create?: XOR<ProductSupplierCreateWithoutSupplierInput, ProductSupplierUncheckedCreateWithoutSupplierInput> | ProductSupplierCreateWithoutSupplierInput[] | ProductSupplierUncheckedCreateWithoutSupplierInput[]
    connectOrCreate?: ProductSupplierCreateOrConnectWithoutSupplierInput | ProductSupplierCreateOrConnectWithoutSupplierInput[]
    createMany?: ProductSupplierCreateManySupplierInputEnvelope
    connect?: ProductSupplierWhereUniqueInput | ProductSupplierWhereUniqueInput[]
  }

  export type PurchaseOrderCreateNestedManyWithoutSupplierInput = {
    create?: XOR<PurchaseOrderCreateWithoutSupplierInput, PurchaseOrderUncheckedCreateWithoutSupplierInput> | PurchaseOrderCreateWithoutSupplierInput[] | PurchaseOrderUncheckedCreateWithoutSupplierInput[]
    connectOrCreate?: PurchaseOrderCreateOrConnectWithoutSupplierInput | PurchaseOrderCreateOrConnectWithoutSupplierInput[]
    createMany?: PurchaseOrderCreateManySupplierInputEnvelope
    connect?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
  }

  export type SupplierInvoiceCreateNestedManyWithoutSupplierInput = {
    create?: XOR<SupplierInvoiceCreateWithoutSupplierInput, SupplierInvoiceUncheckedCreateWithoutSupplierInput> | SupplierInvoiceCreateWithoutSupplierInput[] | SupplierInvoiceUncheckedCreateWithoutSupplierInput[]
    connectOrCreate?: SupplierInvoiceCreateOrConnectWithoutSupplierInput | SupplierInvoiceCreateOrConnectWithoutSupplierInput[]
    createMany?: SupplierInvoiceCreateManySupplierInputEnvelope
    connect?: SupplierInvoiceWhereUniqueInput | SupplierInvoiceWhereUniqueInput[]
  }

  export type SupplierContactCreateNestedManyWithoutSupplierInput = {
    create?: XOR<SupplierContactCreateWithoutSupplierInput, SupplierContactUncheckedCreateWithoutSupplierInput> | SupplierContactCreateWithoutSupplierInput[] | SupplierContactUncheckedCreateWithoutSupplierInput[]
    connectOrCreate?: SupplierContactCreateOrConnectWithoutSupplierInput | SupplierContactCreateOrConnectWithoutSupplierInput[]
    createMany?: SupplierContactCreateManySupplierInputEnvelope
    connect?: SupplierContactWhereUniqueInput | SupplierContactWhereUniqueInput[]
  }

  export type SupplierDocumentCreateNestedManyWithoutSupplierInput = {
    create?: XOR<SupplierDocumentCreateWithoutSupplierInput, SupplierDocumentUncheckedCreateWithoutSupplierInput> | SupplierDocumentCreateWithoutSupplierInput[] | SupplierDocumentUncheckedCreateWithoutSupplierInput[]
    connectOrCreate?: SupplierDocumentCreateOrConnectWithoutSupplierInput | SupplierDocumentCreateOrConnectWithoutSupplierInput[]
    createMany?: SupplierDocumentCreateManySupplierInputEnvelope
    connect?: SupplierDocumentWhereUniqueInput | SupplierDocumentWhereUniqueInput[]
  }

  export type ProductSupplierUncheckedCreateNestedManyWithoutSupplierInput = {
    create?: XOR<ProductSupplierCreateWithoutSupplierInput, ProductSupplierUncheckedCreateWithoutSupplierInput> | ProductSupplierCreateWithoutSupplierInput[] | ProductSupplierUncheckedCreateWithoutSupplierInput[]
    connectOrCreate?: ProductSupplierCreateOrConnectWithoutSupplierInput | ProductSupplierCreateOrConnectWithoutSupplierInput[]
    createMany?: ProductSupplierCreateManySupplierInputEnvelope
    connect?: ProductSupplierWhereUniqueInput | ProductSupplierWhereUniqueInput[]
  }

  export type PurchaseOrderUncheckedCreateNestedManyWithoutSupplierInput = {
    create?: XOR<PurchaseOrderCreateWithoutSupplierInput, PurchaseOrderUncheckedCreateWithoutSupplierInput> | PurchaseOrderCreateWithoutSupplierInput[] | PurchaseOrderUncheckedCreateWithoutSupplierInput[]
    connectOrCreate?: PurchaseOrderCreateOrConnectWithoutSupplierInput | PurchaseOrderCreateOrConnectWithoutSupplierInput[]
    createMany?: PurchaseOrderCreateManySupplierInputEnvelope
    connect?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
  }

  export type SupplierInvoiceUncheckedCreateNestedManyWithoutSupplierInput = {
    create?: XOR<SupplierInvoiceCreateWithoutSupplierInput, SupplierInvoiceUncheckedCreateWithoutSupplierInput> | SupplierInvoiceCreateWithoutSupplierInput[] | SupplierInvoiceUncheckedCreateWithoutSupplierInput[]
    connectOrCreate?: SupplierInvoiceCreateOrConnectWithoutSupplierInput | SupplierInvoiceCreateOrConnectWithoutSupplierInput[]
    createMany?: SupplierInvoiceCreateManySupplierInputEnvelope
    connect?: SupplierInvoiceWhereUniqueInput | SupplierInvoiceWhereUniqueInput[]
  }

  export type SupplierContactUncheckedCreateNestedManyWithoutSupplierInput = {
    create?: XOR<SupplierContactCreateWithoutSupplierInput, SupplierContactUncheckedCreateWithoutSupplierInput> | SupplierContactCreateWithoutSupplierInput[] | SupplierContactUncheckedCreateWithoutSupplierInput[]
    connectOrCreate?: SupplierContactCreateOrConnectWithoutSupplierInput | SupplierContactCreateOrConnectWithoutSupplierInput[]
    createMany?: SupplierContactCreateManySupplierInputEnvelope
    connect?: SupplierContactWhereUniqueInput | SupplierContactWhereUniqueInput[]
  }

  export type SupplierDocumentUncheckedCreateNestedManyWithoutSupplierInput = {
    create?: XOR<SupplierDocumentCreateWithoutSupplierInput, SupplierDocumentUncheckedCreateWithoutSupplierInput> | SupplierDocumentCreateWithoutSupplierInput[] | SupplierDocumentUncheckedCreateWithoutSupplierInput[]
    connectOrCreate?: SupplierDocumentCreateOrConnectWithoutSupplierInput | SupplierDocumentCreateOrConnectWithoutSupplierInput[]
    createMany?: SupplierDocumentCreateManySupplierInputEnvelope
    connect?: SupplierDocumentWhereUniqueInput | SupplierDocumentWhereUniqueInput[]
  }

  export type NullableEnumCompanyTypeFieldUpdateOperationsInput = {
    set?: $Enums.CompanyType | null
  }

  export type EnumSupplierStatusFieldUpdateOperationsInput = {
    set?: $Enums.SupplierStatus
  }

  export type ProductSupplierUpdateManyWithoutSupplierNestedInput = {
    create?: XOR<ProductSupplierCreateWithoutSupplierInput, ProductSupplierUncheckedCreateWithoutSupplierInput> | ProductSupplierCreateWithoutSupplierInput[] | ProductSupplierUncheckedCreateWithoutSupplierInput[]
    connectOrCreate?: ProductSupplierCreateOrConnectWithoutSupplierInput | ProductSupplierCreateOrConnectWithoutSupplierInput[]
    upsert?: ProductSupplierUpsertWithWhereUniqueWithoutSupplierInput | ProductSupplierUpsertWithWhereUniqueWithoutSupplierInput[]
    createMany?: ProductSupplierCreateManySupplierInputEnvelope
    set?: ProductSupplierWhereUniqueInput | ProductSupplierWhereUniqueInput[]
    disconnect?: ProductSupplierWhereUniqueInput | ProductSupplierWhereUniqueInput[]
    delete?: ProductSupplierWhereUniqueInput | ProductSupplierWhereUniqueInput[]
    connect?: ProductSupplierWhereUniqueInput | ProductSupplierWhereUniqueInput[]
    update?: ProductSupplierUpdateWithWhereUniqueWithoutSupplierInput | ProductSupplierUpdateWithWhereUniqueWithoutSupplierInput[]
    updateMany?: ProductSupplierUpdateManyWithWhereWithoutSupplierInput | ProductSupplierUpdateManyWithWhereWithoutSupplierInput[]
    deleteMany?: ProductSupplierScalarWhereInput | ProductSupplierScalarWhereInput[]
  }

  export type PurchaseOrderUpdateManyWithoutSupplierNestedInput = {
    create?: XOR<PurchaseOrderCreateWithoutSupplierInput, PurchaseOrderUncheckedCreateWithoutSupplierInput> | PurchaseOrderCreateWithoutSupplierInput[] | PurchaseOrderUncheckedCreateWithoutSupplierInput[]
    connectOrCreate?: PurchaseOrderCreateOrConnectWithoutSupplierInput | PurchaseOrderCreateOrConnectWithoutSupplierInput[]
    upsert?: PurchaseOrderUpsertWithWhereUniqueWithoutSupplierInput | PurchaseOrderUpsertWithWhereUniqueWithoutSupplierInput[]
    createMany?: PurchaseOrderCreateManySupplierInputEnvelope
    set?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
    disconnect?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
    delete?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
    connect?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
    update?: PurchaseOrderUpdateWithWhereUniqueWithoutSupplierInput | PurchaseOrderUpdateWithWhereUniqueWithoutSupplierInput[]
    updateMany?: PurchaseOrderUpdateManyWithWhereWithoutSupplierInput | PurchaseOrderUpdateManyWithWhereWithoutSupplierInput[]
    deleteMany?: PurchaseOrderScalarWhereInput | PurchaseOrderScalarWhereInput[]
  }

  export type SupplierInvoiceUpdateManyWithoutSupplierNestedInput = {
    create?: XOR<SupplierInvoiceCreateWithoutSupplierInput, SupplierInvoiceUncheckedCreateWithoutSupplierInput> | SupplierInvoiceCreateWithoutSupplierInput[] | SupplierInvoiceUncheckedCreateWithoutSupplierInput[]
    connectOrCreate?: SupplierInvoiceCreateOrConnectWithoutSupplierInput | SupplierInvoiceCreateOrConnectWithoutSupplierInput[]
    upsert?: SupplierInvoiceUpsertWithWhereUniqueWithoutSupplierInput | SupplierInvoiceUpsertWithWhereUniqueWithoutSupplierInput[]
    createMany?: SupplierInvoiceCreateManySupplierInputEnvelope
    set?: SupplierInvoiceWhereUniqueInput | SupplierInvoiceWhereUniqueInput[]
    disconnect?: SupplierInvoiceWhereUniqueInput | SupplierInvoiceWhereUniqueInput[]
    delete?: SupplierInvoiceWhereUniqueInput | SupplierInvoiceWhereUniqueInput[]
    connect?: SupplierInvoiceWhereUniqueInput | SupplierInvoiceWhereUniqueInput[]
    update?: SupplierInvoiceUpdateWithWhereUniqueWithoutSupplierInput | SupplierInvoiceUpdateWithWhereUniqueWithoutSupplierInput[]
    updateMany?: SupplierInvoiceUpdateManyWithWhereWithoutSupplierInput | SupplierInvoiceUpdateManyWithWhereWithoutSupplierInput[]
    deleteMany?: SupplierInvoiceScalarWhereInput | SupplierInvoiceScalarWhereInput[]
  }

  export type SupplierContactUpdateManyWithoutSupplierNestedInput = {
    create?: XOR<SupplierContactCreateWithoutSupplierInput, SupplierContactUncheckedCreateWithoutSupplierInput> | SupplierContactCreateWithoutSupplierInput[] | SupplierContactUncheckedCreateWithoutSupplierInput[]
    connectOrCreate?: SupplierContactCreateOrConnectWithoutSupplierInput | SupplierContactCreateOrConnectWithoutSupplierInput[]
    upsert?: SupplierContactUpsertWithWhereUniqueWithoutSupplierInput | SupplierContactUpsertWithWhereUniqueWithoutSupplierInput[]
    createMany?: SupplierContactCreateManySupplierInputEnvelope
    set?: SupplierContactWhereUniqueInput | SupplierContactWhereUniqueInput[]
    disconnect?: SupplierContactWhereUniqueInput | SupplierContactWhereUniqueInput[]
    delete?: SupplierContactWhereUniqueInput | SupplierContactWhereUniqueInput[]
    connect?: SupplierContactWhereUniqueInput | SupplierContactWhereUniqueInput[]
    update?: SupplierContactUpdateWithWhereUniqueWithoutSupplierInput | SupplierContactUpdateWithWhereUniqueWithoutSupplierInput[]
    updateMany?: SupplierContactUpdateManyWithWhereWithoutSupplierInput | SupplierContactUpdateManyWithWhereWithoutSupplierInput[]
    deleteMany?: SupplierContactScalarWhereInput | SupplierContactScalarWhereInput[]
  }

  export type SupplierDocumentUpdateManyWithoutSupplierNestedInput = {
    create?: XOR<SupplierDocumentCreateWithoutSupplierInput, SupplierDocumentUncheckedCreateWithoutSupplierInput> | SupplierDocumentCreateWithoutSupplierInput[] | SupplierDocumentUncheckedCreateWithoutSupplierInput[]
    connectOrCreate?: SupplierDocumentCreateOrConnectWithoutSupplierInput | SupplierDocumentCreateOrConnectWithoutSupplierInput[]
    upsert?: SupplierDocumentUpsertWithWhereUniqueWithoutSupplierInput | SupplierDocumentUpsertWithWhereUniqueWithoutSupplierInput[]
    createMany?: SupplierDocumentCreateManySupplierInputEnvelope
    set?: SupplierDocumentWhereUniqueInput | SupplierDocumentWhereUniqueInput[]
    disconnect?: SupplierDocumentWhereUniqueInput | SupplierDocumentWhereUniqueInput[]
    delete?: SupplierDocumentWhereUniqueInput | SupplierDocumentWhereUniqueInput[]
    connect?: SupplierDocumentWhereUniqueInput | SupplierDocumentWhereUniqueInput[]
    update?: SupplierDocumentUpdateWithWhereUniqueWithoutSupplierInput | SupplierDocumentUpdateWithWhereUniqueWithoutSupplierInput[]
    updateMany?: SupplierDocumentUpdateManyWithWhereWithoutSupplierInput | SupplierDocumentUpdateManyWithWhereWithoutSupplierInput[]
    deleteMany?: SupplierDocumentScalarWhereInput | SupplierDocumentScalarWhereInput[]
  }

  export type ProductSupplierUncheckedUpdateManyWithoutSupplierNestedInput = {
    create?: XOR<ProductSupplierCreateWithoutSupplierInput, ProductSupplierUncheckedCreateWithoutSupplierInput> | ProductSupplierCreateWithoutSupplierInput[] | ProductSupplierUncheckedCreateWithoutSupplierInput[]
    connectOrCreate?: ProductSupplierCreateOrConnectWithoutSupplierInput | ProductSupplierCreateOrConnectWithoutSupplierInput[]
    upsert?: ProductSupplierUpsertWithWhereUniqueWithoutSupplierInput | ProductSupplierUpsertWithWhereUniqueWithoutSupplierInput[]
    createMany?: ProductSupplierCreateManySupplierInputEnvelope
    set?: ProductSupplierWhereUniqueInput | ProductSupplierWhereUniqueInput[]
    disconnect?: ProductSupplierWhereUniqueInput | ProductSupplierWhereUniqueInput[]
    delete?: ProductSupplierWhereUniqueInput | ProductSupplierWhereUniqueInput[]
    connect?: ProductSupplierWhereUniqueInput | ProductSupplierWhereUniqueInput[]
    update?: ProductSupplierUpdateWithWhereUniqueWithoutSupplierInput | ProductSupplierUpdateWithWhereUniqueWithoutSupplierInput[]
    updateMany?: ProductSupplierUpdateManyWithWhereWithoutSupplierInput | ProductSupplierUpdateManyWithWhereWithoutSupplierInput[]
    deleteMany?: ProductSupplierScalarWhereInput | ProductSupplierScalarWhereInput[]
  }

  export type PurchaseOrderUncheckedUpdateManyWithoutSupplierNestedInput = {
    create?: XOR<PurchaseOrderCreateWithoutSupplierInput, PurchaseOrderUncheckedCreateWithoutSupplierInput> | PurchaseOrderCreateWithoutSupplierInput[] | PurchaseOrderUncheckedCreateWithoutSupplierInput[]
    connectOrCreate?: PurchaseOrderCreateOrConnectWithoutSupplierInput | PurchaseOrderCreateOrConnectWithoutSupplierInput[]
    upsert?: PurchaseOrderUpsertWithWhereUniqueWithoutSupplierInput | PurchaseOrderUpsertWithWhereUniqueWithoutSupplierInput[]
    createMany?: PurchaseOrderCreateManySupplierInputEnvelope
    set?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
    disconnect?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
    delete?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
    connect?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
    update?: PurchaseOrderUpdateWithWhereUniqueWithoutSupplierInput | PurchaseOrderUpdateWithWhereUniqueWithoutSupplierInput[]
    updateMany?: PurchaseOrderUpdateManyWithWhereWithoutSupplierInput | PurchaseOrderUpdateManyWithWhereWithoutSupplierInput[]
    deleteMany?: PurchaseOrderScalarWhereInput | PurchaseOrderScalarWhereInput[]
  }

  export type SupplierInvoiceUncheckedUpdateManyWithoutSupplierNestedInput = {
    create?: XOR<SupplierInvoiceCreateWithoutSupplierInput, SupplierInvoiceUncheckedCreateWithoutSupplierInput> | SupplierInvoiceCreateWithoutSupplierInput[] | SupplierInvoiceUncheckedCreateWithoutSupplierInput[]
    connectOrCreate?: SupplierInvoiceCreateOrConnectWithoutSupplierInput | SupplierInvoiceCreateOrConnectWithoutSupplierInput[]
    upsert?: SupplierInvoiceUpsertWithWhereUniqueWithoutSupplierInput | SupplierInvoiceUpsertWithWhereUniqueWithoutSupplierInput[]
    createMany?: SupplierInvoiceCreateManySupplierInputEnvelope
    set?: SupplierInvoiceWhereUniqueInput | SupplierInvoiceWhereUniqueInput[]
    disconnect?: SupplierInvoiceWhereUniqueInput | SupplierInvoiceWhereUniqueInput[]
    delete?: SupplierInvoiceWhereUniqueInput | SupplierInvoiceWhereUniqueInput[]
    connect?: SupplierInvoiceWhereUniqueInput | SupplierInvoiceWhereUniqueInput[]
    update?: SupplierInvoiceUpdateWithWhereUniqueWithoutSupplierInput | SupplierInvoiceUpdateWithWhereUniqueWithoutSupplierInput[]
    updateMany?: SupplierInvoiceUpdateManyWithWhereWithoutSupplierInput | SupplierInvoiceUpdateManyWithWhereWithoutSupplierInput[]
    deleteMany?: SupplierInvoiceScalarWhereInput | SupplierInvoiceScalarWhereInput[]
  }

  export type SupplierContactUncheckedUpdateManyWithoutSupplierNestedInput = {
    create?: XOR<SupplierContactCreateWithoutSupplierInput, SupplierContactUncheckedCreateWithoutSupplierInput> | SupplierContactCreateWithoutSupplierInput[] | SupplierContactUncheckedCreateWithoutSupplierInput[]
    connectOrCreate?: SupplierContactCreateOrConnectWithoutSupplierInput | SupplierContactCreateOrConnectWithoutSupplierInput[]
    upsert?: SupplierContactUpsertWithWhereUniqueWithoutSupplierInput | SupplierContactUpsertWithWhereUniqueWithoutSupplierInput[]
    createMany?: SupplierContactCreateManySupplierInputEnvelope
    set?: SupplierContactWhereUniqueInput | SupplierContactWhereUniqueInput[]
    disconnect?: SupplierContactWhereUniqueInput | SupplierContactWhereUniqueInput[]
    delete?: SupplierContactWhereUniqueInput | SupplierContactWhereUniqueInput[]
    connect?: SupplierContactWhereUniqueInput | SupplierContactWhereUniqueInput[]
    update?: SupplierContactUpdateWithWhereUniqueWithoutSupplierInput | SupplierContactUpdateWithWhereUniqueWithoutSupplierInput[]
    updateMany?: SupplierContactUpdateManyWithWhereWithoutSupplierInput | SupplierContactUpdateManyWithWhereWithoutSupplierInput[]
    deleteMany?: SupplierContactScalarWhereInput | SupplierContactScalarWhereInput[]
  }

  export type SupplierDocumentUncheckedUpdateManyWithoutSupplierNestedInput = {
    create?: XOR<SupplierDocumentCreateWithoutSupplierInput, SupplierDocumentUncheckedCreateWithoutSupplierInput> | SupplierDocumentCreateWithoutSupplierInput[] | SupplierDocumentUncheckedCreateWithoutSupplierInput[]
    connectOrCreate?: SupplierDocumentCreateOrConnectWithoutSupplierInput | SupplierDocumentCreateOrConnectWithoutSupplierInput[]
    upsert?: SupplierDocumentUpsertWithWhereUniqueWithoutSupplierInput | SupplierDocumentUpsertWithWhereUniqueWithoutSupplierInput[]
    createMany?: SupplierDocumentCreateManySupplierInputEnvelope
    set?: SupplierDocumentWhereUniqueInput | SupplierDocumentWhereUniqueInput[]
    disconnect?: SupplierDocumentWhereUniqueInput | SupplierDocumentWhereUniqueInput[]
    delete?: SupplierDocumentWhereUniqueInput | SupplierDocumentWhereUniqueInput[]
    connect?: SupplierDocumentWhereUniqueInput | SupplierDocumentWhereUniqueInput[]
    update?: SupplierDocumentUpdateWithWhereUniqueWithoutSupplierInput | SupplierDocumentUpdateWithWhereUniqueWithoutSupplierInput[]
    updateMany?: SupplierDocumentUpdateManyWithWhereWithoutSupplierInput | SupplierDocumentUpdateManyWithWhereWithoutSupplierInput[]
    deleteMany?: SupplierDocumentScalarWhereInput | SupplierDocumentScalarWhereInput[]
  }

  export type ProductCreateNestedOneWithoutSuppliersInput = {
    create?: XOR<ProductCreateWithoutSuppliersInput, ProductUncheckedCreateWithoutSuppliersInput>
    connectOrCreate?: ProductCreateOrConnectWithoutSuppliersInput
    connect?: ProductWhereUniqueInput
  }

  export type SupplierCreateNestedOneWithoutProductsInput = {
    create?: XOR<SupplierCreateWithoutProductsInput, SupplierUncheckedCreateWithoutProductsInput>
    connectOrCreate?: SupplierCreateOrConnectWithoutProductsInput
    connect?: SupplierWhereUniqueInput
  }

  export type ProductUpdateOneRequiredWithoutSuppliersNestedInput = {
    create?: XOR<ProductCreateWithoutSuppliersInput, ProductUncheckedCreateWithoutSuppliersInput>
    connectOrCreate?: ProductCreateOrConnectWithoutSuppliersInput
    upsert?: ProductUpsertWithoutSuppliersInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutSuppliersInput, ProductUpdateWithoutSuppliersInput>, ProductUncheckedUpdateWithoutSuppliersInput>
  }

  export type SupplierUpdateOneRequiredWithoutProductsNestedInput = {
    create?: XOR<SupplierCreateWithoutProductsInput, SupplierUncheckedCreateWithoutProductsInput>
    connectOrCreate?: SupplierCreateOrConnectWithoutProductsInput
    upsert?: SupplierUpsertWithoutProductsInput
    connect?: SupplierWhereUniqueInput
    update?: XOR<XOR<SupplierUpdateToOneWithWhereWithoutProductsInput, SupplierUpdateWithoutProductsInput>, SupplierUncheckedUpdateWithoutProductsInput>
  }

  export type SupplierCreateNestedOneWithoutContactsInput = {
    create?: XOR<SupplierCreateWithoutContactsInput, SupplierUncheckedCreateWithoutContactsInput>
    connectOrCreate?: SupplierCreateOrConnectWithoutContactsInput
    connect?: SupplierWhereUniqueInput
  }

  export type SupplierUpdateOneRequiredWithoutContactsNestedInput = {
    create?: XOR<SupplierCreateWithoutContactsInput, SupplierUncheckedCreateWithoutContactsInput>
    connectOrCreate?: SupplierCreateOrConnectWithoutContactsInput
    upsert?: SupplierUpsertWithoutContactsInput
    connect?: SupplierWhereUniqueInput
    update?: XOR<XOR<SupplierUpdateToOneWithWhereWithoutContactsInput, SupplierUpdateWithoutContactsInput>, SupplierUncheckedUpdateWithoutContactsInput>
  }

  export type SupplierCreateNestedOneWithoutDocumentsInput = {
    create?: XOR<SupplierCreateWithoutDocumentsInput, SupplierUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: SupplierCreateOrConnectWithoutDocumentsInput
    connect?: SupplierWhereUniqueInput
  }

  export type EnumDocumentTypeFieldUpdateOperationsInput = {
    set?: $Enums.DocumentType
  }

  export type SupplierUpdateOneRequiredWithoutDocumentsNestedInput = {
    create?: XOR<SupplierCreateWithoutDocumentsInput, SupplierUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: SupplierCreateOrConnectWithoutDocumentsInput
    upsert?: SupplierUpsertWithoutDocumentsInput
    connect?: SupplierWhereUniqueInput
    update?: XOR<XOR<SupplierUpdateToOneWithWhereWithoutDocumentsInput, SupplierUpdateWithoutDocumentsInput>, SupplierUncheckedUpdateWithoutDocumentsInput>
  }

  export type SupplierCreateNestedOneWithoutPurchaseOrdersInput = {
    create?: XOR<SupplierCreateWithoutPurchaseOrdersInput, SupplierUncheckedCreateWithoutPurchaseOrdersInput>
    connectOrCreate?: SupplierCreateOrConnectWithoutPurchaseOrdersInput
    connect?: SupplierWhereUniqueInput
  }

  export type WarehouseCreateNestedOneWithoutPurchaseOrdersInput = {
    create?: XOR<WarehouseCreateWithoutPurchaseOrdersInput, WarehouseUncheckedCreateWithoutPurchaseOrdersInput>
    connectOrCreate?: WarehouseCreateOrConnectWithoutPurchaseOrdersInput
    connect?: WarehouseWhereUniqueInput
  }

  export type PurchaseOrderItemCreateNestedManyWithoutPurchaseOrderInput = {
    create?: XOR<PurchaseOrderItemCreateWithoutPurchaseOrderInput, PurchaseOrderItemUncheckedCreateWithoutPurchaseOrderInput> | PurchaseOrderItemCreateWithoutPurchaseOrderInput[] | PurchaseOrderItemUncheckedCreateWithoutPurchaseOrderInput[]
    connectOrCreate?: PurchaseOrderItemCreateOrConnectWithoutPurchaseOrderInput | PurchaseOrderItemCreateOrConnectWithoutPurchaseOrderInput[]
    createMany?: PurchaseOrderItemCreateManyPurchaseOrderInputEnvelope
    connect?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
  }

  export type GoodsReceiptCreateNestedManyWithoutPurchaseOrderInput = {
    create?: XOR<GoodsReceiptCreateWithoutPurchaseOrderInput, GoodsReceiptUncheckedCreateWithoutPurchaseOrderInput> | GoodsReceiptCreateWithoutPurchaseOrderInput[] | GoodsReceiptUncheckedCreateWithoutPurchaseOrderInput[]
    connectOrCreate?: GoodsReceiptCreateOrConnectWithoutPurchaseOrderInput | GoodsReceiptCreateOrConnectWithoutPurchaseOrderInput[]
    createMany?: GoodsReceiptCreateManyPurchaseOrderInputEnvelope
    connect?: GoodsReceiptWhereUniqueInput | GoodsReceiptWhereUniqueInput[]
  }

  export type SupplierInvoiceCreateNestedManyWithoutPurchaseOrderInput = {
    create?: XOR<SupplierInvoiceCreateWithoutPurchaseOrderInput, SupplierInvoiceUncheckedCreateWithoutPurchaseOrderInput> | SupplierInvoiceCreateWithoutPurchaseOrderInput[] | SupplierInvoiceUncheckedCreateWithoutPurchaseOrderInput[]
    connectOrCreate?: SupplierInvoiceCreateOrConnectWithoutPurchaseOrderInput | SupplierInvoiceCreateOrConnectWithoutPurchaseOrderInput[]
    createMany?: SupplierInvoiceCreateManyPurchaseOrderInputEnvelope
    connect?: SupplierInvoiceWhereUniqueInput | SupplierInvoiceWhereUniqueInput[]
  }

  export type PurchaseOrderItemUncheckedCreateNestedManyWithoutPurchaseOrderInput = {
    create?: XOR<PurchaseOrderItemCreateWithoutPurchaseOrderInput, PurchaseOrderItemUncheckedCreateWithoutPurchaseOrderInput> | PurchaseOrderItemCreateWithoutPurchaseOrderInput[] | PurchaseOrderItemUncheckedCreateWithoutPurchaseOrderInput[]
    connectOrCreate?: PurchaseOrderItemCreateOrConnectWithoutPurchaseOrderInput | PurchaseOrderItemCreateOrConnectWithoutPurchaseOrderInput[]
    createMany?: PurchaseOrderItemCreateManyPurchaseOrderInputEnvelope
    connect?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
  }

  export type GoodsReceiptUncheckedCreateNestedManyWithoutPurchaseOrderInput = {
    create?: XOR<GoodsReceiptCreateWithoutPurchaseOrderInput, GoodsReceiptUncheckedCreateWithoutPurchaseOrderInput> | GoodsReceiptCreateWithoutPurchaseOrderInput[] | GoodsReceiptUncheckedCreateWithoutPurchaseOrderInput[]
    connectOrCreate?: GoodsReceiptCreateOrConnectWithoutPurchaseOrderInput | GoodsReceiptCreateOrConnectWithoutPurchaseOrderInput[]
    createMany?: GoodsReceiptCreateManyPurchaseOrderInputEnvelope
    connect?: GoodsReceiptWhereUniqueInput | GoodsReceiptWhereUniqueInput[]
  }

  export type SupplierInvoiceUncheckedCreateNestedManyWithoutPurchaseOrderInput = {
    create?: XOR<SupplierInvoiceCreateWithoutPurchaseOrderInput, SupplierInvoiceUncheckedCreateWithoutPurchaseOrderInput> | SupplierInvoiceCreateWithoutPurchaseOrderInput[] | SupplierInvoiceUncheckedCreateWithoutPurchaseOrderInput[]
    connectOrCreate?: SupplierInvoiceCreateOrConnectWithoutPurchaseOrderInput | SupplierInvoiceCreateOrConnectWithoutPurchaseOrderInput[]
    createMany?: SupplierInvoiceCreateManyPurchaseOrderInputEnvelope
    connect?: SupplierInvoiceWhereUniqueInput | SupplierInvoiceWhereUniqueInput[]
  }

  export type EnumPurchaseOrderStatusFieldUpdateOperationsInput = {
    set?: $Enums.PurchaseOrderStatus
  }

  export type SupplierUpdateOneRequiredWithoutPurchaseOrdersNestedInput = {
    create?: XOR<SupplierCreateWithoutPurchaseOrdersInput, SupplierUncheckedCreateWithoutPurchaseOrdersInput>
    connectOrCreate?: SupplierCreateOrConnectWithoutPurchaseOrdersInput
    upsert?: SupplierUpsertWithoutPurchaseOrdersInput
    connect?: SupplierWhereUniqueInput
    update?: XOR<XOR<SupplierUpdateToOneWithWhereWithoutPurchaseOrdersInput, SupplierUpdateWithoutPurchaseOrdersInput>, SupplierUncheckedUpdateWithoutPurchaseOrdersInput>
  }

  export type WarehouseUpdateOneWithoutPurchaseOrdersNestedInput = {
    create?: XOR<WarehouseCreateWithoutPurchaseOrdersInput, WarehouseUncheckedCreateWithoutPurchaseOrdersInput>
    connectOrCreate?: WarehouseCreateOrConnectWithoutPurchaseOrdersInput
    upsert?: WarehouseUpsertWithoutPurchaseOrdersInput
    disconnect?: WarehouseWhereInput | boolean
    delete?: WarehouseWhereInput | boolean
    connect?: WarehouseWhereUniqueInput
    update?: XOR<XOR<WarehouseUpdateToOneWithWhereWithoutPurchaseOrdersInput, WarehouseUpdateWithoutPurchaseOrdersInput>, WarehouseUncheckedUpdateWithoutPurchaseOrdersInput>
  }

  export type PurchaseOrderItemUpdateManyWithoutPurchaseOrderNestedInput = {
    create?: XOR<PurchaseOrderItemCreateWithoutPurchaseOrderInput, PurchaseOrderItemUncheckedCreateWithoutPurchaseOrderInput> | PurchaseOrderItemCreateWithoutPurchaseOrderInput[] | PurchaseOrderItemUncheckedCreateWithoutPurchaseOrderInput[]
    connectOrCreate?: PurchaseOrderItemCreateOrConnectWithoutPurchaseOrderInput | PurchaseOrderItemCreateOrConnectWithoutPurchaseOrderInput[]
    upsert?: PurchaseOrderItemUpsertWithWhereUniqueWithoutPurchaseOrderInput | PurchaseOrderItemUpsertWithWhereUniqueWithoutPurchaseOrderInput[]
    createMany?: PurchaseOrderItemCreateManyPurchaseOrderInputEnvelope
    set?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    disconnect?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    delete?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    connect?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    update?: PurchaseOrderItemUpdateWithWhereUniqueWithoutPurchaseOrderInput | PurchaseOrderItemUpdateWithWhereUniqueWithoutPurchaseOrderInput[]
    updateMany?: PurchaseOrderItemUpdateManyWithWhereWithoutPurchaseOrderInput | PurchaseOrderItemUpdateManyWithWhereWithoutPurchaseOrderInput[]
    deleteMany?: PurchaseOrderItemScalarWhereInput | PurchaseOrderItemScalarWhereInput[]
  }

  export type GoodsReceiptUpdateManyWithoutPurchaseOrderNestedInput = {
    create?: XOR<GoodsReceiptCreateWithoutPurchaseOrderInput, GoodsReceiptUncheckedCreateWithoutPurchaseOrderInput> | GoodsReceiptCreateWithoutPurchaseOrderInput[] | GoodsReceiptUncheckedCreateWithoutPurchaseOrderInput[]
    connectOrCreate?: GoodsReceiptCreateOrConnectWithoutPurchaseOrderInput | GoodsReceiptCreateOrConnectWithoutPurchaseOrderInput[]
    upsert?: GoodsReceiptUpsertWithWhereUniqueWithoutPurchaseOrderInput | GoodsReceiptUpsertWithWhereUniqueWithoutPurchaseOrderInput[]
    createMany?: GoodsReceiptCreateManyPurchaseOrderInputEnvelope
    set?: GoodsReceiptWhereUniqueInput | GoodsReceiptWhereUniqueInput[]
    disconnect?: GoodsReceiptWhereUniqueInput | GoodsReceiptWhereUniqueInput[]
    delete?: GoodsReceiptWhereUniqueInput | GoodsReceiptWhereUniqueInput[]
    connect?: GoodsReceiptWhereUniqueInput | GoodsReceiptWhereUniqueInput[]
    update?: GoodsReceiptUpdateWithWhereUniqueWithoutPurchaseOrderInput | GoodsReceiptUpdateWithWhereUniqueWithoutPurchaseOrderInput[]
    updateMany?: GoodsReceiptUpdateManyWithWhereWithoutPurchaseOrderInput | GoodsReceiptUpdateManyWithWhereWithoutPurchaseOrderInput[]
    deleteMany?: GoodsReceiptScalarWhereInput | GoodsReceiptScalarWhereInput[]
  }

  export type SupplierInvoiceUpdateManyWithoutPurchaseOrderNestedInput = {
    create?: XOR<SupplierInvoiceCreateWithoutPurchaseOrderInput, SupplierInvoiceUncheckedCreateWithoutPurchaseOrderInput> | SupplierInvoiceCreateWithoutPurchaseOrderInput[] | SupplierInvoiceUncheckedCreateWithoutPurchaseOrderInput[]
    connectOrCreate?: SupplierInvoiceCreateOrConnectWithoutPurchaseOrderInput | SupplierInvoiceCreateOrConnectWithoutPurchaseOrderInput[]
    upsert?: SupplierInvoiceUpsertWithWhereUniqueWithoutPurchaseOrderInput | SupplierInvoiceUpsertWithWhereUniqueWithoutPurchaseOrderInput[]
    createMany?: SupplierInvoiceCreateManyPurchaseOrderInputEnvelope
    set?: SupplierInvoiceWhereUniqueInput | SupplierInvoiceWhereUniqueInput[]
    disconnect?: SupplierInvoiceWhereUniqueInput | SupplierInvoiceWhereUniqueInput[]
    delete?: SupplierInvoiceWhereUniqueInput | SupplierInvoiceWhereUniqueInput[]
    connect?: SupplierInvoiceWhereUniqueInput | SupplierInvoiceWhereUniqueInput[]
    update?: SupplierInvoiceUpdateWithWhereUniqueWithoutPurchaseOrderInput | SupplierInvoiceUpdateWithWhereUniqueWithoutPurchaseOrderInput[]
    updateMany?: SupplierInvoiceUpdateManyWithWhereWithoutPurchaseOrderInput | SupplierInvoiceUpdateManyWithWhereWithoutPurchaseOrderInput[]
    deleteMany?: SupplierInvoiceScalarWhereInput | SupplierInvoiceScalarWhereInput[]
  }

  export type PurchaseOrderItemUncheckedUpdateManyWithoutPurchaseOrderNestedInput = {
    create?: XOR<PurchaseOrderItemCreateWithoutPurchaseOrderInput, PurchaseOrderItemUncheckedCreateWithoutPurchaseOrderInput> | PurchaseOrderItemCreateWithoutPurchaseOrderInput[] | PurchaseOrderItemUncheckedCreateWithoutPurchaseOrderInput[]
    connectOrCreate?: PurchaseOrderItemCreateOrConnectWithoutPurchaseOrderInput | PurchaseOrderItemCreateOrConnectWithoutPurchaseOrderInput[]
    upsert?: PurchaseOrderItemUpsertWithWhereUniqueWithoutPurchaseOrderInput | PurchaseOrderItemUpsertWithWhereUniqueWithoutPurchaseOrderInput[]
    createMany?: PurchaseOrderItemCreateManyPurchaseOrderInputEnvelope
    set?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    disconnect?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    delete?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    connect?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    update?: PurchaseOrderItemUpdateWithWhereUniqueWithoutPurchaseOrderInput | PurchaseOrderItemUpdateWithWhereUniqueWithoutPurchaseOrderInput[]
    updateMany?: PurchaseOrderItemUpdateManyWithWhereWithoutPurchaseOrderInput | PurchaseOrderItemUpdateManyWithWhereWithoutPurchaseOrderInput[]
    deleteMany?: PurchaseOrderItemScalarWhereInput | PurchaseOrderItemScalarWhereInput[]
  }

  export type GoodsReceiptUncheckedUpdateManyWithoutPurchaseOrderNestedInput = {
    create?: XOR<GoodsReceiptCreateWithoutPurchaseOrderInput, GoodsReceiptUncheckedCreateWithoutPurchaseOrderInput> | GoodsReceiptCreateWithoutPurchaseOrderInput[] | GoodsReceiptUncheckedCreateWithoutPurchaseOrderInput[]
    connectOrCreate?: GoodsReceiptCreateOrConnectWithoutPurchaseOrderInput | GoodsReceiptCreateOrConnectWithoutPurchaseOrderInput[]
    upsert?: GoodsReceiptUpsertWithWhereUniqueWithoutPurchaseOrderInput | GoodsReceiptUpsertWithWhereUniqueWithoutPurchaseOrderInput[]
    createMany?: GoodsReceiptCreateManyPurchaseOrderInputEnvelope
    set?: GoodsReceiptWhereUniqueInput | GoodsReceiptWhereUniqueInput[]
    disconnect?: GoodsReceiptWhereUniqueInput | GoodsReceiptWhereUniqueInput[]
    delete?: GoodsReceiptWhereUniqueInput | GoodsReceiptWhereUniqueInput[]
    connect?: GoodsReceiptWhereUniqueInput | GoodsReceiptWhereUniqueInput[]
    update?: GoodsReceiptUpdateWithWhereUniqueWithoutPurchaseOrderInput | GoodsReceiptUpdateWithWhereUniqueWithoutPurchaseOrderInput[]
    updateMany?: GoodsReceiptUpdateManyWithWhereWithoutPurchaseOrderInput | GoodsReceiptUpdateManyWithWhereWithoutPurchaseOrderInput[]
    deleteMany?: GoodsReceiptScalarWhereInput | GoodsReceiptScalarWhereInput[]
  }

  export type SupplierInvoiceUncheckedUpdateManyWithoutPurchaseOrderNestedInput = {
    create?: XOR<SupplierInvoiceCreateWithoutPurchaseOrderInput, SupplierInvoiceUncheckedCreateWithoutPurchaseOrderInput> | SupplierInvoiceCreateWithoutPurchaseOrderInput[] | SupplierInvoiceUncheckedCreateWithoutPurchaseOrderInput[]
    connectOrCreate?: SupplierInvoiceCreateOrConnectWithoutPurchaseOrderInput | SupplierInvoiceCreateOrConnectWithoutPurchaseOrderInput[]
    upsert?: SupplierInvoiceUpsertWithWhereUniqueWithoutPurchaseOrderInput | SupplierInvoiceUpsertWithWhereUniqueWithoutPurchaseOrderInput[]
    createMany?: SupplierInvoiceCreateManyPurchaseOrderInputEnvelope
    set?: SupplierInvoiceWhereUniqueInput | SupplierInvoiceWhereUniqueInput[]
    disconnect?: SupplierInvoiceWhereUniqueInput | SupplierInvoiceWhereUniqueInput[]
    delete?: SupplierInvoiceWhereUniqueInput | SupplierInvoiceWhereUniqueInput[]
    connect?: SupplierInvoiceWhereUniqueInput | SupplierInvoiceWhereUniqueInput[]
    update?: SupplierInvoiceUpdateWithWhereUniqueWithoutPurchaseOrderInput | SupplierInvoiceUpdateWithWhereUniqueWithoutPurchaseOrderInput[]
    updateMany?: SupplierInvoiceUpdateManyWithWhereWithoutPurchaseOrderInput | SupplierInvoiceUpdateManyWithWhereWithoutPurchaseOrderInput[]
    deleteMany?: SupplierInvoiceScalarWhereInput | SupplierInvoiceScalarWhereInput[]
  }

  export type PurchaseOrderCreateNestedOneWithoutItemsInput = {
    create?: XOR<PurchaseOrderCreateWithoutItemsInput, PurchaseOrderUncheckedCreateWithoutItemsInput>
    connectOrCreate?: PurchaseOrderCreateOrConnectWithoutItemsInput
    connect?: PurchaseOrderWhereUniqueInput
  }

  export type ProductCreateNestedOneWithoutPurchaseItemsInput = {
    create?: XOR<ProductCreateWithoutPurchaseItemsInput, ProductUncheckedCreateWithoutPurchaseItemsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutPurchaseItemsInput
    connect?: ProductWhereUniqueInput
  }

  export type ProductVariantCreateNestedOneWithoutPurchaseItemsInput = {
    create?: XOR<ProductVariantCreateWithoutPurchaseItemsInput, ProductVariantUncheckedCreateWithoutPurchaseItemsInput>
    connectOrCreate?: ProductVariantCreateOrConnectWithoutPurchaseItemsInput
    connect?: ProductVariantWhereUniqueInput
  }

  export type EnumPurchaseItemStatusFieldUpdateOperationsInput = {
    set?: $Enums.PurchaseItemStatus
  }

  export type PurchaseOrderUpdateOneRequiredWithoutItemsNestedInput = {
    create?: XOR<PurchaseOrderCreateWithoutItemsInput, PurchaseOrderUncheckedCreateWithoutItemsInput>
    connectOrCreate?: PurchaseOrderCreateOrConnectWithoutItemsInput
    upsert?: PurchaseOrderUpsertWithoutItemsInput
    connect?: PurchaseOrderWhereUniqueInput
    update?: XOR<XOR<PurchaseOrderUpdateToOneWithWhereWithoutItemsInput, PurchaseOrderUpdateWithoutItemsInput>, PurchaseOrderUncheckedUpdateWithoutItemsInput>
  }

  export type ProductUpdateOneRequiredWithoutPurchaseItemsNestedInput = {
    create?: XOR<ProductCreateWithoutPurchaseItemsInput, ProductUncheckedCreateWithoutPurchaseItemsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutPurchaseItemsInput
    upsert?: ProductUpsertWithoutPurchaseItemsInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutPurchaseItemsInput, ProductUpdateWithoutPurchaseItemsInput>, ProductUncheckedUpdateWithoutPurchaseItemsInput>
  }

  export type ProductVariantUpdateOneWithoutPurchaseItemsNestedInput = {
    create?: XOR<ProductVariantCreateWithoutPurchaseItemsInput, ProductVariantUncheckedCreateWithoutPurchaseItemsInput>
    connectOrCreate?: ProductVariantCreateOrConnectWithoutPurchaseItemsInput
    upsert?: ProductVariantUpsertWithoutPurchaseItemsInput
    disconnect?: ProductVariantWhereInput | boolean
    delete?: ProductVariantWhereInput | boolean
    connect?: ProductVariantWhereUniqueInput
    update?: XOR<XOR<ProductVariantUpdateToOneWithWhereWithoutPurchaseItemsInput, ProductVariantUpdateWithoutPurchaseItemsInput>, ProductVariantUncheckedUpdateWithoutPurchaseItemsInput>
  }

  export type PurchaseOrderCreateNestedOneWithoutReceiptsInput = {
    create?: XOR<PurchaseOrderCreateWithoutReceiptsInput, PurchaseOrderUncheckedCreateWithoutReceiptsInput>
    connectOrCreate?: PurchaseOrderCreateOrConnectWithoutReceiptsInput
    connect?: PurchaseOrderWhereUniqueInput
  }

  export type WarehouseCreateNestedOneWithoutGoodsReceiptsInput = {
    create?: XOR<WarehouseCreateWithoutGoodsReceiptsInput, WarehouseUncheckedCreateWithoutGoodsReceiptsInput>
    connectOrCreate?: WarehouseCreateOrConnectWithoutGoodsReceiptsInput
    connect?: WarehouseWhereUniqueInput
  }

  export type GoodsReceiptItemCreateNestedManyWithoutGoodsReceiptInput = {
    create?: XOR<GoodsReceiptItemCreateWithoutGoodsReceiptInput, GoodsReceiptItemUncheckedCreateWithoutGoodsReceiptInput> | GoodsReceiptItemCreateWithoutGoodsReceiptInput[] | GoodsReceiptItemUncheckedCreateWithoutGoodsReceiptInput[]
    connectOrCreate?: GoodsReceiptItemCreateOrConnectWithoutGoodsReceiptInput | GoodsReceiptItemCreateOrConnectWithoutGoodsReceiptInput[]
    createMany?: GoodsReceiptItemCreateManyGoodsReceiptInputEnvelope
    connect?: GoodsReceiptItemWhereUniqueInput | GoodsReceiptItemWhereUniqueInput[]
  }

  export type GoodsReceiptItemUncheckedCreateNestedManyWithoutGoodsReceiptInput = {
    create?: XOR<GoodsReceiptItemCreateWithoutGoodsReceiptInput, GoodsReceiptItemUncheckedCreateWithoutGoodsReceiptInput> | GoodsReceiptItemCreateWithoutGoodsReceiptInput[] | GoodsReceiptItemUncheckedCreateWithoutGoodsReceiptInput[]
    connectOrCreate?: GoodsReceiptItemCreateOrConnectWithoutGoodsReceiptInput | GoodsReceiptItemCreateOrConnectWithoutGoodsReceiptInput[]
    createMany?: GoodsReceiptItemCreateManyGoodsReceiptInputEnvelope
    connect?: GoodsReceiptItemWhereUniqueInput | GoodsReceiptItemWhereUniqueInput[]
  }

  export type EnumReceiptStatusFieldUpdateOperationsInput = {
    set?: $Enums.ReceiptStatus
  }

  export type PurchaseOrderUpdateOneRequiredWithoutReceiptsNestedInput = {
    create?: XOR<PurchaseOrderCreateWithoutReceiptsInput, PurchaseOrderUncheckedCreateWithoutReceiptsInput>
    connectOrCreate?: PurchaseOrderCreateOrConnectWithoutReceiptsInput
    upsert?: PurchaseOrderUpsertWithoutReceiptsInput
    connect?: PurchaseOrderWhereUniqueInput
    update?: XOR<XOR<PurchaseOrderUpdateToOneWithWhereWithoutReceiptsInput, PurchaseOrderUpdateWithoutReceiptsInput>, PurchaseOrderUncheckedUpdateWithoutReceiptsInput>
  }

  export type WarehouseUpdateOneRequiredWithoutGoodsReceiptsNestedInput = {
    create?: XOR<WarehouseCreateWithoutGoodsReceiptsInput, WarehouseUncheckedCreateWithoutGoodsReceiptsInput>
    connectOrCreate?: WarehouseCreateOrConnectWithoutGoodsReceiptsInput
    upsert?: WarehouseUpsertWithoutGoodsReceiptsInput
    connect?: WarehouseWhereUniqueInput
    update?: XOR<XOR<WarehouseUpdateToOneWithWhereWithoutGoodsReceiptsInput, WarehouseUpdateWithoutGoodsReceiptsInput>, WarehouseUncheckedUpdateWithoutGoodsReceiptsInput>
  }

  export type GoodsReceiptItemUpdateManyWithoutGoodsReceiptNestedInput = {
    create?: XOR<GoodsReceiptItemCreateWithoutGoodsReceiptInput, GoodsReceiptItemUncheckedCreateWithoutGoodsReceiptInput> | GoodsReceiptItemCreateWithoutGoodsReceiptInput[] | GoodsReceiptItemUncheckedCreateWithoutGoodsReceiptInput[]
    connectOrCreate?: GoodsReceiptItemCreateOrConnectWithoutGoodsReceiptInput | GoodsReceiptItemCreateOrConnectWithoutGoodsReceiptInput[]
    upsert?: GoodsReceiptItemUpsertWithWhereUniqueWithoutGoodsReceiptInput | GoodsReceiptItemUpsertWithWhereUniqueWithoutGoodsReceiptInput[]
    createMany?: GoodsReceiptItemCreateManyGoodsReceiptInputEnvelope
    set?: GoodsReceiptItemWhereUniqueInput | GoodsReceiptItemWhereUniqueInput[]
    disconnect?: GoodsReceiptItemWhereUniqueInput | GoodsReceiptItemWhereUniqueInput[]
    delete?: GoodsReceiptItemWhereUniqueInput | GoodsReceiptItemWhereUniqueInput[]
    connect?: GoodsReceiptItemWhereUniqueInput | GoodsReceiptItemWhereUniqueInput[]
    update?: GoodsReceiptItemUpdateWithWhereUniqueWithoutGoodsReceiptInput | GoodsReceiptItemUpdateWithWhereUniqueWithoutGoodsReceiptInput[]
    updateMany?: GoodsReceiptItemUpdateManyWithWhereWithoutGoodsReceiptInput | GoodsReceiptItemUpdateManyWithWhereWithoutGoodsReceiptInput[]
    deleteMany?: GoodsReceiptItemScalarWhereInput | GoodsReceiptItemScalarWhereInput[]
  }

  export type GoodsReceiptItemUncheckedUpdateManyWithoutGoodsReceiptNestedInput = {
    create?: XOR<GoodsReceiptItemCreateWithoutGoodsReceiptInput, GoodsReceiptItemUncheckedCreateWithoutGoodsReceiptInput> | GoodsReceiptItemCreateWithoutGoodsReceiptInput[] | GoodsReceiptItemUncheckedCreateWithoutGoodsReceiptInput[]
    connectOrCreate?: GoodsReceiptItemCreateOrConnectWithoutGoodsReceiptInput | GoodsReceiptItemCreateOrConnectWithoutGoodsReceiptInput[]
    upsert?: GoodsReceiptItemUpsertWithWhereUniqueWithoutGoodsReceiptInput | GoodsReceiptItemUpsertWithWhereUniqueWithoutGoodsReceiptInput[]
    createMany?: GoodsReceiptItemCreateManyGoodsReceiptInputEnvelope
    set?: GoodsReceiptItemWhereUniqueInput | GoodsReceiptItemWhereUniqueInput[]
    disconnect?: GoodsReceiptItemWhereUniqueInput | GoodsReceiptItemWhereUniqueInput[]
    delete?: GoodsReceiptItemWhereUniqueInput | GoodsReceiptItemWhereUniqueInput[]
    connect?: GoodsReceiptItemWhereUniqueInput | GoodsReceiptItemWhereUniqueInput[]
    update?: GoodsReceiptItemUpdateWithWhereUniqueWithoutGoodsReceiptInput | GoodsReceiptItemUpdateWithWhereUniqueWithoutGoodsReceiptInput[]
    updateMany?: GoodsReceiptItemUpdateManyWithWhereWithoutGoodsReceiptInput | GoodsReceiptItemUpdateManyWithWhereWithoutGoodsReceiptInput[]
    deleteMany?: GoodsReceiptItemScalarWhereInput | GoodsReceiptItemScalarWhereInput[]
  }

  export type GoodsReceiptCreateNestedOneWithoutItemsInput = {
    create?: XOR<GoodsReceiptCreateWithoutItemsInput, GoodsReceiptUncheckedCreateWithoutItemsInput>
    connectOrCreate?: GoodsReceiptCreateOrConnectWithoutItemsInput
    connect?: GoodsReceiptWhereUniqueInput
  }

  export type ProductCreateNestedOneWithoutGoodsReceiptItemsInput = {
    create?: XOR<ProductCreateWithoutGoodsReceiptItemsInput, ProductUncheckedCreateWithoutGoodsReceiptItemsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutGoodsReceiptItemsInput
    connect?: ProductWhereUniqueInput
  }

  export type ProductVariantCreateNestedOneWithoutGoodsReceiptItemsInput = {
    create?: XOR<ProductVariantCreateWithoutGoodsReceiptItemsInput, ProductVariantUncheckedCreateWithoutGoodsReceiptItemsInput>
    connectOrCreate?: ProductVariantCreateOrConnectWithoutGoodsReceiptItemsInput
    connect?: ProductVariantWhereUniqueInput
  }

  export type GoodsReceiptUpdateOneRequiredWithoutItemsNestedInput = {
    create?: XOR<GoodsReceiptCreateWithoutItemsInput, GoodsReceiptUncheckedCreateWithoutItemsInput>
    connectOrCreate?: GoodsReceiptCreateOrConnectWithoutItemsInput
    upsert?: GoodsReceiptUpsertWithoutItemsInput
    connect?: GoodsReceiptWhereUniqueInput
    update?: XOR<XOR<GoodsReceiptUpdateToOneWithWhereWithoutItemsInput, GoodsReceiptUpdateWithoutItemsInput>, GoodsReceiptUncheckedUpdateWithoutItemsInput>
  }

  export type ProductUpdateOneRequiredWithoutGoodsReceiptItemsNestedInput = {
    create?: XOR<ProductCreateWithoutGoodsReceiptItemsInput, ProductUncheckedCreateWithoutGoodsReceiptItemsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutGoodsReceiptItemsInput
    upsert?: ProductUpsertWithoutGoodsReceiptItemsInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutGoodsReceiptItemsInput, ProductUpdateWithoutGoodsReceiptItemsInput>, ProductUncheckedUpdateWithoutGoodsReceiptItemsInput>
  }

  export type ProductVariantUpdateOneWithoutGoodsReceiptItemsNestedInput = {
    create?: XOR<ProductVariantCreateWithoutGoodsReceiptItemsInput, ProductVariantUncheckedCreateWithoutGoodsReceiptItemsInput>
    connectOrCreate?: ProductVariantCreateOrConnectWithoutGoodsReceiptItemsInput
    upsert?: ProductVariantUpsertWithoutGoodsReceiptItemsInput
    disconnect?: ProductVariantWhereInput | boolean
    delete?: ProductVariantWhereInput | boolean
    connect?: ProductVariantWhereUniqueInput
    update?: XOR<XOR<ProductVariantUpdateToOneWithWhereWithoutGoodsReceiptItemsInput, ProductVariantUpdateWithoutGoodsReceiptItemsInput>, ProductVariantUncheckedUpdateWithoutGoodsReceiptItemsInput>
  }

  export type OrderCreateNestedManyWithoutCustomerInput = {
    create?: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput> | OrderCreateWithoutCustomerInput[] | OrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCustomerInput | OrderCreateOrConnectWithoutCustomerInput[]
    createMany?: OrderCreateManyCustomerInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type CustomerInvoiceCreateNestedManyWithoutCustomerInput = {
    create?: XOR<CustomerInvoiceCreateWithoutCustomerInput, CustomerInvoiceUncheckedCreateWithoutCustomerInput> | CustomerInvoiceCreateWithoutCustomerInput[] | CustomerInvoiceUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: CustomerInvoiceCreateOrConnectWithoutCustomerInput | CustomerInvoiceCreateOrConnectWithoutCustomerInput[]
    createMany?: CustomerInvoiceCreateManyCustomerInputEnvelope
    connect?: CustomerInvoiceWhereUniqueInput | CustomerInvoiceWhereUniqueInput[]
  }

  export type CustomerContactCreateNestedManyWithoutCustomerInput = {
    create?: XOR<CustomerContactCreateWithoutCustomerInput, CustomerContactUncheckedCreateWithoutCustomerInput> | CustomerContactCreateWithoutCustomerInput[] | CustomerContactUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: CustomerContactCreateOrConnectWithoutCustomerInput | CustomerContactCreateOrConnectWithoutCustomerInput[]
    createMany?: CustomerContactCreateManyCustomerInputEnvelope
    connect?: CustomerContactWhereUniqueInput | CustomerContactWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutCustomerInput = {
    create?: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput> | OrderCreateWithoutCustomerInput[] | OrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCustomerInput | OrderCreateOrConnectWithoutCustomerInput[]
    createMany?: OrderCreateManyCustomerInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type CustomerInvoiceUncheckedCreateNestedManyWithoutCustomerInput = {
    create?: XOR<CustomerInvoiceCreateWithoutCustomerInput, CustomerInvoiceUncheckedCreateWithoutCustomerInput> | CustomerInvoiceCreateWithoutCustomerInput[] | CustomerInvoiceUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: CustomerInvoiceCreateOrConnectWithoutCustomerInput | CustomerInvoiceCreateOrConnectWithoutCustomerInput[]
    createMany?: CustomerInvoiceCreateManyCustomerInputEnvelope
    connect?: CustomerInvoiceWhereUniqueInput | CustomerInvoiceWhereUniqueInput[]
  }

  export type CustomerContactUncheckedCreateNestedManyWithoutCustomerInput = {
    create?: XOR<CustomerContactCreateWithoutCustomerInput, CustomerContactUncheckedCreateWithoutCustomerInput> | CustomerContactCreateWithoutCustomerInput[] | CustomerContactUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: CustomerContactCreateOrConnectWithoutCustomerInput | CustomerContactCreateOrConnectWithoutCustomerInput[]
    createMany?: CustomerContactCreateManyCustomerInputEnvelope
    connect?: CustomerContactWhereUniqueInput | CustomerContactWhereUniqueInput[]
  }

  export type EnumCustomerTypeFieldUpdateOperationsInput = {
    set?: $Enums.CustomerType
  }

  export type EnumCustomerStatusFieldUpdateOperationsInput = {
    set?: $Enums.CustomerStatus
  }

  export type OrderUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput> | OrderCreateWithoutCustomerInput[] | OrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCustomerInput | OrderCreateOrConnectWithoutCustomerInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutCustomerInput | OrderUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: OrderCreateManyCustomerInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutCustomerInput | OrderUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutCustomerInput | OrderUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type CustomerInvoiceUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<CustomerInvoiceCreateWithoutCustomerInput, CustomerInvoiceUncheckedCreateWithoutCustomerInput> | CustomerInvoiceCreateWithoutCustomerInput[] | CustomerInvoiceUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: CustomerInvoiceCreateOrConnectWithoutCustomerInput | CustomerInvoiceCreateOrConnectWithoutCustomerInput[]
    upsert?: CustomerInvoiceUpsertWithWhereUniqueWithoutCustomerInput | CustomerInvoiceUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: CustomerInvoiceCreateManyCustomerInputEnvelope
    set?: CustomerInvoiceWhereUniqueInput | CustomerInvoiceWhereUniqueInput[]
    disconnect?: CustomerInvoiceWhereUniqueInput | CustomerInvoiceWhereUniqueInput[]
    delete?: CustomerInvoiceWhereUniqueInput | CustomerInvoiceWhereUniqueInput[]
    connect?: CustomerInvoiceWhereUniqueInput | CustomerInvoiceWhereUniqueInput[]
    update?: CustomerInvoiceUpdateWithWhereUniqueWithoutCustomerInput | CustomerInvoiceUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: CustomerInvoiceUpdateManyWithWhereWithoutCustomerInput | CustomerInvoiceUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: CustomerInvoiceScalarWhereInput | CustomerInvoiceScalarWhereInput[]
  }

  export type CustomerContactUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<CustomerContactCreateWithoutCustomerInput, CustomerContactUncheckedCreateWithoutCustomerInput> | CustomerContactCreateWithoutCustomerInput[] | CustomerContactUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: CustomerContactCreateOrConnectWithoutCustomerInput | CustomerContactCreateOrConnectWithoutCustomerInput[]
    upsert?: CustomerContactUpsertWithWhereUniqueWithoutCustomerInput | CustomerContactUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: CustomerContactCreateManyCustomerInputEnvelope
    set?: CustomerContactWhereUniqueInput | CustomerContactWhereUniqueInput[]
    disconnect?: CustomerContactWhereUniqueInput | CustomerContactWhereUniqueInput[]
    delete?: CustomerContactWhereUniqueInput | CustomerContactWhereUniqueInput[]
    connect?: CustomerContactWhereUniqueInput | CustomerContactWhereUniqueInput[]
    update?: CustomerContactUpdateWithWhereUniqueWithoutCustomerInput | CustomerContactUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: CustomerContactUpdateManyWithWhereWithoutCustomerInput | CustomerContactUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: CustomerContactScalarWhereInput | CustomerContactScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput> | OrderCreateWithoutCustomerInput[] | OrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCustomerInput | OrderCreateOrConnectWithoutCustomerInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutCustomerInput | OrderUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: OrderCreateManyCustomerInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutCustomerInput | OrderUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutCustomerInput | OrderUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type CustomerInvoiceUncheckedUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<CustomerInvoiceCreateWithoutCustomerInput, CustomerInvoiceUncheckedCreateWithoutCustomerInput> | CustomerInvoiceCreateWithoutCustomerInput[] | CustomerInvoiceUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: CustomerInvoiceCreateOrConnectWithoutCustomerInput | CustomerInvoiceCreateOrConnectWithoutCustomerInput[]
    upsert?: CustomerInvoiceUpsertWithWhereUniqueWithoutCustomerInput | CustomerInvoiceUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: CustomerInvoiceCreateManyCustomerInputEnvelope
    set?: CustomerInvoiceWhereUniqueInput | CustomerInvoiceWhereUniqueInput[]
    disconnect?: CustomerInvoiceWhereUniqueInput | CustomerInvoiceWhereUniqueInput[]
    delete?: CustomerInvoiceWhereUniqueInput | CustomerInvoiceWhereUniqueInput[]
    connect?: CustomerInvoiceWhereUniqueInput | CustomerInvoiceWhereUniqueInput[]
    update?: CustomerInvoiceUpdateWithWhereUniqueWithoutCustomerInput | CustomerInvoiceUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: CustomerInvoiceUpdateManyWithWhereWithoutCustomerInput | CustomerInvoiceUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: CustomerInvoiceScalarWhereInput | CustomerInvoiceScalarWhereInput[]
  }

  export type CustomerContactUncheckedUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<CustomerContactCreateWithoutCustomerInput, CustomerContactUncheckedCreateWithoutCustomerInput> | CustomerContactCreateWithoutCustomerInput[] | CustomerContactUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: CustomerContactCreateOrConnectWithoutCustomerInput | CustomerContactCreateOrConnectWithoutCustomerInput[]
    upsert?: CustomerContactUpsertWithWhereUniqueWithoutCustomerInput | CustomerContactUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: CustomerContactCreateManyCustomerInputEnvelope
    set?: CustomerContactWhereUniqueInput | CustomerContactWhereUniqueInput[]
    disconnect?: CustomerContactWhereUniqueInput | CustomerContactWhereUniqueInput[]
    delete?: CustomerContactWhereUniqueInput | CustomerContactWhereUniqueInput[]
    connect?: CustomerContactWhereUniqueInput | CustomerContactWhereUniqueInput[]
    update?: CustomerContactUpdateWithWhereUniqueWithoutCustomerInput | CustomerContactUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: CustomerContactUpdateManyWithWhereWithoutCustomerInput | CustomerContactUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: CustomerContactScalarWhereInput | CustomerContactScalarWhereInput[]
  }

  export type CustomerCreateNestedOneWithoutContactsInput = {
    create?: XOR<CustomerCreateWithoutContactsInput, CustomerUncheckedCreateWithoutContactsInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutContactsInput
    connect?: CustomerWhereUniqueInput
  }

  export type CustomerUpdateOneRequiredWithoutContactsNestedInput = {
    create?: XOR<CustomerCreateWithoutContactsInput, CustomerUncheckedCreateWithoutContactsInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutContactsInput
    upsert?: CustomerUpsertWithoutContactsInput
    connect?: CustomerWhereUniqueInput
    update?: XOR<XOR<CustomerUpdateToOneWithWhereWithoutContactsInput, CustomerUpdateWithoutContactsInput>, CustomerUncheckedUpdateWithoutContactsInput>
  }

  export type CustomerCreateNestedOneWithoutOrdersInput = {
    create?: XOR<CustomerCreateWithoutOrdersInput, CustomerUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutOrdersInput
    connect?: CustomerWhereUniqueInput
  }

  export type WarehouseCreateNestedOneWithoutOrdersInput = {
    create?: XOR<WarehouseCreateWithoutOrdersInput, WarehouseUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: WarehouseCreateOrConnectWithoutOrdersInput
    connect?: WarehouseWhereUniqueInput
  }

  export type OrderItemCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput> | OrderItemCreateWithoutOrderInput[] | OrderItemUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutOrderInput | OrderItemCreateOrConnectWithoutOrderInput[]
    createMany?: OrderItemCreateManyOrderInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type ShipmentCreateNestedManyWithoutOrderInput = {
    create?: XOR<ShipmentCreateWithoutOrderInput, ShipmentUncheckedCreateWithoutOrderInput> | ShipmentCreateWithoutOrderInput[] | ShipmentUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: ShipmentCreateOrConnectWithoutOrderInput | ShipmentCreateOrConnectWithoutOrderInput[]
    createMany?: ShipmentCreateManyOrderInputEnvelope
    connect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
  }

  export type CustomerInvoiceCreateNestedManyWithoutOrderInput = {
    create?: XOR<CustomerInvoiceCreateWithoutOrderInput, CustomerInvoiceUncheckedCreateWithoutOrderInput> | CustomerInvoiceCreateWithoutOrderInput[] | CustomerInvoiceUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: CustomerInvoiceCreateOrConnectWithoutOrderInput | CustomerInvoiceCreateOrConnectWithoutOrderInput[]
    createMany?: CustomerInvoiceCreateManyOrderInputEnvelope
    connect?: CustomerInvoiceWhereUniqueInput | CustomerInvoiceWhereUniqueInput[]
  }

  export type OrderItemUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput> | OrderItemCreateWithoutOrderInput[] | OrderItemUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutOrderInput | OrderItemCreateOrConnectWithoutOrderInput[]
    createMany?: OrderItemCreateManyOrderInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type ShipmentUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<ShipmentCreateWithoutOrderInput, ShipmentUncheckedCreateWithoutOrderInput> | ShipmentCreateWithoutOrderInput[] | ShipmentUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: ShipmentCreateOrConnectWithoutOrderInput | ShipmentCreateOrConnectWithoutOrderInput[]
    createMany?: ShipmentCreateManyOrderInputEnvelope
    connect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
  }

  export type CustomerInvoiceUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<CustomerInvoiceCreateWithoutOrderInput, CustomerInvoiceUncheckedCreateWithoutOrderInput> | CustomerInvoiceCreateWithoutOrderInput[] | CustomerInvoiceUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: CustomerInvoiceCreateOrConnectWithoutOrderInput | CustomerInvoiceCreateOrConnectWithoutOrderInput[]
    createMany?: CustomerInvoiceCreateManyOrderInputEnvelope
    connect?: CustomerInvoiceWhereUniqueInput | CustomerInvoiceWhereUniqueInput[]
  }

  export type EnumOrderTypeFieldUpdateOperationsInput = {
    set?: $Enums.OrderType
  }

  export type EnumOrderChannelFieldUpdateOperationsInput = {
    set?: $Enums.OrderChannel
  }

  export type EnumOrderStatusFieldUpdateOperationsInput = {
    set?: $Enums.OrderStatus
  }

  export type EnumFulfillmentStatusFieldUpdateOperationsInput = {
    set?: $Enums.FulfillmentStatus
  }

  export type EnumPaymentStatusFieldUpdateOperationsInput = {
    set?: $Enums.PaymentStatus
  }

  export type EnumOrderPriorityFieldUpdateOperationsInput = {
    set?: $Enums.OrderPriority
  }

  export type CustomerUpdateOneRequiredWithoutOrdersNestedInput = {
    create?: XOR<CustomerCreateWithoutOrdersInput, CustomerUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutOrdersInput
    upsert?: CustomerUpsertWithoutOrdersInput
    connect?: CustomerWhereUniqueInput
    update?: XOR<XOR<CustomerUpdateToOneWithWhereWithoutOrdersInput, CustomerUpdateWithoutOrdersInput>, CustomerUncheckedUpdateWithoutOrdersInput>
  }

  export type WarehouseUpdateOneRequiredWithoutOrdersNestedInput = {
    create?: XOR<WarehouseCreateWithoutOrdersInput, WarehouseUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: WarehouseCreateOrConnectWithoutOrdersInput
    upsert?: WarehouseUpsertWithoutOrdersInput
    connect?: WarehouseWhereUniqueInput
    update?: XOR<XOR<WarehouseUpdateToOneWithWhereWithoutOrdersInput, WarehouseUpdateWithoutOrdersInput>, WarehouseUncheckedUpdateWithoutOrdersInput>
  }

  export type OrderItemUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput> | OrderItemCreateWithoutOrderInput[] | OrderItemUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutOrderInput | OrderItemCreateOrConnectWithoutOrderInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutOrderInput | OrderItemUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderItemCreateManyOrderInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutOrderInput | OrderItemUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutOrderInput | OrderItemUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type ShipmentUpdateManyWithoutOrderNestedInput = {
    create?: XOR<ShipmentCreateWithoutOrderInput, ShipmentUncheckedCreateWithoutOrderInput> | ShipmentCreateWithoutOrderInput[] | ShipmentUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: ShipmentCreateOrConnectWithoutOrderInput | ShipmentCreateOrConnectWithoutOrderInput[]
    upsert?: ShipmentUpsertWithWhereUniqueWithoutOrderInput | ShipmentUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: ShipmentCreateManyOrderInputEnvelope
    set?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    disconnect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    delete?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    connect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    update?: ShipmentUpdateWithWhereUniqueWithoutOrderInput | ShipmentUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: ShipmentUpdateManyWithWhereWithoutOrderInput | ShipmentUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: ShipmentScalarWhereInput | ShipmentScalarWhereInput[]
  }

  export type CustomerInvoiceUpdateManyWithoutOrderNestedInput = {
    create?: XOR<CustomerInvoiceCreateWithoutOrderInput, CustomerInvoiceUncheckedCreateWithoutOrderInput> | CustomerInvoiceCreateWithoutOrderInput[] | CustomerInvoiceUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: CustomerInvoiceCreateOrConnectWithoutOrderInput | CustomerInvoiceCreateOrConnectWithoutOrderInput[]
    upsert?: CustomerInvoiceUpsertWithWhereUniqueWithoutOrderInput | CustomerInvoiceUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: CustomerInvoiceCreateManyOrderInputEnvelope
    set?: CustomerInvoiceWhereUniqueInput | CustomerInvoiceWhereUniqueInput[]
    disconnect?: CustomerInvoiceWhereUniqueInput | CustomerInvoiceWhereUniqueInput[]
    delete?: CustomerInvoiceWhereUniqueInput | CustomerInvoiceWhereUniqueInput[]
    connect?: CustomerInvoiceWhereUniqueInput | CustomerInvoiceWhereUniqueInput[]
    update?: CustomerInvoiceUpdateWithWhereUniqueWithoutOrderInput | CustomerInvoiceUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: CustomerInvoiceUpdateManyWithWhereWithoutOrderInput | CustomerInvoiceUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: CustomerInvoiceScalarWhereInput | CustomerInvoiceScalarWhereInput[]
  }

  export type OrderItemUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput> | OrderItemCreateWithoutOrderInput[] | OrderItemUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutOrderInput | OrderItemCreateOrConnectWithoutOrderInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutOrderInput | OrderItemUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderItemCreateManyOrderInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutOrderInput | OrderItemUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutOrderInput | OrderItemUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type ShipmentUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<ShipmentCreateWithoutOrderInput, ShipmentUncheckedCreateWithoutOrderInput> | ShipmentCreateWithoutOrderInput[] | ShipmentUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: ShipmentCreateOrConnectWithoutOrderInput | ShipmentCreateOrConnectWithoutOrderInput[]
    upsert?: ShipmentUpsertWithWhereUniqueWithoutOrderInput | ShipmentUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: ShipmentCreateManyOrderInputEnvelope
    set?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    disconnect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    delete?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    connect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    update?: ShipmentUpdateWithWhereUniqueWithoutOrderInput | ShipmentUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: ShipmentUpdateManyWithWhereWithoutOrderInput | ShipmentUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: ShipmentScalarWhereInput | ShipmentScalarWhereInput[]
  }

  export type CustomerInvoiceUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<CustomerInvoiceCreateWithoutOrderInput, CustomerInvoiceUncheckedCreateWithoutOrderInput> | CustomerInvoiceCreateWithoutOrderInput[] | CustomerInvoiceUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: CustomerInvoiceCreateOrConnectWithoutOrderInput | CustomerInvoiceCreateOrConnectWithoutOrderInput[]
    upsert?: CustomerInvoiceUpsertWithWhereUniqueWithoutOrderInput | CustomerInvoiceUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: CustomerInvoiceCreateManyOrderInputEnvelope
    set?: CustomerInvoiceWhereUniqueInput | CustomerInvoiceWhereUniqueInput[]
    disconnect?: CustomerInvoiceWhereUniqueInput | CustomerInvoiceWhereUniqueInput[]
    delete?: CustomerInvoiceWhereUniqueInput | CustomerInvoiceWhereUniqueInput[]
    connect?: CustomerInvoiceWhereUniqueInput | CustomerInvoiceWhereUniqueInput[]
    update?: CustomerInvoiceUpdateWithWhereUniqueWithoutOrderInput | CustomerInvoiceUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: CustomerInvoiceUpdateManyWithWhereWithoutOrderInput | CustomerInvoiceUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: CustomerInvoiceScalarWhereInput | CustomerInvoiceScalarWhereInput[]
  }

  export type OrderCreateNestedOneWithoutItemsInput = {
    create?: XOR<OrderCreateWithoutItemsInput, OrderUncheckedCreateWithoutItemsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutItemsInput
    connect?: OrderWhereUniqueInput
  }

  export type ProductCreateNestedOneWithoutOrderItemsInput = {
    create?: XOR<ProductCreateWithoutOrderItemsInput, ProductUncheckedCreateWithoutOrderItemsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutOrderItemsInput
    connect?: ProductWhereUniqueInput
  }

  export type ProductVariantCreateNestedOneWithoutOrderItemsInput = {
    create?: XOR<ProductVariantCreateWithoutOrderItemsInput, ProductVariantUncheckedCreateWithoutOrderItemsInput>
    connectOrCreate?: ProductVariantCreateOrConnectWithoutOrderItemsInput
    connect?: ProductVariantWhereUniqueInput
  }

  export type EnumOrderItemStatusFieldUpdateOperationsInput = {
    set?: $Enums.OrderItemStatus
  }

  export type OrderUpdateOneRequiredWithoutItemsNestedInput = {
    create?: XOR<OrderCreateWithoutItemsInput, OrderUncheckedCreateWithoutItemsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutItemsInput
    upsert?: OrderUpsertWithoutItemsInput
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutItemsInput, OrderUpdateWithoutItemsInput>, OrderUncheckedUpdateWithoutItemsInput>
  }

  export type ProductUpdateOneRequiredWithoutOrderItemsNestedInput = {
    create?: XOR<ProductCreateWithoutOrderItemsInput, ProductUncheckedCreateWithoutOrderItemsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutOrderItemsInput
    upsert?: ProductUpsertWithoutOrderItemsInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutOrderItemsInput, ProductUpdateWithoutOrderItemsInput>, ProductUncheckedUpdateWithoutOrderItemsInput>
  }

  export type ProductVariantUpdateOneWithoutOrderItemsNestedInput = {
    create?: XOR<ProductVariantCreateWithoutOrderItemsInput, ProductVariantUncheckedCreateWithoutOrderItemsInput>
    connectOrCreate?: ProductVariantCreateOrConnectWithoutOrderItemsInput
    upsert?: ProductVariantUpsertWithoutOrderItemsInput
    disconnect?: ProductVariantWhereInput | boolean
    delete?: ProductVariantWhereInput | boolean
    connect?: ProductVariantWhereUniqueInput
    update?: XOR<XOR<ProductVariantUpdateToOneWithWhereWithoutOrderItemsInput, ProductVariantUpdateWithoutOrderItemsInput>, ProductVariantUncheckedUpdateWithoutOrderItemsInput>
  }

  export type OrderCreateNestedOneWithoutShipmentsInput = {
    create?: XOR<OrderCreateWithoutShipmentsInput, OrderUncheckedCreateWithoutShipmentsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutShipmentsInput
    connect?: OrderWhereUniqueInput
  }

  export type WarehouseCreateNestedOneWithoutShipmentsInput = {
    create?: XOR<WarehouseCreateWithoutShipmentsInput, WarehouseUncheckedCreateWithoutShipmentsInput>
    connectOrCreate?: WarehouseCreateOrConnectWithoutShipmentsInput
    connect?: WarehouseWhereUniqueInput
  }

  export type ShipmentPackageCreateNestedManyWithoutShipmentInput = {
    create?: XOR<ShipmentPackageCreateWithoutShipmentInput, ShipmentPackageUncheckedCreateWithoutShipmentInput> | ShipmentPackageCreateWithoutShipmentInput[] | ShipmentPackageUncheckedCreateWithoutShipmentInput[]
    connectOrCreate?: ShipmentPackageCreateOrConnectWithoutShipmentInput | ShipmentPackageCreateOrConnectWithoutShipmentInput[]
    createMany?: ShipmentPackageCreateManyShipmentInputEnvelope
    connect?: ShipmentPackageWhereUniqueInput | ShipmentPackageWhereUniqueInput[]
  }

  export type ShipmentTrackingCreateNestedManyWithoutShipmentInput = {
    create?: XOR<ShipmentTrackingCreateWithoutShipmentInput, ShipmentTrackingUncheckedCreateWithoutShipmentInput> | ShipmentTrackingCreateWithoutShipmentInput[] | ShipmentTrackingUncheckedCreateWithoutShipmentInput[]
    connectOrCreate?: ShipmentTrackingCreateOrConnectWithoutShipmentInput | ShipmentTrackingCreateOrConnectWithoutShipmentInput[]
    createMany?: ShipmentTrackingCreateManyShipmentInputEnvelope
    connect?: ShipmentTrackingWhereUniqueInput | ShipmentTrackingWhereUniqueInput[]
  }

  export type ShipmentPackageUncheckedCreateNestedManyWithoutShipmentInput = {
    create?: XOR<ShipmentPackageCreateWithoutShipmentInput, ShipmentPackageUncheckedCreateWithoutShipmentInput> | ShipmentPackageCreateWithoutShipmentInput[] | ShipmentPackageUncheckedCreateWithoutShipmentInput[]
    connectOrCreate?: ShipmentPackageCreateOrConnectWithoutShipmentInput | ShipmentPackageCreateOrConnectWithoutShipmentInput[]
    createMany?: ShipmentPackageCreateManyShipmentInputEnvelope
    connect?: ShipmentPackageWhereUniqueInput | ShipmentPackageWhereUniqueInput[]
  }

  export type ShipmentTrackingUncheckedCreateNestedManyWithoutShipmentInput = {
    create?: XOR<ShipmentTrackingCreateWithoutShipmentInput, ShipmentTrackingUncheckedCreateWithoutShipmentInput> | ShipmentTrackingCreateWithoutShipmentInput[] | ShipmentTrackingUncheckedCreateWithoutShipmentInput[]
    connectOrCreate?: ShipmentTrackingCreateOrConnectWithoutShipmentInput | ShipmentTrackingCreateOrConnectWithoutShipmentInput[]
    createMany?: ShipmentTrackingCreateManyShipmentInputEnvelope
    connect?: ShipmentTrackingWhereUniqueInput | ShipmentTrackingWhereUniqueInput[]
  }

  export type EnumShipmentStatusFieldUpdateOperationsInput = {
    set?: $Enums.ShipmentStatus
  }

  export type OrderUpdateOneWithoutShipmentsNestedInput = {
    create?: XOR<OrderCreateWithoutShipmentsInput, OrderUncheckedCreateWithoutShipmentsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutShipmentsInput
    upsert?: OrderUpsertWithoutShipmentsInput
    disconnect?: OrderWhereInput | boolean
    delete?: OrderWhereInput | boolean
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutShipmentsInput, OrderUpdateWithoutShipmentsInput>, OrderUncheckedUpdateWithoutShipmentsInput>
  }

  export type WarehouseUpdateOneRequiredWithoutShipmentsNestedInput = {
    create?: XOR<WarehouseCreateWithoutShipmentsInput, WarehouseUncheckedCreateWithoutShipmentsInput>
    connectOrCreate?: WarehouseCreateOrConnectWithoutShipmentsInput
    upsert?: WarehouseUpsertWithoutShipmentsInput
    connect?: WarehouseWhereUniqueInput
    update?: XOR<XOR<WarehouseUpdateToOneWithWhereWithoutShipmentsInput, WarehouseUpdateWithoutShipmentsInput>, WarehouseUncheckedUpdateWithoutShipmentsInput>
  }

  export type ShipmentPackageUpdateManyWithoutShipmentNestedInput = {
    create?: XOR<ShipmentPackageCreateWithoutShipmentInput, ShipmentPackageUncheckedCreateWithoutShipmentInput> | ShipmentPackageCreateWithoutShipmentInput[] | ShipmentPackageUncheckedCreateWithoutShipmentInput[]
    connectOrCreate?: ShipmentPackageCreateOrConnectWithoutShipmentInput | ShipmentPackageCreateOrConnectWithoutShipmentInput[]
    upsert?: ShipmentPackageUpsertWithWhereUniqueWithoutShipmentInput | ShipmentPackageUpsertWithWhereUniqueWithoutShipmentInput[]
    createMany?: ShipmentPackageCreateManyShipmentInputEnvelope
    set?: ShipmentPackageWhereUniqueInput | ShipmentPackageWhereUniqueInput[]
    disconnect?: ShipmentPackageWhereUniqueInput | ShipmentPackageWhereUniqueInput[]
    delete?: ShipmentPackageWhereUniqueInput | ShipmentPackageWhereUniqueInput[]
    connect?: ShipmentPackageWhereUniqueInput | ShipmentPackageWhereUniqueInput[]
    update?: ShipmentPackageUpdateWithWhereUniqueWithoutShipmentInput | ShipmentPackageUpdateWithWhereUniqueWithoutShipmentInput[]
    updateMany?: ShipmentPackageUpdateManyWithWhereWithoutShipmentInput | ShipmentPackageUpdateManyWithWhereWithoutShipmentInput[]
    deleteMany?: ShipmentPackageScalarWhereInput | ShipmentPackageScalarWhereInput[]
  }

  export type ShipmentTrackingUpdateManyWithoutShipmentNestedInput = {
    create?: XOR<ShipmentTrackingCreateWithoutShipmentInput, ShipmentTrackingUncheckedCreateWithoutShipmentInput> | ShipmentTrackingCreateWithoutShipmentInput[] | ShipmentTrackingUncheckedCreateWithoutShipmentInput[]
    connectOrCreate?: ShipmentTrackingCreateOrConnectWithoutShipmentInput | ShipmentTrackingCreateOrConnectWithoutShipmentInput[]
    upsert?: ShipmentTrackingUpsertWithWhereUniqueWithoutShipmentInput | ShipmentTrackingUpsertWithWhereUniqueWithoutShipmentInput[]
    createMany?: ShipmentTrackingCreateManyShipmentInputEnvelope
    set?: ShipmentTrackingWhereUniqueInput | ShipmentTrackingWhereUniqueInput[]
    disconnect?: ShipmentTrackingWhereUniqueInput | ShipmentTrackingWhereUniqueInput[]
    delete?: ShipmentTrackingWhereUniqueInput | ShipmentTrackingWhereUniqueInput[]
    connect?: ShipmentTrackingWhereUniqueInput | ShipmentTrackingWhereUniqueInput[]
    update?: ShipmentTrackingUpdateWithWhereUniqueWithoutShipmentInput | ShipmentTrackingUpdateWithWhereUniqueWithoutShipmentInput[]
    updateMany?: ShipmentTrackingUpdateManyWithWhereWithoutShipmentInput | ShipmentTrackingUpdateManyWithWhereWithoutShipmentInput[]
    deleteMany?: ShipmentTrackingScalarWhereInput | ShipmentTrackingScalarWhereInput[]
  }

  export type ShipmentPackageUncheckedUpdateManyWithoutShipmentNestedInput = {
    create?: XOR<ShipmentPackageCreateWithoutShipmentInput, ShipmentPackageUncheckedCreateWithoutShipmentInput> | ShipmentPackageCreateWithoutShipmentInput[] | ShipmentPackageUncheckedCreateWithoutShipmentInput[]
    connectOrCreate?: ShipmentPackageCreateOrConnectWithoutShipmentInput | ShipmentPackageCreateOrConnectWithoutShipmentInput[]
    upsert?: ShipmentPackageUpsertWithWhereUniqueWithoutShipmentInput | ShipmentPackageUpsertWithWhereUniqueWithoutShipmentInput[]
    createMany?: ShipmentPackageCreateManyShipmentInputEnvelope
    set?: ShipmentPackageWhereUniqueInput | ShipmentPackageWhereUniqueInput[]
    disconnect?: ShipmentPackageWhereUniqueInput | ShipmentPackageWhereUniqueInput[]
    delete?: ShipmentPackageWhereUniqueInput | ShipmentPackageWhereUniqueInput[]
    connect?: ShipmentPackageWhereUniqueInput | ShipmentPackageWhereUniqueInput[]
    update?: ShipmentPackageUpdateWithWhereUniqueWithoutShipmentInput | ShipmentPackageUpdateWithWhereUniqueWithoutShipmentInput[]
    updateMany?: ShipmentPackageUpdateManyWithWhereWithoutShipmentInput | ShipmentPackageUpdateManyWithWhereWithoutShipmentInput[]
    deleteMany?: ShipmentPackageScalarWhereInput | ShipmentPackageScalarWhereInput[]
  }

  export type ShipmentTrackingUncheckedUpdateManyWithoutShipmentNestedInput = {
    create?: XOR<ShipmentTrackingCreateWithoutShipmentInput, ShipmentTrackingUncheckedCreateWithoutShipmentInput> | ShipmentTrackingCreateWithoutShipmentInput[] | ShipmentTrackingUncheckedCreateWithoutShipmentInput[]
    connectOrCreate?: ShipmentTrackingCreateOrConnectWithoutShipmentInput | ShipmentTrackingCreateOrConnectWithoutShipmentInput[]
    upsert?: ShipmentTrackingUpsertWithWhereUniqueWithoutShipmentInput | ShipmentTrackingUpsertWithWhereUniqueWithoutShipmentInput[]
    createMany?: ShipmentTrackingCreateManyShipmentInputEnvelope
    set?: ShipmentTrackingWhereUniqueInput | ShipmentTrackingWhereUniqueInput[]
    disconnect?: ShipmentTrackingWhereUniqueInput | ShipmentTrackingWhereUniqueInput[]
    delete?: ShipmentTrackingWhereUniqueInput | ShipmentTrackingWhereUniqueInput[]
    connect?: ShipmentTrackingWhereUniqueInput | ShipmentTrackingWhereUniqueInput[]
    update?: ShipmentTrackingUpdateWithWhereUniqueWithoutShipmentInput | ShipmentTrackingUpdateWithWhereUniqueWithoutShipmentInput[]
    updateMany?: ShipmentTrackingUpdateManyWithWhereWithoutShipmentInput | ShipmentTrackingUpdateManyWithWhereWithoutShipmentInput[]
    deleteMany?: ShipmentTrackingScalarWhereInput | ShipmentTrackingScalarWhereInput[]
  }

  export type ShipmentCreateNestedOneWithoutPackagesInput = {
    create?: XOR<ShipmentCreateWithoutPackagesInput, ShipmentUncheckedCreateWithoutPackagesInput>
    connectOrCreate?: ShipmentCreateOrConnectWithoutPackagesInput
    connect?: ShipmentWhereUniqueInput
  }

  export type ShipmentUpdateOneRequiredWithoutPackagesNestedInput = {
    create?: XOR<ShipmentCreateWithoutPackagesInput, ShipmentUncheckedCreateWithoutPackagesInput>
    connectOrCreate?: ShipmentCreateOrConnectWithoutPackagesInput
    upsert?: ShipmentUpsertWithoutPackagesInput
    connect?: ShipmentWhereUniqueInput
    update?: XOR<XOR<ShipmentUpdateToOneWithWhereWithoutPackagesInput, ShipmentUpdateWithoutPackagesInput>, ShipmentUncheckedUpdateWithoutPackagesInput>
  }

  export type ShipmentCreateNestedOneWithoutTrackingInput = {
    create?: XOR<ShipmentCreateWithoutTrackingInput, ShipmentUncheckedCreateWithoutTrackingInput>
    connectOrCreate?: ShipmentCreateOrConnectWithoutTrackingInput
    connect?: ShipmentWhereUniqueInput
  }

  export type ShipmentUpdateOneRequiredWithoutTrackingNestedInput = {
    create?: XOR<ShipmentCreateWithoutTrackingInput, ShipmentUncheckedCreateWithoutTrackingInput>
    connectOrCreate?: ShipmentCreateOrConnectWithoutTrackingInput
    upsert?: ShipmentUpsertWithoutTrackingInput
    connect?: ShipmentWhereUniqueInput
    update?: XOR<XOR<ShipmentUpdateToOneWithWhereWithoutTrackingInput, ShipmentUpdateWithoutTrackingInput>, ShipmentUncheckedUpdateWithoutTrackingInput>
  }

  export type WarehouseCreateNestedOneWithoutTransfersInput = {
    create?: XOR<WarehouseCreateWithoutTransfersInput, WarehouseUncheckedCreateWithoutTransfersInput>
    connectOrCreate?: WarehouseCreateOrConnectWithoutTransfersInput
    connect?: WarehouseWhereUniqueInput
  }

  export type WarehouseCreateNestedOneWithoutReceivedTransfersInput = {
    create?: XOR<WarehouseCreateWithoutReceivedTransfersInput, WarehouseUncheckedCreateWithoutReceivedTransfersInput>
    connectOrCreate?: WarehouseCreateOrConnectWithoutReceivedTransfersInput
    connect?: WarehouseWhereUniqueInput
  }

  export type StockTransferItemCreateNestedManyWithoutTransferInput = {
    create?: XOR<StockTransferItemCreateWithoutTransferInput, StockTransferItemUncheckedCreateWithoutTransferInput> | StockTransferItemCreateWithoutTransferInput[] | StockTransferItemUncheckedCreateWithoutTransferInput[]
    connectOrCreate?: StockTransferItemCreateOrConnectWithoutTransferInput | StockTransferItemCreateOrConnectWithoutTransferInput[]
    createMany?: StockTransferItemCreateManyTransferInputEnvelope
    connect?: StockTransferItemWhereUniqueInput | StockTransferItemWhereUniqueInput[]
  }

  export type StockTransferItemUncheckedCreateNestedManyWithoutTransferInput = {
    create?: XOR<StockTransferItemCreateWithoutTransferInput, StockTransferItemUncheckedCreateWithoutTransferInput> | StockTransferItemCreateWithoutTransferInput[] | StockTransferItemUncheckedCreateWithoutTransferInput[]
    connectOrCreate?: StockTransferItemCreateOrConnectWithoutTransferInput | StockTransferItemCreateOrConnectWithoutTransferInput[]
    createMany?: StockTransferItemCreateManyTransferInputEnvelope
    connect?: StockTransferItemWhereUniqueInput | StockTransferItemWhereUniqueInput[]
  }

  export type EnumTransferStatusFieldUpdateOperationsInput = {
    set?: $Enums.TransferStatus
  }

  export type WarehouseUpdateOneRequiredWithoutTransfersNestedInput = {
    create?: XOR<WarehouseCreateWithoutTransfersInput, WarehouseUncheckedCreateWithoutTransfersInput>
    connectOrCreate?: WarehouseCreateOrConnectWithoutTransfersInput
    upsert?: WarehouseUpsertWithoutTransfersInput
    connect?: WarehouseWhereUniqueInput
    update?: XOR<XOR<WarehouseUpdateToOneWithWhereWithoutTransfersInput, WarehouseUpdateWithoutTransfersInput>, WarehouseUncheckedUpdateWithoutTransfersInput>
  }

  export type WarehouseUpdateOneRequiredWithoutReceivedTransfersNestedInput = {
    create?: XOR<WarehouseCreateWithoutReceivedTransfersInput, WarehouseUncheckedCreateWithoutReceivedTransfersInput>
    connectOrCreate?: WarehouseCreateOrConnectWithoutReceivedTransfersInput
    upsert?: WarehouseUpsertWithoutReceivedTransfersInput
    connect?: WarehouseWhereUniqueInput
    update?: XOR<XOR<WarehouseUpdateToOneWithWhereWithoutReceivedTransfersInput, WarehouseUpdateWithoutReceivedTransfersInput>, WarehouseUncheckedUpdateWithoutReceivedTransfersInput>
  }

  export type StockTransferItemUpdateManyWithoutTransferNestedInput = {
    create?: XOR<StockTransferItemCreateWithoutTransferInput, StockTransferItemUncheckedCreateWithoutTransferInput> | StockTransferItemCreateWithoutTransferInput[] | StockTransferItemUncheckedCreateWithoutTransferInput[]
    connectOrCreate?: StockTransferItemCreateOrConnectWithoutTransferInput | StockTransferItemCreateOrConnectWithoutTransferInput[]
    upsert?: StockTransferItemUpsertWithWhereUniqueWithoutTransferInput | StockTransferItemUpsertWithWhereUniqueWithoutTransferInput[]
    createMany?: StockTransferItemCreateManyTransferInputEnvelope
    set?: StockTransferItemWhereUniqueInput | StockTransferItemWhereUniqueInput[]
    disconnect?: StockTransferItemWhereUniqueInput | StockTransferItemWhereUniqueInput[]
    delete?: StockTransferItemWhereUniqueInput | StockTransferItemWhereUniqueInput[]
    connect?: StockTransferItemWhereUniqueInput | StockTransferItemWhereUniqueInput[]
    update?: StockTransferItemUpdateWithWhereUniqueWithoutTransferInput | StockTransferItemUpdateWithWhereUniqueWithoutTransferInput[]
    updateMany?: StockTransferItemUpdateManyWithWhereWithoutTransferInput | StockTransferItemUpdateManyWithWhereWithoutTransferInput[]
    deleteMany?: StockTransferItemScalarWhereInput | StockTransferItemScalarWhereInput[]
  }

  export type StockTransferItemUncheckedUpdateManyWithoutTransferNestedInput = {
    create?: XOR<StockTransferItemCreateWithoutTransferInput, StockTransferItemUncheckedCreateWithoutTransferInput> | StockTransferItemCreateWithoutTransferInput[] | StockTransferItemUncheckedCreateWithoutTransferInput[]
    connectOrCreate?: StockTransferItemCreateOrConnectWithoutTransferInput | StockTransferItemCreateOrConnectWithoutTransferInput[]
    upsert?: StockTransferItemUpsertWithWhereUniqueWithoutTransferInput | StockTransferItemUpsertWithWhereUniqueWithoutTransferInput[]
    createMany?: StockTransferItemCreateManyTransferInputEnvelope
    set?: StockTransferItemWhereUniqueInput | StockTransferItemWhereUniqueInput[]
    disconnect?: StockTransferItemWhereUniqueInput | StockTransferItemWhereUniqueInput[]
    delete?: StockTransferItemWhereUniqueInput | StockTransferItemWhereUniqueInput[]
    connect?: StockTransferItemWhereUniqueInput | StockTransferItemWhereUniqueInput[]
    update?: StockTransferItemUpdateWithWhereUniqueWithoutTransferInput | StockTransferItemUpdateWithWhereUniqueWithoutTransferInput[]
    updateMany?: StockTransferItemUpdateManyWithWhereWithoutTransferInput | StockTransferItemUpdateManyWithWhereWithoutTransferInput[]
    deleteMany?: StockTransferItemScalarWhereInput | StockTransferItemScalarWhereInput[]
  }

  export type StockTransferCreateNestedOneWithoutItemsInput = {
    create?: XOR<StockTransferCreateWithoutItemsInput, StockTransferUncheckedCreateWithoutItemsInput>
    connectOrCreate?: StockTransferCreateOrConnectWithoutItemsInput
    connect?: StockTransferWhereUniqueInput
  }

  export type ProductCreateNestedOneWithoutTransferItemsInput = {
    create?: XOR<ProductCreateWithoutTransferItemsInput, ProductUncheckedCreateWithoutTransferItemsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutTransferItemsInput
    connect?: ProductWhereUniqueInput
  }

  export type ProductVariantCreateNestedOneWithoutTransferItemsInput = {
    create?: XOR<ProductVariantCreateWithoutTransferItemsInput, ProductVariantUncheckedCreateWithoutTransferItemsInput>
    connectOrCreate?: ProductVariantCreateOrConnectWithoutTransferItemsInput
    connect?: ProductVariantWhereUniqueInput
  }

  export type EnumTransferItemStatusFieldUpdateOperationsInput = {
    set?: $Enums.TransferItemStatus
  }

  export type StockTransferUpdateOneRequiredWithoutItemsNestedInput = {
    create?: XOR<StockTransferCreateWithoutItemsInput, StockTransferUncheckedCreateWithoutItemsInput>
    connectOrCreate?: StockTransferCreateOrConnectWithoutItemsInput
    upsert?: StockTransferUpsertWithoutItemsInput
    connect?: StockTransferWhereUniqueInput
    update?: XOR<XOR<StockTransferUpdateToOneWithWhereWithoutItemsInput, StockTransferUpdateWithoutItemsInput>, StockTransferUncheckedUpdateWithoutItemsInput>
  }

  export type ProductUpdateOneRequiredWithoutTransferItemsNestedInput = {
    create?: XOR<ProductCreateWithoutTransferItemsInput, ProductUncheckedCreateWithoutTransferItemsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutTransferItemsInput
    upsert?: ProductUpsertWithoutTransferItemsInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutTransferItemsInput, ProductUpdateWithoutTransferItemsInput>, ProductUncheckedUpdateWithoutTransferItemsInput>
  }

  export type ProductVariantUpdateOneWithoutTransferItemsNestedInput = {
    create?: XOR<ProductVariantCreateWithoutTransferItemsInput, ProductVariantUncheckedCreateWithoutTransferItemsInput>
    connectOrCreate?: ProductVariantCreateOrConnectWithoutTransferItemsInput
    upsert?: ProductVariantUpsertWithoutTransferItemsInput
    disconnect?: ProductVariantWhereInput | boolean
    delete?: ProductVariantWhereInput | boolean
    connect?: ProductVariantWhereUniqueInput
    update?: XOR<XOR<ProductVariantUpdateToOneWithWhereWithoutTransferItemsInput, ProductVariantUpdateWithoutTransferItemsInput>, ProductVariantUncheckedUpdateWithoutTransferItemsInput>
  }

  export type InventoryItemCreateNestedOneWithoutReservationsInput = {
    create?: XOR<InventoryItemCreateWithoutReservationsInput, InventoryItemUncheckedCreateWithoutReservationsInput>
    connectOrCreate?: InventoryItemCreateOrConnectWithoutReservationsInput
    connect?: InventoryItemWhereUniqueInput
  }

  export type EnumReservationTypeFieldUpdateOperationsInput = {
    set?: $Enums.ReservationType
  }

  export type EnumReservationStatusFieldUpdateOperationsInput = {
    set?: $Enums.ReservationStatus
  }

  export type InventoryItemUpdateOneRequiredWithoutReservationsNestedInput = {
    create?: XOR<InventoryItemCreateWithoutReservationsInput, InventoryItemUncheckedCreateWithoutReservationsInput>
    connectOrCreate?: InventoryItemCreateOrConnectWithoutReservationsInput
    upsert?: InventoryItemUpsertWithoutReservationsInput
    connect?: InventoryItemWhereUniqueInput
    update?: XOR<XOR<InventoryItemUpdateToOneWithWhereWithoutReservationsInput, InventoryItemUpdateWithoutReservationsInput>, InventoryItemUncheckedUpdateWithoutReservationsInput>
  }

  export type SupplierCreateNestedOneWithoutInvoicesInput = {
    create?: XOR<SupplierCreateWithoutInvoicesInput, SupplierUncheckedCreateWithoutInvoicesInput>
    connectOrCreate?: SupplierCreateOrConnectWithoutInvoicesInput
    connect?: SupplierWhereUniqueInput
  }

  export type PurchaseOrderCreateNestedOneWithoutInvoicesInput = {
    create?: XOR<PurchaseOrderCreateWithoutInvoicesInput, PurchaseOrderUncheckedCreateWithoutInvoicesInput>
    connectOrCreate?: PurchaseOrderCreateOrConnectWithoutInvoicesInput
    connect?: PurchaseOrderWhereUniqueInput
  }

  export type EnumInvoiceStatusFieldUpdateOperationsInput = {
    set?: $Enums.InvoiceStatus
  }

  export type SupplierUpdateOneRequiredWithoutInvoicesNestedInput = {
    create?: XOR<SupplierCreateWithoutInvoicesInput, SupplierUncheckedCreateWithoutInvoicesInput>
    connectOrCreate?: SupplierCreateOrConnectWithoutInvoicesInput
    upsert?: SupplierUpsertWithoutInvoicesInput
    connect?: SupplierWhereUniqueInput
    update?: XOR<XOR<SupplierUpdateToOneWithWhereWithoutInvoicesInput, SupplierUpdateWithoutInvoicesInput>, SupplierUncheckedUpdateWithoutInvoicesInput>
  }

  export type PurchaseOrderUpdateOneWithoutInvoicesNestedInput = {
    create?: XOR<PurchaseOrderCreateWithoutInvoicesInput, PurchaseOrderUncheckedCreateWithoutInvoicesInput>
    connectOrCreate?: PurchaseOrderCreateOrConnectWithoutInvoicesInput
    upsert?: PurchaseOrderUpsertWithoutInvoicesInput
    disconnect?: PurchaseOrderWhereInput | boolean
    delete?: PurchaseOrderWhereInput | boolean
    connect?: PurchaseOrderWhereUniqueInput
    update?: XOR<XOR<PurchaseOrderUpdateToOneWithWhereWithoutInvoicesInput, PurchaseOrderUpdateWithoutInvoicesInput>, PurchaseOrderUncheckedUpdateWithoutInvoicesInput>
  }

  export type CustomerCreateNestedOneWithoutInvoicesInput = {
    create?: XOR<CustomerCreateWithoutInvoicesInput, CustomerUncheckedCreateWithoutInvoicesInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutInvoicesInput
    connect?: CustomerWhereUniqueInput
  }

  export type OrderCreateNestedOneWithoutInvoicesInput = {
    create?: XOR<OrderCreateWithoutInvoicesInput, OrderUncheckedCreateWithoutInvoicesInput>
    connectOrCreate?: OrderCreateOrConnectWithoutInvoicesInput
    connect?: OrderWhereUniqueInput
  }

  export type CustomerUpdateOneRequiredWithoutInvoicesNestedInput = {
    create?: XOR<CustomerCreateWithoutInvoicesInput, CustomerUncheckedCreateWithoutInvoicesInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutInvoicesInput
    upsert?: CustomerUpsertWithoutInvoicesInput
    connect?: CustomerWhereUniqueInput
    update?: XOR<XOR<CustomerUpdateToOneWithWhereWithoutInvoicesInput, CustomerUpdateWithoutInvoicesInput>, CustomerUncheckedUpdateWithoutInvoicesInput>
  }

  export type OrderUpdateOneWithoutInvoicesNestedInput = {
    create?: XOR<OrderCreateWithoutInvoicesInput, OrderUncheckedCreateWithoutInvoicesInput>
    connectOrCreate?: OrderCreateOrConnectWithoutInvoicesInput
    upsert?: OrderUpsertWithoutInvoicesInput
    disconnect?: OrderWhereInput | boolean
    delete?: OrderWhereInput | boolean
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutInvoicesInput, OrderUpdateWithoutInvoicesInput>, OrderUncheckedUpdateWithoutInvoicesInput>
  }

  export type WarehouseCreateNestedOneWithoutAuditsInput = {
    create?: XOR<WarehouseCreateWithoutAuditsInput, WarehouseUncheckedCreateWithoutAuditsInput>
    connectOrCreate?: WarehouseCreateOrConnectWithoutAuditsInput
    connect?: WarehouseWhereUniqueInput
  }

  export type ProductCreateNestedOneWithoutAuditsInput = {
    create?: XOR<ProductCreateWithoutAuditsInput, ProductUncheckedCreateWithoutAuditsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutAuditsInput
    connect?: ProductWhereUniqueInput
  }

  export type InventoryAuditItemCreateNestedManyWithoutAuditInput = {
    create?: XOR<InventoryAuditItemCreateWithoutAuditInput, InventoryAuditItemUncheckedCreateWithoutAuditInput> | InventoryAuditItemCreateWithoutAuditInput[] | InventoryAuditItemUncheckedCreateWithoutAuditInput[]
    connectOrCreate?: InventoryAuditItemCreateOrConnectWithoutAuditInput | InventoryAuditItemCreateOrConnectWithoutAuditInput[]
    createMany?: InventoryAuditItemCreateManyAuditInputEnvelope
    connect?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
  }

  export type InventoryAuditItemUncheckedCreateNestedManyWithoutAuditInput = {
    create?: XOR<InventoryAuditItemCreateWithoutAuditInput, InventoryAuditItemUncheckedCreateWithoutAuditInput> | InventoryAuditItemCreateWithoutAuditInput[] | InventoryAuditItemUncheckedCreateWithoutAuditInput[]
    connectOrCreate?: InventoryAuditItemCreateOrConnectWithoutAuditInput | InventoryAuditItemCreateOrConnectWithoutAuditInput[]
    createMany?: InventoryAuditItemCreateManyAuditInputEnvelope
    connect?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
  }

  export type EnumAuditTypeFieldUpdateOperationsInput = {
    set?: $Enums.AuditType
  }

  export type EnumAuditMethodFieldUpdateOperationsInput = {
    set?: $Enums.AuditMethod
  }

  export type EnumAuditStatusFieldUpdateOperationsInput = {
    set?: $Enums.AuditStatus
  }

  export type WarehouseUpdateOneWithoutAuditsNestedInput = {
    create?: XOR<WarehouseCreateWithoutAuditsInput, WarehouseUncheckedCreateWithoutAuditsInput>
    connectOrCreate?: WarehouseCreateOrConnectWithoutAuditsInput
    upsert?: WarehouseUpsertWithoutAuditsInput
    disconnect?: WarehouseWhereInput | boolean
    delete?: WarehouseWhereInput | boolean
    connect?: WarehouseWhereUniqueInput
    update?: XOR<XOR<WarehouseUpdateToOneWithWhereWithoutAuditsInput, WarehouseUpdateWithoutAuditsInput>, WarehouseUncheckedUpdateWithoutAuditsInput>
  }

  export type ProductUpdateOneWithoutAuditsNestedInput = {
    create?: XOR<ProductCreateWithoutAuditsInput, ProductUncheckedCreateWithoutAuditsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutAuditsInput
    upsert?: ProductUpsertWithoutAuditsInput
    disconnect?: ProductWhereInput | boolean
    delete?: ProductWhereInput | boolean
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutAuditsInput, ProductUpdateWithoutAuditsInput>, ProductUncheckedUpdateWithoutAuditsInput>
  }

  export type InventoryAuditItemUpdateManyWithoutAuditNestedInput = {
    create?: XOR<InventoryAuditItemCreateWithoutAuditInput, InventoryAuditItemUncheckedCreateWithoutAuditInput> | InventoryAuditItemCreateWithoutAuditInput[] | InventoryAuditItemUncheckedCreateWithoutAuditInput[]
    connectOrCreate?: InventoryAuditItemCreateOrConnectWithoutAuditInput | InventoryAuditItemCreateOrConnectWithoutAuditInput[]
    upsert?: InventoryAuditItemUpsertWithWhereUniqueWithoutAuditInput | InventoryAuditItemUpsertWithWhereUniqueWithoutAuditInput[]
    createMany?: InventoryAuditItemCreateManyAuditInputEnvelope
    set?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
    disconnect?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
    delete?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
    connect?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
    update?: InventoryAuditItemUpdateWithWhereUniqueWithoutAuditInput | InventoryAuditItemUpdateWithWhereUniqueWithoutAuditInput[]
    updateMany?: InventoryAuditItemUpdateManyWithWhereWithoutAuditInput | InventoryAuditItemUpdateManyWithWhereWithoutAuditInput[]
    deleteMany?: InventoryAuditItemScalarWhereInput | InventoryAuditItemScalarWhereInput[]
  }

  export type InventoryAuditItemUncheckedUpdateManyWithoutAuditNestedInput = {
    create?: XOR<InventoryAuditItemCreateWithoutAuditInput, InventoryAuditItemUncheckedCreateWithoutAuditInput> | InventoryAuditItemCreateWithoutAuditInput[] | InventoryAuditItemUncheckedCreateWithoutAuditInput[]
    connectOrCreate?: InventoryAuditItemCreateOrConnectWithoutAuditInput | InventoryAuditItemCreateOrConnectWithoutAuditInput[]
    upsert?: InventoryAuditItemUpsertWithWhereUniqueWithoutAuditInput | InventoryAuditItemUpsertWithWhereUniqueWithoutAuditInput[]
    createMany?: InventoryAuditItemCreateManyAuditInputEnvelope
    set?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
    disconnect?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
    delete?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
    connect?: InventoryAuditItemWhereUniqueInput | InventoryAuditItemWhereUniqueInput[]
    update?: InventoryAuditItemUpdateWithWhereUniqueWithoutAuditInput | InventoryAuditItemUpdateWithWhereUniqueWithoutAuditInput[]
    updateMany?: InventoryAuditItemUpdateManyWithWhereWithoutAuditInput | InventoryAuditItemUpdateManyWithWhereWithoutAuditInput[]
    deleteMany?: InventoryAuditItemScalarWhereInput | InventoryAuditItemScalarWhereInput[]
  }

  export type InventoryAuditCreateNestedOneWithoutItemsInput = {
    create?: XOR<InventoryAuditCreateWithoutItemsInput, InventoryAuditUncheckedCreateWithoutItemsInput>
    connectOrCreate?: InventoryAuditCreateOrConnectWithoutItemsInput
    connect?: InventoryAuditWhereUniqueInput
  }

  export type ProductCreateNestedOneWithoutAuditItemsInput = {
    create?: XOR<ProductCreateWithoutAuditItemsInput, ProductUncheckedCreateWithoutAuditItemsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutAuditItemsInput
    connect?: ProductWhereUniqueInput
  }

  export type ProductVariantCreateNestedOneWithoutAuditItemsInput = {
    create?: XOR<ProductVariantCreateWithoutAuditItemsInput, ProductVariantUncheckedCreateWithoutAuditItemsInput>
    connectOrCreate?: ProductVariantCreateOrConnectWithoutAuditItemsInput
    connect?: ProductVariantWhereUniqueInput
  }

  export type WarehouseCreateNestedOneWithoutAuditItemsInput = {
    create?: XOR<WarehouseCreateWithoutAuditItemsInput, WarehouseUncheckedCreateWithoutAuditItemsInput>
    connectOrCreate?: WarehouseCreateOrConnectWithoutAuditItemsInput
    connect?: WarehouseWhereUniqueInput
  }

  export type EnumAuditItemStatusFieldUpdateOperationsInput = {
    set?: $Enums.AuditItemStatus
  }

  export type InventoryAuditUpdateOneRequiredWithoutItemsNestedInput = {
    create?: XOR<InventoryAuditCreateWithoutItemsInput, InventoryAuditUncheckedCreateWithoutItemsInput>
    connectOrCreate?: InventoryAuditCreateOrConnectWithoutItemsInput
    upsert?: InventoryAuditUpsertWithoutItemsInput
    connect?: InventoryAuditWhereUniqueInput
    update?: XOR<XOR<InventoryAuditUpdateToOneWithWhereWithoutItemsInput, InventoryAuditUpdateWithoutItemsInput>, InventoryAuditUncheckedUpdateWithoutItemsInput>
  }

  export type ProductUpdateOneRequiredWithoutAuditItemsNestedInput = {
    create?: XOR<ProductCreateWithoutAuditItemsInput, ProductUncheckedCreateWithoutAuditItemsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutAuditItemsInput
    upsert?: ProductUpsertWithoutAuditItemsInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutAuditItemsInput, ProductUpdateWithoutAuditItemsInput>, ProductUncheckedUpdateWithoutAuditItemsInput>
  }

  export type ProductVariantUpdateOneWithoutAuditItemsNestedInput = {
    create?: XOR<ProductVariantCreateWithoutAuditItemsInput, ProductVariantUncheckedCreateWithoutAuditItemsInput>
    connectOrCreate?: ProductVariantCreateOrConnectWithoutAuditItemsInput
    upsert?: ProductVariantUpsertWithoutAuditItemsInput
    disconnect?: ProductVariantWhereInput | boolean
    delete?: ProductVariantWhereInput | boolean
    connect?: ProductVariantWhereUniqueInput
    update?: XOR<XOR<ProductVariantUpdateToOneWithWhereWithoutAuditItemsInput, ProductVariantUpdateWithoutAuditItemsInput>, ProductVariantUncheckedUpdateWithoutAuditItemsInput>
  }

  export type WarehouseUpdateOneRequiredWithoutAuditItemsNestedInput = {
    create?: XOR<WarehouseCreateWithoutAuditItemsInput, WarehouseUncheckedCreateWithoutAuditItemsInput>
    connectOrCreate?: WarehouseCreateOrConnectWithoutAuditItemsInput
    upsert?: WarehouseUpsertWithoutAuditItemsInput
    connect?: WarehouseWhereUniqueInput
    update?: XOR<XOR<WarehouseUpdateToOneWithWhereWithoutAuditItemsInput, WarehouseUpdateWithoutAuditItemsInput>, WarehouseUncheckedUpdateWithoutAuditItemsInput>
  }

  export type ProductCreateNestedOneWithoutReviewsInput = {
    create?: XOR<ProductCreateWithoutReviewsInput, ProductUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutReviewsInput
    connect?: ProductWhereUniqueInput
  }

  export type ProductUpdateOneRequiredWithoutReviewsNestedInput = {
    create?: XOR<ProductCreateWithoutReviewsInput, ProductUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutReviewsInput
    upsert?: ProductUpsertWithoutReviewsInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutReviewsInput, ProductUpdateWithoutReviewsInput>, ProductUncheckedUpdateWithoutReviewsInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumProductStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductStatus | EnumProductStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ProductStatus[] | ListEnumProductStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductStatus[] | ListEnumProductStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumProductStatusFilter<$PrismaModel> | $Enums.ProductStatus
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumProductStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductStatus | EnumProductStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ProductStatus[] | ListEnumProductStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductStatus[] | ListEnumProductStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumProductStatusWithAggregatesFilter<$PrismaModel> | $Enums.ProductStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProductStatusFilter<$PrismaModel>
    _max?: NestedEnumProductStatusFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }
  export type NestedJsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedEnumWarehouseTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.WarehouseType | EnumWarehouseTypeFieldRefInput<$PrismaModel>
    in?: $Enums.WarehouseType[] | ListEnumWarehouseTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.WarehouseType[] | ListEnumWarehouseTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumWarehouseTypeFilter<$PrismaModel> | $Enums.WarehouseType
  }

  export type NestedEnumWarehouseTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.WarehouseType | EnumWarehouseTypeFieldRefInput<$PrismaModel>
    in?: $Enums.WarehouseType[] | ListEnumWarehouseTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.WarehouseType[] | ListEnumWarehouseTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumWarehouseTypeWithAggregatesFilter<$PrismaModel> | $Enums.WarehouseType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumWarehouseTypeFilter<$PrismaModel>
    _max?: NestedEnumWarehouseTypeFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedEnumInventoryStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.InventoryStatus | EnumInventoryStatusFieldRefInput<$PrismaModel>
    in?: $Enums.InventoryStatus[] | ListEnumInventoryStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.InventoryStatus[] | ListEnumInventoryStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumInventoryStatusFilter<$PrismaModel> | $Enums.InventoryStatus
  }

  export type NestedEnumQualityStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.QualityStatus | EnumQualityStatusFieldRefInput<$PrismaModel>
    in?: $Enums.QualityStatus[] | ListEnumQualityStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.QualityStatus[] | ListEnumQualityStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumQualityStatusFilter<$PrismaModel> | $Enums.QualityStatus
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnumInventoryStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.InventoryStatus | EnumInventoryStatusFieldRefInput<$PrismaModel>
    in?: $Enums.InventoryStatus[] | ListEnumInventoryStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.InventoryStatus[] | ListEnumInventoryStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumInventoryStatusWithAggregatesFilter<$PrismaModel> | $Enums.InventoryStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumInventoryStatusFilter<$PrismaModel>
    _max?: NestedEnumInventoryStatusFilter<$PrismaModel>
  }

  export type NestedEnumQualityStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.QualityStatus | EnumQualityStatusFieldRefInput<$PrismaModel>
    in?: $Enums.QualityStatus[] | ListEnumQualityStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.QualityStatus[] | ListEnumQualityStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumQualityStatusWithAggregatesFilter<$PrismaModel> | $Enums.QualityStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumQualityStatusFilter<$PrismaModel>
    _max?: NestedEnumQualityStatusFilter<$PrismaModel>
  }

  export type NestedEnumMovementTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.MovementType | EnumMovementTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MovementType[] | ListEnumMovementTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.MovementType[] | ListEnumMovementTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumMovementTypeFilter<$PrismaModel> | $Enums.MovementType
  }

  export type NestedEnumMovementTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MovementType | EnumMovementTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MovementType[] | ListEnumMovementTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.MovementType[] | ListEnumMovementTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumMovementTypeWithAggregatesFilter<$PrismaModel> | $Enums.MovementType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMovementTypeFilter<$PrismaModel>
    _max?: NestedEnumMovementTypeFilter<$PrismaModel>
  }

  export type NestedEnumCompanyTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.CompanyType | EnumCompanyTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.CompanyType[] | ListEnumCompanyTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.CompanyType[] | ListEnumCompanyTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumCompanyTypeNullableFilter<$PrismaModel> | $Enums.CompanyType | null
  }

  export type NestedEnumSupplierStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.SupplierStatus | EnumSupplierStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SupplierStatus[] | ListEnumSupplierStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SupplierStatus[] | ListEnumSupplierStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSupplierStatusFilter<$PrismaModel> | $Enums.SupplierStatus
  }

  export type NestedEnumCompanyTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CompanyType | EnumCompanyTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.CompanyType[] | ListEnumCompanyTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.CompanyType[] | ListEnumCompanyTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumCompanyTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.CompanyType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumCompanyTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumCompanyTypeNullableFilter<$PrismaModel>
  }

  export type NestedEnumSupplierStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SupplierStatus | EnumSupplierStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SupplierStatus[] | ListEnumSupplierStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SupplierStatus[] | ListEnumSupplierStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSupplierStatusWithAggregatesFilter<$PrismaModel> | $Enums.SupplierStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSupplierStatusFilter<$PrismaModel>
    _max?: NestedEnumSupplierStatusFilter<$PrismaModel>
  }

  export type NestedEnumDocumentTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.DocumentType | EnumDocumentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDocumentTypeFilter<$PrismaModel> | $Enums.DocumentType
  }

  export type NestedEnumDocumentTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DocumentType | EnumDocumentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDocumentTypeWithAggregatesFilter<$PrismaModel> | $Enums.DocumentType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDocumentTypeFilter<$PrismaModel>
    _max?: NestedEnumDocumentTypeFilter<$PrismaModel>
  }

  export type NestedEnumPurchaseOrderStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PurchaseOrderStatus | EnumPurchaseOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PurchaseOrderStatus[] | ListEnumPurchaseOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PurchaseOrderStatus[] | ListEnumPurchaseOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPurchaseOrderStatusFilter<$PrismaModel> | $Enums.PurchaseOrderStatus
  }

  export type NestedEnumPurchaseOrderStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PurchaseOrderStatus | EnumPurchaseOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PurchaseOrderStatus[] | ListEnumPurchaseOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PurchaseOrderStatus[] | ListEnumPurchaseOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPurchaseOrderStatusWithAggregatesFilter<$PrismaModel> | $Enums.PurchaseOrderStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPurchaseOrderStatusFilter<$PrismaModel>
    _max?: NestedEnumPurchaseOrderStatusFilter<$PrismaModel>
  }

  export type NestedEnumPurchaseItemStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PurchaseItemStatus | EnumPurchaseItemStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PurchaseItemStatus[] | ListEnumPurchaseItemStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PurchaseItemStatus[] | ListEnumPurchaseItemStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPurchaseItemStatusFilter<$PrismaModel> | $Enums.PurchaseItemStatus
  }

  export type NestedEnumPurchaseItemStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PurchaseItemStatus | EnumPurchaseItemStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PurchaseItemStatus[] | ListEnumPurchaseItemStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PurchaseItemStatus[] | ListEnumPurchaseItemStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPurchaseItemStatusWithAggregatesFilter<$PrismaModel> | $Enums.PurchaseItemStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPurchaseItemStatusFilter<$PrismaModel>
    _max?: NestedEnumPurchaseItemStatusFilter<$PrismaModel>
  }

  export type NestedEnumReceiptStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ReceiptStatus | EnumReceiptStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ReceiptStatus[] | ListEnumReceiptStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReceiptStatus[] | ListEnumReceiptStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumReceiptStatusFilter<$PrismaModel> | $Enums.ReceiptStatus
  }

  export type NestedEnumReceiptStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReceiptStatus | EnumReceiptStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ReceiptStatus[] | ListEnumReceiptStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReceiptStatus[] | ListEnumReceiptStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumReceiptStatusWithAggregatesFilter<$PrismaModel> | $Enums.ReceiptStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReceiptStatusFilter<$PrismaModel>
    _max?: NestedEnumReceiptStatusFilter<$PrismaModel>
  }

  export type NestedEnumCustomerTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.CustomerType | EnumCustomerTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CustomerType[] | ListEnumCustomerTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.CustomerType[] | ListEnumCustomerTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumCustomerTypeFilter<$PrismaModel> | $Enums.CustomerType
  }

  export type NestedEnumCustomerStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.CustomerStatus | EnumCustomerStatusFieldRefInput<$PrismaModel>
    in?: $Enums.CustomerStatus[] | ListEnumCustomerStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.CustomerStatus[] | ListEnumCustomerStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumCustomerStatusFilter<$PrismaModel> | $Enums.CustomerStatus
  }

  export type NestedEnumCustomerTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CustomerType | EnumCustomerTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CustomerType[] | ListEnumCustomerTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.CustomerType[] | ListEnumCustomerTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumCustomerTypeWithAggregatesFilter<$PrismaModel> | $Enums.CustomerType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCustomerTypeFilter<$PrismaModel>
    _max?: NestedEnumCustomerTypeFilter<$PrismaModel>
  }

  export type NestedEnumCustomerStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CustomerStatus | EnumCustomerStatusFieldRefInput<$PrismaModel>
    in?: $Enums.CustomerStatus[] | ListEnumCustomerStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.CustomerStatus[] | ListEnumCustomerStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumCustomerStatusWithAggregatesFilter<$PrismaModel> | $Enums.CustomerStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCustomerStatusFilter<$PrismaModel>
    _max?: NestedEnumCustomerStatusFilter<$PrismaModel>
  }

  export type NestedEnumOrderTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderType | EnumOrderTypeFieldRefInput<$PrismaModel>
    in?: $Enums.OrderType[] | ListEnumOrderTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderType[] | ListEnumOrderTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderTypeFilter<$PrismaModel> | $Enums.OrderType
  }

  export type NestedEnumOrderChannelFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderChannel | EnumOrderChannelFieldRefInput<$PrismaModel>
    in?: $Enums.OrderChannel[] | ListEnumOrderChannelFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderChannel[] | ListEnumOrderChannelFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderChannelFilter<$PrismaModel> | $Enums.OrderChannel
  }

  export type NestedEnumOrderStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusFilter<$PrismaModel> | $Enums.OrderStatus
  }

  export type NestedEnumFulfillmentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.FulfillmentStatus | EnumFulfillmentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.FulfillmentStatus[] | ListEnumFulfillmentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.FulfillmentStatus[] | ListEnumFulfillmentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumFulfillmentStatusFilter<$PrismaModel> | $Enums.FulfillmentStatus
  }

  export type NestedEnumPaymentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusFilter<$PrismaModel> | $Enums.PaymentStatus
  }

  export type NestedEnumOrderPriorityFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderPriority | EnumOrderPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.OrderPriority[] | ListEnumOrderPriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderPriority[] | ListEnumOrderPriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderPriorityFilter<$PrismaModel> | $Enums.OrderPriority
  }

  export type NestedEnumOrderTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderType | EnumOrderTypeFieldRefInput<$PrismaModel>
    in?: $Enums.OrderType[] | ListEnumOrderTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderType[] | ListEnumOrderTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderTypeWithAggregatesFilter<$PrismaModel> | $Enums.OrderType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderTypeFilter<$PrismaModel>
    _max?: NestedEnumOrderTypeFilter<$PrismaModel>
  }

  export type NestedEnumOrderChannelWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderChannel | EnumOrderChannelFieldRefInput<$PrismaModel>
    in?: $Enums.OrderChannel[] | ListEnumOrderChannelFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderChannel[] | ListEnumOrderChannelFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderChannelWithAggregatesFilter<$PrismaModel> | $Enums.OrderChannel
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderChannelFilter<$PrismaModel>
    _max?: NestedEnumOrderChannelFilter<$PrismaModel>
  }

  export type NestedEnumOrderStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusWithAggregatesFilter<$PrismaModel> | $Enums.OrderStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderStatusFilter<$PrismaModel>
    _max?: NestedEnumOrderStatusFilter<$PrismaModel>
  }

  export type NestedEnumFulfillmentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.FulfillmentStatus | EnumFulfillmentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.FulfillmentStatus[] | ListEnumFulfillmentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.FulfillmentStatus[] | ListEnumFulfillmentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumFulfillmentStatusWithAggregatesFilter<$PrismaModel> | $Enums.FulfillmentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumFulfillmentStatusFilter<$PrismaModel>
    _max?: NestedEnumFulfillmentStatusFilter<$PrismaModel>
  }

  export type NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel> | $Enums.PaymentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentStatusFilter<$PrismaModel>
    _max?: NestedEnumPaymentStatusFilter<$PrismaModel>
  }

  export type NestedEnumOrderPriorityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderPriority | EnumOrderPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.OrderPriority[] | ListEnumOrderPriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderPriority[] | ListEnumOrderPriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderPriorityWithAggregatesFilter<$PrismaModel> | $Enums.OrderPriority
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderPriorityFilter<$PrismaModel>
    _max?: NestedEnumOrderPriorityFilter<$PrismaModel>
  }

  export type NestedEnumOrderItemStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderItemStatus | EnumOrderItemStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderItemStatus[] | ListEnumOrderItemStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderItemStatus[] | ListEnumOrderItemStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderItemStatusFilter<$PrismaModel> | $Enums.OrderItemStatus
  }

  export type NestedEnumOrderItemStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderItemStatus | EnumOrderItemStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderItemStatus[] | ListEnumOrderItemStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderItemStatus[] | ListEnumOrderItemStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderItemStatusWithAggregatesFilter<$PrismaModel> | $Enums.OrderItemStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderItemStatusFilter<$PrismaModel>
    _max?: NestedEnumOrderItemStatusFilter<$PrismaModel>
  }

  export type NestedEnumShipmentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ShipmentStatus | EnumShipmentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ShipmentStatus[] | ListEnumShipmentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ShipmentStatus[] | ListEnumShipmentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumShipmentStatusFilter<$PrismaModel> | $Enums.ShipmentStatus
  }

  export type NestedEnumShipmentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ShipmentStatus | EnumShipmentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ShipmentStatus[] | ListEnumShipmentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ShipmentStatus[] | ListEnumShipmentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumShipmentStatusWithAggregatesFilter<$PrismaModel> | $Enums.ShipmentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumShipmentStatusFilter<$PrismaModel>
    _max?: NestedEnumShipmentStatusFilter<$PrismaModel>
  }

  export type NestedEnumTransferStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.TransferStatus | EnumTransferStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TransferStatus[] | ListEnumTransferStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransferStatus[] | ListEnumTransferStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTransferStatusFilter<$PrismaModel> | $Enums.TransferStatus
  }

  export type NestedEnumTransferStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TransferStatus | EnumTransferStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TransferStatus[] | ListEnumTransferStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransferStatus[] | ListEnumTransferStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTransferStatusWithAggregatesFilter<$PrismaModel> | $Enums.TransferStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTransferStatusFilter<$PrismaModel>
    _max?: NestedEnumTransferStatusFilter<$PrismaModel>
  }

  export type NestedEnumTransferItemStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.TransferItemStatus | EnumTransferItemStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TransferItemStatus[] | ListEnumTransferItemStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransferItemStatus[] | ListEnumTransferItemStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTransferItemStatusFilter<$PrismaModel> | $Enums.TransferItemStatus
  }

  export type NestedEnumTransferItemStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TransferItemStatus | EnumTransferItemStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TransferItemStatus[] | ListEnumTransferItemStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransferItemStatus[] | ListEnumTransferItemStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTransferItemStatusWithAggregatesFilter<$PrismaModel> | $Enums.TransferItemStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTransferItemStatusFilter<$PrismaModel>
    _max?: NestedEnumTransferItemStatusFilter<$PrismaModel>
  }

  export type NestedEnumReservationTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ReservationType | EnumReservationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ReservationType[] | ListEnumReservationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReservationType[] | ListEnumReservationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumReservationTypeFilter<$PrismaModel> | $Enums.ReservationType
  }

  export type NestedEnumReservationStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ReservationStatus | EnumReservationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ReservationStatus[] | ListEnumReservationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReservationStatus[] | ListEnumReservationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumReservationStatusFilter<$PrismaModel> | $Enums.ReservationStatus
  }

  export type NestedEnumReservationTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReservationType | EnumReservationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ReservationType[] | ListEnumReservationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReservationType[] | ListEnumReservationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumReservationTypeWithAggregatesFilter<$PrismaModel> | $Enums.ReservationType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReservationTypeFilter<$PrismaModel>
    _max?: NestedEnumReservationTypeFilter<$PrismaModel>
  }

  export type NestedEnumReservationStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReservationStatus | EnumReservationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ReservationStatus[] | ListEnumReservationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReservationStatus[] | ListEnumReservationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumReservationStatusWithAggregatesFilter<$PrismaModel> | $Enums.ReservationStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReservationStatusFilter<$PrismaModel>
    _max?: NestedEnumReservationStatusFilter<$PrismaModel>
  }

  export type NestedEnumInvoiceStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.InvoiceStatus | EnumInvoiceStatusFieldRefInput<$PrismaModel>
    in?: $Enums.InvoiceStatus[] | ListEnumInvoiceStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.InvoiceStatus[] | ListEnumInvoiceStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumInvoiceStatusFilter<$PrismaModel> | $Enums.InvoiceStatus
  }

  export type NestedEnumInvoiceStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.InvoiceStatus | EnumInvoiceStatusFieldRefInput<$PrismaModel>
    in?: $Enums.InvoiceStatus[] | ListEnumInvoiceStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.InvoiceStatus[] | ListEnumInvoiceStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumInvoiceStatusWithAggregatesFilter<$PrismaModel> | $Enums.InvoiceStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumInvoiceStatusFilter<$PrismaModel>
    _max?: NestedEnumInvoiceStatusFilter<$PrismaModel>
  }

  export type NestedEnumAuditTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditType | EnumAuditTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AuditType[] | ListEnumAuditTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditType[] | ListEnumAuditTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditTypeFilter<$PrismaModel> | $Enums.AuditType
  }

  export type NestedEnumAuditMethodFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditMethod | EnumAuditMethodFieldRefInput<$PrismaModel>
    in?: $Enums.AuditMethod[] | ListEnumAuditMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditMethod[] | ListEnumAuditMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditMethodFilter<$PrismaModel> | $Enums.AuditMethod
  }

  export type NestedEnumAuditStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditStatus | EnumAuditStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AuditStatus[] | ListEnumAuditStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditStatus[] | ListEnumAuditStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditStatusFilter<$PrismaModel> | $Enums.AuditStatus
  }

  export type NestedEnumAuditTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditType | EnumAuditTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AuditType[] | ListEnumAuditTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditType[] | ListEnumAuditTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditTypeWithAggregatesFilter<$PrismaModel> | $Enums.AuditType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAuditTypeFilter<$PrismaModel>
    _max?: NestedEnumAuditTypeFilter<$PrismaModel>
  }

  export type NestedEnumAuditMethodWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditMethod | EnumAuditMethodFieldRefInput<$PrismaModel>
    in?: $Enums.AuditMethod[] | ListEnumAuditMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditMethod[] | ListEnumAuditMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditMethodWithAggregatesFilter<$PrismaModel> | $Enums.AuditMethod
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAuditMethodFilter<$PrismaModel>
    _max?: NestedEnumAuditMethodFilter<$PrismaModel>
  }

  export type NestedEnumAuditStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditStatus | EnumAuditStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AuditStatus[] | ListEnumAuditStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditStatus[] | ListEnumAuditStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditStatusWithAggregatesFilter<$PrismaModel> | $Enums.AuditStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAuditStatusFilter<$PrismaModel>
    _max?: NestedEnumAuditStatusFilter<$PrismaModel>
  }

  export type NestedEnumAuditItemStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditItemStatus | EnumAuditItemStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AuditItemStatus[] | ListEnumAuditItemStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditItemStatus[] | ListEnumAuditItemStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditItemStatusFilter<$PrismaModel> | $Enums.AuditItemStatus
  }

  export type NestedEnumAuditItemStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditItemStatus | EnumAuditItemStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AuditItemStatus[] | ListEnumAuditItemStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditItemStatus[] | ListEnumAuditItemStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditItemStatusWithAggregatesFilter<$PrismaModel> | $Enums.AuditItemStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAuditItemStatusFilter<$PrismaModel>
    _max?: NestedEnumAuditItemStatusFilter<$PrismaModel>
  }

  export type CategoryCreateWithoutProductsInput = {
    id?: string
    name: string
    description?: string | null
    slug: string
    level?: number
    path?: string | null
    icon?: string | null
    color?: string | null
    image?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    parent?: CategoryCreateNestedOneWithoutChildrenInput
    children?: CategoryCreateNestedManyWithoutParentInput
  }

  export type CategoryUncheckedCreateWithoutProductsInput = {
    id?: string
    name: string
    description?: string | null
    slug: string
    parentId?: string | null
    level?: number
    path?: string | null
    icon?: string | null
    color?: string | null
    image?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    children?: CategoryUncheckedCreateNestedManyWithoutParentInput
  }

  export type CategoryCreateOrConnectWithoutProductsInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutProductsInput, CategoryUncheckedCreateWithoutProductsInput>
  }

  export type BrandCreateWithoutProductsInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    website?: string | null
    contactEmail?: string | null
    contactPhone?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BrandUncheckedCreateWithoutProductsInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    website?: string | null
    contactEmail?: string | null
    contactPhone?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BrandCreateOrConnectWithoutProductsInput = {
    where: BrandWhereUniqueInput
    create: XOR<BrandCreateWithoutProductsInput, BrandUncheckedCreateWithoutProductsInput>
  }

  export type InventoryItemCreateWithoutProductInput = {
    id?: string
    zone?: string | null
    aisle?: string | null
    shelf?: string | null
    bin?: string | null
    locationCode?: string | null
    quantity?: number
    reservedQuantity?: number
    availableQuantity?: number
    averageCost?: Decimal | DecimalJsLike | number | string | null
    lastCost?: Decimal | DecimalJsLike | number | string | null
    lotNumber?: string | null
    batchNumber?: string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    expiryDate?: Date | string | null
    status?: $Enums.InventoryStatus
    qcStatus?: $Enums.QualityStatus
    quarantineReason?: string | null
    lastMovement?: Date | string | null
    lastCount?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    variant?: ProductVariantCreateNestedOneWithoutInventoryItemsInput
    warehouse: WarehouseCreateNestedOneWithoutInventoryItemsInput
    movements?: InventoryMovementCreateNestedManyWithoutInventoryItemInput
    reservations?: StockReservationCreateNestedManyWithoutInventoryItemInput
  }

  export type InventoryItemUncheckedCreateWithoutProductInput = {
    id?: string
    variantId?: string | null
    warehouseId: string
    zone?: string | null
    aisle?: string | null
    shelf?: string | null
    bin?: string | null
    locationCode?: string | null
    quantity?: number
    reservedQuantity?: number
    availableQuantity?: number
    averageCost?: Decimal | DecimalJsLike | number | string | null
    lastCost?: Decimal | DecimalJsLike | number | string | null
    lotNumber?: string | null
    batchNumber?: string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    expiryDate?: Date | string | null
    status?: $Enums.InventoryStatus
    qcStatus?: $Enums.QualityStatus
    quarantineReason?: string | null
    lastMovement?: Date | string | null
    lastCount?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutInventoryItemInput
    reservations?: StockReservationUncheckedCreateNestedManyWithoutInventoryItemInput
  }

  export type InventoryItemCreateOrConnectWithoutProductInput = {
    where: InventoryItemWhereUniqueInput
    create: XOR<InventoryItemCreateWithoutProductInput, InventoryItemUncheckedCreateWithoutProductInput>
  }

  export type InventoryItemCreateManyProductInputEnvelope = {
    data: InventoryItemCreateManyProductInput | InventoryItemCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type ProductVariantCreateWithoutProductInput = {
    id?: string
    name: string
    sku: string
    barcode?: string | null
    attributes: JsonNullValueInput | InputJsonValue
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number | null
    reorderPoint?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    inventoryItems?: InventoryItemCreateNestedManyWithoutVariantInput
    movements?: InventoryMovementCreateNestedManyWithoutVariantInput
    purchaseItems?: PurchaseOrderItemCreateNestedManyWithoutVariantInput
    goodsReceiptItems?: GoodsReceiptItemCreateNestedManyWithoutVariantInput
    orderItems?: OrderItemCreateNestedManyWithoutVariantInput
    transferItems?: StockTransferItemCreateNestedManyWithoutVariantInput
    auditItems?: InventoryAuditItemCreateNestedManyWithoutVariantInput
  }

  export type ProductVariantUncheckedCreateWithoutProductInput = {
    id?: string
    name: string
    sku: string
    barcode?: string | null
    attributes: JsonNullValueInput | InputJsonValue
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number | null
    reorderPoint?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    inventoryItems?: InventoryItemUncheckedCreateNestedManyWithoutVariantInput
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutVariantInput
    purchaseItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutVariantInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedCreateNestedManyWithoutVariantInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutVariantInput
    transferItems?: StockTransferItemUncheckedCreateNestedManyWithoutVariantInput
    auditItems?: InventoryAuditItemUncheckedCreateNestedManyWithoutVariantInput
  }

  export type ProductVariantCreateOrConnectWithoutProductInput = {
    where: ProductVariantWhereUniqueInput
    create: XOR<ProductVariantCreateWithoutProductInput, ProductVariantUncheckedCreateWithoutProductInput>
  }

  export type ProductVariantCreateManyProductInputEnvelope = {
    data: ProductVariantCreateManyProductInput | ProductVariantCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type ProductSupplierCreateWithoutProductInput = {
    id?: string
    supplierSku?: string | null
    supplierName?: string | null
    unitCost: Decimal | DecimalJsLike | number | string
    currency?: string
    minOrderQty?: number | null
    maxOrderQty?: number | null
    leadTimeDays?: number | null
    isPreferred?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    supplier: SupplierCreateNestedOneWithoutProductsInput
  }

  export type ProductSupplierUncheckedCreateWithoutProductInput = {
    id?: string
    supplierId: string
    supplierSku?: string | null
    supplierName?: string | null
    unitCost: Decimal | DecimalJsLike | number | string
    currency?: string
    minOrderQty?: number | null
    maxOrderQty?: number | null
    leadTimeDays?: number | null
    isPreferred?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductSupplierCreateOrConnectWithoutProductInput = {
    where: ProductSupplierWhereUniqueInput
    create: XOR<ProductSupplierCreateWithoutProductInput, ProductSupplierUncheckedCreateWithoutProductInput>
  }

  export type ProductSupplierCreateManyProductInputEnvelope = {
    data: ProductSupplierCreateManyProductInput | ProductSupplierCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type OrderItemCreateWithoutProductInput = {
    id?: string
    orderedQty: number
    shippedQty?: number
    remainingQty: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    productName: string
    productSku: string
    status?: $Enums.OrderItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    order: OrderCreateNestedOneWithoutItemsInput
    variant?: ProductVariantCreateNestedOneWithoutOrderItemsInput
  }

  export type OrderItemUncheckedCreateWithoutProductInput = {
    id?: string
    orderId: string
    variantId?: string | null
    orderedQty: number
    shippedQty?: number
    remainingQty: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    productName: string
    productSku: string
    status?: $Enums.OrderItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderItemCreateOrConnectWithoutProductInput = {
    where: OrderItemWhereUniqueInput
    create: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput>
  }

  export type OrderItemCreateManyProductInputEnvelope = {
    data: OrderItemCreateManyProductInput | OrderItemCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type PurchaseOrderItemCreateWithoutProductInput = {
    id?: string
    orderedQty: number
    receivedQty?: number
    remainingQty: number
    unitCost: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    productName: string
    productSku: string
    supplierSku?: string | null
    expectedDate?: Date | string | null
    status?: $Enums.PurchaseItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    purchaseOrder: PurchaseOrderCreateNestedOneWithoutItemsInput
    variant?: ProductVariantCreateNestedOneWithoutPurchaseItemsInput
  }

  export type PurchaseOrderItemUncheckedCreateWithoutProductInput = {
    id?: string
    purchaseOrderId: string
    variantId?: string | null
    orderedQty: number
    receivedQty?: number
    remainingQty: number
    unitCost: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    productName: string
    productSku: string
    supplierSku?: string | null
    expectedDate?: Date | string | null
    status?: $Enums.PurchaseItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PurchaseOrderItemCreateOrConnectWithoutProductInput = {
    where: PurchaseOrderItemWhereUniqueInput
    create: XOR<PurchaseOrderItemCreateWithoutProductInput, PurchaseOrderItemUncheckedCreateWithoutProductInput>
  }

  export type PurchaseOrderItemCreateManyProductInputEnvelope = {
    data: PurchaseOrderItemCreateManyProductInput | PurchaseOrderItemCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type InventoryMovementCreateWithoutProductInput = {
    id?: string
    type: $Enums.MovementType
    subtype?: string | null
    quantity: number
    quantityBefore: number
    quantityAfter: number
    unitCost?: Decimal | DecimalJsLike | number | string | null
    totalCost?: Decimal | DecimalJsLike | number | string | null
    referenceType?: string | null
    referenceId?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    expiryDate?: Date | string | null
    reason?: string | null
    notes?: string | null
    userId: string
    approvedBy?: string | null
    approvedAt?: Date | string | null
    occurredAt?: Date | string
    createdAt?: Date | string
    variant?: ProductVariantCreateNestedOneWithoutMovementsInput
    warehouse: WarehouseCreateNestedOneWithoutMovementsInput
    inventoryItem?: InventoryItemCreateNestedOneWithoutMovementsInput
  }

  export type InventoryMovementUncheckedCreateWithoutProductInput = {
    id?: string
    type: $Enums.MovementType
    subtype?: string | null
    variantId?: string | null
    warehouseId: string
    inventoryItemId?: string | null
    quantity: number
    quantityBefore: number
    quantityAfter: number
    unitCost?: Decimal | DecimalJsLike | number | string | null
    totalCost?: Decimal | DecimalJsLike | number | string | null
    referenceType?: string | null
    referenceId?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    expiryDate?: Date | string | null
    reason?: string | null
    notes?: string | null
    userId: string
    approvedBy?: string | null
    approvedAt?: Date | string | null
    occurredAt?: Date | string
    createdAt?: Date | string
  }

  export type InventoryMovementCreateOrConnectWithoutProductInput = {
    where: InventoryMovementWhereUniqueInput
    create: XOR<InventoryMovementCreateWithoutProductInput, InventoryMovementUncheckedCreateWithoutProductInput>
  }

  export type InventoryMovementCreateManyProductInputEnvelope = {
    data: InventoryMovementCreateManyProductInput | InventoryMovementCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type InventoryAuditCreateWithoutProductInput = {
    id?: string
    auditNumber: string
    type: $Enums.AuditType
    method?: $Enums.AuditMethod
    status?: $Enums.AuditStatus
    plannedDate: Date | string
    startedDate?: Date | string | null
    completedDate?: Date | string | null
    auditedBy: string
    supervisedBy?: string | null
    totalItems?: number | null
    itemsCounted?: number | null
    discrepancies?: number | null
    adjustmentValue?: Decimal | DecimalJsLike | number | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    warehouse?: WarehouseCreateNestedOneWithoutAuditsInput
    items?: InventoryAuditItemCreateNestedManyWithoutAuditInput
  }

  export type InventoryAuditUncheckedCreateWithoutProductInput = {
    id?: string
    auditNumber: string
    warehouseId?: string | null
    type: $Enums.AuditType
    method?: $Enums.AuditMethod
    status?: $Enums.AuditStatus
    plannedDate: Date | string
    startedDate?: Date | string | null
    completedDate?: Date | string | null
    auditedBy: string
    supervisedBy?: string | null
    totalItems?: number | null
    itemsCounted?: number | null
    discrepancies?: number | null
    adjustmentValue?: Decimal | DecimalJsLike | number | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    items?: InventoryAuditItemUncheckedCreateNestedManyWithoutAuditInput
  }

  export type InventoryAuditCreateOrConnectWithoutProductInput = {
    where: InventoryAuditWhereUniqueInput
    create: XOR<InventoryAuditCreateWithoutProductInput, InventoryAuditUncheckedCreateWithoutProductInput>
  }

  export type InventoryAuditCreateManyProductInputEnvelope = {
    data: InventoryAuditCreateManyProductInput | InventoryAuditCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type ProductReviewCreateWithoutProductInput = {
    id?: string
    rating: number
    title?: string | null
    review?: string | null
    reviewerName?: string | null
    reviewerEmail?: string | null
    isApproved?: boolean
    isVisible?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductReviewUncheckedCreateWithoutProductInput = {
    id?: string
    rating: number
    title?: string | null
    review?: string | null
    reviewerName?: string | null
    reviewerEmail?: string | null
    isApproved?: boolean
    isVisible?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductReviewCreateOrConnectWithoutProductInput = {
    where: ProductReviewWhereUniqueInput
    create: XOR<ProductReviewCreateWithoutProductInput, ProductReviewUncheckedCreateWithoutProductInput>
  }

  export type ProductReviewCreateManyProductInputEnvelope = {
    data: ProductReviewCreateManyProductInput | ProductReviewCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type ProductBundleCreateWithoutProductsInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    bundlePrice: Decimal | DecimalJsLike | number | string
    discount?: Decimal | DecimalJsLike | number | string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    bundleItems?: ProductCreateNestedManyWithoutBundleItemsInput
  }

  export type ProductBundleUncheckedCreateWithoutProductsInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    bundlePrice: Decimal | DecimalJsLike | number | string
    discount?: Decimal | DecimalJsLike | number | string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    bundleItems?: ProductUncheckedCreateNestedManyWithoutBundleItemsInput
  }

  export type ProductBundleCreateOrConnectWithoutProductsInput = {
    where: ProductBundleWhereUniqueInput
    create: XOR<ProductBundleCreateWithoutProductsInput, ProductBundleUncheckedCreateWithoutProductsInput>
  }

  export type ProductBundleCreateWithoutBundleItemsInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    bundlePrice: Decimal | DecimalJsLike | number | string
    discount?: Decimal | DecimalJsLike | number | string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    products?: ProductCreateNestedManyWithoutBundlesInput
  }

  export type ProductBundleUncheckedCreateWithoutBundleItemsInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    bundlePrice: Decimal | DecimalJsLike | number | string
    discount?: Decimal | DecimalJsLike | number | string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    products?: ProductUncheckedCreateNestedManyWithoutBundlesInput
  }

  export type ProductBundleCreateOrConnectWithoutBundleItemsInput = {
    where: ProductBundleWhereUniqueInput
    create: XOR<ProductBundleCreateWithoutBundleItemsInput, ProductBundleUncheckedCreateWithoutBundleItemsInput>
  }

  export type GoodsReceiptItemCreateWithoutProductInput = {
    id?: string
    expectedQty: number
    receivedQty: number
    acceptedQty: number
    rejectedQty: number
    qcStatus?: $Enums.QualityStatus
    qcNotes?: string | null
    rejectionReason?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    expiryDate?: Date | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    receivedLocation?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    goodsReceipt: GoodsReceiptCreateNestedOneWithoutItemsInput
    variant?: ProductVariantCreateNestedOneWithoutGoodsReceiptItemsInput
  }

  export type GoodsReceiptItemUncheckedCreateWithoutProductInput = {
    id?: string
    goodsReceiptId: string
    variantId?: string | null
    expectedQty: number
    receivedQty: number
    acceptedQty: number
    rejectedQty: number
    qcStatus?: $Enums.QualityStatus
    qcNotes?: string | null
    rejectionReason?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    expiryDate?: Date | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    receivedLocation?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type GoodsReceiptItemCreateOrConnectWithoutProductInput = {
    where: GoodsReceiptItemWhereUniqueInput
    create: XOR<GoodsReceiptItemCreateWithoutProductInput, GoodsReceiptItemUncheckedCreateWithoutProductInput>
  }

  export type GoodsReceiptItemCreateManyProductInputEnvelope = {
    data: GoodsReceiptItemCreateManyProductInput | GoodsReceiptItemCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type StockTransferItemCreateWithoutProductInput = {
    id?: string
    requestedQty: number
    shippedQty?: number
    receivedQty?: number
    productName: string
    productSku: string
    lotNumber?: string | null
    batchNumber?: string | null
    status?: $Enums.TransferItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    transfer: StockTransferCreateNestedOneWithoutItemsInput
    variant?: ProductVariantCreateNestedOneWithoutTransferItemsInput
  }

  export type StockTransferItemUncheckedCreateWithoutProductInput = {
    id?: string
    transferId: string
    variantId?: string | null
    requestedQty: number
    shippedQty?: number
    receivedQty?: number
    productName: string
    productSku: string
    lotNumber?: string | null
    batchNumber?: string | null
    status?: $Enums.TransferItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type StockTransferItemCreateOrConnectWithoutProductInput = {
    where: StockTransferItemWhereUniqueInput
    create: XOR<StockTransferItemCreateWithoutProductInput, StockTransferItemUncheckedCreateWithoutProductInput>
  }

  export type StockTransferItemCreateManyProductInputEnvelope = {
    data: StockTransferItemCreateManyProductInput | StockTransferItemCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type InventoryAuditItemCreateWithoutProductInput = {
    id?: string
    systemQty: number
    countedQty?: number | null
    adjustmentQty?: number | null
    location?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    countedBy?: string | null
    countedAt?: Date | string | null
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    status?: $Enums.AuditItemStatus
    discrepancyReason?: string | null
    requiresInvestigation?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    audit: InventoryAuditCreateNestedOneWithoutItemsInput
    variant?: ProductVariantCreateNestedOneWithoutAuditItemsInput
    warehouse: WarehouseCreateNestedOneWithoutAuditItemsInput
  }

  export type InventoryAuditItemUncheckedCreateWithoutProductInput = {
    id?: string
    auditId: string
    variantId?: string | null
    warehouseId: string
    systemQty: number
    countedQty?: number | null
    adjustmentQty?: number | null
    location?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    countedBy?: string | null
    countedAt?: Date | string | null
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    status?: $Enums.AuditItemStatus
    discrepancyReason?: string | null
    requiresInvestigation?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InventoryAuditItemCreateOrConnectWithoutProductInput = {
    where: InventoryAuditItemWhereUniqueInput
    create: XOR<InventoryAuditItemCreateWithoutProductInput, InventoryAuditItemUncheckedCreateWithoutProductInput>
  }

  export type InventoryAuditItemCreateManyProductInputEnvelope = {
    data: InventoryAuditItemCreateManyProductInput | InventoryAuditItemCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type CategoryUpsertWithoutProductsInput = {
    update: XOR<CategoryUpdateWithoutProductsInput, CategoryUncheckedUpdateWithoutProductsInput>
    create: XOR<CategoryCreateWithoutProductsInput, CategoryUncheckedCreateWithoutProductsInput>
    where?: CategoryWhereInput
  }

  export type CategoryUpdateToOneWithWhereWithoutProductsInput = {
    where?: CategoryWhereInput
    data: XOR<CategoryUpdateWithoutProductsInput, CategoryUncheckedUpdateWithoutProductsInput>
  }

  export type CategoryUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    path?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parent?: CategoryUpdateOneWithoutChildrenNestedInput
    children?: CategoryUpdateManyWithoutParentNestedInput
  }

  export type CategoryUncheckedUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    level?: IntFieldUpdateOperationsInput | number
    path?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    children?: CategoryUncheckedUpdateManyWithoutParentNestedInput
  }

  export type BrandUpsertWithoutProductsInput = {
    update: XOR<BrandUpdateWithoutProductsInput, BrandUncheckedUpdateWithoutProductsInput>
    create: XOR<BrandCreateWithoutProductsInput, BrandUncheckedCreateWithoutProductsInput>
    where?: BrandWhereInput
  }

  export type BrandUpdateToOneWithWhereWithoutProductsInput = {
    where?: BrandWhereInput
    data: XOR<BrandUpdateWithoutProductsInput, BrandUncheckedUpdateWithoutProductsInput>
  }

  export type BrandUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BrandUncheckedUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryItemUpsertWithWhereUniqueWithoutProductInput = {
    where: InventoryItemWhereUniqueInput
    update: XOR<InventoryItemUpdateWithoutProductInput, InventoryItemUncheckedUpdateWithoutProductInput>
    create: XOR<InventoryItemCreateWithoutProductInput, InventoryItemUncheckedCreateWithoutProductInput>
  }

  export type InventoryItemUpdateWithWhereUniqueWithoutProductInput = {
    where: InventoryItemWhereUniqueInput
    data: XOR<InventoryItemUpdateWithoutProductInput, InventoryItemUncheckedUpdateWithoutProductInput>
  }

  export type InventoryItemUpdateManyWithWhereWithoutProductInput = {
    where: InventoryItemScalarWhereInput
    data: XOR<InventoryItemUpdateManyMutationInput, InventoryItemUncheckedUpdateManyWithoutProductInput>
  }

  export type InventoryItemScalarWhereInput = {
    AND?: InventoryItemScalarWhereInput | InventoryItemScalarWhereInput[]
    OR?: InventoryItemScalarWhereInput[]
    NOT?: InventoryItemScalarWhereInput | InventoryItemScalarWhereInput[]
    id?: StringFilter<"InventoryItem"> | string
    productId?: StringFilter<"InventoryItem"> | string
    variantId?: StringNullableFilter<"InventoryItem"> | string | null
    warehouseId?: StringFilter<"InventoryItem"> | string
    zone?: StringNullableFilter<"InventoryItem"> | string | null
    aisle?: StringNullableFilter<"InventoryItem"> | string | null
    shelf?: StringNullableFilter<"InventoryItem"> | string | null
    bin?: StringNullableFilter<"InventoryItem"> | string | null
    locationCode?: StringNullableFilter<"InventoryItem"> | string | null
    quantity?: IntFilter<"InventoryItem"> | number
    reservedQuantity?: IntFilter<"InventoryItem"> | number
    availableQuantity?: IntFilter<"InventoryItem"> | number
    averageCost?: DecimalNullableFilter<"InventoryItem"> | Decimal | DecimalJsLike | number | string | null
    lastCost?: DecimalNullableFilter<"InventoryItem"> | Decimal | DecimalJsLike | number | string | null
    lotNumber?: StringNullableFilter<"InventoryItem"> | string | null
    batchNumber?: StringNullableFilter<"InventoryItem"> | string | null
    serialNumbers?: JsonNullableFilter<"InventoryItem">
    expiryDate?: DateTimeNullableFilter<"InventoryItem"> | Date | string | null
    status?: EnumInventoryStatusFilter<"InventoryItem"> | $Enums.InventoryStatus
    qcStatus?: EnumQualityStatusFilter<"InventoryItem"> | $Enums.QualityStatus
    quarantineReason?: StringNullableFilter<"InventoryItem"> | string | null
    lastMovement?: DateTimeNullableFilter<"InventoryItem"> | Date | string | null
    lastCount?: DateTimeNullableFilter<"InventoryItem"> | Date | string | null
    createdAt?: DateTimeFilter<"InventoryItem"> | Date | string
    updatedAt?: DateTimeFilter<"InventoryItem"> | Date | string
  }

  export type ProductVariantUpsertWithWhereUniqueWithoutProductInput = {
    where: ProductVariantWhereUniqueInput
    update: XOR<ProductVariantUpdateWithoutProductInput, ProductVariantUncheckedUpdateWithoutProductInput>
    create: XOR<ProductVariantCreateWithoutProductInput, ProductVariantUncheckedCreateWithoutProductInput>
  }

  export type ProductVariantUpdateWithWhereUniqueWithoutProductInput = {
    where: ProductVariantWhereUniqueInput
    data: XOR<ProductVariantUpdateWithoutProductInput, ProductVariantUncheckedUpdateWithoutProductInput>
  }

  export type ProductVariantUpdateManyWithWhereWithoutProductInput = {
    where: ProductVariantScalarWhereInput
    data: XOR<ProductVariantUpdateManyMutationInput, ProductVariantUncheckedUpdateManyWithoutProductInput>
  }

  export type ProductVariantScalarWhereInput = {
    AND?: ProductVariantScalarWhereInput | ProductVariantScalarWhereInput[]
    OR?: ProductVariantScalarWhereInput[]
    NOT?: ProductVariantScalarWhereInput | ProductVariantScalarWhereInput[]
    id?: StringFilter<"ProductVariant"> | string
    productId?: StringFilter<"ProductVariant"> | string
    name?: StringFilter<"ProductVariant"> | string
    sku?: StringFilter<"ProductVariant"> | string
    barcode?: StringNullableFilter<"ProductVariant"> | string | null
    attributes?: JsonFilter<"ProductVariant">
    costPrice?: DecimalNullableFilter<"ProductVariant"> | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: DecimalNullableFilter<"ProductVariant"> | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntNullableFilter<"ProductVariant"> | number | null
    reorderPoint?: IntNullableFilter<"ProductVariant"> | number | null
    isActive?: BoolFilter<"ProductVariant"> | boolean
    createdAt?: DateTimeFilter<"ProductVariant"> | Date | string
    updatedAt?: DateTimeFilter<"ProductVariant"> | Date | string
  }

  export type ProductSupplierUpsertWithWhereUniqueWithoutProductInput = {
    where: ProductSupplierWhereUniqueInput
    update: XOR<ProductSupplierUpdateWithoutProductInput, ProductSupplierUncheckedUpdateWithoutProductInput>
    create: XOR<ProductSupplierCreateWithoutProductInput, ProductSupplierUncheckedCreateWithoutProductInput>
  }

  export type ProductSupplierUpdateWithWhereUniqueWithoutProductInput = {
    where: ProductSupplierWhereUniqueInput
    data: XOR<ProductSupplierUpdateWithoutProductInput, ProductSupplierUncheckedUpdateWithoutProductInput>
  }

  export type ProductSupplierUpdateManyWithWhereWithoutProductInput = {
    where: ProductSupplierScalarWhereInput
    data: XOR<ProductSupplierUpdateManyMutationInput, ProductSupplierUncheckedUpdateManyWithoutProductInput>
  }

  export type ProductSupplierScalarWhereInput = {
    AND?: ProductSupplierScalarWhereInput | ProductSupplierScalarWhereInput[]
    OR?: ProductSupplierScalarWhereInput[]
    NOT?: ProductSupplierScalarWhereInput | ProductSupplierScalarWhereInput[]
    id?: StringFilter<"ProductSupplier"> | string
    productId?: StringFilter<"ProductSupplier"> | string
    supplierId?: StringFilter<"ProductSupplier"> | string
    supplierSku?: StringNullableFilter<"ProductSupplier"> | string | null
    supplierName?: StringNullableFilter<"ProductSupplier"> | string | null
    unitCost?: DecimalFilter<"ProductSupplier"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"ProductSupplier"> | string
    minOrderQty?: IntNullableFilter<"ProductSupplier"> | number | null
    maxOrderQty?: IntNullableFilter<"ProductSupplier"> | number | null
    leadTimeDays?: IntNullableFilter<"ProductSupplier"> | number | null
    isPreferred?: BoolFilter<"ProductSupplier"> | boolean
    isActive?: BoolFilter<"ProductSupplier"> | boolean
    createdAt?: DateTimeFilter<"ProductSupplier"> | Date | string
    updatedAt?: DateTimeFilter<"ProductSupplier"> | Date | string
  }

  export type OrderItemUpsertWithWhereUniqueWithoutProductInput = {
    where: OrderItemWhereUniqueInput
    update: XOR<OrderItemUpdateWithoutProductInput, OrderItemUncheckedUpdateWithoutProductInput>
    create: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput>
  }

  export type OrderItemUpdateWithWhereUniqueWithoutProductInput = {
    where: OrderItemWhereUniqueInput
    data: XOR<OrderItemUpdateWithoutProductInput, OrderItemUncheckedUpdateWithoutProductInput>
  }

  export type OrderItemUpdateManyWithWhereWithoutProductInput = {
    where: OrderItemScalarWhereInput
    data: XOR<OrderItemUpdateManyMutationInput, OrderItemUncheckedUpdateManyWithoutProductInput>
  }

  export type OrderItemScalarWhereInput = {
    AND?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
    OR?: OrderItemScalarWhereInput[]
    NOT?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
    id?: StringFilter<"OrderItem"> | string
    orderId?: StringFilter<"OrderItem"> | string
    productId?: StringFilter<"OrderItem"> | string
    variantId?: StringNullableFilter<"OrderItem"> | string | null
    orderedQty?: IntFilter<"OrderItem"> | number
    shippedQty?: IntFilter<"OrderItem"> | number
    remainingQty?: IntFilter<"OrderItem"> | number
    unitPrice?: DecimalFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    productName?: StringFilter<"OrderItem"> | string
    productSku?: StringFilter<"OrderItem"> | string
    status?: EnumOrderItemStatusFilter<"OrderItem"> | $Enums.OrderItemStatus
    notes?: StringNullableFilter<"OrderItem"> | string | null
    createdAt?: DateTimeFilter<"OrderItem"> | Date | string
    updatedAt?: DateTimeFilter<"OrderItem"> | Date | string
  }

  export type PurchaseOrderItemUpsertWithWhereUniqueWithoutProductInput = {
    where: PurchaseOrderItemWhereUniqueInput
    update: XOR<PurchaseOrderItemUpdateWithoutProductInput, PurchaseOrderItemUncheckedUpdateWithoutProductInput>
    create: XOR<PurchaseOrderItemCreateWithoutProductInput, PurchaseOrderItemUncheckedCreateWithoutProductInput>
  }

  export type PurchaseOrderItemUpdateWithWhereUniqueWithoutProductInput = {
    where: PurchaseOrderItemWhereUniqueInput
    data: XOR<PurchaseOrderItemUpdateWithoutProductInput, PurchaseOrderItemUncheckedUpdateWithoutProductInput>
  }

  export type PurchaseOrderItemUpdateManyWithWhereWithoutProductInput = {
    where: PurchaseOrderItemScalarWhereInput
    data: XOR<PurchaseOrderItemUpdateManyMutationInput, PurchaseOrderItemUncheckedUpdateManyWithoutProductInput>
  }

  export type PurchaseOrderItemScalarWhereInput = {
    AND?: PurchaseOrderItemScalarWhereInput | PurchaseOrderItemScalarWhereInput[]
    OR?: PurchaseOrderItemScalarWhereInput[]
    NOT?: PurchaseOrderItemScalarWhereInput | PurchaseOrderItemScalarWhereInput[]
    id?: StringFilter<"PurchaseOrderItem"> | string
    purchaseOrderId?: StringFilter<"PurchaseOrderItem"> | string
    productId?: StringFilter<"PurchaseOrderItem"> | string
    variantId?: StringNullableFilter<"PurchaseOrderItem"> | string | null
    orderedQty?: IntFilter<"PurchaseOrderItem"> | number
    receivedQty?: IntFilter<"PurchaseOrderItem"> | number
    remainingQty?: IntFilter<"PurchaseOrderItem"> | number
    unitCost?: DecimalFilter<"PurchaseOrderItem"> | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFilter<"PurchaseOrderItem"> | Decimal | DecimalJsLike | number | string
    productName?: StringFilter<"PurchaseOrderItem"> | string
    productSku?: StringFilter<"PurchaseOrderItem"> | string
    supplierSku?: StringNullableFilter<"PurchaseOrderItem"> | string | null
    expectedDate?: DateTimeNullableFilter<"PurchaseOrderItem"> | Date | string | null
    status?: EnumPurchaseItemStatusFilter<"PurchaseOrderItem"> | $Enums.PurchaseItemStatus
    notes?: StringNullableFilter<"PurchaseOrderItem"> | string | null
    createdAt?: DateTimeFilter<"PurchaseOrderItem"> | Date | string
    updatedAt?: DateTimeFilter<"PurchaseOrderItem"> | Date | string
  }

  export type InventoryMovementUpsertWithWhereUniqueWithoutProductInput = {
    where: InventoryMovementWhereUniqueInput
    update: XOR<InventoryMovementUpdateWithoutProductInput, InventoryMovementUncheckedUpdateWithoutProductInput>
    create: XOR<InventoryMovementCreateWithoutProductInput, InventoryMovementUncheckedCreateWithoutProductInput>
  }

  export type InventoryMovementUpdateWithWhereUniqueWithoutProductInput = {
    where: InventoryMovementWhereUniqueInput
    data: XOR<InventoryMovementUpdateWithoutProductInput, InventoryMovementUncheckedUpdateWithoutProductInput>
  }

  export type InventoryMovementUpdateManyWithWhereWithoutProductInput = {
    where: InventoryMovementScalarWhereInput
    data: XOR<InventoryMovementUpdateManyMutationInput, InventoryMovementUncheckedUpdateManyWithoutProductInput>
  }

  export type InventoryMovementScalarWhereInput = {
    AND?: InventoryMovementScalarWhereInput | InventoryMovementScalarWhereInput[]
    OR?: InventoryMovementScalarWhereInput[]
    NOT?: InventoryMovementScalarWhereInput | InventoryMovementScalarWhereInput[]
    id?: StringFilter<"InventoryMovement"> | string
    type?: EnumMovementTypeFilter<"InventoryMovement"> | $Enums.MovementType
    subtype?: StringNullableFilter<"InventoryMovement"> | string | null
    productId?: StringFilter<"InventoryMovement"> | string
    variantId?: StringNullableFilter<"InventoryMovement"> | string | null
    warehouseId?: StringFilter<"InventoryMovement"> | string
    inventoryItemId?: StringNullableFilter<"InventoryMovement"> | string | null
    quantity?: IntFilter<"InventoryMovement"> | number
    quantityBefore?: IntFilter<"InventoryMovement"> | number
    quantityAfter?: IntFilter<"InventoryMovement"> | number
    unitCost?: DecimalNullableFilter<"InventoryMovement"> | Decimal | DecimalJsLike | number | string | null
    totalCost?: DecimalNullableFilter<"InventoryMovement"> | Decimal | DecimalJsLike | number | string | null
    referenceType?: StringNullableFilter<"InventoryMovement"> | string | null
    referenceId?: StringNullableFilter<"InventoryMovement"> | string | null
    fromLocation?: StringNullableFilter<"InventoryMovement"> | string | null
    toLocation?: StringNullableFilter<"InventoryMovement"> | string | null
    lotNumber?: StringNullableFilter<"InventoryMovement"> | string | null
    batchNumber?: StringNullableFilter<"InventoryMovement"> | string | null
    expiryDate?: DateTimeNullableFilter<"InventoryMovement"> | Date | string | null
    reason?: StringNullableFilter<"InventoryMovement"> | string | null
    notes?: StringNullableFilter<"InventoryMovement"> | string | null
    userId?: StringFilter<"InventoryMovement"> | string
    approvedBy?: StringNullableFilter<"InventoryMovement"> | string | null
    approvedAt?: DateTimeNullableFilter<"InventoryMovement"> | Date | string | null
    occurredAt?: DateTimeFilter<"InventoryMovement"> | Date | string
    createdAt?: DateTimeFilter<"InventoryMovement"> | Date | string
  }

  export type InventoryAuditUpsertWithWhereUniqueWithoutProductInput = {
    where: InventoryAuditWhereUniqueInput
    update: XOR<InventoryAuditUpdateWithoutProductInput, InventoryAuditUncheckedUpdateWithoutProductInput>
    create: XOR<InventoryAuditCreateWithoutProductInput, InventoryAuditUncheckedCreateWithoutProductInput>
  }

  export type InventoryAuditUpdateWithWhereUniqueWithoutProductInput = {
    where: InventoryAuditWhereUniqueInput
    data: XOR<InventoryAuditUpdateWithoutProductInput, InventoryAuditUncheckedUpdateWithoutProductInput>
  }

  export type InventoryAuditUpdateManyWithWhereWithoutProductInput = {
    where: InventoryAuditScalarWhereInput
    data: XOR<InventoryAuditUpdateManyMutationInput, InventoryAuditUncheckedUpdateManyWithoutProductInput>
  }

  export type InventoryAuditScalarWhereInput = {
    AND?: InventoryAuditScalarWhereInput | InventoryAuditScalarWhereInput[]
    OR?: InventoryAuditScalarWhereInput[]
    NOT?: InventoryAuditScalarWhereInput | InventoryAuditScalarWhereInput[]
    id?: StringFilter<"InventoryAudit"> | string
    auditNumber?: StringFilter<"InventoryAudit"> | string
    warehouseId?: StringNullableFilter<"InventoryAudit"> | string | null
    productId?: StringNullableFilter<"InventoryAudit"> | string | null
    type?: EnumAuditTypeFilter<"InventoryAudit"> | $Enums.AuditType
    method?: EnumAuditMethodFilter<"InventoryAudit"> | $Enums.AuditMethod
    status?: EnumAuditStatusFilter<"InventoryAudit"> | $Enums.AuditStatus
    plannedDate?: DateTimeFilter<"InventoryAudit"> | Date | string
    startedDate?: DateTimeNullableFilter<"InventoryAudit"> | Date | string | null
    completedDate?: DateTimeNullableFilter<"InventoryAudit"> | Date | string | null
    auditedBy?: StringFilter<"InventoryAudit"> | string
    supervisedBy?: StringNullableFilter<"InventoryAudit"> | string | null
    totalItems?: IntNullableFilter<"InventoryAudit"> | number | null
    itemsCounted?: IntNullableFilter<"InventoryAudit"> | number | null
    discrepancies?: IntNullableFilter<"InventoryAudit"> | number | null
    adjustmentValue?: DecimalNullableFilter<"InventoryAudit"> | Decimal | DecimalJsLike | number | string | null
    notes?: StringNullableFilter<"InventoryAudit"> | string | null
    createdAt?: DateTimeFilter<"InventoryAudit"> | Date | string
    updatedAt?: DateTimeFilter<"InventoryAudit"> | Date | string
  }

  export type ProductReviewUpsertWithWhereUniqueWithoutProductInput = {
    where: ProductReviewWhereUniqueInput
    update: XOR<ProductReviewUpdateWithoutProductInput, ProductReviewUncheckedUpdateWithoutProductInput>
    create: XOR<ProductReviewCreateWithoutProductInput, ProductReviewUncheckedCreateWithoutProductInput>
  }

  export type ProductReviewUpdateWithWhereUniqueWithoutProductInput = {
    where: ProductReviewWhereUniqueInput
    data: XOR<ProductReviewUpdateWithoutProductInput, ProductReviewUncheckedUpdateWithoutProductInput>
  }

  export type ProductReviewUpdateManyWithWhereWithoutProductInput = {
    where: ProductReviewScalarWhereInput
    data: XOR<ProductReviewUpdateManyMutationInput, ProductReviewUncheckedUpdateManyWithoutProductInput>
  }

  export type ProductReviewScalarWhereInput = {
    AND?: ProductReviewScalarWhereInput | ProductReviewScalarWhereInput[]
    OR?: ProductReviewScalarWhereInput[]
    NOT?: ProductReviewScalarWhereInput | ProductReviewScalarWhereInput[]
    id?: StringFilter<"ProductReview"> | string
    productId?: StringFilter<"ProductReview"> | string
    rating?: IntFilter<"ProductReview"> | number
    title?: StringNullableFilter<"ProductReview"> | string | null
    review?: StringNullableFilter<"ProductReview"> | string | null
    reviewerName?: StringNullableFilter<"ProductReview"> | string | null
    reviewerEmail?: StringNullableFilter<"ProductReview"> | string | null
    isApproved?: BoolFilter<"ProductReview"> | boolean
    isVisible?: BoolFilter<"ProductReview"> | boolean
    createdAt?: DateTimeFilter<"ProductReview"> | Date | string
    updatedAt?: DateTimeFilter<"ProductReview"> | Date | string
  }

  export type ProductBundleUpsertWithWhereUniqueWithoutProductsInput = {
    where: ProductBundleWhereUniqueInput
    update: XOR<ProductBundleUpdateWithoutProductsInput, ProductBundleUncheckedUpdateWithoutProductsInput>
    create: XOR<ProductBundleCreateWithoutProductsInput, ProductBundleUncheckedCreateWithoutProductsInput>
  }

  export type ProductBundleUpdateWithWhereUniqueWithoutProductsInput = {
    where: ProductBundleWhereUniqueInput
    data: XOR<ProductBundleUpdateWithoutProductsInput, ProductBundleUncheckedUpdateWithoutProductsInput>
  }

  export type ProductBundleUpdateManyWithWhereWithoutProductsInput = {
    where: ProductBundleScalarWhereInput
    data: XOR<ProductBundleUpdateManyMutationInput, ProductBundleUncheckedUpdateManyWithoutProductsInput>
  }

  export type ProductBundleScalarWhereInput = {
    AND?: ProductBundleScalarWhereInput | ProductBundleScalarWhereInput[]
    OR?: ProductBundleScalarWhereInput[]
    NOT?: ProductBundleScalarWhereInput | ProductBundleScalarWhereInput[]
    id?: StringFilter<"ProductBundle"> | string
    name?: StringFilter<"ProductBundle"> | string
    description?: StringNullableFilter<"ProductBundle"> | string | null
    sku?: StringFilter<"ProductBundle"> | string
    bundlePrice?: DecimalFilter<"ProductBundle"> | Decimal | DecimalJsLike | number | string
    discount?: DecimalNullableFilter<"ProductBundle"> | Decimal | DecimalJsLike | number | string | null
    isActive?: BoolFilter<"ProductBundle"> | boolean
    createdAt?: DateTimeFilter<"ProductBundle"> | Date | string
    updatedAt?: DateTimeFilter<"ProductBundle"> | Date | string
  }

  export type ProductBundleUpsertWithWhereUniqueWithoutBundleItemsInput = {
    where: ProductBundleWhereUniqueInput
    update: XOR<ProductBundleUpdateWithoutBundleItemsInput, ProductBundleUncheckedUpdateWithoutBundleItemsInput>
    create: XOR<ProductBundleCreateWithoutBundleItemsInput, ProductBundleUncheckedCreateWithoutBundleItemsInput>
  }

  export type ProductBundleUpdateWithWhereUniqueWithoutBundleItemsInput = {
    where: ProductBundleWhereUniqueInput
    data: XOR<ProductBundleUpdateWithoutBundleItemsInput, ProductBundleUncheckedUpdateWithoutBundleItemsInput>
  }

  export type ProductBundleUpdateManyWithWhereWithoutBundleItemsInput = {
    where: ProductBundleScalarWhereInput
    data: XOR<ProductBundleUpdateManyMutationInput, ProductBundleUncheckedUpdateManyWithoutBundleItemsInput>
  }

  export type GoodsReceiptItemUpsertWithWhereUniqueWithoutProductInput = {
    where: GoodsReceiptItemWhereUniqueInput
    update: XOR<GoodsReceiptItemUpdateWithoutProductInput, GoodsReceiptItemUncheckedUpdateWithoutProductInput>
    create: XOR<GoodsReceiptItemCreateWithoutProductInput, GoodsReceiptItemUncheckedCreateWithoutProductInput>
  }

  export type GoodsReceiptItemUpdateWithWhereUniqueWithoutProductInput = {
    where: GoodsReceiptItemWhereUniqueInput
    data: XOR<GoodsReceiptItemUpdateWithoutProductInput, GoodsReceiptItemUncheckedUpdateWithoutProductInput>
  }

  export type GoodsReceiptItemUpdateManyWithWhereWithoutProductInput = {
    where: GoodsReceiptItemScalarWhereInput
    data: XOR<GoodsReceiptItemUpdateManyMutationInput, GoodsReceiptItemUncheckedUpdateManyWithoutProductInput>
  }

  export type GoodsReceiptItemScalarWhereInput = {
    AND?: GoodsReceiptItemScalarWhereInput | GoodsReceiptItemScalarWhereInput[]
    OR?: GoodsReceiptItemScalarWhereInput[]
    NOT?: GoodsReceiptItemScalarWhereInput | GoodsReceiptItemScalarWhereInput[]
    id?: StringFilter<"GoodsReceiptItem"> | string
    goodsReceiptId?: StringFilter<"GoodsReceiptItem"> | string
    productId?: StringFilter<"GoodsReceiptItem"> | string
    variantId?: StringNullableFilter<"GoodsReceiptItem"> | string | null
    expectedQty?: IntFilter<"GoodsReceiptItem"> | number
    receivedQty?: IntFilter<"GoodsReceiptItem"> | number
    acceptedQty?: IntFilter<"GoodsReceiptItem"> | number
    rejectedQty?: IntFilter<"GoodsReceiptItem"> | number
    qcStatus?: EnumQualityStatusFilter<"GoodsReceiptItem"> | $Enums.QualityStatus
    qcNotes?: StringNullableFilter<"GoodsReceiptItem"> | string | null
    rejectionReason?: StringNullableFilter<"GoodsReceiptItem"> | string | null
    lotNumber?: StringNullableFilter<"GoodsReceiptItem"> | string | null
    batchNumber?: StringNullableFilter<"GoodsReceiptItem"> | string | null
    expiryDate?: DateTimeNullableFilter<"GoodsReceiptItem"> | Date | string | null
    serialNumbers?: JsonNullableFilter<"GoodsReceiptItem">
    receivedLocation?: StringNullableFilter<"GoodsReceiptItem"> | string | null
    notes?: StringNullableFilter<"GoodsReceiptItem"> | string | null
    createdAt?: DateTimeFilter<"GoodsReceiptItem"> | Date | string
    updatedAt?: DateTimeFilter<"GoodsReceiptItem"> | Date | string
  }

  export type StockTransferItemUpsertWithWhereUniqueWithoutProductInput = {
    where: StockTransferItemWhereUniqueInput
    update: XOR<StockTransferItemUpdateWithoutProductInput, StockTransferItemUncheckedUpdateWithoutProductInput>
    create: XOR<StockTransferItemCreateWithoutProductInput, StockTransferItemUncheckedCreateWithoutProductInput>
  }

  export type StockTransferItemUpdateWithWhereUniqueWithoutProductInput = {
    where: StockTransferItemWhereUniqueInput
    data: XOR<StockTransferItemUpdateWithoutProductInput, StockTransferItemUncheckedUpdateWithoutProductInput>
  }

  export type StockTransferItemUpdateManyWithWhereWithoutProductInput = {
    where: StockTransferItemScalarWhereInput
    data: XOR<StockTransferItemUpdateManyMutationInput, StockTransferItemUncheckedUpdateManyWithoutProductInput>
  }

  export type StockTransferItemScalarWhereInput = {
    AND?: StockTransferItemScalarWhereInput | StockTransferItemScalarWhereInput[]
    OR?: StockTransferItemScalarWhereInput[]
    NOT?: StockTransferItemScalarWhereInput | StockTransferItemScalarWhereInput[]
    id?: StringFilter<"StockTransferItem"> | string
    transferId?: StringFilter<"StockTransferItem"> | string
    productId?: StringFilter<"StockTransferItem"> | string
    variantId?: StringNullableFilter<"StockTransferItem"> | string | null
    requestedQty?: IntFilter<"StockTransferItem"> | number
    shippedQty?: IntFilter<"StockTransferItem"> | number
    receivedQty?: IntFilter<"StockTransferItem"> | number
    productName?: StringFilter<"StockTransferItem"> | string
    productSku?: StringFilter<"StockTransferItem"> | string
    lotNumber?: StringNullableFilter<"StockTransferItem"> | string | null
    batchNumber?: StringNullableFilter<"StockTransferItem"> | string | null
    status?: EnumTransferItemStatusFilter<"StockTransferItem"> | $Enums.TransferItemStatus
    notes?: StringNullableFilter<"StockTransferItem"> | string | null
    createdAt?: DateTimeFilter<"StockTransferItem"> | Date | string
    updatedAt?: DateTimeFilter<"StockTransferItem"> | Date | string
  }

  export type InventoryAuditItemUpsertWithWhereUniqueWithoutProductInput = {
    where: InventoryAuditItemWhereUniqueInput
    update: XOR<InventoryAuditItemUpdateWithoutProductInput, InventoryAuditItemUncheckedUpdateWithoutProductInput>
    create: XOR<InventoryAuditItemCreateWithoutProductInput, InventoryAuditItemUncheckedCreateWithoutProductInput>
  }

  export type InventoryAuditItemUpdateWithWhereUniqueWithoutProductInput = {
    where: InventoryAuditItemWhereUniqueInput
    data: XOR<InventoryAuditItemUpdateWithoutProductInput, InventoryAuditItemUncheckedUpdateWithoutProductInput>
  }

  export type InventoryAuditItemUpdateManyWithWhereWithoutProductInput = {
    where: InventoryAuditItemScalarWhereInput
    data: XOR<InventoryAuditItemUpdateManyMutationInput, InventoryAuditItemUncheckedUpdateManyWithoutProductInput>
  }

  export type InventoryAuditItemScalarWhereInput = {
    AND?: InventoryAuditItemScalarWhereInput | InventoryAuditItemScalarWhereInput[]
    OR?: InventoryAuditItemScalarWhereInput[]
    NOT?: InventoryAuditItemScalarWhereInput | InventoryAuditItemScalarWhereInput[]
    id?: StringFilter<"InventoryAuditItem"> | string
    auditId?: StringFilter<"InventoryAuditItem"> | string
    productId?: StringFilter<"InventoryAuditItem"> | string
    variantId?: StringNullableFilter<"InventoryAuditItem"> | string | null
    warehouseId?: StringFilter<"InventoryAuditItem"> | string
    systemQty?: IntFilter<"InventoryAuditItem"> | number
    countedQty?: IntNullableFilter<"InventoryAuditItem"> | number | null
    adjustmentQty?: IntNullableFilter<"InventoryAuditItem"> | number | null
    location?: StringNullableFilter<"InventoryAuditItem"> | string | null
    lotNumber?: StringNullableFilter<"InventoryAuditItem"> | string | null
    batchNumber?: StringNullableFilter<"InventoryAuditItem"> | string | null
    countedBy?: StringNullableFilter<"InventoryAuditItem"> | string | null
    countedAt?: DateTimeNullableFilter<"InventoryAuditItem"> | Date | string | null
    verifiedBy?: StringNullableFilter<"InventoryAuditItem"> | string | null
    verifiedAt?: DateTimeNullableFilter<"InventoryAuditItem"> | Date | string | null
    status?: EnumAuditItemStatusFilter<"InventoryAuditItem"> | $Enums.AuditItemStatus
    discrepancyReason?: StringNullableFilter<"InventoryAuditItem"> | string | null
    requiresInvestigation?: BoolFilter<"InventoryAuditItem"> | boolean
    notes?: StringNullableFilter<"InventoryAuditItem"> | string | null
    createdAt?: DateTimeFilter<"InventoryAuditItem"> | Date | string
    updatedAt?: DateTimeFilter<"InventoryAuditItem"> | Date | string
  }

  export type ProductCreateWithoutVariantsInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    category?: CategoryCreateNestedOneWithoutProductsInput
    brand?: BrandCreateNestedOneWithoutProductsInput
    inventoryItems?: InventoryItemCreateNestedManyWithoutProductInput
    suppliers?: ProductSupplierCreateNestedManyWithoutProductInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
    purchaseItems?: PurchaseOrderItemCreateNestedManyWithoutProductInput
    movements?: InventoryMovementCreateNestedManyWithoutProductInput
    audits?: InventoryAuditCreateNestedManyWithoutProductInput
    reviews?: ProductReviewCreateNestedManyWithoutProductInput
    bundles?: ProductBundleCreateNestedManyWithoutProductsInput
    bundleItems?: ProductBundleCreateNestedManyWithoutBundleItemsInput
    goodsReceiptItems?: GoodsReceiptItemCreateNestedManyWithoutProductInput
    transferItems?: StockTransferItemCreateNestedManyWithoutProductInput
    auditItems?: InventoryAuditItemCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutVariantsInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    categoryId?: string | null
    brandId?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    inventoryItems?: InventoryItemUncheckedCreateNestedManyWithoutProductInput
    suppliers?: ProductSupplierUncheckedCreateNestedManyWithoutProductInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    purchaseItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutProductInput
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutProductInput
    audits?: InventoryAuditUncheckedCreateNestedManyWithoutProductInput
    reviews?: ProductReviewUncheckedCreateNestedManyWithoutProductInput
    bundles?: ProductBundleUncheckedCreateNestedManyWithoutProductsInput
    bundleItems?: ProductBundleUncheckedCreateNestedManyWithoutBundleItemsInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedCreateNestedManyWithoutProductInput
    transferItems?: StockTransferItemUncheckedCreateNestedManyWithoutProductInput
    auditItems?: InventoryAuditItemUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutVariantsInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutVariantsInput, ProductUncheckedCreateWithoutVariantsInput>
  }

  export type InventoryItemCreateWithoutVariantInput = {
    id?: string
    zone?: string | null
    aisle?: string | null
    shelf?: string | null
    bin?: string | null
    locationCode?: string | null
    quantity?: number
    reservedQuantity?: number
    availableQuantity?: number
    averageCost?: Decimal | DecimalJsLike | number | string | null
    lastCost?: Decimal | DecimalJsLike | number | string | null
    lotNumber?: string | null
    batchNumber?: string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    expiryDate?: Date | string | null
    status?: $Enums.InventoryStatus
    qcStatus?: $Enums.QualityStatus
    quarantineReason?: string | null
    lastMovement?: Date | string | null
    lastCount?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutInventoryItemsInput
    warehouse: WarehouseCreateNestedOneWithoutInventoryItemsInput
    movements?: InventoryMovementCreateNestedManyWithoutInventoryItemInput
    reservations?: StockReservationCreateNestedManyWithoutInventoryItemInput
  }

  export type InventoryItemUncheckedCreateWithoutVariantInput = {
    id?: string
    productId: string
    warehouseId: string
    zone?: string | null
    aisle?: string | null
    shelf?: string | null
    bin?: string | null
    locationCode?: string | null
    quantity?: number
    reservedQuantity?: number
    availableQuantity?: number
    averageCost?: Decimal | DecimalJsLike | number | string | null
    lastCost?: Decimal | DecimalJsLike | number | string | null
    lotNumber?: string | null
    batchNumber?: string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    expiryDate?: Date | string | null
    status?: $Enums.InventoryStatus
    qcStatus?: $Enums.QualityStatus
    quarantineReason?: string | null
    lastMovement?: Date | string | null
    lastCount?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutInventoryItemInput
    reservations?: StockReservationUncheckedCreateNestedManyWithoutInventoryItemInput
  }

  export type InventoryItemCreateOrConnectWithoutVariantInput = {
    where: InventoryItemWhereUniqueInput
    create: XOR<InventoryItemCreateWithoutVariantInput, InventoryItemUncheckedCreateWithoutVariantInput>
  }

  export type InventoryItemCreateManyVariantInputEnvelope = {
    data: InventoryItemCreateManyVariantInput | InventoryItemCreateManyVariantInput[]
    skipDuplicates?: boolean
  }

  export type InventoryMovementCreateWithoutVariantInput = {
    id?: string
    type: $Enums.MovementType
    subtype?: string | null
    quantity: number
    quantityBefore: number
    quantityAfter: number
    unitCost?: Decimal | DecimalJsLike | number | string | null
    totalCost?: Decimal | DecimalJsLike | number | string | null
    referenceType?: string | null
    referenceId?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    expiryDate?: Date | string | null
    reason?: string | null
    notes?: string | null
    userId: string
    approvedBy?: string | null
    approvedAt?: Date | string | null
    occurredAt?: Date | string
    createdAt?: Date | string
    product: ProductCreateNestedOneWithoutMovementsInput
    warehouse: WarehouseCreateNestedOneWithoutMovementsInput
    inventoryItem?: InventoryItemCreateNestedOneWithoutMovementsInput
  }

  export type InventoryMovementUncheckedCreateWithoutVariantInput = {
    id?: string
    type: $Enums.MovementType
    subtype?: string | null
    productId: string
    warehouseId: string
    inventoryItemId?: string | null
    quantity: number
    quantityBefore: number
    quantityAfter: number
    unitCost?: Decimal | DecimalJsLike | number | string | null
    totalCost?: Decimal | DecimalJsLike | number | string | null
    referenceType?: string | null
    referenceId?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    expiryDate?: Date | string | null
    reason?: string | null
    notes?: string | null
    userId: string
    approvedBy?: string | null
    approvedAt?: Date | string | null
    occurredAt?: Date | string
    createdAt?: Date | string
  }

  export type InventoryMovementCreateOrConnectWithoutVariantInput = {
    where: InventoryMovementWhereUniqueInput
    create: XOR<InventoryMovementCreateWithoutVariantInput, InventoryMovementUncheckedCreateWithoutVariantInput>
  }

  export type InventoryMovementCreateManyVariantInputEnvelope = {
    data: InventoryMovementCreateManyVariantInput | InventoryMovementCreateManyVariantInput[]
    skipDuplicates?: boolean
  }

  export type PurchaseOrderItemCreateWithoutVariantInput = {
    id?: string
    orderedQty: number
    receivedQty?: number
    remainingQty: number
    unitCost: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    productName: string
    productSku: string
    supplierSku?: string | null
    expectedDate?: Date | string | null
    status?: $Enums.PurchaseItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    purchaseOrder: PurchaseOrderCreateNestedOneWithoutItemsInput
    product: ProductCreateNestedOneWithoutPurchaseItemsInput
  }

  export type PurchaseOrderItemUncheckedCreateWithoutVariantInput = {
    id?: string
    purchaseOrderId: string
    productId: string
    orderedQty: number
    receivedQty?: number
    remainingQty: number
    unitCost: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    productName: string
    productSku: string
    supplierSku?: string | null
    expectedDate?: Date | string | null
    status?: $Enums.PurchaseItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PurchaseOrderItemCreateOrConnectWithoutVariantInput = {
    where: PurchaseOrderItemWhereUniqueInput
    create: XOR<PurchaseOrderItemCreateWithoutVariantInput, PurchaseOrderItemUncheckedCreateWithoutVariantInput>
  }

  export type PurchaseOrderItemCreateManyVariantInputEnvelope = {
    data: PurchaseOrderItemCreateManyVariantInput | PurchaseOrderItemCreateManyVariantInput[]
    skipDuplicates?: boolean
  }

  export type GoodsReceiptItemCreateWithoutVariantInput = {
    id?: string
    expectedQty: number
    receivedQty: number
    acceptedQty: number
    rejectedQty: number
    qcStatus?: $Enums.QualityStatus
    qcNotes?: string | null
    rejectionReason?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    expiryDate?: Date | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    receivedLocation?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    goodsReceipt: GoodsReceiptCreateNestedOneWithoutItemsInput
    product: ProductCreateNestedOneWithoutGoodsReceiptItemsInput
  }

  export type GoodsReceiptItemUncheckedCreateWithoutVariantInput = {
    id?: string
    goodsReceiptId: string
    productId: string
    expectedQty: number
    receivedQty: number
    acceptedQty: number
    rejectedQty: number
    qcStatus?: $Enums.QualityStatus
    qcNotes?: string | null
    rejectionReason?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    expiryDate?: Date | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    receivedLocation?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type GoodsReceiptItemCreateOrConnectWithoutVariantInput = {
    where: GoodsReceiptItemWhereUniqueInput
    create: XOR<GoodsReceiptItemCreateWithoutVariantInput, GoodsReceiptItemUncheckedCreateWithoutVariantInput>
  }

  export type GoodsReceiptItemCreateManyVariantInputEnvelope = {
    data: GoodsReceiptItemCreateManyVariantInput | GoodsReceiptItemCreateManyVariantInput[]
    skipDuplicates?: boolean
  }

  export type OrderItemCreateWithoutVariantInput = {
    id?: string
    orderedQty: number
    shippedQty?: number
    remainingQty: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    productName: string
    productSku: string
    status?: $Enums.OrderItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    order: OrderCreateNestedOneWithoutItemsInput
    product: ProductCreateNestedOneWithoutOrderItemsInput
  }

  export type OrderItemUncheckedCreateWithoutVariantInput = {
    id?: string
    orderId: string
    productId: string
    orderedQty: number
    shippedQty?: number
    remainingQty: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    productName: string
    productSku: string
    status?: $Enums.OrderItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderItemCreateOrConnectWithoutVariantInput = {
    where: OrderItemWhereUniqueInput
    create: XOR<OrderItemCreateWithoutVariantInput, OrderItemUncheckedCreateWithoutVariantInput>
  }

  export type OrderItemCreateManyVariantInputEnvelope = {
    data: OrderItemCreateManyVariantInput | OrderItemCreateManyVariantInput[]
    skipDuplicates?: boolean
  }

  export type StockTransferItemCreateWithoutVariantInput = {
    id?: string
    requestedQty: number
    shippedQty?: number
    receivedQty?: number
    productName: string
    productSku: string
    lotNumber?: string | null
    batchNumber?: string | null
    status?: $Enums.TransferItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    transfer: StockTransferCreateNestedOneWithoutItemsInput
    product: ProductCreateNestedOneWithoutTransferItemsInput
  }

  export type StockTransferItemUncheckedCreateWithoutVariantInput = {
    id?: string
    transferId: string
    productId: string
    requestedQty: number
    shippedQty?: number
    receivedQty?: number
    productName: string
    productSku: string
    lotNumber?: string | null
    batchNumber?: string | null
    status?: $Enums.TransferItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type StockTransferItemCreateOrConnectWithoutVariantInput = {
    where: StockTransferItemWhereUniqueInput
    create: XOR<StockTransferItemCreateWithoutVariantInput, StockTransferItemUncheckedCreateWithoutVariantInput>
  }

  export type StockTransferItemCreateManyVariantInputEnvelope = {
    data: StockTransferItemCreateManyVariantInput | StockTransferItemCreateManyVariantInput[]
    skipDuplicates?: boolean
  }

  export type InventoryAuditItemCreateWithoutVariantInput = {
    id?: string
    systemQty: number
    countedQty?: number | null
    adjustmentQty?: number | null
    location?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    countedBy?: string | null
    countedAt?: Date | string | null
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    status?: $Enums.AuditItemStatus
    discrepancyReason?: string | null
    requiresInvestigation?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    audit: InventoryAuditCreateNestedOneWithoutItemsInput
    product: ProductCreateNestedOneWithoutAuditItemsInput
    warehouse: WarehouseCreateNestedOneWithoutAuditItemsInput
  }

  export type InventoryAuditItemUncheckedCreateWithoutVariantInput = {
    id?: string
    auditId: string
    productId: string
    warehouseId: string
    systemQty: number
    countedQty?: number | null
    adjustmentQty?: number | null
    location?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    countedBy?: string | null
    countedAt?: Date | string | null
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    status?: $Enums.AuditItemStatus
    discrepancyReason?: string | null
    requiresInvestigation?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InventoryAuditItemCreateOrConnectWithoutVariantInput = {
    where: InventoryAuditItemWhereUniqueInput
    create: XOR<InventoryAuditItemCreateWithoutVariantInput, InventoryAuditItemUncheckedCreateWithoutVariantInput>
  }

  export type InventoryAuditItemCreateManyVariantInputEnvelope = {
    data: InventoryAuditItemCreateManyVariantInput | InventoryAuditItemCreateManyVariantInput[]
    skipDuplicates?: boolean
  }

  export type ProductUpsertWithoutVariantsInput = {
    update: XOR<ProductUpdateWithoutVariantsInput, ProductUncheckedUpdateWithoutVariantsInput>
    create: XOR<ProductCreateWithoutVariantsInput, ProductUncheckedCreateWithoutVariantsInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutVariantsInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutVariantsInput, ProductUncheckedUpdateWithoutVariantsInput>
  }

  export type ProductUpdateWithoutVariantsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    category?: CategoryUpdateOneWithoutProductsNestedInput
    brand?: BrandUpdateOneWithoutProductsNestedInput
    inventoryItems?: InventoryItemUpdateManyWithoutProductNestedInput
    suppliers?: ProductSupplierUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
    purchaseItems?: PurchaseOrderItemUpdateManyWithoutProductNestedInput
    movements?: InventoryMovementUpdateManyWithoutProductNestedInput
    audits?: InventoryAuditUpdateManyWithoutProductNestedInput
    reviews?: ProductReviewUpdateManyWithoutProductNestedInput
    bundles?: ProductBundleUpdateManyWithoutProductsNestedInput
    bundleItems?: ProductBundleUpdateManyWithoutBundleItemsNestedInput
    goodsReceiptItems?: GoodsReceiptItemUpdateManyWithoutProductNestedInput
    transferItems?: StockTransferItemUpdateManyWithoutProductNestedInput
    auditItems?: InventoryAuditItemUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutVariantsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    inventoryItems?: InventoryItemUncheckedUpdateManyWithoutProductNestedInput
    suppliers?: ProductSupplierUncheckedUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    purchaseItems?: PurchaseOrderItemUncheckedUpdateManyWithoutProductNestedInput
    movements?: InventoryMovementUncheckedUpdateManyWithoutProductNestedInput
    audits?: InventoryAuditUncheckedUpdateManyWithoutProductNestedInput
    reviews?: ProductReviewUncheckedUpdateManyWithoutProductNestedInput
    bundles?: ProductBundleUncheckedUpdateManyWithoutProductsNestedInput
    bundleItems?: ProductBundleUncheckedUpdateManyWithoutBundleItemsNestedInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedUpdateManyWithoutProductNestedInput
    transferItems?: StockTransferItemUncheckedUpdateManyWithoutProductNestedInput
    auditItems?: InventoryAuditItemUncheckedUpdateManyWithoutProductNestedInput
  }

  export type InventoryItemUpsertWithWhereUniqueWithoutVariantInput = {
    where: InventoryItemWhereUniqueInput
    update: XOR<InventoryItemUpdateWithoutVariantInput, InventoryItemUncheckedUpdateWithoutVariantInput>
    create: XOR<InventoryItemCreateWithoutVariantInput, InventoryItemUncheckedCreateWithoutVariantInput>
  }

  export type InventoryItemUpdateWithWhereUniqueWithoutVariantInput = {
    where: InventoryItemWhereUniqueInput
    data: XOR<InventoryItemUpdateWithoutVariantInput, InventoryItemUncheckedUpdateWithoutVariantInput>
  }

  export type InventoryItemUpdateManyWithWhereWithoutVariantInput = {
    where: InventoryItemScalarWhereInput
    data: XOR<InventoryItemUpdateManyMutationInput, InventoryItemUncheckedUpdateManyWithoutVariantInput>
  }

  export type InventoryMovementUpsertWithWhereUniqueWithoutVariantInput = {
    where: InventoryMovementWhereUniqueInput
    update: XOR<InventoryMovementUpdateWithoutVariantInput, InventoryMovementUncheckedUpdateWithoutVariantInput>
    create: XOR<InventoryMovementCreateWithoutVariantInput, InventoryMovementUncheckedCreateWithoutVariantInput>
  }

  export type InventoryMovementUpdateWithWhereUniqueWithoutVariantInput = {
    where: InventoryMovementWhereUniqueInput
    data: XOR<InventoryMovementUpdateWithoutVariantInput, InventoryMovementUncheckedUpdateWithoutVariantInput>
  }

  export type InventoryMovementUpdateManyWithWhereWithoutVariantInput = {
    where: InventoryMovementScalarWhereInput
    data: XOR<InventoryMovementUpdateManyMutationInput, InventoryMovementUncheckedUpdateManyWithoutVariantInput>
  }

  export type PurchaseOrderItemUpsertWithWhereUniqueWithoutVariantInput = {
    where: PurchaseOrderItemWhereUniqueInput
    update: XOR<PurchaseOrderItemUpdateWithoutVariantInput, PurchaseOrderItemUncheckedUpdateWithoutVariantInput>
    create: XOR<PurchaseOrderItemCreateWithoutVariantInput, PurchaseOrderItemUncheckedCreateWithoutVariantInput>
  }

  export type PurchaseOrderItemUpdateWithWhereUniqueWithoutVariantInput = {
    where: PurchaseOrderItemWhereUniqueInput
    data: XOR<PurchaseOrderItemUpdateWithoutVariantInput, PurchaseOrderItemUncheckedUpdateWithoutVariantInput>
  }

  export type PurchaseOrderItemUpdateManyWithWhereWithoutVariantInput = {
    where: PurchaseOrderItemScalarWhereInput
    data: XOR<PurchaseOrderItemUpdateManyMutationInput, PurchaseOrderItemUncheckedUpdateManyWithoutVariantInput>
  }

  export type GoodsReceiptItemUpsertWithWhereUniqueWithoutVariantInput = {
    where: GoodsReceiptItemWhereUniqueInput
    update: XOR<GoodsReceiptItemUpdateWithoutVariantInput, GoodsReceiptItemUncheckedUpdateWithoutVariantInput>
    create: XOR<GoodsReceiptItemCreateWithoutVariantInput, GoodsReceiptItemUncheckedCreateWithoutVariantInput>
  }

  export type GoodsReceiptItemUpdateWithWhereUniqueWithoutVariantInput = {
    where: GoodsReceiptItemWhereUniqueInput
    data: XOR<GoodsReceiptItemUpdateWithoutVariantInput, GoodsReceiptItemUncheckedUpdateWithoutVariantInput>
  }

  export type GoodsReceiptItemUpdateManyWithWhereWithoutVariantInput = {
    where: GoodsReceiptItemScalarWhereInput
    data: XOR<GoodsReceiptItemUpdateManyMutationInput, GoodsReceiptItemUncheckedUpdateManyWithoutVariantInput>
  }

  export type OrderItemUpsertWithWhereUniqueWithoutVariantInput = {
    where: OrderItemWhereUniqueInput
    update: XOR<OrderItemUpdateWithoutVariantInput, OrderItemUncheckedUpdateWithoutVariantInput>
    create: XOR<OrderItemCreateWithoutVariantInput, OrderItemUncheckedCreateWithoutVariantInput>
  }

  export type OrderItemUpdateWithWhereUniqueWithoutVariantInput = {
    where: OrderItemWhereUniqueInput
    data: XOR<OrderItemUpdateWithoutVariantInput, OrderItemUncheckedUpdateWithoutVariantInput>
  }

  export type OrderItemUpdateManyWithWhereWithoutVariantInput = {
    where: OrderItemScalarWhereInput
    data: XOR<OrderItemUpdateManyMutationInput, OrderItemUncheckedUpdateManyWithoutVariantInput>
  }

  export type StockTransferItemUpsertWithWhereUniqueWithoutVariantInput = {
    where: StockTransferItemWhereUniqueInput
    update: XOR<StockTransferItemUpdateWithoutVariantInput, StockTransferItemUncheckedUpdateWithoutVariantInput>
    create: XOR<StockTransferItemCreateWithoutVariantInput, StockTransferItemUncheckedCreateWithoutVariantInput>
  }

  export type StockTransferItemUpdateWithWhereUniqueWithoutVariantInput = {
    where: StockTransferItemWhereUniqueInput
    data: XOR<StockTransferItemUpdateWithoutVariantInput, StockTransferItemUncheckedUpdateWithoutVariantInput>
  }

  export type StockTransferItemUpdateManyWithWhereWithoutVariantInput = {
    where: StockTransferItemScalarWhereInput
    data: XOR<StockTransferItemUpdateManyMutationInput, StockTransferItemUncheckedUpdateManyWithoutVariantInput>
  }

  export type InventoryAuditItemUpsertWithWhereUniqueWithoutVariantInput = {
    where: InventoryAuditItemWhereUniqueInput
    update: XOR<InventoryAuditItemUpdateWithoutVariantInput, InventoryAuditItemUncheckedUpdateWithoutVariantInput>
    create: XOR<InventoryAuditItemCreateWithoutVariantInput, InventoryAuditItemUncheckedCreateWithoutVariantInput>
  }

  export type InventoryAuditItemUpdateWithWhereUniqueWithoutVariantInput = {
    where: InventoryAuditItemWhereUniqueInput
    data: XOR<InventoryAuditItemUpdateWithoutVariantInput, InventoryAuditItemUncheckedUpdateWithoutVariantInput>
  }

  export type InventoryAuditItemUpdateManyWithWhereWithoutVariantInput = {
    where: InventoryAuditItemScalarWhereInput
    data: XOR<InventoryAuditItemUpdateManyMutationInput, InventoryAuditItemUncheckedUpdateManyWithoutVariantInput>
  }

  export type CategoryCreateWithoutChildrenInput = {
    id?: string
    name: string
    description?: string | null
    slug: string
    level?: number
    path?: string | null
    icon?: string | null
    color?: string | null
    image?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    parent?: CategoryCreateNestedOneWithoutChildrenInput
    products?: ProductCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateWithoutChildrenInput = {
    id?: string
    name: string
    description?: string | null
    slug: string
    parentId?: string | null
    level?: number
    path?: string | null
    icon?: string | null
    color?: string | null
    image?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    products?: ProductUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutChildrenInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutChildrenInput, CategoryUncheckedCreateWithoutChildrenInput>
  }

  export type CategoryCreateWithoutParentInput = {
    id?: string
    name: string
    description?: string | null
    slug: string
    level?: number
    path?: string | null
    icon?: string | null
    color?: string | null
    image?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    children?: CategoryCreateNestedManyWithoutParentInput
    products?: ProductCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateWithoutParentInput = {
    id?: string
    name: string
    description?: string | null
    slug: string
    level?: number
    path?: string | null
    icon?: string | null
    color?: string | null
    image?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    children?: CategoryUncheckedCreateNestedManyWithoutParentInput
    products?: ProductUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutParentInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutParentInput, CategoryUncheckedCreateWithoutParentInput>
  }

  export type CategoryCreateManyParentInputEnvelope = {
    data: CategoryCreateManyParentInput | CategoryCreateManyParentInput[]
    skipDuplicates?: boolean
  }

  export type ProductCreateWithoutCategoryInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    brand?: BrandCreateNestedOneWithoutProductsInput
    inventoryItems?: InventoryItemCreateNestedManyWithoutProductInput
    variants?: ProductVariantCreateNestedManyWithoutProductInput
    suppliers?: ProductSupplierCreateNestedManyWithoutProductInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
    purchaseItems?: PurchaseOrderItemCreateNestedManyWithoutProductInput
    movements?: InventoryMovementCreateNestedManyWithoutProductInput
    audits?: InventoryAuditCreateNestedManyWithoutProductInput
    reviews?: ProductReviewCreateNestedManyWithoutProductInput
    bundles?: ProductBundleCreateNestedManyWithoutProductsInput
    bundleItems?: ProductBundleCreateNestedManyWithoutBundleItemsInput
    goodsReceiptItems?: GoodsReceiptItemCreateNestedManyWithoutProductInput
    transferItems?: StockTransferItemCreateNestedManyWithoutProductInput
    auditItems?: InventoryAuditItemCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutCategoryInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    brandId?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    inventoryItems?: InventoryItemUncheckedCreateNestedManyWithoutProductInput
    variants?: ProductVariantUncheckedCreateNestedManyWithoutProductInput
    suppliers?: ProductSupplierUncheckedCreateNestedManyWithoutProductInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    purchaseItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutProductInput
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutProductInput
    audits?: InventoryAuditUncheckedCreateNestedManyWithoutProductInput
    reviews?: ProductReviewUncheckedCreateNestedManyWithoutProductInput
    bundles?: ProductBundleUncheckedCreateNestedManyWithoutProductsInput
    bundleItems?: ProductBundleUncheckedCreateNestedManyWithoutBundleItemsInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedCreateNestedManyWithoutProductInput
    transferItems?: StockTransferItemUncheckedCreateNestedManyWithoutProductInput
    auditItems?: InventoryAuditItemUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutCategoryInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutCategoryInput, ProductUncheckedCreateWithoutCategoryInput>
  }

  export type ProductCreateManyCategoryInputEnvelope = {
    data: ProductCreateManyCategoryInput | ProductCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type CategoryUpsertWithoutChildrenInput = {
    update: XOR<CategoryUpdateWithoutChildrenInput, CategoryUncheckedUpdateWithoutChildrenInput>
    create: XOR<CategoryCreateWithoutChildrenInput, CategoryUncheckedCreateWithoutChildrenInput>
    where?: CategoryWhereInput
  }

  export type CategoryUpdateToOneWithWhereWithoutChildrenInput = {
    where?: CategoryWhereInput
    data: XOR<CategoryUpdateWithoutChildrenInput, CategoryUncheckedUpdateWithoutChildrenInput>
  }

  export type CategoryUpdateWithoutChildrenInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    path?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parent?: CategoryUpdateOneWithoutChildrenNestedInput
    products?: ProductUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateWithoutChildrenInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    level?: IntFieldUpdateOperationsInput | number
    path?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: ProductUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUpsertWithWhereUniqueWithoutParentInput = {
    where: CategoryWhereUniqueInput
    update: XOR<CategoryUpdateWithoutParentInput, CategoryUncheckedUpdateWithoutParentInput>
    create: XOR<CategoryCreateWithoutParentInput, CategoryUncheckedCreateWithoutParentInput>
  }

  export type CategoryUpdateWithWhereUniqueWithoutParentInput = {
    where: CategoryWhereUniqueInput
    data: XOR<CategoryUpdateWithoutParentInput, CategoryUncheckedUpdateWithoutParentInput>
  }

  export type CategoryUpdateManyWithWhereWithoutParentInput = {
    where: CategoryScalarWhereInput
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyWithoutParentInput>
  }

  export type CategoryScalarWhereInput = {
    AND?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
    OR?: CategoryScalarWhereInput[]
    NOT?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
    id?: StringFilter<"Category"> | string
    name?: StringFilter<"Category"> | string
    description?: StringNullableFilter<"Category"> | string | null
    slug?: StringFilter<"Category"> | string
    parentId?: StringNullableFilter<"Category"> | string | null
    level?: IntFilter<"Category"> | number
    path?: StringNullableFilter<"Category"> | string | null
    icon?: StringNullableFilter<"Category"> | string | null
    color?: StringNullableFilter<"Category"> | string | null
    image?: StringNullableFilter<"Category"> | string | null
    isActive?: BoolFilter<"Category"> | boolean
    createdAt?: DateTimeFilter<"Category"> | Date | string
    updatedAt?: DateTimeFilter<"Category"> | Date | string
  }

  export type ProductUpsertWithWhereUniqueWithoutCategoryInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutCategoryInput, ProductUncheckedUpdateWithoutCategoryInput>
    create: XOR<ProductCreateWithoutCategoryInput, ProductUncheckedCreateWithoutCategoryInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutCategoryInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutCategoryInput, ProductUncheckedUpdateWithoutCategoryInput>
  }

  export type ProductUpdateManyWithWhereWithoutCategoryInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutCategoryInput>
  }

  export type ProductScalarWhereInput = {
    AND?: ProductScalarWhereInput | ProductScalarWhereInput[]
    OR?: ProductScalarWhereInput[]
    NOT?: ProductScalarWhereInput | ProductScalarWhereInput[]
    id?: StringFilter<"Product"> | string
    name?: StringFilter<"Product"> | string
    description?: StringNullableFilter<"Product"> | string | null
    sku?: StringFilter<"Product"> | string
    barcode?: StringNullableFilter<"Product"> | string | null
    slug?: StringNullableFilter<"Product"> | string | null
    categoryId?: StringNullableFilter<"Product"> | string | null
    brandId?: StringNullableFilter<"Product"> | string | null
    weight?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    dimensions?: JsonNullableFilter<"Product">
    color?: StringNullableFilter<"Product"> | string | null
    size?: StringNullableFilter<"Product"> | string | null
    material?: StringNullableFilter<"Product"> | string | null
    costPrice?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFilter<"Product"> | number
    maxStockLevel?: IntNullableFilter<"Product"> | number | null
    reorderPoint?: IntNullableFilter<"Product"> | number | null
    reorderQuantity?: IntNullableFilter<"Product"> | number | null
    status?: EnumProductStatusFilter<"Product"> | $Enums.ProductStatus
    isTrackable?: BoolFilter<"Product"> | boolean
    isSerialized?: BoolFilter<"Product"> | boolean
    images?: JsonNullableFilter<"Product">
    primaryImage?: StringNullableFilter<"Product"> | string | null
    metaTitle?: StringNullableFilter<"Product"> | string | null
    metaDescription?: StringNullableFilter<"Product"> | string | null
    tags?: JsonNullableFilter<"Product">
    leadTimeSupply?: IntNullableFilter<"Product"> | number | null
    shelfLife?: IntNullableFilter<"Product"> | number | null
    createdAt?: DateTimeFilter<"Product"> | Date | string
    updatedAt?: DateTimeFilter<"Product"> | Date | string
    createdBy?: StringFilter<"Product"> | string
  }

  export type ProductCreateWithoutBrandInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    category?: CategoryCreateNestedOneWithoutProductsInput
    inventoryItems?: InventoryItemCreateNestedManyWithoutProductInput
    variants?: ProductVariantCreateNestedManyWithoutProductInput
    suppliers?: ProductSupplierCreateNestedManyWithoutProductInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
    purchaseItems?: PurchaseOrderItemCreateNestedManyWithoutProductInput
    movements?: InventoryMovementCreateNestedManyWithoutProductInput
    audits?: InventoryAuditCreateNestedManyWithoutProductInput
    reviews?: ProductReviewCreateNestedManyWithoutProductInput
    bundles?: ProductBundleCreateNestedManyWithoutProductsInput
    bundleItems?: ProductBundleCreateNestedManyWithoutBundleItemsInput
    goodsReceiptItems?: GoodsReceiptItemCreateNestedManyWithoutProductInput
    transferItems?: StockTransferItemCreateNestedManyWithoutProductInput
    auditItems?: InventoryAuditItemCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutBrandInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    categoryId?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    inventoryItems?: InventoryItemUncheckedCreateNestedManyWithoutProductInput
    variants?: ProductVariantUncheckedCreateNestedManyWithoutProductInput
    suppliers?: ProductSupplierUncheckedCreateNestedManyWithoutProductInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    purchaseItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutProductInput
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutProductInput
    audits?: InventoryAuditUncheckedCreateNestedManyWithoutProductInput
    reviews?: ProductReviewUncheckedCreateNestedManyWithoutProductInput
    bundles?: ProductBundleUncheckedCreateNestedManyWithoutProductsInput
    bundleItems?: ProductBundleUncheckedCreateNestedManyWithoutBundleItemsInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedCreateNestedManyWithoutProductInput
    transferItems?: StockTransferItemUncheckedCreateNestedManyWithoutProductInput
    auditItems?: InventoryAuditItemUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutBrandInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutBrandInput, ProductUncheckedCreateWithoutBrandInput>
  }

  export type ProductCreateManyBrandInputEnvelope = {
    data: ProductCreateManyBrandInput | ProductCreateManyBrandInput[]
    skipDuplicates?: boolean
  }

  export type ProductUpsertWithWhereUniqueWithoutBrandInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutBrandInput, ProductUncheckedUpdateWithoutBrandInput>
    create: XOR<ProductCreateWithoutBrandInput, ProductUncheckedCreateWithoutBrandInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutBrandInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutBrandInput, ProductUncheckedUpdateWithoutBrandInput>
  }

  export type ProductUpdateManyWithWhereWithoutBrandInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutBrandInput>
  }

  export type ProductCreateWithoutBundlesInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    category?: CategoryCreateNestedOneWithoutProductsInput
    brand?: BrandCreateNestedOneWithoutProductsInput
    inventoryItems?: InventoryItemCreateNestedManyWithoutProductInput
    variants?: ProductVariantCreateNestedManyWithoutProductInput
    suppliers?: ProductSupplierCreateNestedManyWithoutProductInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
    purchaseItems?: PurchaseOrderItemCreateNestedManyWithoutProductInput
    movements?: InventoryMovementCreateNestedManyWithoutProductInput
    audits?: InventoryAuditCreateNestedManyWithoutProductInput
    reviews?: ProductReviewCreateNestedManyWithoutProductInput
    bundleItems?: ProductBundleCreateNestedManyWithoutBundleItemsInput
    goodsReceiptItems?: GoodsReceiptItemCreateNestedManyWithoutProductInput
    transferItems?: StockTransferItemCreateNestedManyWithoutProductInput
    auditItems?: InventoryAuditItemCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutBundlesInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    categoryId?: string | null
    brandId?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    inventoryItems?: InventoryItemUncheckedCreateNestedManyWithoutProductInput
    variants?: ProductVariantUncheckedCreateNestedManyWithoutProductInput
    suppliers?: ProductSupplierUncheckedCreateNestedManyWithoutProductInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    purchaseItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutProductInput
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutProductInput
    audits?: InventoryAuditUncheckedCreateNestedManyWithoutProductInput
    reviews?: ProductReviewUncheckedCreateNestedManyWithoutProductInput
    bundleItems?: ProductBundleUncheckedCreateNestedManyWithoutBundleItemsInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedCreateNestedManyWithoutProductInput
    transferItems?: StockTransferItemUncheckedCreateNestedManyWithoutProductInput
    auditItems?: InventoryAuditItemUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutBundlesInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutBundlesInput, ProductUncheckedCreateWithoutBundlesInput>
  }

  export type ProductCreateWithoutBundleItemsInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    category?: CategoryCreateNestedOneWithoutProductsInput
    brand?: BrandCreateNestedOneWithoutProductsInput
    inventoryItems?: InventoryItemCreateNestedManyWithoutProductInput
    variants?: ProductVariantCreateNestedManyWithoutProductInput
    suppliers?: ProductSupplierCreateNestedManyWithoutProductInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
    purchaseItems?: PurchaseOrderItemCreateNestedManyWithoutProductInput
    movements?: InventoryMovementCreateNestedManyWithoutProductInput
    audits?: InventoryAuditCreateNestedManyWithoutProductInput
    reviews?: ProductReviewCreateNestedManyWithoutProductInput
    bundles?: ProductBundleCreateNestedManyWithoutProductsInput
    goodsReceiptItems?: GoodsReceiptItemCreateNestedManyWithoutProductInput
    transferItems?: StockTransferItemCreateNestedManyWithoutProductInput
    auditItems?: InventoryAuditItemCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutBundleItemsInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    categoryId?: string | null
    brandId?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    inventoryItems?: InventoryItemUncheckedCreateNestedManyWithoutProductInput
    variants?: ProductVariantUncheckedCreateNestedManyWithoutProductInput
    suppliers?: ProductSupplierUncheckedCreateNestedManyWithoutProductInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    purchaseItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutProductInput
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutProductInput
    audits?: InventoryAuditUncheckedCreateNestedManyWithoutProductInput
    reviews?: ProductReviewUncheckedCreateNestedManyWithoutProductInput
    bundles?: ProductBundleUncheckedCreateNestedManyWithoutProductsInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedCreateNestedManyWithoutProductInput
    transferItems?: StockTransferItemUncheckedCreateNestedManyWithoutProductInput
    auditItems?: InventoryAuditItemUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutBundleItemsInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutBundleItemsInput, ProductUncheckedCreateWithoutBundleItemsInput>
  }

  export type ProductUpsertWithWhereUniqueWithoutBundlesInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutBundlesInput, ProductUncheckedUpdateWithoutBundlesInput>
    create: XOR<ProductCreateWithoutBundlesInput, ProductUncheckedCreateWithoutBundlesInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutBundlesInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutBundlesInput, ProductUncheckedUpdateWithoutBundlesInput>
  }

  export type ProductUpdateManyWithWhereWithoutBundlesInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutBundlesInput>
  }

  export type ProductUpsertWithWhereUniqueWithoutBundleItemsInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutBundleItemsInput, ProductUncheckedUpdateWithoutBundleItemsInput>
    create: XOR<ProductCreateWithoutBundleItemsInput, ProductUncheckedCreateWithoutBundleItemsInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutBundleItemsInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutBundleItemsInput, ProductUncheckedUpdateWithoutBundleItemsInput>
  }

  export type ProductUpdateManyWithWhereWithoutBundleItemsInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutBundleItemsInput>
  }

  export type InventoryItemCreateWithoutWarehouseInput = {
    id?: string
    zone?: string | null
    aisle?: string | null
    shelf?: string | null
    bin?: string | null
    locationCode?: string | null
    quantity?: number
    reservedQuantity?: number
    availableQuantity?: number
    averageCost?: Decimal | DecimalJsLike | number | string | null
    lastCost?: Decimal | DecimalJsLike | number | string | null
    lotNumber?: string | null
    batchNumber?: string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    expiryDate?: Date | string | null
    status?: $Enums.InventoryStatus
    qcStatus?: $Enums.QualityStatus
    quarantineReason?: string | null
    lastMovement?: Date | string | null
    lastCount?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutInventoryItemsInput
    variant?: ProductVariantCreateNestedOneWithoutInventoryItemsInput
    movements?: InventoryMovementCreateNestedManyWithoutInventoryItemInput
    reservations?: StockReservationCreateNestedManyWithoutInventoryItemInput
  }

  export type InventoryItemUncheckedCreateWithoutWarehouseInput = {
    id?: string
    productId: string
    variantId?: string | null
    zone?: string | null
    aisle?: string | null
    shelf?: string | null
    bin?: string | null
    locationCode?: string | null
    quantity?: number
    reservedQuantity?: number
    availableQuantity?: number
    averageCost?: Decimal | DecimalJsLike | number | string | null
    lastCost?: Decimal | DecimalJsLike | number | string | null
    lotNumber?: string | null
    batchNumber?: string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    expiryDate?: Date | string | null
    status?: $Enums.InventoryStatus
    qcStatus?: $Enums.QualityStatus
    quarantineReason?: string | null
    lastMovement?: Date | string | null
    lastCount?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutInventoryItemInput
    reservations?: StockReservationUncheckedCreateNestedManyWithoutInventoryItemInput
  }

  export type InventoryItemCreateOrConnectWithoutWarehouseInput = {
    where: InventoryItemWhereUniqueInput
    create: XOR<InventoryItemCreateWithoutWarehouseInput, InventoryItemUncheckedCreateWithoutWarehouseInput>
  }

  export type InventoryItemCreateManyWarehouseInputEnvelope = {
    data: InventoryItemCreateManyWarehouseInput | InventoryItemCreateManyWarehouseInput[]
    skipDuplicates?: boolean
  }

  export type InventoryMovementCreateWithoutWarehouseInput = {
    id?: string
    type: $Enums.MovementType
    subtype?: string | null
    quantity: number
    quantityBefore: number
    quantityAfter: number
    unitCost?: Decimal | DecimalJsLike | number | string | null
    totalCost?: Decimal | DecimalJsLike | number | string | null
    referenceType?: string | null
    referenceId?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    expiryDate?: Date | string | null
    reason?: string | null
    notes?: string | null
    userId: string
    approvedBy?: string | null
    approvedAt?: Date | string | null
    occurredAt?: Date | string
    createdAt?: Date | string
    product: ProductCreateNestedOneWithoutMovementsInput
    variant?: ProductVariantCreateNestedOneWithoutMovementsInput
    inventoryItem?: InventoryItemCreateNestedOneWithoutMovementsInput
  }

  export type InventoryMovementUncheckedCreateWithoutWarehouseInput = {
    id?: string
    type: $Enums.MovementType
    subtype?: string | null
    productId: string
    variantId?: string | null
    inventoryItemId?: string | null
    quantity: number
    quantityBefore: number
    quantityAfter: number
    unitCost?: Decimal | DecimalJsLike | number | string | null
    totalCost?: Decimal | DecimalJsLike | number | string | null
    referenceType?: string | null
    referenceId?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    expiryDate?: Date | string | null
    reason?: string | null
    notes?: string | null
    userId: string
    approvedBy?: string | null
    approvedAt?: Date | string | null
    occurredAt?: Date | string
    createdAt?: Date | string
  }

  export type InventoryMovementCreateOrConnectWithoutWarehouseInput = {
    where: InventoryMovementWhereUniqueInput
    create: XOR<InventoryMovementCreateWithoutWarehouseInput, InventoryMovementUncheckedCreateWithoutWarehouseInput>
  }

  export type InventoryMovementCreateManyWarehouseInputEnvelope = {
    data: InventoryMovementCreateManyWarehouseInput | InventoryMovementCreateManyWarehouseInput[]
    skipDuplicates?: boolean
  }

  export type StockTransferCreateWithoutFromWarehouseInput = {
    id?: string
    transferNumber: string
    status?: $Enums.TransferStatus
    requestedDate?: Date | string
    shippedDate?: Date | string | null
    receivedDate?: Date | string | null
    approvedBy?: string | null
    approvedAt?: Date | string | null
    reason?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    toWarehouse: WarehouseCreateNestedOneWithoutReceivedTransfersInput
    items?: StockTransferItemCreateNestedManyWithoutTransferInput
  }

  export type StockTransferUncheckedCreateWithoutFromWarehouseInput = {
    id?: string
    transferNumber: string
    toWarehouseId: string
    status?: $Enums.TransferStatus
    requestedDate?: Date | string
    shippedDate?: Date | string | null
    receivedDate?: Date | string | null
    approvedBy?: string | null
    approvedAt?: Date | string | null
    reason?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    items?: StockTransferItemUncheckedCreateNestedManyWithoutTransferInput
  }

  export type StockTransferCreateOrConnectWithoutFromWarehouseInput = {
    where: StockTransferWhereUniqueInput
    create: XOR<StockTransferCreateWithoutFromWarehouseInput, StockTransferUncheckedCreateWithoutFromWarehouseInput>
  }

  export type StockTransferCreateManyFromWarehouseInputEnvelope = {
    data: StockTransferCreateManyFromWarehouseInput | StockTransferCreateManyFromWarehouseInput[]
    skipDuplicates?: boolean
  }

  export type StockTransferCreateWithoutToWarehouseInput = {
    id?: string
    transferNumber: string
    status?: $Enums.TransferStatus
    requestedDate?: Date | string
    shippedDate?: Date | string | null
    receivedDate?: Date | string | null
    approvedBy?: string | null
    approvedAt?: Date | string | null
    reason?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    fromWarehouse: WarehouseCreateNestedOneWithoutTransfersInput
    items?: StockTransferItemCreateNestedManyWithoutTransferInput
  }

  export type StockTransferUncheckedCreateWithoutToWarehouseInput = {
    id?: string
    transferNumber: string
    fromWarehouseId: string
    status?: $Enums.TransferStatus
    requestedDate?: Date | string
    shippedDate?: Date | string | null
    receivedDate?: Date | string | null
    approvedBy?: string | null
    approvedAt?: Date | string | null
    reason?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    items?: StockTransferItemUncheckedCreateNestedManyWithoutTransferInput
  }

  export type StockTransferCreateOrConnectWithoutToWarehouseInput = {
    where: StockTransferWhereUniqueInput
    create: XOR<StockTransferCreateWithoutToWarehouseInput, StockTransferUncheckedCreateWithoutToWarehouseInput>
  }

  export type StockTransferCreateManyToWarehouseInputEnvelope = {
    data: StockTransferCreateManyToWarehouseInput | StockTransferCreateManyToWarehouseInput[]
    skipDuplicates?: boolean
  }

  export type OrderCreateWithoutWarehouseInput = {
    id?: string
    orderNumber: string
    type?: $Enums.OrderType
    channel?: $Enums.OrderChannel
    subtotal?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingCost?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount?: Decimal | DecimalJsLike | number | string
    currency?: string
    status?: $Enums.OrderStatus
    fulfillmentStatus?: $Enums.FulfillmentStatus
    paymentStatus?: $Enums.PaymentStatus
    orderDate?: Date | string
    requiredDate?: Date | string | null
    promisedDate?: Date | string | null
    shippedDate?: Date | string | null
    deliveredDate?: Date | string | null
    shippingMethod?: string | null
    trackingNumber?: string | null
    carrier?: string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    priority?: $Enums.OrderPriority
    rushOrder?: boolean
    notes?: string | null
    internalNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    customer: CustomerCreateNestedOneWithoutOrdersInput
    items?: OrderItemCreateNestedManyWithoutOrderInput
    shipments?: ShipmentCreateNestedManyWithoutOrderInput
    invoices?: CustomerInvoiceCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutWarehouseInput = {
    id?: string
    orderNumber: string
    customerId: string
    type?: $Enums.OrderType
    channel?: $Enums.OrderChannel
    subtotal?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingCost?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount?: Decimal | DecimalJsLike | number | string
    currency?: string
    status?: $Enums.OrderStatus
    fulfillmentStatus?: $Enums.FulfillmentStatus
    paymentStatus?: $Enums.PaymentStatus
    orderDate?: Date | string
    requiredDate?: Date | string | null
    promisedDate?: Date | string | null
    shippedDate?: Date | string | null
    deliveredDate?: Date | string | null
    shippingMethod?: string | null
    trackingNumber?: string | null
    carrier?: string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    priority?: $Enums.OrderPriority
    rushOrder?: boolean
    notes?: string | null
    internalNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    items?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutOrderInput
    invoices?: CustomerInvoiceUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutWarehouseInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutWarehouseInput, OrderUncheckedCreateWithoutWarehouseInput>
  }

  export type OrderCreateManyWarehouseInputEnvelope = {
    data: OrderCreateManyWarehouseInput | OrderCreateManyWarehouseInput[]
    skipDuplicates?: boolean
  }

  export type PurchaseOrderCreateWithoutWarehouseInput = {
    id?: string
    orderNumber: string
    subtotal?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingCost?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount?: Decimal | DecimalJsLike | number | string
    currency?: string
    status?: $Enums.PurchaseOrderStatus
    orderDate?: Date | string
    expectedDate?: Date | string | null
    deliveryDate?: Date | string | null
    paymentTerms?: string | null
    shippingTerms?: string | null
    trackingNumber?: string | null
    carrier?: string | null
    approvedBy?: string | null
    approvedAt?: Date | string | null
    notes?: string | null
    internalNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    supplier: SupplierCreateNestedOneWithoutPurchaseOrdersInput
    items?: PurchaseOrderItemCreateNestedManyWithoutPurchaseOrderInput
    receipts?: GoodsReceiptCreateNestedManyWithoutPurchaseOrderInput
    invoices?: SupplierInvoiceCreateNestedManyWithoutPurchaseOrderInput
  }

  export type PurchaseOrderUncheckedCreateWithoutWarehouseInput = {
    id?: string
    orderNumber: string
    supplierId: string
    subtotal?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingCost?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount?: Decimal | DecimalJsLike | number | string
    currency?: string
    status?: $Enums.PurchaseOrderStatus
    orderDate?: Date | string
    expectedDate?: Date | string | null
    deliveryDate?: Date | string | null
    paymentTerms?: string | null
    shippingTerms?: string | null
    trackingNumber?: string | null
    carrier?: string | null
    approvedBy?: string | null
    approvedAt?: Date | string | null
    notes?: string | null
    internalNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    items?: PurchaseOrderItemUncheckedCreateNestedManyWithoutPurchaseOrderInput
    receipts?: GoodsReceiptUncheckedCreateNestedManyWithoutPurchaseOrderInput
    invoices?: SupplierInvoiceUncheckedCreateNestedManyWithoutPurchaseOrderInput
  }

  export type PurchaseOrderCreateOrConnectWithoutWarehouseInput = {
    where: PurchaseOrderWhereUniqueInput
    create: XOR<PurchaseOrderCreateWithoutWarehouseInput, PurchaseOrderUncheckedCreateWithoutWarehouseInput>
  }

  export type PurchaseOrderCreateManyWarehouseInputEnvelope = {
    data: PurchaseOrderCreateManyWarehouseInput | PurchaseOrderCreateManyWarehouseInput[]
    skipDuplicates?: boolean
  }

  export type InventoryAuditCreateWithoutWarehouseInput = {
    id?: string
    auditNumber: string
    type: $Enums.AuditType
    method?: $Enums.AuditMethod
    status?: $Enums.AuditStatus
    plannedDate: Date | string
    startedDate?: Date | string | null
    completedDate?: Date | string | null
    auditedBy: string
    supervisedBy?: string | null
    totalItems?: number | null
    itemsCounted?: number | null
    discrepancies?: number | null
    adjustmentValue?: Decimal | DecimalJsLike | number | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    product?: ProductCreateNestedOneWithoutAuditsInput
    items?: InventoryAuditItemCreateNestedManyWithoutAuditInput
  }

  export type InventoryAuditUncheckedCreateWithoutWarehouseInput = {
    id?: string
    auditNumber: string
    productId?: string | null
    type: $Enums.AuditType
    method?: $Enums.AuditMethod
    status?: $Enums.AuditStatus
    plannedDate: Date | string
    startedDate?: Date | string | null
    completedDate?: Date | string | null
    auditedBy: string
    supervisedBy?: string | null
    totalItems?: number | null
    itemsCounted?: number | null
    discrepancies?: number | null
    adjustmentValue?: Decimal | DecimalJsLike | number | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    items?: InventoryAuditItemUncheckedCreateNestedManyWithoutAuditInput
  }

  export type InventoryAuditCreateOrConnectWithoutWarehouseInput = {
    where: InventoryAuditWhereUniqueInput
    create: XOR<InventoryAuditCreateWithoutWarehouseInput, InventoryAuditUncheckedCreateWithoutWarehouseInput>
  }

  export type InventoryAuditCreateManyWarehouseInputEnvelope = {
    data: InventoryAuditCreateManyWarehouseInput | InventoryAuditCreateManyWarehouseInput[]
    skipDuplicates?: boolean
  }

  export type GoodsReceiptCreateWithoutWarehouseInput = {
    id?: string
    receiptNumber: string
    receivedDate?: Date | string
    qcStatus?: $Enums.QualityStatus
    qcNotes?: string | null
    qcBy?: string | null
    qcDate?: Date | string | null
    status?: $Enums.ReceiptStatus
    notes?: string | null
    receivedBy: string
    createdAt?: Date | string
    updatedAt?: Date | string
    purchaseOrder: PurchaseOrderCreateNestedOneWithoutReceiptsInput
    items?: GoodsReceiptItemCreateNestedManyWithoutGoodsReceiptInput
  }

  export type GoodsReceiptUncheckedCreateWithoutWarehouseInput = {
    id?: string
    purchaseOrderId: string
    receiptNumber: string
    receivedDate?: Date | string
    qcStatus?: $Enums.QualityStatus
    qcNotes?: string | null
    qcBy?: string | null
    qcDate?: Date | string | null
    status?: $Enums.ReceiptStatus
    notes?: string | null
    receivedBy: string
    createdAt?: Date | string
    updatedAt?: Date | string
    items?: GoodsReceiptItemUncheckedCreateNestedManyWithoutGoodsReceiptInput
  }

  export type GoodsReceiptCreateOrConnectWithoutWarehouseInput = {
    where: GoodsReceiptWhereUniqueInput
    create: XOR<GoodsReceiptCreateWithoutWarehouseInput, GoodsReceiptUncheckedCreateWithoutWarehouseInput>
  }

  export type GoodsReceiptCreateManyWarehouseInputEnvelope = {
    data: GoodsReceiptCreateManyWarehouseInput | GoodsReceiptCreateManyWarehouseInput[]
    skipDuplicates?: boolean
  }

  export type ShipmentCreateWithoutWarehouseInput = {
    id?: string
    shipmentNumber: string
    carrier: string
    service?: string | null
    trackingNumber?: string | null
    fromAddress: JsonNullValueInput | InputJsonValue
    toAddress: JsonNullValueInput | InputJsonValue
    packageCount?: number
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    shippingCost?: Decimal | DecimalJsLike | number | string | null
    insuranceValue?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.ShipmentStatus
    shipDate?: Date | string | null
    estimatedDelivery?: Date | string | null
    actualDelivery?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    order?: OrderCreateNestedOneWithoutShipmentsInput
    packages?: ShipmentPackageCreateNestedManyWithoutShipmentInput
    tracking?: ShipmentTrackingCreateNestedManyWithoutShipmentInput
  }

  export type ShipmentUncheckedCreateWithoutWarehouseInput = {
    id?: string
    shipmentNumber: string
    orderId?: string | null
    carrier: string
    service?: string | null
    trackingNumber?: string | null
    fromAddress: JsonNullValueInput | InputJsonValue
    toAddress: JsonNullValueInput | InputJsonValue
    packageCount?: number
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    shippingCost?: Decimal | DecimalJsLike | number | string | null
    insuranceValue?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.ShipmentStatus
    shipDate?: Date | string | null
    estimatedDelivery?: Date | string | null
    actualDelivery?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    packages?: ShipmentPackageUncheckedCreateNestedManyWithoutShipmentInput
    tracking?: ShipmentTrackingUncheckedCreateNestedManyWithoutShipmentInput
  }

  export type ShipmentCreateOrConnectWithoutWarehouseInput = {
    where: ShipmentWhereUniqueInput
    create: XOR<ShipmentCreateWithoutWarehouseInput, ShipmentUncheckedCreateWithoutWarehouseInput>
  }

  export type ShipmentCreateManyWarehouseInputEnvelope = {
    data: ShipmentCreateManyWarehouseInput | ShipmentCreateManyWarehouseInput[]
    skipDuplicates?: boolean
  }

  export type InventoryAuditItemCreateWithoutWarehouseInput = {
    id?: string
    systemQty: number
    countedQty?: number | null
    adjustmentQty?: number | null
    location?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    countedBy?: string | null
    countedAt?: Date | string | null
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    status?: $Enums.AuditItemStatus
    discrepancyReason?: string | null
    requiresInvestigation?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    audit: InventoryAuditCreateNestedOneWithoutItemsInput
    product: ProductCreateNestedOneWithoutAuditItemsInput
    variant?: ProductVariantCreateNestedOneWithoutAuditItemsInput
  }

  export type InventoryAuditItemUncheckedCreateWithoutWarehouseInput = {
    id?: string
    auditId: string
    productId: string
    variantId?: string | null
    systemQty: number
    countedQty?: number | null
    adjustmentQty?: number | null
    location?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    countedBy?: string | null
    countedAt?: Date | string | null
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    status?: $Enums.AuditItemStatus
    discrepancyReason?: string | null
    requiresInvestigation?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InventoryAuditItemCreateOrConnectWithoutWarehouseInput = {
    where: InventoryAuditItemWhereUniqueInput
    create: XOR<InventoryAuditItemCreateWithoutWarehouseInput, InventoryAuditItemUncheckedCreateWithoutWarehouseInput>
  }

  export type InventoryAuditItemCreateManyWarehouseInputEnvelope = {
    data: InventoryAuditItemCreateManyWarehouseInput | InventoryAuditItemCreateManyWarehouseInput[]
    skipDuplicates?: boolean
  }

  export type InventoryItemUpsertWithWhereUniqueWithoutWarehouseInput = {
    where: InventoryItemWhereUniqueInput
    update: XOR<InventoryItemUpdateWithoutWarehouseInput, InventoryItemUncheckedUpdateWithoutWarehouseInput>
    create: XOR<InventoryItemCreateWithoutWarehouseInput, InventoryItemUncheckedCreateWithoutWarehouseInput>
  }

  export type InventoryItemUpdateWithWhereUniqueWithoutWarehouseInput = {
    where: InventoryItemWhereUniqueInput
    data: XOR<InventoryItemUpdateWithoutWarehouseInput, InventoryItemUncheckedUpdateWithoutWarehouseInput>
  }

  export type InventoryItemUpdateManyWithWhereWithoutWarehouseInput = {
    where: InventoryItemScalarWhereInput
    data: XOR<InventoryItemUpdateManyMutationInput, InventoryItemUncheckedUpdateManyWithoutWarehouseInput>
  }

  export type InventoryMovementUpsertWithWhereUniqueWithoutWarehouseInput = {
    where: InventoryMovementWhereUniqueInput
    update: XOR<InventoryMovementUpdateWithoutWarehouseInput, InventoryMovementUncheckedUpdateWithoutWarehouseInput>
    create: XOR<InventoryMovementCreateWithoutWarehouseInput, InventoryMovementUncheckedCreateWithoutWarehouseInput>
  }

  export type InventoryMovementUpdateWithWhereUniqueWithoutWarehouseInput = {
    where: InventoryMovementWhereUniqueInput
    data: XOR<InventoryMovementUpdateWithoutWarehouseInput, InventoryMovementUncheckedUpdateWithoutWarehouseInput>
  }

  export type InventoryMovementUpdateManyWithWhereWithoutWarehouseInput = {
    where: InventoryMovementScalarWhereInput
    data: XOR<InventoryMovementUpdateManyMutationInput, InventoryMovementUncheckedUpdateManyWithoutWarehouseInput>
  }

  export type StockTransferUpsertWithWhereUniqueWithoutFromWarehouseInput = {
    where: StockTransferWhereUniqueInput
    update: XOR<StockTransferUpdateWithoutFromWarehouseInput, StockTransferUncheckedUpdateWithoutFromWarehouseInput>
    create: XOR<StockTransferCreateWithoutFromWarehouseInput, StockTransferUncheckedCreateWithoutFromWarehouseInput>
  }

  export type StockTransferUpdateWithWhereUniqueWithoutFromWarehouseInput = {
    where: StockTransferWhereUniqueInput
    data: XOR<StockTransferUpdateWithoutFromWarehouseInput, StockTransferUncheckedUpdateWithoutFromWarehouseInput>
  }

  export type StockTransferUpdateManyWithWhereWithoutFromWarehouseInput = {
    where: StockTransferScalarWhereInput
    data: XOR<StockTransferUpdateManyMutationInput, StockTransferUncheckedUpdateManyWithoutFromWarehouseInput>
  }

  export type StockTransferScalarWhereInput = {
    AND?: StockTransferScalarWhereInput | StockTransferScalarWhereInput[]
    OR?: StockTransferScalarWhereInput[]
    NOT?: StockTransferScalarWhereInput | StockTransferScalarWhereInput[]
    id?: StringFilter<"StockTransfer"> | string
    transferNumber?: StringFilter<"StockTransfer"> | string
    fromWarehouseId?: StringFilter<"StockTransfer"> | string
    toWarehouseId?: StringFilter<"StockTransfer"> | string
    status?: EnumTransferStatusFilter<"StockTransfer"> | $Enums.TransferStatus
    requestedDate?: DateTimeFilter<"StockTransfer"> | Date | string
    shippedDate?: DateTimeNullableFilter<"StockTransfer"> | Date | string | null
    receivedDate?: DateTimeNullableFilter<"StockTransfer"> | Date | string | null
    approvedBy?: StringNullableFilter<"StockTransfer"> | string | null
    approvedAt?: DateTimeNullableFilter<"StockTransfer"> | Date | string | null
    reason?: StringNullableFilter<"StockTransfer"> | string | null
    notes?: StringNullableFilter<"StockTransfer"> | string | null
    createdAt?: DateTimeFilter<"StockTransfer"> | Date | string
    updatedAt?: DateTimeFilter<"StockTransfer"> | Date | string
    createdBy?: StringFilter<"StockTransfer"> | string
  }

  export type StockTransferUpsertWithWhereUniqueWithoutToWarehouseInput = {
    where: StockTransferWhereUniqueInput
    update: XOR<StockTransferUpdateWithoutToWarehouseInput, StockTransferUncheckedUpdateWithoutToWarehouseInput>
    create: XOR<StockTransferCreateWithoutToWarehouseInput, StockTransferUncheckedCreateWithoutToWarehouseInput>
  }

  export type StockTransferUpdateWithWhereUniqueWithoutToWarehouseInput = {
    where: StockTransferWhereUniqueInput
    data: XOR<StockTransferUpdateWithoutToWarehouseInput, StockTransferUncheckedUpdateWithoutToWarehouseInput>
  }

  export type StockTransferUpdateManyWithWhereWithoutToWarehouseInput = {
    where: StockTransferScalarWhereInput
    data: XOR<StockTransferUpdateManyMutationInput, StockTransferUncheckedUpdateManyWithoutToWarehouseInput>
  }

  export type OrderUpsertWithWhereUniqueWithoutWarehouseInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutWarehouseInput, OrderUncheckedUpdateWithoutWarehouseInput>
    create: XOR<OrderCreateWithoutWarehouseInput, OrderUncheckedCreateWithoutWarehouseInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutWarehouseInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutWarehouseInput, OrderUncheckedUpdateWithoutWarehouseInput>
  }

  export type OrderUpdateManyWithWhereWithoutWarehouseInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutWarehouseInput>
  }

  export type OrderScalarWhereInput = {
    AND?: OrderScalarWhereInput | OrderScalarWhereInput[]
    OR?: OrderScalarWhereInput[]
    NOT?: OrderScalarWhereInput | OrderScalarWhereInput[]
    id?: StringFilter<"Order"> | string
    orderNumber?: StringFilter<"Order"> | string
    customerId?: StringFilter<"Order"> | string
    warehouseId?: StringFilter<"Order"> | string
    type?: EnumOrderTypeFilter<"Order"> | $Enums.OrderType
    channel?: EnumOrderChannelFilter<"Order"> | $Enums.OrderChannel
    subtotal?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"Order"> | string
    status?: EnumOrderStatusFilter<"Order"> | $Enums.OrderStatus
    fulfillmentStatus?: EnumFulfillmentStatusFilter<"Order"> | $Enums.FulfillmentStatus
    paymentStatus?: EnumPaymentStatusFilter<"Order"> | $Enums.PaymentStatus
    orderDate?: DateTimeFilter<"Order"> | Date | string
    requiredDate?: DateTimeNullableFilter<"Order"> | Date | string | null
    promisedDate?: DateTimeNullableFilter<"Order"> | Date | string | null
    shippedDate?: DateTimeNullableFilter<"Order"> | Date | string | null
    deliveredDate?: DateTimeNullableFilter<"Order"> | Date | string | null
    shippingMethod?: StringNullableFilter<"Order"> | string | null
    trackingNumber?: StringNullableFilter<"Order"> | string | null
    carrier?: StringNullableFilter<"Order"> | string | null
    shippingAddress?: JsonNullableFilter<"Order">
    priority?: EnumOrderPriorityFilter<"Order"> | $Enums.OrderPriority
    rushOrder?: BoolFilter<"Order"> | boolean
    notes?: StringNullableFilter<"Order"> | string | null
    internalNotes?: StringNullableFilter<"Order"> | string | null
    createdAt?: DateTimeFilter<"Order"> | Date | string
    updatedAt?: DateTimeFilter<"Order"> | Date | string
    createdBy?: StringFilter<"Order"> | string
  }

  export type PurchaseOrderUpsertWithWhereUniqueWithoutWarehouseInput = {
    where: PurchaseOrderWhereUniqueInput
    update: XOR<PurchaseOrderUpdateWithoutWarehouseInput, PurchaseOrderUncheckedUpdateWithoutWarehouseInput>
    create: XOR<PurchaseOrderCreateWithoutWarehouseInput, PurchaseOrderUncheckedCreateWithoutWarehouseInput>
  }

  export type PurchaseOrderUpdateWithWhereUniqueWithoutWarehouseInput = {
    where: PurchaseOrderWhereUniqueInput
    data: XOR<PurchaseOrderUpdateWithoutWarehouseInput, PurchaseOrderUncheckedUpdateWithoutWarehouseInput>
  }

  export type PurchaseOrderUpdateManyWithWhereWithoutWarehouseInput = {
    where: PurchaseOrderScalarWhereInput
    data: XOR<PurchaseOrderUpdateManyMutationInput, PurchaseOrderUncheckedUpdateManyWithoutWarehouseInput>
  }

  export type PurchaseOrderScalarWhereInput = {
    AND?: PurchaseOrderScalarWhereInput | PurchaseOrderScalarWhereInput[]
    OR?: PurchaseOrderScalarWhereInput[]
    NOT?: PurchaseOrderScalarWhereInput | PurchaseOrderScalarWhereInput[]
    id?: StringFilter<"PurchaseOrder"> | string
    orderNumber?: StringFilter<"PurchaseOrder"> | string
    supplierId?: StringFilter<"PurchaseOrder"> | string
    warehouseId?: StringNullableFilter<"PurchaseOrder"> | string | null
    subtotal?: DecimalFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"PurchaseOrder"> | string
    status?: EnumPurchaseOrderStatusFilter<"PurchaseOrder"> | $Enums.PurchaseOrderStatus
    orderDate?: DateTimeFilter<"PurchaseOrder"> | Date | string
    expectedDate?: DateTimeNullableFilter<"PurchaseOrder"> | Date | string | null
    deliveryDate?: DateTimeNullableFilter<"PurchaseOrder"> | Date | string | null
    paymentTerms?: StringNullableFilter<"PurchaseOrder"> | string | null
    shippingTerms?: StringNullableFilter<"PurchaseOrder"> | string | null
    trackingNumber?: StringNullableFilter<"PurchaseOrder"> | string | null
    carrier?: StringNullableFilter<"PurchaseOrder"> | string | null
    approvedBy?: StringNullableFilter<"PurchaseOrder"> | string | null
    approvedAt?: DateTimeNullableFilter<"PurchaseOrder"> | Date | string | null
    notes?: StringNullableFilter<"PurchaseOrder"> | string | null
    internalNotes?: StringNullableFilter<"PurchaseOrder"> | string | null
    createdAt?: DateTimeFilter<"PurchaseOrder"> | Date | string
    updatedAt?: DateTimeFilter<"PurchaseOrder"> | Date | string
    createdBy?: StringFilter<"PurchaseOrder"> | string
  }

  export type InventoryAuditUpsertWithWhereUniqueWithoutWarehouseInput = {
    where: InventoryAuditWhereUniqueInput
    update: XOR<InventoryAuditUpdateWithoutWarehouseInput, InventoryAuditUncheckedUpdateWithoutWarehouseInput>
    create: XOR<InventoryAuditCreateWithoutWarehouseInput, InventoryAuditUncheckedCreateWithoutWarehouseInput>
  }

  export type InventoryAuditUpdateWithWhereUniqueWithoutWarehouseInput = {
    where: InventoryAuditWhereUniqueInput
    data: XOR<InventoryAuditUpdateWithoutWarehouseInput, InventoryAuditUncheckedUpdateWithoutWarehouseInput>
  }

  export type InventoryAuditUpdateManyWithWhereWithoutWarehouseInput = {
    where: InventoryAuditScalarWhereInput
    data: XOR<InventoryAuditUpdateManyMutationInput, InventoryAuditUncheckedUpdateManyWithoutWarehouseInput>
  }

  export type GoodsReceiptUpsertWithWhereUniqueWithoutWarehouseInput = {
    where: GoodsReceiptWhereUniqueInput
    update: XOR<GoodsReceiptUpdateWithoutWarehouseInput, GoodsReceiptUncheckedUpdateWithoutWarehouseInput>
    create: XOR<GoodsReceiptCreateWithoutWarehouseInput, GoodsReceiptUncheckedCreateWithoutWarehouseInput>
  }

  export type GoodsReceiptUpdateWithWhereUniqueWithoutWarehouseInput = {
    where: GoodsReceiptWhereUniqueInput
    data: XOR<GoodsReceiptUpdateWithoutWarehouseInput, GoodsReceiptUncheckedUpdateWithoutWarehouseInput>
  }

  export type GoodsReceiptUpdateManyWithWhereWithoutWarehouseInput = {
    where: GoodsReceiptScalarWhereInput
    data: XOR<GoodsReceiptUpdateManyMutationInput, GoodsReceiptUncheckedUpdateManyWithoutWarehouseInput>
  }

  export type GoodsReceiptScalarWhereInput = {
    AND?: GoodsReceiptScalarWhereInput | GoodsReceiptScalarWhereInput[]
    OR?: GoodsReceiptScalarWhereInput[]
    NOT?: GoodsReceiptScalarWhereInput | GoodsReceiptScalarWhereInput[]
    id?: StringFilter<"GoodsReceipt"> | string
    purchaseOrderId?: StringFilter<"GoodsReceipt"> | string
    warehouseId?: StringFilter<"GoodsReceipt"> | string
    receiptNumber?: StringFilter<"GoodsReceipt"> | string
    receivedDate?: DateTimeFilter<"GoodsReceipt"> | Date | string
    qcStatus?: EnumQualityStatusFilter<"GoodsReceipt"> | $Enums.QualityStatus
    qcNotes?: StringNullableFilter<"GoodsReceipt"> | string | null
    qcBy?: StringNullableFilter<"GoodsReceipt"> | string | null
    qcDate?: DateTimeNullableFilter<"GoodsReceipt"> | Date | string | null
    status?: EnumReceiptStatusFilter<"GoodsReceipt"> | $Enums.ReceiptStatus
    notes?: StringNullableFilter<"GoodsReceipt"> | string | null
    receivedBy?: StringFilter<"GoodsReceipt"> | string
    createdAt?: DateTimeFilter<"GoodsReceipt"> | Date | string
    updatedAt?: DateTimeFilter<"GoodsReceipt"> | Date | string
  }

  export type ShipmentUpsertWithWhereUniqueWithoutWarehouseInput = {
    where: ShipmentWhereUniqueInput
    update: XOR<ShipmentUpdateWithoutWarehouseInput, ShipmentUncheckedUpdateWithoutWarehouseInput>
    create: XOR<ShipmentCreateWithoutWarehouseInput, ShipmentUncheckedCreateWithoutWarehouseInput>
  }

  export type ShipmentUpdateWithWhereUniqueWithoutWarehouseInput = {
    where: ShipmentWhereUniqueInput
    data: XOR<ShipmentUpdateWithoutWarehouseInput, ShipmentUncheckedUpdateWithoutWarehouseInput>
  }

  export type ShipmentUpdateManyWithWhereWithoutWarehouseInput = {
    where: ShipmentScalarWhereInput
    data: XOR<ShipmentUpdateManyMutationInput, ShipmentUncheckedUpdateManyWithoutWarehouseInput>
  }

  export type ShipmentScalarWhereInput = {
    AND?: ShipmentScalarWhereInput | ShipmentScalarWhereInput[]
    OR?: ShipmentScalarWhereInput[]
    NOT?: ShipmentScalarWhereInput | ShipmentScalarWhereInput[]
    id?: StringFilter<"Shipment"> | string
    shipmentNumber?: StringFilter<"Shipment"> | string
    orderId?: StringNullableFilter<"Shipment"> | string | null
    warehouseId?: StringFilter<"Shipment"> | string
    carrier?: StringFilter<"Shipment"> | string
    service?: StringNullableFilter<"Shipment"> | string | null
    trackingNumber?: StringNullableFilter<"Shipment"> | string | null
    fromAddress?: JsonFilter<"Shipment">
    toAddress?: JsonFilter<"Shipment">
    packageCount?: IntFilter<"Shipment"> | number
    weight?: DecimalNullableFilter<"Shipment"> | Decimal | DecimalJsLike | number | string | null
    dimensions?: JsonNullableFilter<"Shipment">
    shippingCost?: DecimalNullableFilter<"Shipment"> | Decimal | DecimalJsLike | number | string | null
    insuranceValue?: DecimalNullableFilter<"Shipment"> | Decimal | DecimalJsLike | number | string | null
    status?: EnumShipmentStatusFilter<"Shipment"> | $Enums.ShipmentStatus
    shipDate?: DateTimeNullableFilter<"Shipment"> | Date | string | null
    estimatedDelivery?: DateTimeNullableFilter<"Shipment"> | Date | string | null
    actualDelivery?: DateTimeNullableFilter<"Shipment"> | Date | string | null
    notes?: StringNullableFilter<"Shipment"> | string | null
    createdAt?: DateTimeFilter<"Shipment"> | Date | string
    updatedAt?: DateTimeFilter<"Shipment"> | Date | string
    createdBy?: StringFilter<"Shipment"> | string
  }

  export type InventoryAuditItemUpsertWithWhereUniqueWithoutWarehouseInput = {
    where: InventoryAuditItemWhereUniqueInput
    update: XOR<InventoryAuditItemUpdateWithoutWarehouseInput, InventoryAuditItemUncheckedUpdateWithoutWarehouseInput>
    create: XOR<InventoryAuditItemCreateWithoutWarehouseInput, InventoryAuditItemUncheckedCreateWithoutWarehouseInput>
  }

  export type InventoryAuditItemUpdateWithWhereUniqueWithoutWarehouseInput = {
    where: InventoryAuditItemWhereUniqueInput
    data: XOR<InventoryAuditItemUpdateWithoutWarehouseInput, InventoryAuditItemUncheckedUpdateWithoutWarehouseInput>
  }

  export type InventoryAuditItemUpdateManyWithWhereWithoutWarehouseInput = {
    where: InventoryAuditItemScalarWhereInput
    data: XOR<InventoryAuditItemUpdateManyMutationInput, InventoryAuditItemUncheckedUpdateManyWithoutWarehouseInput>
  }

  export type ProductCreateWithoutInventoryItemsInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    category?: CategoryCreateNestedOneWithoutProductsInput
    brand?: BrandCreateNestedOneWithoutProductsInput
    variants?: ProductVariantCreateNestedManyWithoutProductInput
    suppliers?: ProductSupplierCreateNestedManyWithoutProductInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
    purchaseItems?: PurchaseOrderItemCreateNestedManyWithoutProductInput
    movements?: InventoryMovementCreateNestedManyWithoutProductInput
    audits?: InventoryAuditCreateNestedManyWithoutProductInput
    reviews?: ProductReviewCreateNestedManyWithoutProductInput
    bundles?: ProductBundleCreateNestedManyWithoutProductsInput
    bundleItems?: ProductBundleCreateNestedManyWithoutBundleItemsInput
    goodsReceiptItems?: GoodsReceiptItemCreateNestedManyWithoutProductInput
    transferItems?: StockTransferItemCreateNestedManyWithoutProductInput
    auditItems?: InventoryAuditItemCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutInventoryItemsInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    categoryId?: string | null
    brandId?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    variants?: ProductVariantUncheckedCreateNestedManyWithoutProductInput
    suppliers?: ProductSupplierUncheckedCreateNestedManyWithoutProductInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    purchaseItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutProductInput
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutProductInput
    audits?: InventoryAuditUncheckedCreateNestedManyWithoutProductInput
    reviews?: ProductReviewUncheckedCreateNestedManyWithoutProductInput
    bundles?: ProductBundleUncheckedCreateNestedManyWithoutProductsInput
    bundleItems?: ProductBundleUncheckedCreateNestedManyWithoutBundleItemsInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedCreateNestedManyWithoutProductInput
    transferItems?: StockTransferItemUncheckedCreateNestedManyWithoutProductInput
    auditItems?: InventoryAuditItemUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutInventoryItemsInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutInventoryItemsInput, ProductUncheckedCreateWithoutInventoryItemsInput>
  }

  export type ProductVariantCreateWithoutInventoryItemsInput = {
    id?: string
    name: string
    sku: string
    barcode?: string | null
    attributes: JsonNullValueInput | InputJsonValue
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number | null
    reorderPoint?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutVariantsInput
    movements?: InventoryMovementCreateNestedManyWithoutVariantInput
    purchaseItems?: PurchaseOrderItemCreateNestedManyWithoutVariantInput
    goodsReceiptItems?: GoodsReceiptItemCreateNestedManyWithoutVariantInput
    orderItems?: OrderItemCreateNestedManyWithoutVariantInput
    transferItems?: StockTransferItemCreateNestedManyWithoutVariantInput
    auditItems?: InventoryAuditItemCreateNestedManyWithoutVariantInput
  }

  export type ProductVariantUncheckedCreateWithoutInventoryItemsInput = {
    id?: string
    productId: string
    name: string
    sku: string
    barcode?: string | null
    attributes: JsonNullValueInput | InputJsonValue
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number | null
    reorderPoint?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutVariantInput
    purchaseItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutVariantInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedCreateNestedManyWithoutVariantInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutVariantInput
    transferItems?: StockTransferItemUncheckedCreateNestedManyWithoutVariantInput
    auditItems?: InventoryAuditItemUncheckedCreateNestedManyWithoutVariantInput
  }

  export type ProductVariantCreateOrConnectWithoutInventoryItemsInput = {
    where: ProductVariantWhereUniqueInput
    create: XOR<ProductVariantCreateWithoutInventoryItemsInput, ProductVariantUncheckedCreateWithoutInventoryItemsInput>
  }

  export type WarehouseCreateWithoutInventoryItemsInput = {
    id?: string
    name: string
    code: string
    description?: string | null
    address: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: string | null
    managerName?: string | null
    managerEmail?: string | null
    managerPhone?: string | null
    phone?: string | null
    email?: string | null
    type?: $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    hasRfid?: boolean
    hasBarcode?: boolean
    temperatureControl?: boolean
    securityLevel?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    movements?: InventoryMovementCreateNestedManyWithoutWarehouseInput
    transfers?: StockTransferCreateNestedManyWithoutFromWarehouseInput
    receivedTransfers?: StockTransferCreateNestedManyWithoutToWarehouseInput
    orders?: OrderCreateNestedManyWithoutWarehouseInput
    purchaseOrders?: PurchaseOrderCreateNestedManyWithoutWarehouseInput
    audits?: InventoryAuditCreateNestedManyWithoutWarehouseInput
    goodsReceipts?: GoodsReceiptCreateNestedManyWithoutWarehouseInput
    shipments?: ShipmentCreateNestedManyWithoutWarehouseInput
    auditItems?: InventoryAuditItemCreateNestedManyWithoutWarehouseInput
  }

  export type WarehouseUncheckedCreateWithoutInventoryItemsInput = {
    id?: string
    name: string
    code: string
    description?: string | null
    address: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: string | null
    managerName?: string | null
    managerEmail?: string | null
    managerPhone?: string | null
    phone?: string | null
    email?: string | null
    type?: $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    hasRfid?: boolean
    hasBarcode?: boolean
    temperatureControl?: boolean
    securityLevel?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutWarehouseInput
    transfers?: StockTransferUncheckedCreateNestedManyWithoutFromWarehouseInput
    receivedTransfers?: StockTransferUncheckedCreateNestedManyWithoutToWarehouseInput
    orders?: OrderUncheckedCreateNestedManyWithoutWarehouseInput
    purchaseOrders?: PurchaseOrderUncheckedCreateNestedManyWithoutWarehouseInput
    audits?: InventoryAuditUncheckedCreateNestedManyWithoutWarehouseInput
    goodsReceipts?: GoodsReceiptUncheckedCreateNestedManyWithoutWarehouseInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutWarehouseInput
    auditItems?: InventoryAuditItemUncheckedCreateNestedManyWithoutWarehouseInput
  }

  export type WarehouseCreateOrConnectWithoutInventoryItemsInput = {
    where: WarehouseWhereUniqueInput
    create: XOR<WarehouseCreateWithoutInventoryItemsInput, WarehouseUncheckedCreateWithoutInventoryItemsInput>
  }

  export type InventoryMovementCreateWithoutInventoryItemInput = {
    id?: string
    type: $Enums.MovementType
    subtype?: string | null
    quantity: number
    quantityBefore: number
    quantityAfter: number
    unitCost?: Decimal | DecimalJsLike | number | string | null
    totalCost?: Decimal | DecimalJsLike | number | string | null
    referenceType?: string | null
    referenceId?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    expiryDate?: Date | string | null
    reason?: string | null
    notes?: string | null
    userId: string
    approvedBy?: string | null
    approvedAt?: Date | string | null
    occurredAt?: Date | string
    createdAt?: Date | string
    product: ProductCreateNestedOneWithoutMovementsInput
    variant?: ProductVariantCreateNestedOneWithoutMovementsInput
    warehouse: WarehouseCreateNestedOneWithoutMovementsInput
  }

  export type InventoryMovementUncheckedCreateWithoutInventoryItemInput = {
    id?: string
    type: $Enums.MovementType
    subtype?: string | null
    productId: string
    variantId?: string | null
    warehouseId: string
    quantity: number
    quantityBefore: number
    quantityAfter: number
    unitCost?: Decimal | DecimalJsLike | number | string | null
    totalCost?: Decimal | DecimalJsLike | number | string | null
    referenceType?: string | null
    referenceId?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    expiryDate?: Date | string | null
    reason?: string | null
    notes?: string | null
    userId: string
    approvedBy?: string | null
    approvedAt?: Date | string | null
    occurredAt?: Date | string
    createdAt?: Date | string
  }

  export type InventoryMovementCreateOrConnectWithoutInventoryItemInput = {
    where: InventoryMovementWhereUniqueInput
    create: XOR<InventoryMovementCreateWithoutInventoryItemInput, InventoryMovementUncheckedCreateWithoutInventoryItemInput>
  }

  export type InventoryMovementCreateManyInventoryItemInputEnvelope = {
    data: InventoryMovementCreateManyInventoryItemInput | InventoryMovementCreateManyInventoryItemInput[]
    skipDuplicates?: boolean
  }

  export type StockReservationCreateWithoutInventoryItemInput = {
    id?: string
    reservationType: $Enums.ReservationType
    referenceType: string
    referenceId: string
    quantity: number
    status?: $Enums.ReservationStatus
    reservedAt?: Date | string
    expiresAt?: Date | string | null
    releasedAt?: Date | string | null
    reservedBy: string
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type StockReservationUncheckedCreateWithoutInventoryItemInput = {
    id?: string
    reservationType: $Enums.ReservationType
    referenceType: string
    referenceId: string
    quantity: number
    status?: $Enums.ReservationStatus
    reservedAt?: Date | string
    expiresAt?: Date | string | null
    releasedAt?: Date | string | null
    reservedBy: string
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type StockReservationCreateOrConnectWithoutInventoryItemInput = {
    where: StockReservationWhereUniqueInput
    create: XOR<StockReservationCreateWithoutInventoryItemInput, StockReservationUncheckedCreateWithoutInventoryItemInput>
  }

  export type StockReservationCreateManyInventoryItemInputEnvelope = {
    data: StockReservationCreateManyInventoryItemInput | StockReservationCreateManyInventoryItemInput[]
    skipDuplicates?: boolean
  }

  export type ProductUpsertWithoutInventoryItemsInput = {
    update: XOR<ProductUpdateWithoutInventoryItemsInput, ProductUncheckedUpdateWithoutInventoryItemsInput>
    create: XOR<ProductCreateWithoutInventoryItemsInput, ProductUncheckedCreateWithoutInventoryItemsInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutInventoryItemsInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutInventoryItemsInput, ProductUncheckedUpdateWithoutInventoryItemsInput>
  }

  export type ProductUpdateWithoutInventoryItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    category?: CategoryUpdateOneWithoutProductsNestedInput
    brand?: BrandUpdateOneWithoutProductsNestedInput
    variants?: ProductVariantUpdateManyWithoutProductNestedInput
    suppliers?: ProductSupplierUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
    purchaseItems?: PurchaseOrderItemUpdateManyWithoutProductNestedInput
    movements?: InventoryMovementUpdateManyWithoutProductNestedInput
    audits?: InventoryAuditUpdateManyWithoutProductNestedInput
    reviews?: ProductReviewUpdateManyWithoutProductNestedInput
    bundles?: ProductBundleUpdateManyWithoutProductsNestedInput
    bundleItems?: ProductBundleUpdateManyWithoutBundleItemsNestedInput
    goodsReceiptItems?: GoodsReceiptItemUpdateManyWithoutProductNestedInput
    transferItems?: StockTransferItemUpdateManyWithoutProductNestedInput
    auditItems?: InventoryAuditItemUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutInventoryItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    variants?: ProductVariantUncheckedUpdateManyWithoutProductNestedInput
    suppliers?: ProductSupplierUncheckedUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    purchaseItems?: PurchaseOrderItemUncheckedUpdateManyWithoutProductNestedInput
    movements?: InventoryMovementUncheckedUpdateManyWithoutProductNestedInput
    audits?: InventoryAuditUncheckedUpdateManyWithoutProductNestedInput
    reviews?: ProductReviewUncheckedUpdateManyWithoutProductNestedInput
    bundles?: ProductBundleUncheckedUpdateManyWithoutProductsNestedInput
    bundleItems?: ProductBundleUncheckedUpdateManyWithoutBundleItemsNestedInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedUpdateManyWithoutProductNestedInput
    transferItems?: StockTransferItemUncheckedUpdateManyWithoutProductNestedInput
    auditItems?: InventoryAuditItemUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductVariantUpsertWithoutInventoryItemsInput = {
    update: XOR<ProductVariantUpdateWithoutInventoryItemsInput, ProductVariantUncheckedUpdateWithoutInventoryItemsInput>
    create: XOR<ProductVariantCreateWithoutInventoryItemsInput, ProductVariantUncheckedCreateWithoutInventoryItemsInput>
    where?: ProductVariantWhereInput
  }

  export type ProductVariantUpdateToOneWithWhereWithoutInventoryItemsInput = {
    where?: ProductVariantWhereInput
    data: XOR<ProductVariantUpdateWithoutInventoryItemsInput, ProductVariantUncheckedUpdateWithoutInventoryItemsInput>
  }

  export type ProductVariantUpdateWithoutInventoryItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: JsonNullValueInput | InputJsonValue
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutVariantsNestedInput
    movements?: InventoryMovementUpdateManyWithoutVariantNestedInput
    purchaseItems?: PurchaseOrderItemUpdateManyWithoutVariantNestedInput
    goodsReceiptItems?: GoodsReceiptItemUpdateManyWithoutVariantNestedInput
    orderItems?: OrderItemUpdateManyWithoutVariantNestedInput
    transferItems?: StockTransferItemUpdateManyWithoutVariantNestedInput
    auditItems?: InventoryAuditItemUpdateManyWithoutVariantNestedInput
  }

  export type ProductVariantUncheckedUpdateWithoutInventoryItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: JsonNullValueInput | InputJsonValue
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    movements?: InventoryMovementUncheckedUpdateManyWithoutVariantNestedInput
    purchaseItems?: PurchaseOrderItemUncheckedUpdateManyWithoutVariantNestedInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedUpdateManyWithoutVariantNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutVariantNestedInput
    transferItems?: StockTransferItemUncheckedUpdateManyWithoutVariantNestedInput
    auditItems?: InventoryAuditItemUncheckedUpdateManyWithoutVariantNestedInput
  }

  export type WarehouseUpsertWithoutInventoryItemsInput = {
    update: XOR<WarehouseUpdateWithoutInventoryItemsInput, WarehouseUncheckedUpdateWithoutInventoryItemsInput>
    create: XOR<WarehouseCreateWithoutInventoryItemsInput, WarehouseUncheckedCreateWithoutInventoryItemsInput>
    where?: WarehouseWhereInput
  }

  export type WarehouseUpdateToOneWithWhereWithoutInventoryItemsInput = {
    where?: WarehouseWhereInput
    data: XOR<WarehouseUpdateWithoutInventoryItemsInput, WarehouseUncheckedUpdateWithoutInventoryItemsInput>
  }

  export type WarehouseUpdateWithoutInventoryItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    managerName?: NullableStringFieldUpdateOperationsInput | string | null
    managerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    managerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumWarehouseTypeFieldUpdateOperationsInput | $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hasRfid?: BoolFieldUpdateOperationsInput | boolean
    hasBarcode?: BoolFieldUpdateOperationsInput | boolean
    temperatureControl?: BoolFieldUpdateOperationsInput | boolean
    securityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    movements?: InventoryMovementUpdateManyWithoutWarehouseNestedInput
    transfers?: StockTransferUpdateManyWithoutFromWarehouseNestedInput
    receivedTransfers?: StockTransferUpdateManyWithoutToWarehouseNestedInput
    orders?: OrderUpdateManyWithoutWarehouseNestedInput
    purchaseOrders?: PurchaseOrderUpdateManyWithoutWarehouseNestedInput
    audits?: InventoryAuditUpdateManyWithoutWarehouseNestedInput
    goodsReceipts?: GoodsReceiptUpdateManyWithoutWarehouseNestedInput
    shipments?: ShipmentUpdateManyWithoutWarehouseNestedInput
    auditItems?: InventoryAuditItemUpdateManyWithoutWarehouseNestedInput
  }

  export type WarehouseUncheckedUpdateWithoutInventoryItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    managerName?: NullableStringFieldUpdateOperationsInput | string | null
    managerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    managerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumWarehouseTypeFieldUpdateOperationsInput | $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hasRfid?: BoolFieldUpdateOperationsInput | boolean
    hasBarcode?: BoolFieldUpdateOperationsInput | boolean
    temperatureControl?: BoolFieldUpdateOperationsInput | boolean
    securityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    movements?: InventoryMovementUncheckedUpdateManyWithoutWarehouseNestedInput
    transfers?: StockTransferUncheckedUpdateManyWithoutFromWarehouseNestedInput
    receivedTransfers?: StockTransferUncheckedUpdateManyWithoutToWarehouseNestedInput
    orders?: OrderUncheckedUpdateManyWithoutWarehouseNestedInput
    purchaseOrders?: PurchaseOrderUncheckedUpdateManyWithoutWarehouseNestedInput
    audits?: InventoryAuditUncheckedUpdateManyWithoutWarehouseNestedInput
    goodsReceipts?: GoodsReceiptUncheckedUpdateManyWithoutWarehouseNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutWarehouseNestedInput
    auditItems?: InventoryAuditItemUncheckedUpdateManyWithoutWarehouseNestedInput
  }

  export type InventoryMovementUpsertWithWhereUniqueWithoutInventoryItemInput = {
    where: InventoryMovementWhereUniqueInput
    update: XOR<InventoryMovementUpdateWithoutInventoryItemInput, InventoryMovementUncheckedUpdateWithoutInventoryItemInput>
    create: XOR<InventoryMovementCreateWithoutInventoryItemInput, InventoryMovementUncheckedCreateWithoutInventoryItemInput>
  }

  export type InventoryMovementUpdateWithWhereUniqueWithoutInventoryItemInput = {
    where: InventoryMovementWhereUniqueInput
    data: XOR<InventoryMovementUpdateWithoutInventoryItemInput, InventoryMovementUncheckedUpdateWithoutInventoryItemInput>
  }

  export type InventoryMovementUpdateManyWithWhereWithoutInventoryItemInput = {
    where: InventoryMovementScalarWhereInput
    data: XOR<InventoryMovementUpdateManyMutationInput, InventoryMovementUncheckedUpdateManyWithoutInventoryItemInput>
  }

  export type StockReservationUpsertWithWhereUniqueWithoutInventoryItemInput = {
    where: StockReservationWhereUniqueInput
    update: XOR<StockReservationUpdateWithoutInventoryItemInput, StockReservationUncheckedUpdateWithoutInventoryItemInput>
    create: XOR<StockReservationCreateWithoutInventoryItemInput, StockReservationUncheckedCreateWithoutInventoryItemInput>
  }

  export type StockReservationUpdateWithWhereUniqueWithoutInventoryItemInput = {
    where: StockReservationWhereUniqueInput
    data: XOR<StockReservationUpdateWithoutInventoryItemInput, StockReservationUncheckedUpdateWithoutInventoryItemInput>
  }

  export type StockReservationUpdateManyWithWhereWithoutInventoryItemInput = {
    where: StockReservationScalarWhereInput
    data: XOR<StockReservationUpdateManyMutationInput, StockReservationUncheckedUpdateManyWithoutInventoryItemInput>
  }

  export type StockReservationScalarWhereInput = {
    AND?: StockReservationScalarWhereInput | StockReservationScalarWhereInput[]
    OR?: StockReservationScalarWhereInput[]
    NOT?: StockReservationScalarWhereInput | StockReservationScalarWhereInput[]
    id?: StringFilter<"StockReservation"> | string
    inventoryItemId?: StringFilter<"StockReservation"> | string
    reservationType?: EnumReservationTypeFilter<"StockReservation"> | $Enums.ReservationType
    referenceType?: StringFilter<"StockReservation"> | string
    referenceId?: StringFilter<"StockReservation"> | string
    quantity?: IntFilter<"StockReservation"> | number
    status?: EnumReservationStatusFilter<"StockReservation"> | $Enums.ReservationStatus
    reservedAt?: DateTimeFilter<"StockReservation"> | Date | string
    expiresAt?: DateTimeNullableFilter<"StockReservation"> | Date | string | null
    releasedAt?: DateTimeNullableFilter<"StockReservation"> | Date | string | null
    reservedBy?: StringFilter<"StockReservation"> | string
    notes?: StringNullableFilter<"StockReservation"> | string | null
    createdAt?: DateTimeFilter<"StockReservation"> | Date | string
    updatedAt?: DateTimeFilter<"StockReservation"> | Date | string
  }

  export type ProductCreateWithoutMovementsInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    category?: CategoryCreateNestedOneWithoutProductsInput
    brand?: BrandCreateNestedOneWithoutProductsInput
    inventoryItems?: InventoryItemCreateNestedManyWithoutProductInput
    variants?: ProductVariantCreateNestedManyWithoutProductInput
    suppliers?: ProductSupplierCreateNestedManyWithoutProductInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
    purchaseItems?: PurchaseOrderItemCreateNestedManyWithoutProductInput
    audits?: InventoryAuditCreateNestedManyWithoutProductInput
    reviews?: ProductReviewCreateNestedManyWithoutProductInput
    bundles?: ProductBundleCreateNestedManyWithoutProductsInput
    bundleItems?: ProductBundleCreateNestedManyWithoutBundleItemsInput
    goodsReceiptItems?: GoodsReceiptItemCreateNestedManyWithoutProductInput
    transferItems?: StockTransferItemCreateNestedManyWithoutProductInput
    auditItems?: InventoryAuditItemCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutMovementsInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    categoryId?: string | null
    brandId?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    inventoryItems?: InventoryItemUncheckedCreateNestedManyWithoutProductInput
    variants?: ProductVariantUncheckedCreateNestedManyWithoutProductInput
    suppliers?: ProductSupplierUncheckedCreateNestedManyWithoutProductInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    purchaseItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutProductInput
    audits?: InventoryAuditUncheckedCreateNestedManyWithoutProductInput
    reviews?: ProductReviewUncheckedCreateNestedManyWithoutProductInput
    bundles?: ProductBundleUncheckedCreateNestedManyWithoutProductsInput
    bundleItems?: ProductBundleUncheckedCreateNestedManyWithoutBundleItemsInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedCreateNestedManyWithoutProductInput
    transferItems?: StockTransferItemUncheckedCreateNestedManyWithoutProductInput
    auditItems?: InventoryAuditItemUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutMovementsInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutMovementsInput, ProductUncheckedCreateWithoutMovementsInput>
  }

  export type ProductVariantCreateWithoutMovementsInput = {
    id?: string
    name: string
    sku: string
    barcode?: string | null
    attributes: JsonNullValueInput | InputJsonValue
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number | null
    reorderPoint?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutVariantsInput
    inventoryItems?: InventoryItemCreateNestedManyWithoutVariantInput
    purchaseItems?: PurchaseOrderItemCreateNestedManyWithoutVariantInput
    goodsReceiptItems?: GoodsReceiptItemCreateNestedManyWithoutVariantInput
    orderItems?: OrderItemCreateNestedManyWithoutVariantInput
    transferItems?: StockTransferItemCreateNestedManyWithoutVariantInput
    auditItems?: InventoryAuditItemCreateNestedManyWithoutVariantInput
  }

  export type ProductVariantUncheckedCreateWithoutMovementsInput = {
    id?: string
    productId: string
    name: string
    sku: string
    barcode?: string | null
    attributes: JsonNullValueInput | InputJsonValue
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number | null
    reorderPoint?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    inventoryItems?: InventoryItemUncheckedCreateNestedManyWithoutVariantInput
    purchaseItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutVariantInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedCreateNestedManyWithoutVariantInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutVariantInput
    transferItems?: StockTransferItemUncheckedCreateNestedManyWithoutVariantInput
    auditItems?: InventoryAuditItemUncheckedCreateNestedManyWithoutVariantInput
  }

  export type ProductVariantCreateOrConnectWithoutMovementsInput = {
    where: ProductVariantWhereUniqueInput
    create: XOR<ProductVariantCreateWithoutMovementsInput, ProductVariantUncheckedCreateWithoutMovementsInput>
  }

  export type WarehouseCreateWithoutMovementsInput = {
    id?: string
    name: string
    code: string
    description?: string | null
    address: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: string | null
    managerName?: string | null
    managerEmail?: string | null
    managerPhone?: string | null
    phone?: string | null
    email?: string | null
    type?: $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    hasRfid?: boolean
    hasBarcode?: boolean
    temperatureControl?: boolean
    securityLevel?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    inventoryItems?: InventoryItemCreateNestedManyWithoutWarehouseInput
    transfers?: StockTransferCreateNestedManyWithoutFromWarehouseInput
    receivedTransfers?: StockTransferCreateNestedManyWithoutToWarehouseInput
    orders?: OrderCreateNestedManyWithoutWarehouseInput
    purchaseOrders?: PurchaseOrderCreateNestedManyWithoutWarehouseInput
    audits?: InventoryAuditCreateNestedManyWithoutWarehouseInput
    goodsReceipts?: GoodsReceiptCreateNestedManyWithoutWarehouseInput
    shipments?: ShipmentCreateNestedManyWithoutWarehouseInput
    auditItems?: InventoryAuditItemCreateNestedManyWithoutWarehouseInput
  }

  export type WarehouseUncheckedCreateWithoutMovementsInput = {
    id?: string
    name: string
    code: string
    description?: string | null
    address: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: string | null
    managerName?: string | null
    managerEmail?: string | null
    managerPhone?: string | null
    phone?: string | null
    email?: string | null
    type?: $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    hasRfid?: boolean
    hasBarcode?: boolean
    temperatureControl?: boolean
    securityLevel?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    inventoryItems?: InventoryItemUncheckedCreateNestedManyWithoutWarehouseInput
    transfers?: StockTransferUncheckedCreateNestedManyWithoutFromWarehouseInput
    receivedTransfers?: StockTransferUncheckedCreateNestedManyWithoutToWarehouseInput
    orders?: OrderUncheckedCreateNestedManyWithoutWarehouseInput
    purchaseOrders?: PurchaseOrderUncheckedCreateNestedManyWithoutWarehouseInput
    audits?: InventoryAuditUncheckedCreateNestedManyWithoutWarehouseInput
    goodsReceipts?: GoodsReceiptUncheckedCreateNestedManyWithoutWarehouseInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutWarehouseInput
    auditItems?: InventoryAuditItemUncheckedCreateNestedManyWithoutWarehouseInput
  }

  export type WarehouseCreateOrConnectWithoutMovementsInput = {
    where: WarehouseWhereUniqueInput
    create: XOR<WarehouseCreateWithoutMovementsInput, WarehouseUncheckedCreateWithoutMovementsInput>
  }

  export type InventoryItemCreateWithoutMovementsInput = {
    id?: string
    zone?: string | null
    aisle?: string | null
    shelf?: string | null
    bin?: string | null
    locationCode?: string | null
    quantity?: number
    reservedQuantity?: number
    availableQuantity?: number
    averageCost?: Decimal | DecimalJsLike | number | string | null
    lastCost?: Decimal | DecimalJsLike | number | string | null
    lotNumber?: string | null
    batchNumber?: string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    expiryDate?: Date | string | null
    status?: $Enums.InventoryStatus
    qcStatus?: $Enums.QualityStatus
    quarantineReason?: string | null
    lastMovement?: Date | string | null
    lastCount?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutInventoryItemsInput
    variant?: ProductVariantCreateNestedOneWithoutInventoryItemsInput
    warehouse: WarehouseCreateNestedOneWithoutInventoryItemsInput
    reservations?: StockReservationCreateNestedManyWithoutInventoryItemInput
  }

  export type InventoryItemUncheckedCreateWithoutMovementsInput = {
    id?: string
    productId: string
    variantId?: string | null
    warehouseId: string
    zone?: string | null
    aisle?: string | null
    shelf?: string | null
    bin?: string | null
    locationCode?: string | null
    quantity?: number
    reservedQuantity?: number
    availableQuantity?: number
    averageCost?: Decimal | DecimalJsLike | number | string | null
    lastCost?: Decimal | DecimalJsLike | number | string | null
    lotNumber?: string | null
    batchNumber?: string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    expiryDate?: Date | string | null
    status?: $Enums.InventoryStatus
    qcStatus?: $Enums.QualityStatus
    quarantineReason?: string | null
    lastMovement?: Date | string | null
    lastCount?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    reservations?: StockReservationUncheckedCreateNestedManyWithoutInventoryItemInput
  }

  export type InventoryItemCreateOrConnectWithoutMovementsInput = {
    where: InventoryItemWhereUniqueInput
    create: XOR<InventoryItemCreateWithoutMovementsInput, InventoryItemUncheckedCreateWithoutMovementsInput>
  }

  export type ProductUpsertWithoutMovementsInput = {
    update: XOR<ProductUpdateWithoutMovementsInput, ProductUncheckedUpdateWithoutMovementsInput>
    create: XOR<ProductCreateWithoutMovementsInput, ProductUncheckedCreateWithoutMovementsInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutMovementsInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutMovementsInput, ProductUncheckedUpdateWithoutMovementsInput>
  }

  export type ProductUpdateWithoutMovementsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    category?: CategoryUpdateOneWithoutProductsNestedInput
    brand?: BrandUpdateOneWithoutProductsNestedInput
    inventoryItems?: InventoryItemUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUpdateManyWithoutProductNestedInput
    suppliers?: ProductSupplierUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
    purchaseItems?: PurchaseOrderItemUpdateManyWithoutProductNestedInput
    audits?: InventoryAuditUpdateManyWithoutProductNestedInput
    reviews?: ProductReviewUpdateManyWithoutProductNestedInput
    bundles?: ProductBundleUpdateManyWithoutProductsNestedInput
    bundleItems?: ProductBundleUpdateManyWithoutBundleItemsNestedInput
    goodsReceiptItems?: GoodsReceiptItemUpdateManyWithoutProductNestedInput
    transferItems?: StockTransferItemUpdateManyWithoutProductNestedInput
    auditItems?: InventoryAuditItemUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutMovementsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    inventoryItems?: InventoryItemUncheckedUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUncheckedUpdateManyWithoutProductNestedInput
    suppliers?: ProductSupplierUncheckedUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    purchaseItems?: PurchaseOrderItemUncheckedUpdateManyWithoutProductNestedInput
    audits?: InventoryAuditUncheckedUpdateManyWithoutProductNestedInput
    reviews?: ProductReviewUncheckedUpdateManyWithoutProductNestedInput
    bundles?: ProductBundleUncheckedUpdateManyWithoutProductsNestedInput
    bundleItems?: ProductBundleUncheckedUpdateManyWithoutBundleItemsNestedInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedUpdateManyWithoutProductNestedInput
    transferItems?: StockTransferItemUncheckedUpdateManyWithoutProductNestedInput
    auditItems?: InventoryAuditItemUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductVariantUpsertWithoutMovementsInput = {
    update: XOR<ProductVariantUpdateWithoutMovementsInput, ProductVariantUncheckedUpdateWithoutMovementsInput>
    create: XOR<ProductVariantCreateWithoutMovementsInput, ProductVariantUncheckedCreateWithoutMovementsInput>
    where?: ProductVariantWhereInput
  }

  export type ProductVariantUpdateToOneWithWhereWithoutMovementsInput = {
    where?: ProductVariantWhereInput
    data: XOR<ProductVariantUpdateWithoutMovementsInput, ProductVariantUncheckedUpdateWithoutMovementsInput>
  }

  export type ProductVariantUpdateWithoutMovementsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: JsonNullValueInput | InputJsonValue
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutVariantsNestedInput
    inventoryItems?: InventoryItemUpdateManyWithoutVariantNestedInput
    purchaseItems?: PurchaseOrderItemUpdateManyWithoutVariantNestedInput
    goodsReceiptItems?: GoodsReceiptItemUpdateManyWithoutVariantNestedInput
    orderItems?: OrderItemUpdateManyWithoutVariantNestedInput
    transferItems?: StockTransferItemUpdateManyWithoutVariantNestedInput
    auditItems?: InventoryAuditItemUpdateManyWithoutVariantNestedInput
  }

  export type ProductVariantUncheckedUpdateWithoutMovementsInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: JsonNullValueInput | InputJsonValue
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryItems?: InventoryItemUncheckedUpdateManyWithoutVariantNestedInput
    purchaseItems?: PurchaseOrderItemUncheckedUpdateManyWithoutVariantNestedInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedUpdateManyWithoutVariantNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutVariantNestedInput
    transferItems?: StockTransferItemUncheckedUpdateManyWithoutVariantNestedInput
    auditItems?: InventoryAuditItemUncheckedUpdateManyWithoutVariantNestedInput
  }

  export type WarehouseUpsertWithoutMovementsInput = {
    update: XOR<WarehouseUpdateWithoutMovementsInput, WarehouseUncheckedUpdateWithoutMovementsInput>
    create: XOR<WarehouseCreateWithoutMovementsInput, WarehouseUncheckedCreateWithoutMovementsInput>
    where?: WarehouseWhereInput
  }

  export type WarehouseUpdateToOneWithWhereWithoutMovementsInput = {
    where?: WarehouseWhereInput
    data: XOR<WarehouseUpdateWithoutMovementsInput, WarehouseUncheckedUpdateWithoutMovementsInput>
  }

  export type WarehouseUpdateWithoutMovementsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    managerName?: NullableStringFieldUpdateOperationsInput | string | null
    managerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    managerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumWarehouseTypeFieldUpdateOperationsInput | $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hasRfid?: BoolFieldUpdateOperationsInput | boolean
    hasBarcode?: BoolFieldUpdateOperationsInput | boolean
    temperatureControl?: BoolFieldUpdateOperationsInput | boolean
    securityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryItems?: InventoryItemUpdateManyWithoutWarehouseNestedInput
    transfers?: StockTransferUpdateManyWithoutFromWarehouseNestedInput
    receivedTransfers?: StockTransferUpdateManyWithoutToWarehouseNestedInput
    orders?: OrderUpdateManyWithoutWarehouseNestedInput
    purchaseOrders?: PurchaseOrderUpdateManyWithoutWarehouseNestedInput
    audits?: InventoryAuditUpdateManyWithoutWarehouseNestedInput
    goodsReceipts?: GoodsReceiptUpdateManyWithoutWarehouseNestedInput
    shipments?: ShipmentUpdateManyWithoutWarehouseNestedInput
    auditItems?: InventoryAuditItemUpdateManyWithoutWarehouseNestedInput
  }

  export type WarehouseUncheckedUpdateWithoutMovementsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    managerName?: NullableStringFieldUpdateOperationsInput | string | null
    managerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    managerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumWarehouseTypeFieldUpdateOperationsInput | $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hasRfid?: BoolFieldUpdateOperationsInput | boolean
    hasBarcode?: BoolFieldUpdateOperationsInput | boolean
    temperatureControl?: BoolFieldUpdateOperationsInput | boolean
    securityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryItems?: InventoryItemUncheckedUpdateManyWithoutWarehouseNestedInput
    transfers?: StockTransferUncheckedUpdateManyWithoutFromWarehouseNestedInput
    receivedTransfers?: StockTransferUncheckedUpdateManyWithoutToWarehouseNestedInput
    orders?: OrderUncheckedUpdateManyWithoutWarehouseNestedInput
    purchaseOrders?: PurchaseOrderUncheckedUpdateManyWithoutWarehouseNestedInput
    audits?: InventoryAuditUncheckedUpdateManyWithoutWarehouseNestedInput
    goodsReceipts?: GoodsReceiptUncheckedUpdateManyWithoutWarehouseNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutWarehouseNestedInput
    auditItems?: InventoryAuditItemUncheckedUpdateManyWithoutWarehouseNestedInput
  }

  export type InventoryItemUpsertWithoutMovementsInput = {
    update: XOR<InventoryItemUpdateWithoutMovementsInput, InventoryItemUncheckedUpdateWithoutMovementsInput>
    create: XOR<InventoryItemCreateWithoutMovementsInput, InventoryItemUncheckedCreateWithoutMovementsInput>
    where?: InventoryItemWhereInput
  }

  export type InventoryItemUpdateToOneWithWhereWithoutMovementsInput = {
    where?: InventoryItemWhereInput
    data: XOR<InventoryItemUpdateWithoutMovementsInput, InventoryItemUncheckedUpdateWithoutMovementsInput>
  }

  export type InventoryItemUpdateWithoutMovementsInput = {
    id?: StringFieldUpdateOperationsInput | string
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    aisle?: NullableStringFieldUpdateOperationsInput | string | null
    shelf?: NullableStringFieldUpdateOperationsInput | string | null
    bin?: NullableStringFieldUpdateOperationsInput | string | null
    locationCode?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    reservedQuantity?: IntFieldUpdateOperationsInput | number
    availableQuantity?: IntFieldUpdateOperationsInput | number
    averageCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lastCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInventoryStatusFieldUpdateOperationsInput | $Enums.InventoryStatus
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    quarantineReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastMovement?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastCount?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutInventoryItemsNestedInput
    variant?: ProductVariantUpdateOneWithoutInventoryItemsNestedInput
    warehouse?: WarehouseUpdateOneRequiredWithoutInventoryItemsNestedInput
    reservations?: StockReservationUpdateManyWithoutInventoryItemNestedInput
  }

  export type InventoryItemUncheckedUpdateWithoutMovementsInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    warehouseId?: StringFieldUpdateOperationsInput | string
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    aisle?: NullableStringFieldUpdateOperationsInput | string | null
    shelf?: NullableStringFieldUpdateOperationsInput | string | null
    bin?: NullableStringFieldUpdateOperationsInput | string | null
    locationCode?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    reservedQuantity?: IntFieldUpdateOperationsInput | number
    availableQuantity?: IntFieldUpdateOperationsInput | number
    averageCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lastCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInventoryStatusFieldUpdateOperationsInput | $Enums.InventoryStatus
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    quarantineReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastMovement?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastCount?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reservations?: StockReservationUncheckedUpdateManyWithoutInventoryItemNestedInput
  }

  export type ProductSupplierCreateWithoutSupplierInput = {
    id?: string
    supplierSku?: string | null
    supplierName?: string | null
    unitCost: Decimal | DecimalJsLike | number | string
    currency?: string
    minOrderQty?: number | null
    maxOrderQty?: number | null
    leadTimeDays?: number | null
    isPreferred?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutSuppliersInput
  }

  export type ProductSupplierUncheckedCreateWithoutSupplierInput = {
    id?: string
    productId: string
    supplierSku?: string | null
    supplierName?: string | null
    unitCost: Decimal | DecimalJsLike | number | string
    currency?: string
    minOrderQty?: number | null
    maxOrderQty?: number | null
    leadTimeDays?: number | null
    isPreferred?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductSupplierCreateOrConnectWithoutSupplierInput = {
    where: ProductSupplierWhereUniqueInput
    create: XOR<ProductSupplierCreateWithoutSupplierInput, ProductSupplierUncheckedCreateWithoutSupplierInput>
  }

  export type ProductSupplierCreateManySupplierInputEnvelope = {
    data: ProductSupplierCreateManySupplierInput | ProductSupplierCreateManySupplierInput[]
    skipDuplicates?: boolean
  }

  export type PurchaseOrderCreateWithoutSupplierInput = {
    id?: string
    orderNumber: string
    subtotal?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingCost?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount?: Decimal | DecimalJsLike | number | string
    currency?: string
    status?: $Enums.PurchaseOrderStatus
    orderDate?: Date | string
    expectedDate?: Date | string | null
    deliveryDate?: Date | string | null
    paymentTerms?: string | null
    shippingTerms?: string | null
    trackingNumber?: string | null
    carrier?: string | null
    approvedBy?: string | null
    approvedAt?: Date | string | null
    notes?: string | null
    internalNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    warehouse?: WarehouseCreateNestedOneWithoutPurchaseOrdersInput
    items?: PurchaseOrderItemCreateNestedManyWithoutPurchaseOrderInput
    receipts?: GoodsReceiptCreateNestedManyWithoutPurchaseOrderInput
    invoices?: SupplierInvoiceCreateNestedManyWithoutPurchaseOrderInput
  }

  export type PurchaseOrderUncheckedCreateWithoutSupplierInput = {
    id?: string
    orderNumber: string
    warehouseId?: string | null
    subtotal?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingCost?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount?: Decimal | DecimalJsLike | number | string
    currency?: string
    status?: $Enums.PurchaseOrderStatus
    orderDate?: Date | string
    expectedDate?: Date | string | null
    deliveryDate?: Date | string | null
    paymentTerms?: string | null
    shippingTerms?: string | null
    trackingNumber?: string | null
    carrier?: string | null
    approvedBy?: string | null
    approvedAt?: Date | string | null
    notes?: string | null
    internalNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    items?: PurchaseOrderItemUncheckedCreateNestedManyWithoutPurchaseOrderInput
    receipts?: GoodsReceiptUncheckedCreateNestedManyWithoutPurchaseOrderInput
    invoices?: SupplierInvoiceUncheckedCreateNestedManyWithoutPurchaseOrderInput
  }

  export type PurchaseOrderCreateOrConnectWithoutSupplierInput = {
    where: PurchaseOrderWhereUniqueInput
    create: XOR<PurchaseOrderCreateWithoutSupplierInput, PurchaseOrderUncheckedCreateWithoutSupplierInput>
  }

  export type PurchaseOrderCreateManySupplierInputEnvelope = {
    data: PurchaseOrderCreateManySupplierInput | PurchaseOrderCreateManySupplierInput[]
    skipDuplicates?: boolean
  }

  export type SupplierInvoiceCreateWithoutSupplierInput = {
    id?: string
    invoiceNumber: string
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    invoiceDate: Date | string
    dueDate: Date | string
    paidDate?: Date | string | null
    status?: $Enums.InvoiceStatus
    paymentMethod?: string | null
    paymentReference?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    purchaseOrder?: PurchaseOrderCreateNestedOneWithoutInvoicesInput
  }

  export type SupplierInvoiceUncheckedCreateWithoutSupplierInput = {
    id?: string
    invoiceNumber: string
    purchaseOrderId?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    invoiceDate: Date | string
    dueDate: Date | string
    paidDate?: Date | string | null
    status?: $Enums.InvoiceStatus
    paymentMethod?: string | null
    paymentReference?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SupplierInvoiceCreateOrConnectWithoutSupplierInput = {
    where: SupplierInvoiceWhereUniqueInput
    create: XOR<SupplierInvoiceCreateWithoutSupplierInput, SupplierInvoiceUncheckedCreateWithoutSupplierInput>
  }

  export type SupplierInvoiceCreateManySupplierInputEnvelope = {
    data: SupplierInvoiceCreateManySupplierInput | SupplierInvoiceCreateManySupplierInput[]
    skipDuplicates?: boolean
  }

  export type SupplierContactCreateWithoutSupplierInput = {
    id?: string
    name: string
    title?: string | null
    email?: string | null
    phone?: string | null
    mobile?: string | null
    isPrimary?: boolean
    department?: string | null
    isActive?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SupplierContactUncheckedCreateWithoutSupplierInput = {
    id?: string
    name: string
    title?: string | null
    email?: string | null
    phone?: string | null
    mobile?: string | null
    isPrimary?: boolean
    department?: string | null
    isActive?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SupplierContactCreateOrConnectWithoutSupplierInput = {
    where: SupplierContactWhereUniqueInput
    create: XOR<SupplierContactCreateWithoutSupplierInput, SupplierContactUncheckedCreateWithoutSupplierInput>
  }

  export type SupplierContactCreateManySupplierInputEnvelope = {
    data: SupplierContactCreateManySupplierInput | SupplierContactCreateManySupplierInput[]
    skipDuplicates?: boolean
  }

  export type SupplierDocumentCreateWithoutSupplierInput = {
    id?: string
    name: string
    type: $Enums.DocumentType
    category?: string | null
    fileName: string
    fileSize?: number | null
    fileType?: string | null
    filePath: string
    uploadedBy: string
    uploadedAt?: Date | string
    expiresAt?: Date | string | null
    isActive?: boolean
  }

  export type SupplierDocumentUncheckedCreateWithoutSupplierInput = {
    id?: string
    name: string
    type: $Enums.DocumentType
    category?: string | null
    fileName: string
    fileSize?: number | null
    fileType?: string | null
    filePath: string
    uploadedBy: string
    uploadedAt?: Date | string
    expiresAt?: Date | string | null
    isActive?: boolean
  }

  export type SupplierDocumentCreateOrConnectWithoutSupplierInput = {
    where: SupplierDocumentWhereUniqueInput
    create: XOR<SupplierDocumentCreateWithoutSupplierInput, SupplierDocumentUncheckedCreateWithoutSupplierInput>
  }

  export type SupplierDocumentCreateManySupplierInputEnvelope = {
    data: SupplierDocumentCreateManySupplierInput | SupplierDocumentCreateManySupplierInput[]
    skipDuplicates?: boolean
  }

  export type ProductSupplierUpsertWithWhereUniqueWithoutSupplierInput = {
    where: ProductSupplierWhereUniqueInput
    update: XOR<ProductSupplierUpdateWithoutSupplierInput, ProductSupplierUncheckedUpdateWithoutSupplierInput>
    create: XOR<ProductSupplierCreateWithoutSupplierInput, ProductSupplierUncheckedCreateWithoutSupplierInput>
  }

  export type ProductSupplierUpdateWithWhereUniqueWithoutSupplierInput = {
    where: ProductSupplierWhereUniqueInput
    data: XOR<ProductSupplierUpdateWithoutSupplierInput, ProductSupplierUncheckedUpdateWithoutSupplierInput>
  }

  export type ProductSupplierUpdateManyWithWhereWithoutSupplierInput = {
    where: ProductSupplierScalarWhereInput
    data: XOR<ProductSupplierUpdateManyMutationInput, ProductSupplierUncheckedUpdateManyWithoutSupplierInput>
  }

  export type PurchaseOrderUpsertWithWhereUniqueWithoutSupplierInput = {
    where: PurchaseOrderWhereUniqueInput
    update: XOR<PurchaseOrderUpdateWithoutSupplierInput, PurchaseOrderUncheckedUpdateWithoutSupplierInput>
    create: XOR<PurchaseOrderCreateWithoutSupplierInput, PurchaseOrderUncheckedCreateWithoutSupplierInput>
  }

  export type PurchaseOrderUpdateWithWhereUniqueWithoutSupplierInput = {
    where: PurchaseOrderWhereUniqueInput
    data: XOR<PurchaseOrderUpdateWithoutSupplierInput, PurchaseOrderUncheckedUpdateWithoutSupplierInput>
  }

  export type PurchaseOrderUpdateManyWithWhereWithoutSupplierInput = {
    where: PurchaseOrderScalarWhereInput
    data: XOR<PurchaseOrderUpdateManyMutationInput, PurchaseOrderUncheckedUpdateManyWithoutSupplierInput>
  }

  export type SupplierInvoiceUpsertWithWhereUniqueWithoutSupplierInput = {
    where: SupplierInvoiceWhereUniqueInput
    update: XOR<SupplierInvoiceUpdateWithoutSupplierInput, SupplierInvoiceUncheckedUpdateWithoutSupplierInput>
    create: XOR<SupplierInvoiceCreateWithoutSupplierInput, SupplierInvoiceUncheckedCreateWithoutSupplierInput>
  }

  export type SupplierInvoiceUpdateWithWhereUniqueWithoutSupplierInput = {
    where: SupplierInvoiceWhereUniqueInput
    data: XOR<SupplierInvoiceUpdateWithoutSupplierInput, SupplierInvoiceUncheckedUpdateWithoutSupplierInput>
  }

  export type SupplierInvoiceUpdateManyWithWhereWithoutSupplierInput = {
    where: SupplierInvoiceScalarWhereInput
    data: XOR<SupplierInvoiceUpdateManyMutationInput, SupplierInvoiceUncheckedUpdateManyWithoutSupplierInput>
  }

  export type SupplierInvoiceScalarWhereInput = {
    AND?: SupplierInvoiceScalarWhereInput | SupplierInvoiceScalarWhereInput[]
    OR?: SupplierInvoiceScalarWhereInput[]
    NOT?: SupplierInvoiceScalarWhereInput | SupplierInvoiceScalarWhereInput[]
    id?: StringFilter<"SupplierInvoice"> | string
    invoiceNumber?: StringFilter<"SupplierInvoice"> | string
    supplierId?: StringFilter<"SupplierInvoice"> | string
    purchaseOrderId?: StringNullableFilter<"SupplierInvoice"> | string | null
    subtotal?: DecimalFilter<"SupplierInvoice"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFilter<"SupplierInvoice"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFilter<"SupplierInvoice"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"SupplierInvoice"> | string
    invoiceDate?: DateTimeFilter<"SupplierInvoice"> | Date | string
    dueDate?: DateTimeFilter<"SupplierInvoice"> | Date | string
    paidDate?: DateTimeNullableFilter<"SupplierInvoice"> | Date | string | null
    status?: EnumInvoiceStatusFilter<"SupplierInvoice"> | $Enums.InvoiceStatus
    paymentMethod?: StringNullableFilter<"SupplierInvoice"> | string | null
    paymentReference?: StringNullableFilter<"SupplierInvoice"> | string | null
    notes?: StringNullableFilter<"SupplierInvoice"> | string | null
    createdAt?: DateTimeFilter<"SupplierInvoice"> | Date | string
    updatedAt?: DateTimeFilter<"SupplierInvoice"> | Date | string
  }

  export type SupplierContactUpsertWithWhereUniqueWithoutSupplierInput = {
    where: SupplierContactWhereUniqueInput
    update: XOR<SupplierContactUpdateWithoutSupplierInput, SupplierContactUncheckedUpdateWithoutSupplierInput>
    create: XOR<SupplierContactCreateWithoutSupplierInput, SupplierContactUncheckedCreateWithoutSupplierInput>
  }

  export type SupplierContactUpdateWithWhereUniqueWithoutSupplierInput = {
    where: SupplierContactWhereUniqueInput
    data: XOR<SupplierContactUpdateWithoutSupplierInput, SupplierContactUncheckedUpdateWithoutSupplierInput>
  }

  export type SupplierContactUpdateManyWithWhereWithoutSupplierInput = {
    where: SupplierContactScalarWhereInput
    data: XOR<SupplierContactUpdateManyMutationInput, SupplierContactUncheckedUpdateManyWithoutSupplierInput>
  }

  export type SupplierContactScalarWhereInput = {
    AND?: SupplierContactScalarWhereInput | SupplierContactScalarWhereInput[]
    OR?: SupplierContactScalarWhereInput[]
    NOT?: SupplierContactScalarWhereInput | SupplierContactScalarWhereInput[]
    id?: StringFilter<"SupplierContact"> | string
    supplierId?: StringFilter<"SupplierContact"> | string
    name?: StringFilter<"SupplierContact"> | string
    title?: StringNullableFilter<"SupplierContact"> | string | null
    email?: StringNullableFilter<"SupplierContact"> | string | null
    phone?: StringNullableFilter<"SupplierContact"> | string | null
    mobile?: StringNullableFilter<"SupplierContact"> | string | null
    isPrimary?: BoolFilter<"SupplierContact"> | boolean
    department?: StringNullableFilter<"SupplierContact"> | string | null
    isActive?: BoolFilter<"SupplierContact"> | boolean
    notes?: StringNullableFilter<"SupplierContact"> | string | null
    createdAt?: DateTimeFilter<"SupplierContact"> | Date | string
    updatedAt?: DateTimeFilter<"SupplierContact"> | Date | string
  }

  export type SupplierDocumentUpsertWithWhereUniqueWithoutSupplierInput = {
    where: SupplierDocumentWhereUniqueInput
    update: XOR<SupplierDocumentUpdateWithoutSupplierInput, SupplierDocumentUncheckedUpdateWithoutSupplierInput>
    create: XOR<SupplierDocumentCreateWithoutSupplierInput, SupplierDocumentUncheckedCreateWithoutSupplierInput>
  }

  export type SupplierDocumentUpdateWithWhereUniqueWithoutSupplierInput = {
    where: SupplierDocumentWhereUniqueInput
    data: XOR<SupplierDocumentUpdateWithoutSupplierInput, SupplierDocumentUncheckedUpdateWithoutSupplierInput>
  }

  export type SupplierDocumentUpdateManyWithWhereWithoutSupplierInput = {
    where: SupplierDocumentScalarWhereInput
    data: XOR<SupplierDocumentUpdateManyMutationInput, SupplierDocumentUncheckedUpdateManyWithoutSupplierInput>
  }

  export type SupplierDocumentScalarWhereInput = {
    AND?: SupplierDocumentScalarWhereInput | SupplierDocumentScalarWhereInput[]
    OR?: SupplierDocumentScalarWhereInput[]
    NOT?: SupplierDocumentScalarWhereInput | SupplierDocumentScalarWhereInput[]
    id?: StringFilter<"SupplierDocument"> | string
    supplierId?: StringFilter<"SupplierDocument"> | string
    name?: StringFilter<"SupplierDocument"> | string
    type?: EnumDocumentTypeFilter<"SupplierDocument"> | $Enums.DocumentType
    category?: StringNullableFilter<"SupplierDocument"> | string | null
    fileName?: StringFilter<"SupplierDocument"> | string
    fileSize?: IntNullableFilter<"SupplierDocument"> | number | null
    fileType?: StringNullableFilter<"SupplierDocument"> | string | null
    filePath?: StringFilter<"SupplierDocument"> | string
    uploadedBy?: StringFilter<"SupplierDocument"> | string
    uploadedAt?: DateTimeFilter<"SupplierDocument"> | Date | string
    expiresAt?: DateTimeNullableFilter<"SupplierDocument"> | Date | string | null
    isActive?: BoolFilter<"SupplierDocument"> | boolean
  }

  export type ProductCreateWithoutSuppliersInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    category?: CategoryCreateNestedOneWithoutProductsInput
    brand?: BrandCreateNestedOneWithoutProductsInput
    inventoryItems?: InventoryItemCreateNestedManyWithoutProductInput
    variants?: ProductVariantCreateNestedManyWithoutProductInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
    purchaseItems?: PurchaseOrderItemCreateNestedManyWithoutProductInput
    movements?: InventoryMovementCreateNestedManyWithoutProductInput
    audits?: InventoryAuditCreateNestedManyWithoutProductInput
    reviews?: ProductReviewCreateNestedManyWithoutProductInput
    bundles?: ProductBundleCreateNestedManyWithoutProductsInput
    bundleItems?: ProductBundleCreateNestedManyWithoutBundleItemsInput
    goodsReceiptItems?: GoodsReceiptItemCreateNestedManyWithoutProductInput
    transferItems?: StockTransferItemCreateNestedManyWithoutProductInput
    auditItems?: InventoryAuditItemCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutSuppliersInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    categoryId?: string | null
    brandId?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    inventoryItems?: InventoryItemUncheckedCreateNestedManyWithoutProductInput
    variants?: ProductVariantUncheckedCreateNestedManyWithoutProductInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    purchaseItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutProductInput
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutProductInput
    audits?: InventoryAuditUncheckedCreateNestedManyWithoutProductInput
    reviews?: ProductReviewUncheckedCreateNestedManyWithoutProductInput
    bundles?: ProductBundleUncheckedCreateNestedManyWithoutProductsInput
    bundleItems?: ProductBundleUncheckedCreateNestedManyWithoutBundleItemsInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedCreateNestedManyWithoutProductInput
    transferItems?: StockTransferItemUncheckedCreateNestedManyWithoutProductInput
    auditItems?: InventoryAuditItemUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutSuppliersInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutSuppliersInput, ProductUncheckedCreateWithoutSuppliersInput>
  }

  export type SupplierCreateWithoutProductsInput = {
    id?: string
    name: string
    code: string
    email?: string | null
    phone?: string | null
    website?: string | null
    companyType?: $Enums.CompanyType | null
    taxId?: string | null
    vatNumber?: string | null
    registrationNumber?: string | null
    billingAddress: JsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    contactName?: string | null
    contactEmail?: string | null
    contactPhone?: string | null
    contactTitle?: string | null
    paymentTerms?: string | null
    creditLimit?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    rating?: Decimal | DecimalJsLike | number | string | null
    onTimeDelivery?: Decimal | DecimalJsLike | number | string | null
    qualityRating?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.SupplierStatus
    certifications?: NullableJsonNullValueInput | InputJsonValue
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    purchaseOrders?: PurchaseOrderCreateNestedManyWithoutSupplierInput
    invoices?: SupplierInvoiceCreateNestedManyWithoutSupplierInput
    contacts?: SupplierContactCreateNestedManyWithoutSupplierInput
    documents?: SupplierDocumentCreateNestedManyWithoutSupplierInput
  }

  export type SupplierUncheckedCreateWithoutProductsInput = {
    id?: string
    name: string
    code: string
    email?: string | null
    phone?: string | null
    website?: string | null
    companyType?: $Enums.CompanyType | null
    taxId?: string | null
    vatNumber?: string | null
    registrationNumber?: string | null
    billingAddress: JsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    contactName?: string | null
    contactEmail?: string | null
    contactPhone?: string | null
    contactTitle?: string | null
    paymentTerms?: string | null
    creditLimit?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    rating?: Decimal | DecimalJsLike | number | string | null
    onTimeDelivery?: Decimal | DecimalJsLike | number | string | null
    qualityRating?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.SupplierStatus
    certifications?: NullableJsonNullValueInput | InputJsonValue
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    purchaseOrders?: PurchaseOrderUncheckedCreateNestedManyWithoutSupplierInput
    invoices?: SupplierInvoiceUncheckedCreateNestedManyWithoutSupplierInput
    contacts?: SupplierContactUncheckedCreateNestedManyWithoutSupplierInput
    documents?: SupplierDocumentUncheckedCreateNestedManyWithoutSupplierInput
  }

  export type SupplierCreateOrConnectWithoutProductsInput = {
    where: SupplierWhereUniqueInput
    create: XOR<SupplierCreateWithoutProductsInput, SupplierUncheckedCreateWithoutProductsInput>
  }

  export type ProductUpsertWithoutSuppliersInput = {
    update: XOR<ProductUpdateWithoutSuppliersInput, ProductUncheckedUpdateWithoutSuppliersInput>
    create: XOR<ProductCreateWithoutSuppliersInput, ProductUncheckedCreateWithoutSuppliersInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutSuppliersInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutSuppliersInput, ProductUncheckedUpdateWithoutSuppliersInput>
  }

  export type ProductUpdateWithoutSuppliersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    category?: CategoryUpdateOneWithoutProductsNestedInput
    brand?: BrandUpdateOneWithoutProductsNestedInput
    inventoryItems?: InventoryItemUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
    purchaseItems?: PurchaseOrderItemUpdateManyWithoutProductNestedInput
    movements?: InventoryMovementUpdateManyWithoutProductNestedInput
    audits?: InventoryAuditUpdateManyWithoutProductNestedInput
    reviews?: ProductReviewUpdateManyWithoutProductNestedInput
    bundles?: ProductBundleUpdateManyWithoutProductsNestedInput
    bundleItems?: ProductBundleUpdateManyWithoutBundleItemsNestedInput
    goodsReceiptItems?: GoodsReceiptItemUpdateManyWithoutProductNestedInput
    transferItems?: StockTransferItemUpdateManyWithoutProductNestedInput
    auditItems?: InventoryAuditItemUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutSuppliersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    inventoryItems?: InventoryItemUncheckedUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUncheckedUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    purchaseItems?: PurchaseOrderItemUncheckedUpdateManyWithoutProductNestedInput
    movements?: InventoryMovementUncheckedUpdateManyWithoutProductNestedInput
    audits?: InventoryAuditUncheckedUpdateManyWithoutProductNestedInput
    reviews?: ProductReviewUncheckedUpdateManyWithoutProductNestedInput
    bundles?: ProductBundleUncheckedUpdateManyWithoutProductsNestedInput
    bundleItems?: ProductBundleUncheckedUpdateManyWithoutBundleItemsNestedInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedUpdateManyWithoutProductNestedInput
    transferItems?: StockTransferItemUncheckedUpdateManyWithoutProductNestedInput
    auditItems?: InventoryAuditItemUncheckedUpdateManyWithoutProductNestedInput
  }

  export type SupplierUpsertWithoutProductsInput = {
    update: XOR<SupplierUpdateWithoutProductsInput, SupplierUncheckedUpdateWithoutProductsInput>
    create: XOR<SupplierCreateWithoutProductsInput, SupplierUncheckedCreateWithoutProductsInput>
    where?: SupplierWhereInput
  }

  export type SupplierUpdateToOneWithWhereWithoutProductsInput = {
    where?: SupplierWhereInput
    data: XOR<SupplierUpdateWithoutProductsInput, SupplierUncheckedUpdateWithoutProductsInput>
  }

  export type SupplierUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    companyType?: NullableEnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    vatNumber?: NullableStringFieldUpdateOperationsInput | string | null
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: JsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactTitle?: NullableStringFieldUpdateOperationsInput | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    creditLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    onTimeDelivery?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    qualityRating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumSupplierStatusFieldUpdateOperationsInput | $Enums.SupplierStatus
    certifications?: NullableJsonNullValueInput | InputJsonValue
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    purchaseOrders?: PurchaseOrderUpdateManyWithoutSupplierNestedInput
    invoices?: SupplierInvoiceUpdateManyWithoutSupplierNestedInput
    contacts?: SupplierContactUpdateManyWithoutSupplierNestedInput
    documents?: SupplierDocumentUpdateManyWithoutSupplierNestedInput
  }

  export type SupplierUncheckedUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    companyType?: NullableEnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    vatNumber?: NullableStringFieldUpdateOperationsInput | string | null
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: JsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactTitle?: NullableStringFieldUpdateOperationsInput | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    creditLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    onTimeDelivery?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    qualityRating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumSupplierStatusFieldUpdateOperationsInput | $Enums.SupplierStatus
    certifications?: NullableJsonNullValueInput | InputJsonValue
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    purchaseOrders?: PurchaseOrderUncheckedUpdateManyWithoutSupplierNestedInput
    invoices?: SupplierInvoiceUncheckedUpdateManyWithoutSupplierNestedInput
    contacts?: SupplierContactUncheckedUpdateManyWithoutSupplierNestedInput
    documents?: SupplierDocumentUncheckedUpdateManyWithoutSupplierNestedInput
  }

  export type SupplierCreateWithoutContactsInput = {
    id?: string
    name: string
    code: string
    email?: string | null
    phone?: string | null
    website?: string | null
    companyType?: $Enums.CompanyType | null
    taxId?: string | null
    vatNumber?: string | null
    registrationNumber?: string | null
    billingAddress: JsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    contactName?: string | null
    contactEmail?: string | null
    contactPhone?: string | null
    contactTitle?: string | null
    paymentTerms?: string | null
    creditLimit?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    rating?: Decimal | DecimalJsLike | number | string | null
    onTimeDelivery?: Decimal | DecimalJsLike | number | string | null
    qualityRating?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.SupplierStatus
    certifications?: NullableJsonNullValueInput | InputJsonValue
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    products?: ProductSupplierCreateNestedManyWithoutSupplierInput
    purchaseOrders?: PurchaseOrderCreateNestedManyWithoutSupplierInput
    invoices?: SupplierInvoiceCreateNestedManyWithoutSupplierInput
    documents?: SupplierDocumentCreateNestedManyWithoutSupplierInput
  }

  export type SupplierUncheckedCreateWithoutContactsInput = {
    id?: string
    name: string
    code: string
    email?: string | null
    phone?: string | null
    website?: string | null
    companyType?: $Enums.CompanyType | null
    taxId?: string | null
    vatNumber?: string | null
    registrationNumber?: string | null
    billingAddress: JsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    contactName?: string | null
    contactEmail?: string | null
    contactPhone?: string | null
    contactTitle?: string | null
    paymentTerms?: string | null
    creditLimit?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    rating?: Decimal | DecimalJsLike | number | string | null
    onTimeDelivery?: Decimal | DecimalJsLike | number | string | null
    qualityRating?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.SupplierStatus
    certifications?: NullableJsonNullValueInput | InputJsonValue
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    products?: ProductSupplierUncheckedCreateNestedManyWithoutSupplierInput
    purchaseOrders?: PurchaseOrderUncheckedCreateNestedManyWithoutSupplierInput
    invoices?: SupplierInvoiceUncheckedCreateNestedManyWithoutSupplierInput
    documents?: SupplierDocumentUncheckedCreateNestedManyWithoutSupplierInput
  }

  export type SupplierCreateOrConnectWithoutContactsInput = {
    where: SupplierWhereUniqueInput
    create: XOR<SupplierCreateWithoutContactsInput, SupplierUncheckedCreateWithoutContactsInput>
  }

  export type SupplierUpsertWithoutContactsInput = {
    update: XOR<SupplierUpdateWithoutContactsInput, SupplierUncheckedUpdateWithoutContactsInput>
    create: XOR<SupplierCreateWithoutContactsInput, SupplierUncheckedCreateWithoutContactsInput>
    where?: SupplierWhereInput
  }

  export type SupplierUpdateToOneWithWhereWithoutContactsInput = {
    where?: SupplierWhereInput
    data: XOR<SupplierUpdateWithoutContactsInput, SupplierUncheckedUpdateWithoutContactsInput>
  }

  export type SupplierUpdateWithoutContactsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    companyType?: NullableEnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    vatNumber?: NullableStringFieldUpdateOperationsInput | string | null
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: JsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactTitle?: NullableStringFieldUpdateOperationsInput | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    creditLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    onTimeDelivery?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    qualityRating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumSupplierStatusFieldUpdateOperationsInput | $Enums.SupplierStatus
    certifications?: NullableJsonNullValueInput | InputJsonValue
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    products?: ProductSupplierUpdateManyWithoutSupplierNestedInput
    purchaseOrders?: PurchaseOrderUpdateManyWithoutSupplierNestedInput
    invoices?: SupplierInvoiceUpdateManyWithoutSupplierNestedInput
    documents?: SupplierDocumentUpdateManyWithoutSupplierNestedInput
  }

  export type SupplierUncheckedUpdateWithoutContactsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    companyType?: NullableEnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    vatNumber?: NullableStringFieldUpdateOperationsInput | string | null
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: JsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactTitle?: NullableStringFieldUpdateOperationsInput | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    creditLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    onTimeDelivery?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    qualityRating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumSupplierStatusFieldUpdateOperationsInput | $Enums.SupplierStatus
    certifications?: NullableJsonNullValueInput | InputJsonValue
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    products?: ProductSupplierUncheckedUpdateManyWithoutSupplierNestedInput
    purchaseOrders?: PurchaseOrderUncheckedUpdateManyWithoutSupplierNestedInput
    invoices?: SupplierInvoiceUncheckedUpdateManyWithoutSupplierNestedInput
    documents?: SupplierDocumentUncheckedUpdateManyWithoutSupplierNestedInput
  }

  export type SupplierCreateWithoutDocumentsInput = {
    id?: string
    name: string
    code: string
    email?: string | null
    phone?: string | null
    website?: string | null
    companyType?: $Enums.CompanyType | null
    taxId?: string | null
    vatNumber?: string | null
    registrationNumber?: string | null
    billingAddress: JsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    contactName?: string | null
    contactEmail?: string | null
    contactPhone?: string | null
    contactTitle?: string | null
    paymentTerms?: string | null
    creditLimit?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    rating?: Decimal | DecimalJsLike | number | string | null
    onTimeDelivery?: Decimal | DecimalJsLike | number | string | null
    qualityRating?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.SupplierStatus
    certifications?: NullableJsonNullValueInput | InputJsonValue
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    products?: ProductSupplierCreateNestedManyWithoutSupplierInput
    purchaseOrders?: PurchaseOrderCreateNestedManyWithoutSupplierInput
    invoices?: SupplierInvoiceCreateNestedManyWithoutSupplierInput
    contacts?: SupplierContactCreateNestedManyWithoutSupplierInput
  }

  export type SupplierUncheckedCreateWithoutDocumentsInput = {
    id?: string
    name: string
    code: string
    email?: string | null
    phone?: string | null
    website?: string | null
    companyType?: $Enums.CompanyType | null
    taxId?: string | null
    vatNumber?: string | null
    registrationNumber?: string | null
    billingAddress: JsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    contactName?: string | null
    contactEmail?: string | null
    contactPhone?: string | null
    contactTitle?: string | null
    paymentTerms?: string | null
    creditLimit?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    rating?: Decimal | DecimalJsLike | number | string | null
    onTimeDelivery?: Decimal | DecimalJsLike | number | string | null
    qualityRating?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.SupplierStatus
    certifications?: NullableJsonNullValueInput | InputJsonValue
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    products?: ProductSupplierUncheckedCreateNestedManyWithoutSupplierInput
    purchaseOrders?: PurchaseOrderUncheckedCreateNestedManyWithoutSupplierInput
    invoices?: SupplierInvoiceUncheckedCreateNestedManyWithoutSupplierInput
    contacts?: SupplierContactUncheckedCreateNestedManyWithoutSupplierInput
  }

  export type SupplierCreateOrConnectWithoutDocumentsInput = {
    where: SupplierWhereUniqueInput
    create: XOR<SupplierCreateWithoutDocumentsInput, SupplierUncheckedCreateWithoutDocumentsInput>
  }

  export type SupplierUpsertWithoutDocumentsInput = {
    update: XOR<SupplierUpdateWithoutDocumentsInput, SupplierUncheckedUpdateWithoutDocumentsInput>
    create: XOR<SupplierCreateWithoutDocumentsInput, SupplierUncheckedCreateWithoutDocumentsInput>
    where?: SupplierWhereInput
  }

  export type SupplierUpdateToOneWithWhereWithoutDocumentsInput = {
    where?: SupplierWhereInput
    data: XOR<SupplierUpdateWithoutDocumentsInput, SupplierUncheckedUpdateWithoutDocumentsInput>
  }

  export type SupplierUpdateWithoutDocumentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    companyType?: NullableEnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    vatNumber?: NullableStringFieldUpdateOperationsInput | string | null
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: JsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactTitle?: NullableStringFieldUpdateOperationsInput | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    creditLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    onTimeDelivery?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    qualityRating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumSupplierStatusFieldUpdateOperationsInput | $Enums.SupplierStatus
    certifications?: NullableJsonNullValueInput | InputJsonValue
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    products?: ProductSupplierUpdateManyWithoutSupplierNestedInput
    purchaseOrders?: PurchaseOrderUpdateManyWithoutSupplierNestedInput
    invoices?: SupplierInvoiceUpdateManyWithoutSupplierNestedInput
    contacts?: SupplierContactUpdateManyWithoutSupplierNestedInput
  }

  export type SupplierUncheckedUpdateWithoutDocumentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    companyType?: NullableEnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    vatNumber?: NullableStringFieldUpdateOperationsInput | string | null
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: JsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactTitle?: NullableStringFieldUpdateOperationsInput | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    creditLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    onTimeDelivery?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    qualityRating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumSupplierStatusFieldUpdateOperationsInput | $Enums.SupplierStatus
    certifications?: NullableJsonNullValueInput | InputJsonValue
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    products?: ProductSupplierUncheckedUpdateManyWithoutSupplierNestedInput
    purchaseOrders?: PurchaseOrderUncheckedUpdateManyWithoutSupplierNestedInput
    invoices?: SupplierInvoiceUncheckedUpdateManyWithoutSupplierNestedInput
    contacts?: SupplierContactUncheckedUpdateManyWithoutSupplierNestedInput
  }

  export type SupplierCreateWithoutPurchaseOrdersInput = {
    id?: string
    name: string
    code: string
    email?: string | null
    phone?: string | null
    website?: string | null
    companyType?: $Enums.CompanyType | null
    taxId?: string | null
    vatNumber?: string | null
    registrationNumber?: string | null
    billingAddress: JsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    contactName?: string | null
    contactEmail?: string | null
    contactPhone?: string | null
    contactTitle?: string | null
    paymentTerms?: string | null
    creditLimit?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    rating?: Decimal | DecimalJsLike | number | string | null
    onTimeDelivery?: Decimal | DecimalJsLike | number | string | null
    qualityRating?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.SupplierStatus
    certifications?: NullableJsonNullValueInput | InputJsonValue
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    products?: ProductSupplierCreateNestedManyWithoutSupplierInput
    invoices?: SupplierInvoiceCreateNestedManyWithoutSupplierInput
    contacts?: SupplierContactCreateNestedManyWithoutSupplierInput
    documents?: SupplierDocumentCreateNestedManyWithoutSupplierInput
  }

  export type SupplierUncheckedCreateWithoutPurchaseOrdersInput = {
    id?: string
    name: string
    code: string
    email?: string | null
    phone?: string | null
    website?: string | null
    companyType?: $Enums.CompanyType | null
    taxId?: string | null
    vatNumber?: string | null
    registrationNumber?: string | null
    billingAddress: JsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    contactName?: string | null
    contactEmail?: string | null
    contactPhone?: string | null
    contactTitle?: string | null
    paymentTerms?: string | null
    creditLimit?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    rating?: Decimal | DecimalJsLike | number | string | null
    onTimeDelivery?: Decimal | DecimalJsLike | number | string | null
    qualityRating?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.SupplierStatus
    certifications?: NullableJsonNullValueInput | InputJsonValue
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    products?: ProductSupplierUncheckedCreateNestedManyWithoutSupplierInput
    invoices?: SupplierInvoiceUncheckedCreateNestedManyWithoutSupplierInput
    contacts?: SupplierContactUncheckedCreateNestedManyWithoutSupplierInput
    documents?: SupplierDocumentUncheckedCreateNestedManyWithoutSupplierInput
  }

  export type SupplierCreateOrConnectWithoutPurchaseOrdersInput = {
    where: SupplierWhereUniqueInput
    create: XOR<SupplierCreateWithoutPurchaseOrdersInput, SupplierUncheckedCreateWithoutPurchaseOrdersInput>
  }

  export type WarehouseCreateWithoutPurchaseOrdersInput = {
    id?: string
    name: string
    code: string
    description?: string | null
    address: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: string | null
    managerName?: string | null
    managerEmail?: string | null
    managerPhone?: string | null
    phone?: string | null
    email?: string | null
    type?: $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    hasRfid?: boolean
    hasBarcode?: boolean
    temperatureControl?: boolean
    securityLevel?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    inventoryItems?: InventoryItemCreateNestedManyWithoutWarehouseInput
    movements?: InventoryMovementCreateNestedManyWithoutWarehouseInput
    transfers?: StockTransferCreateNestedManyWithoutFromWarehouseInput
    receivedTransfers?: StockTransferCreateNestedManyWithoutToWarehouseInput
    orders?: OrderCreateNestedManyWithoutWarehouseInput
    audits?: InventoryAuditCreateNestedManyWithoutWarehouseInput
    goodsReceipts?: GoodsReceiptCreateNestedManyWithoutWarehouseInput
    shipments?: ShipmentCreateNestedManyWithoutWarehouseInput
    auditItems?: InventoryAuditItemCreateNestedManyWithoutWarehouseInput
  }

  export type WarehouseUncheckedCreateWithoutPurchaseOrdersInput = {
    id?: string
    name: string
    code: string
    description?: string | null
    address: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: string | null
    managerName?: string | null
    managerEmail?: string | null
    managerPhone?: string | null
    phone?: string | null
    email?: string | null
    type?: $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    hasRfid?: boolean
    hasBarcode?: boolean
    temperatureControl?: boolean
    securityLevel?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    inventoryItems?: InventoryItemUncheckedCreateNestedManyWithoutWarehouseInput
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutWarehouseInput
    transfers?: StockTransferUncheckedCreateNestedManyWithoutFromWarehouseInput
    receivedTransfers?: StockTransferUncheckedCreateNestedManyWithoutToWarehouseInput
    orders?: OrderUncheckedCreateNestedManyWithoutWarehouseInput
    audits?: InventoryAuditUncheckedCreateNestedManyWithoutWarehouseInput
    goodsReceipts?: GoodsReceiptUncheckedCreateNestedManyWithoutWarehouseInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutWarehouseInput
    auditItems?: InventoryAuditItemUncheckedCreateNestedManyWithoutWarehouseInput
  }

  export type WarehouseCreateOrConnectWithoutPurchaseOrdersInput = {
    where: WarehouseWhereUniqueInput
    create: XOR<WarehouseCreateWithoutPurchaseOrdersInput, WarehouseUncheckedCreateWithoutPurchaseOrdersInput>
  }

  export type PurchaseOrderItemCreateWithoutPurchaseOrderInput = {
    id?: string
    orderedQty: number
    receivedQty?: number
    remainingQty: number
    unitCost: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    productName: string
    productSku: string
    supplierSku?: string | null
    expectedDate?: Date | string | null
    status?: $Enums.PurchaseItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutPurchaseItemsInput
    variant?: ProductVariantCreateNestedOneWithoutPurchaseItemsInput
  }

  export type PurchaseOrderItemUncheckedCreateWithoutPurchaseOrderInput = {
    id?: string
    productId: string
    variantId?: string | null
    orderedQty: number
    receivedQty?: number
    remainingQty: number
    unitCost: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    productName: string
    productSku: string
    supplierSku?: string | null
    expectedDate?: Date | string | null
    status?: $Enums.PurchaseItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PurchaseOrderItemCreateOrConnectWithoutPurchaseOrderInput = {
    where: PurchaseOrderItemWhereUniqueInput
    create: XOR<PurchaseOrderItemCreateWithoutPurchaseOrderInput, PurchaseOrderItemUncheckedCreateWithoutPurchaseOrderInput>
  }

  export type PurchaseOrderItemCreateManyPurchaseOrderInputEnvelope = {
    data: PurchaseOrderItemCreateManyPurchaseOrderInput | PurchaseOrderItemCreateManyPurchaseOrderInput[]
    skipDuplicates?: boolean
  }

  export type GoodsReceiptCreateWithoutPurchaseOrderInput = {
    id?: string
    receiptNumber: string
    receivedDate?: Date | string
    qcStatus?: $Enums.QualityStatus
    qcNotes?: string | null
    qcBy?: string | null
    qcDate?: Date | string | null
    status?: $Enums.ReceiptStatus
    notes?: string | null
    receivedBy: string
    createdAt?: Date | string
    updatedAt?: Date | string
    warehouse: WarehouseCreateNestedOneWithoutGoodsReceiptsInput
    items?: GoodsReceiptItemCreateNestedManyWithoutGoodsReceiptInput
  }

  export type GoodsReceiptUncheckedCreateWithoutPurchaseOrderInput = {
    id?: string
    warehouseId: string
    receiptNumber: string
    receivedDate?: Date | string
    qcStatus?: $Enums.QualityStatus
    qcNotes?: string | null
    qcBy?: string | null
    qcDate?: Date | string | null
    status?: $Enums.ReceiptStatus
    notes?: string | null
    receivedBy: string
    createdAt?: Date | string
    updatedAt?: Date | string
    items?: GoodsReceiptItemUncheckedCreateNestedManyWithoutGoodsReceiptInput
  }

  export type GoodsReceiptCreateOrConnectWithoutPurchaseOrderInput = {
    where: GoodsReceiptWhereUniqueInput
    create: XOR<GoodsReceiptCreateWithoutPurchaseOrderInput, GoodsReceiptUncheckedCreateWithoutPurchaseOrderInput>
  }

  export type GoodsReceiptCreateManyPurchaseOrderInputEnvelope = {
    data: GoodsReceiptCreateManyPurchaseOrderInput | GoodsReceiptCreateManyPurchaseOrderInput[]
    skipDuplicates?: boolean
  }

  export type SupplierInvoiceCreateWithoutPurchaseOrderInput = {
    id?: string
    invoiceNumber: string
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    invoiceDate: Date | string
    dueDate: Date | string
    paidDate?: Date | string | null
    status?: $Enums.InvoiceStatus
    paymentMethod?: string | null
    paymentReference?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    supplier: SupplierCreateNestedOneWithoutInvoicesInput
  }

  export type SupplierInvoiceUncheckedCreateWithoutPurchaseOrderInput = {
    id?: string
    invoiceNumber: string
    supplierId: string
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    invoiceDate: Date | string
    dueDate: Date | string
    paidDate?: Date | string | null
    status?: $Enums.InvoiceStatus
    paymentMethod?: string | null
    paymentReference?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SupplierInvoiceCreateOrConnectWithoutPurchaseOrderInput = {
    where: SupplierInvoiceWhereUniqueInput
    create: XOR<SupplierInvoiceCreateWithoutPurchaseOrderInput, SupplierInvoiceUncheckedCreateWithoutPurchaseOrderInput>
  }

  export type SupplierInvoiceCreateManyPurchaseOrderInputEnvelope = {
    data: SupplierInvoiceCreateManyPurchaseOrderInput | SupplierInvoiceCreateManyPurchaseOrderInput[]
    skipDuplicates?: boolean
  }

  export type SupplierUpsertWithoutPurchaseOrdersInput = {
    update: XOR<SupplierUpdateWithoutPurchaseOrdersInput, SupplierUncheckedUpdateWithoutPurchaseOrdersInput>
    create: XOR<SupplierCreateWithoutPurchaseOrdersInput, SupplierUncheckedCreateWithoutPurchaseOrdersInput>
    where?: SupplierWhereInput
  }

  export type SupplierUpdateToOneWithWhereWithoutPurchaseOrdersInput = {
    where?: SupplierWhereInput
    data: XOR<SupplierUpdateWithoutPurchaseOrdersInput, SupplierUncheckedUpdateWithoutPurchaseOrdersInput>
  }

  export type SupplierUpdateWithoutPurchaseOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    companyType?: NullableEnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    vatNumber?: NullableStringFieldUpdateOperationsInput | string | null
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: JsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactTitle?: NullableStringFieldUpdateOperationsInput | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    creditLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    onTimeDelivery?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    qualityRating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumSupplierStatusFieldUpdateOperationsInput | $Enums.SupplierStatus
    certifications?: NullableJsonNullValueInput | InputJsonValue
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    products?: ProductSupplierUpdateManyWithoutSupplierNestedInput
    invoices?: SupplierInvoiceUpdateManyWithoutSupplierNestedInput
    contacts?: SupplierContactUpdateManyWithoutSupplierNestedInput
    documents?: SupplierDocumentUpdateManyWithoutSupplierNestedInput
  }

  export type SupplierUncheckedUpdateWithoutPurchaseOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    companyType?: NullableEnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    vatNumber?: NullableStringFieldUpdateOperationsInput | string | null
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: JsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactTitle?: NullableStringFieldUpdateOperationsInput | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    creditLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    onTimeDelivery?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    qualityRating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumSupplierStatusFieldUpdateOperationsInput | $Enums.SupplierStatus
    certifications?: NullableJsonNullValueInput | InputJsonValue
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    products?: ProductSupplierUncheckedUpdateManyWithoutSupplierNestedInput
    invoices?: SupplierInvoiceUncheckedUpdateManyWithoutSupplierNestedInput
    contacts?: SupplierContactUncheckedUpdateManyWithoutSupplierNestedInput
    documents?: SupplierDocumentUncheckedUpdateManyWithoutSupplierNestedInput
  }

  export type WarehouseUpsertWithoutPurchaseOrdersInput = {
    update: XOR<WarehouseUpdateWithoutPurchaseOrdersInput, WarehouseUncheckedUpdateWithoutPurchaseOrdersInput>
    create: XOR<WarehouseCreateWithoutPurchaseOrdersInput, WarehouseUncheckedCreateWithoutPurchaseOrdersInput>
    where?: WarehouseWhereInput
  }

  export type WarehouseUpdateToOneWithWhereWithoutPurchaseOrdersInput = {
    where?: WarehouseWhereInput
    data: XOR<WarehouseUpdateWithoutPurchaseOrdersInput, WarehouseUncheckedUpdateWithoutPurchaseOrdersInput>
  }

  export type WarehouseUpdateWithoutPurchaseOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    managerName?: NullableStringFieldUpdateOperationsInput | string | null
    managerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    managerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumWarehouseTypeFieldUpdateOperationsInput | $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hasRfid?: BoolFieldUpdateOperationsInput | boolean
    hasBarcode?: BoolFieldUpdateOperationsInput | boolean
    temperatureControl?: BoolFieldUpdateOperationsInput | boolean
    securityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryItems?: InventoryItemUpdateManyWithoutWarehouseNestedInput
    movements?: InventoryMovementUpdateManyWithoutWarehouseNestedInput
    transfers?: StockTransferUpdateManyWithoutFromWarehouseNestedInput
    receivedTransfers?: StockTransferUpdateManyWithoutToWarehouseNestedInput
    orders?: OrderUpdateManyWithoutWarehouseNestedInput
    audits?: InventoryAuditUpdateManyWithoutWarehouseNestedInput
    goodsReceipts?: GoodsReceiptUpdateManyWithoutWarehouseNestedInput
    shipments?: ShipmentUpdateManyWithoutWarehouseNestedInput
    auditItems?: InventoryAuditItemUpdateManyWithoutWarehouseNestedInput
  }

  export type WarehouseUncheckedUpdateWithoutPurchaseOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    managerName?: NullableStringFieldUpdateOperationsInput | string | null
    managerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    managerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumWarehouseTypeFieldUpdateOperationsInput | $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hasRfid?: BoolFieldUpdateOperationsInput | boolean
    hasBarcode?: BoolFieldUpdateOperationsInput | boolean
    temperatureControl?: BoolFieldUpdateOperationsInput | boolean
    securityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryItems?: InventoryItemUncheckedUpdateManyWithoutWarehouseNestedInput
    movements?: InventoryMovementUncheckedUpdateManyWithoutWarehouseNestedInput
    transfers?: StockTransferUncheckedUpdateManyWithoutFromWarehouseNestedInput
    receivedTransfers?: StockTransferUncheckedUpdateManyWithoutToWarehouseNestedInput
    orders?: OrderUncheckedUpdateManyWithoutWarehouseNestedInput
    audits?: InventoryAuditUncheckedUpdateManyWithoutWarehouseNestedInput
    goodsReceipts?: GoodsReceiptUncheckedUpdateManyWithoutWarehouseNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutWarehouseNestedInput
    auditItems?: InventoryAuditItemUncheckedUpdateManyWithoutWarehouseNestedInput
  }

  export type PurchaseOrderItemUpsertWithWhereUniqueWithoutPurchaseOrderInput = {
    where: PurchaseOrderItemWhereUniqueInput
    update: XOR<PurchaseOrderItemUpdateWithoutPurchaseOrderInput, PurchaseOrderItemUncheckedUpdateWithoutPurchaseOrderInput>
    create: XOR<PurchaseOrderItemCreateWithoutPurchaseOrderInput, PurchaseOrderItemUncheckedCreateWithoutPurchaseOrderInput>
  }

  export type PurchaseOrderItemUpdateWithWhereUniqueWithoutPurchaseOrderInput = {
    where: PurchaseOrderItemWhereUniqueInput
    data: XOR<PurchaseOrderItemUpdateWithoutPurchaseOrderInput, PurchaseOrderItemUncheckedUpdateWithoutPurchaseOrderInput>
  }

  export type PurchaseOrderItemUpdateManyWithWhereWithoutPurchaseOrderInput = {
    where: PurchaseOrderItemScalarWhereInput
    data: XOR<PurchaseOrderItemUpdateManyMutationInput, PurchaseOrderItemUncheckedUpdateManyWithoutPurchaseOrderInput>
  }

  export type GoodsReceiptUpsertWithWhereUniqueWithoutPurchaseOrderInput = {
    where: GoodsReceiptWhereUniqueInput
    update: XOR<GoodsReceiptUpdateWithoutPurchaseOrderInput, GoodsReceiptUncheckedUpdateWithoutPurchaseOrderInput>
    create: XOR<GoodsReceiptCreateWithoutPurchaseOrderInput, GoodsReceiptUncheckedCreateWithoutPurchaseOrderInput>
  }

  export type GoodsReceiptUpdateWithWhereUniqueWithoutPurchaseOrderInput = {
    where: GoodsReceiptWhereUniqueInput
    data: XOR<GoodsReceiptUpdateWithoutPurchaseOrderInput, GoodsReceiptUncheckedUpdateWithoutPurchaseOrderInput>
  }

  export type GoodsReceiptUpdateManyWithWhereWithoutPurchaseOrderInput = {
    where: GoodsReceiptScalarWhereInput
    data: XOR<GoodsReceiptUpdateManyMutationInput, GoodsReceiptUncheckedUpdateManyWithoutPurchaseOrderInput>
  }

  export type SupplierInvoiceUpsertWithWhereUniqueWithoutPurchaseOrderInput = {
    where: SupplierInvoiceWhereUniqueInput
    update: XOR<SupplierInvoiceUpdateWithoutPurchaseOrderInput, SupplierInvoiceUncheckedUpdateWithoutPurchaseOrderInput>
    create: XOR<SupplierInvoiceCreateWithoutPurchaseOrderInput, SupplierInvoiceUncheckedCreateWithoutPurchaseOrderInput>
  }

  export type SupplierInvoiceUpdateWithWhereUniqueWithoutPurchaseOrderInput = {
    where: SupplierInvoiceWhereUniqueInput
    data: XOR<SupplierInvoiceUpdateWithoutPurchaseOrderInput, SupplierInvoiceUncheckedUpdateWithoutPurchaseOrderInput>
  }

  export type SupplierInvoiceUpdateManyWithWhereWithoutPurchaseOrderInput = {
    where: SupplierInvoiceScalarWhereInput
    data: XOR<SupplierInvoiceUpdateManyMutationInput, SupplierInvoiceUncheckedUpdateManyWithoutPurchaseOrderInput>
  }

  export type PurchaseOrderCreateWithoutItemsInput = {
    id?: string
    orderNumber: string
    subtotal?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingCost?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount?: Decimal | DecimalJsLike | number | string
    currency?: string
    status?: $Enums.PurchaseOrderStatus
    orderDate?: Date | string
    expectedDate?: Date | string | null
    deliveryDate?: Date | string | null
    paymentTerms?: string | null
    shippingTerms?: string | null
    trackingNumber?: string | null
    carrier?: string | null
    approvedBy?: string | null
    approvedAt?: Date | string | null
    notes?: string | null
    internalNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    supplier: SupplierCreateNestedOneWithoutPurchaseOrdersInput
    warehouse?: WarehouseCreateNestedOneWithoutPurchaseOrdersInput
    receipts?: GoodsReceiptCreateNestedManyWithoutPurchaseOrderInput
    invoices?: SupplierInvoiceCreateNestedManyWithoutPurchaseOrderInput
  }

  export type PurchaseOrderUncheckedCreateWithoutItemsInput = {
    id?: string
    orderNumber: string
    supplierId: string
    warehouseId?: string | null
    subtotal?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingCost?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount?: Decimal | DecimalJsLike | number | string
    currency?: string
    status?: $Enums.PurchaseOrderStatus
    orderDate?: Date | string
    expectedDate?: Date | string | null
    deliveryDate?: Date | string | null
    paymentTerms?: string | null
    shippingTerms?: string | null
    trackingNumber?: string | null
    carrier?: string | null
    approvedBy?: string | null
    approvedAt?: Date | string | null
    notes?: string | null
    internalNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    receipts?: GoodsReceiptUncheckedCreateNestedManyWithoutPurchaseOrderInput
    invoices?: SupplierInvoiceUncheckedCreateNestedManyWithoutPurchaseOrderInput
  }

  export type PurchaseOrderCreateOrConnectWithoutItemsInput = {
    where: PurchaseOrderWhereUniqueInput
    create: XOR<PurchaseOrderCreateWithoutItemsInput, PurchaseOrderUncheckedCreateWithoutItemsInput>
  }

  export type ProductCreateWithoutPurchaseItemsInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    category?: CategoryCreateNestedOneWithoutProductsInput
    brand?: BrandCreateNestedOneWithoutProductsInput
    inventoryItems?: InventoryItemCreateNestedManyWithoutProductInput
    variants?: ProductVariantCreateNestedManyWithoutProductInput
    suppliers?: ProductSupplierCreateNestedManyWithoutProductInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
    movements?: InventoryMovementCreateNestedManyWithoutProductInput
    audits?: InventoryAuditCreateNestedManyWithoutProductInput
    reviews?: ProductReviewCreateNestedManyWithoutProductInput
    bundles?: ProductBundleCreateNestedManyWithoutProductsInput
    bundleItems?: ProductBundleCreateNestedManyWithoutBundleItemsInput
    goodsReceiptItems?: GoodsReceiptItemCreateNestedManyWithoutProductInput
    transferItems?: StockTransferItemCreateNestedManyWithoutProductInput
    auditItems?: InventoryAuditItemCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutPurchaseItemsInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    categoryId?: string | null
    brandId?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    inventoryItems?: InventoryItemUncheckedCreateNestedManyWithoutProductInput
    variants?: ProductVariantUncheckedCreateNestedManyWithoutProductInput
    suppliers?: ProductSupplierUncheckedCreateNestedManyWithoutProductInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutProductInput
    audits?: InventoryAuditUncheckedCreateNestedManyWithoutProductInput
    reviews?: ProductReviewUncheckedCreateNestedManyWithoutProductInput
    bundles?: ProductBundleUncheckedCreateNestedManyWithoutProductsInput
    bundleItems?: ProductBundleUncheckedCreateNestedManyWithoutBundleItemsInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedCreateNestedManyWithoutProductInput
    transferItems?: StockTransferItemUncheckedCreateNestedManyWithoutProductInput
    auditItems?: InventoryAuditItemUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutPurchaseItemsInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutPurchaseItemsInput, ProductUncheckedCreateWithoutPurchaseItemsInput>
  }

  export type ProductVariantCreateWithoutPurchaseItemsInput = {
    id?: string
    name: string
    sku: string
    barcode?: string | null
    attributes: JsonNullValueInput | InputJsonValue
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number | null
    reorderPoint?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutVariantsInput
    inventoryItems?: InventoryItemCreateNestedManyWithoutVariantInput
    movements?: InventoryMovementCreateNestedManyWithoutVariantInput
    goodsReceiptItems?: GoodsReceiptItemCreateNestedManyWithoutVariantInput
    orderItems?: OrderItemCreateNestedManyWithoutVariantInput
    transferItems?: StockTransferItemCreateNestedManyWithoutVariantInput
    auditItems?: InventoryAuditItemCreateNestedManyWithoutVariantInput
  }

  export type ProductVariantUncheckedCreateWithoutPurchaseItemsInput = {
    id?: string
    productId: string
    name: string
    sku: string
    barcode?: string | null
    attributes: JsonNullValueInput | InputJsonValue
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number | null
    reorderPoint?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    inventoryItems?: InventoryItemUncheckedCreateNestedManyWithoutVariantInput
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutVariantInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedCreateNestedManyWithoutVariantInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutVariantInput
    transferItems?: StockTransferItemUncheckedCreateNestedManyWithoutVariantInput
    auditItems?: InventoryAuditItemUncheckedCreateNestedManyWithoutVariantInput
  }

  export type ProductVariantCreateOrConnectWithoutPurchaseItemsInput = {
    where: ProductVariantWhereUniqueInput
    create: XOR<ProductVariantCreateWithoutPurchaseItemsInput, ProductVariantUncheckedCreateWithoutPurchaseItemsInput>
  }

  export type PurchaseOrderUpsertWithoutItemsInput = {
    update: XOR<PurchaseOrderUpdateWithoutItemsInput, PurchaseOrderUncheckedUpdateWithoutItemsInput>
    create: XOR<PurchaseOrderCreateWithoutItemsInput, PurchaseOrderUncheckedCreateWithoutItemsInput>
    where?: PurchaseOrderWhereInput
  }

  export type PurchaseOrderUpdateToOneWithWhereWithoutItemsInput = {
    where?: PurchaseOrderWhereInput
    data: XOR<PurchaseOrderUpdateWithoutItemsInput, PurchaseOrderUncheckedUpdateWithoutItemsInput>
  }

  export type PurchaseOrderUpdateWithoutItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPurchaseOrderStatusFieldUpdateOperationsInput | $Enums.PurchaseOrderStatus
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expectedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    shippingTerms?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    carrier?: NullableStringFieldUpdateOperationsInput | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    supplier?: SupplierUpdateOneRequiredWithoutPurchaseOrdersNestedInput
    warehouse?: WarehouseUpdateOneWithoutPurchaseOrdersNestedInput
    receipts?: GoodsReceiptUpdateManyWithoutPurchaseOrderNestedInput
    invoices?: SupplierInvoiceUpdateManyWithoutPurchaseOrderNestedInput
  }

  export type PurchaseOrderUncheckedUpdateWithoutItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    supplierId?: StringFieldUpdateOperationsInput | string
    warehouseId?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPurchaseOrderStatusFieldUpdateOperationsInput | $Enums.PurchaseOrderStatus
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expectedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    shippingTerms?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    carrier?: NullableStringFieldUpdateOperationsInput | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    receipts?: GoodsReceiptUncheckedUpdateManyWithoutPurchaseOrderNestedInput
    invoices?: SupplierInvoiceUncheckedUpdateManyWithoutPurchaseOrderNestedInput
  }

  export type ProductUpsertWithoutPurchaseItemsInput = {
    update: XOR<ProductUpdateWithoutPurchaseItemsInput, ProductUncheckedUpdateWithoutPurchaseItemsInput>
    create: XOR<ProductCreateWithoutPurchaseItemsInput, ProductUncheckedCreateWithoutPurchaseItemsInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutPurchaseItemsInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutPurchaseItemsInput, ProductUncheckedUpdateWithoutPurchaseItemsInput>
  }

  export type ProductUpdateWithoutPurchaseItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    category?: CategoryUpdateOneWithoutProductsNestedInput
    brand?: BrandUpdateOneWithoutProductsNestedInput
    inventoryItems?: InventoryItemUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUpdateManyWithoutProductNestedInput
    suppliers?: ProductSupplierUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
    movements?: InventoryMovementUpdateManyWithoutProductNestedInput
    audits?: InventoryAuditUpdateManyWithoutProductNestedInput
    reviews?: ProductReviewUpdateManyWithoutProductNestedInput
    bundles?: ProductBundleUpdateManyWithoutProductsNestedInput
    bundleItems?: ProductBundleUpdateManyWithoutBundleItemsNestedInput
    goodsReceiptItems?: GoodsReceiptItemUpdateManyWithoutProductNestedInput
    transferItems?: StockTransferItemUpdateManyWithoutProductNestedInput
    auditItems?: InventoryAuditItemUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutPurchaseItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    inventoryItems?: InventoryItemUncheckedUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUncheckedUpdateManyWithoutProductNestedInput
    suppliers?: ProductSupplierUncheckedUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    movements?: InventoryMovementUncheckedUpdateManyWithoutProductNestedInput
    audits?: InventoryAuditUncheckedUpdateManyWithoutProductNestedInput
    reviews?: ProductReviewUncheckedUpdateManyWithoutProductNestedInput
    bundles?: ProductBundleUncheckedUpdateManyWithoutProductsNestedInput
    bundleItems?: ProductBundleUncheckedUpdateManyWithoutBundleItemsNestedInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedUpdateManyWithoutProductNestedInput
    transferItems?: StockTransferItemUncheckedUpdateManyWithoutProductNestedInput
    auditItems?: InventoryAuditItemUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductVariantUpsertWithoutPurchaseItemsInput = {
    update: XOR<ProductVariantUpdateWithoutPurchaseItemsInput, ProductVariantUncheckedUpdateWithoutPurchaseItemsInput>
    create: XOR<ProductVariantCreateWithoutPurchaseItemsInput, ProductVariantUncheckedCreateWithoutPurchaseItemsInput>
    where?: ProductVariantWhereInput
  }

  export type ProductVariantUpdateToOneWithWhereWithoutPurchaseItemsInput = {
    where?: ProductVariantWhereInput
    data: XOR<ProductVariantUpdateWithoutPurchaseItemsInput, ProductVariantUncheckedUpdateWithoutPurchaseItemsInput>
  }

  export type ProductVariantUpdateWithoutPurchaseItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: JsonNullValueInput | InputJsonValue
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutVariantsNestedInput
    inventoryItems?: InventoryItemUpdateManyWithoutVariantNestedInput
    movements?: InventoryMovementUpdateManyWithoutVariantNestedInput
    goodsReceiptItems?: GoodsReceiptItemUpdateManyWithoutVariantNestedInput
    orderItems?: OrderItemUpdateManyWithoutVariantNestedInput
    transferItems?: StockTransferItemUpdateManyWithoutVariantNestedInput
    auditItems?: InventoryAuditItemUpdateManyWithoutVariantNestedInput
  }

  export type ProductVariantUncheckedUpdateWithoutPurchaseItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: JsonNullValueInput | InputJsonValue
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryItems?: InventoryItemUncheckedUpdateManyWithoutVariantNestedInput
    movements?: InventoryMovementUncheckedUpdateManyWithoutVariantNestedInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedUpdateManyWithoutVariantNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutVariantNestedInput
    transferItems?: StockTransferItemUncheckedUpdateManyWithoutVariantNestedInput
    auditItems?: InventoryAuditItemUncheckedUpdateManyWithoutVariantNestedInput
  }

  export type PurchaseOrderCreateWithoutReceiptsInput = {
    id?: string
    orderNumber: string
    subtotal?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingCost?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount?: Decimal | DecimalJsLike | number | string
    currency?: string
    status?: $Enums.PurchaseOrderStatus
    orderDate?: Date | string
    expectedDate?: Date | string | null
    deliveryDate?: Date | string | null
    paymentTerms?: string | null
    shippingTerms?: string | null
    trackingNumber?: string | null
    carrier?: string | null
    approvedBy?: string | null
    approvedAt?: Date | string | null
    notes?: string | null
    internalNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    supplier: SupplierCreateNestedOneWithoutPurchaseOrdersInput
    warehouse?: WarehouseCreateNestedOneWithoutPurchaseOrdersInput
    items?: PurchaseOrderItemCreateNestedManyWithoutPurchaseOrderInput
    invoices?: SupplierInvoiceCreateNestedManyWithoutPurchaseOrderInput
  }

  export type PurchaseOrderUncheckedCreateWithoutReceiptsInput = {
    id?: string
    orderNumber: string
    supplierId: string
    warehouseId?: string | null
    subtotal?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingCost?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount?: Decimal | DecimalJsLike | number | string
    currency?: string
    status?: $Enums.PurchaseOrderStatus
    orderDate?: Date | string
    expectedDate?: Date | string | null
    deliveryDate?: Date | string | null
    paymentTerms?: string | null
    shippingTerms?: string | null
    trackingNumber?: string | null
    carrier?: string | null
    approvedBy?: string | null
    approvedAt?: Date | string | null
    notes?: string | null
    internalNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    items?: PurchaseOrderItemUncheckedCreateNestedManyWithoutPurchaseOrderInput
    invoices?: SupplierInvoiceUncheckedCreateNestedManyWithoutPurchaseOrderInput
  }

  export type PurchaseOrderCreateOrConnectWithoutReceiptsInput = {
    where: PurchaseOrderWhereUniqueInput
    create: XOR<PurchaseOrderCreateWithoutReceiptsInput, PurchaseOrderUncheckedCreateWithoutReceiptsInput>
  }

  export type WarehouseCreateWithoutGoodsReceiptsInput = {
    id?: string
    name: string
    code: string
    description?: string | null
    address: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: string | null
    managerName?: string | null
    managerEmail?: string | null
    managerPhone?: string | null
    phone?: string | null
    email?: string | null
    type?: $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    hasRfid?: boolean
    hasBarcode?: boolean
    temperatureControl?: boolean
    securityLevel?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    inventoryItems?: InventoryItemCreateNestedManyWithoutWarehouseInput
    movements?: InventoryMovementCreateNestedManyWithoutWarehouseInput
    transfers?: StockTransferCreateNestedManyWithoutFromWarehouseInput
    receivedTransfers?: StockTransferCreateNestedManyWithoutToWarehouseInput
    orders?: OrderCreateNestedManyWithoutWarehouseInput
    purchaseOrders?: PurchaseOrderCreateNestedManyWithoutWarehouseInput
    audits?: InventoryAuditCreateNestedManyWithoutWarehouseInput
    shipments?: ShipmentCreateNestedManyWithoutWarehouseInput
    auditItems?: InventoryAuditItemCreateNestedManyWithoutWarehouseInput
  }

  export type WarehouseUncheckedCreateWithoutGoodsReceiptsInput = {
    id?: string
    name: string
    code: string
    description?: string | null
    address: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: string | null
    managerName?: string | null
    managerEmail?: string | null
    managerPhone?: string | null
    phone?: string | null
    email?: string | null
    type?: $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    hasRfid?: boolean
    hasBarcode?: boolean
    temperatureControl?: boolean
    securityLevel?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    inventoryItems?: InventoryItemUncheckedCreateNestedManyWithoutWarehouseInput
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutWarehouseInput
    transfers?: StockTransferUncheckedCreateNestedManyWithoutFromWarehouseInput
    receivedTransfers?: StockTransferUncheckedCreateNestedManyWithoutToWarehouseInput
    orders?: OrderUncheckedCreateNestedManyWithoutWarehouseInput
    purchaseOrders?: PurchaseOrderUncheckedCreateNestedManyWithoutWarehouseInput
    audits?: InventoryAuditUncheckedCreateNestedManyWithoutWarehouseInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutWarehouseInput
    auditItems?: InventoryAuditItemUncheckedCreateNestedManyWithoutWarehouseInput
  }

  export type WarehouseCreateOrConnectWithoutGoodsReceiptsInput = {
    where: WarehouseWhereUniqueInput
    create: XOR<WarehouseCreateWithoutGoodsReceiptsInput, WarehouseUncheckedCreateWithoutGoodsReceiptsInput>
  }

  export type GoodsReceiptItemCreateWithoutGoodsReceiptInput = {
    id?: string
    expectedQty: number
    receivedQty: number
    acceptedQty: number
    rejectedQty: number
    qcStatus?: $Enums.QualityStatus
    qcNotes?: string | null
    rejectionReason?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    expiryDate?: Date | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    receivedLocation?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutGoodsReceiptItemsInput
    variant?: ProductVariantCreateNestedOneWithoutGoodsReceiptItemsInput
  }

  export type GoodsReceiptItemUncheckedCreateWithoutGoodsReceiptInput = {
    id?: string
    productId: string
    variantId?: string | null
    expectedQty: number
    receivedQty: number
    acceptedQty: number
    rejectedQty: number
    qcStatus?: $Enums.QualityStatus
    qcNotes?: string | null
    rejectionReason?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    expiryDate?: Date | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    receivedLocation?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type GoodsReceiptItemCreateOrConnectWithoutGoodsReceiptInput = {
    where: GoodsReceiptItemWhereUniqueInput
    create: XOR<GoodsReceiptItemCreateWithoutGoodsReceiptInput, GoodsReceiptItemUncheckedCreateWithoutGoodsReceiptInput>
  }

  export type GoodsReceiptItemCreateManyGoodsReceiptInputEnvelope = {
    data: GoodsReceiptItemCreateManyGoodsReceiptInput | GoodsReceiptItemCreateManyGoodsReceiptInput[]
    skipDuplicates?: boolean
  }

  export type PurchaseOrderUpsertWithoutReceiptsInput = {
    update: XOR<PurchaseOrderUpdateWithoutReceiptsInput, PurchaseOrderUncheckedUpdateWithoutReceiptsInput>
    create: XOR<PurchaseOrderCreateWithoutReceiptsInput, PurchaseOrderUncheckedCreateWithoutReceiptsInput>
    where?: PurchaseOrderWhereInput
  }

  export type PurchaseOrderUpdateToOneWithWhereWithoutReceiptsInput = {
    where?: PurchaseOrderWhereInput
    data: XOR<PurchaseOrderUpdateWithoutReceiptsInput, PurchaseOrderUncheckedUpdateWithoutReceiptsInput>
  }

  export type PurchaseOrderUpdateWithoutReceiptsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPurchaseOrderStatusFieldUpdateOperationsInput | $Enums.PurchaseOrderStatus
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expectedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    shippingTerms?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    carrier?: NullableStringFieldUpdateOperationsInput | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    supplier?: SupplierUpdateOneRequiredWithoutPurchaseOrdersNestedInput
    warehouse?: WarehouseUpdateOneWithoutPurchaseOrdersNestedInput
    items?: PurchaseOrderItemUpdateManyWithoutPurchaseOrderNestedInput
    invoices?: SupplierInvoiceUpdateManyWithoutPurchaseOrderNestedInput
  }

  export type PurchaseOrderUncheckedUpdateWithoutReceiptsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    supplierId?: StringFieldUpdateOperationsInput | string
    warehouseId?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPurchaseOrderStatusFieldUpdateOperationsInput | $Enums.PurchaseOrderStatus
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expectedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    shippingTerms?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    carrier?: NullableStringFieldUpdateOperationsInput | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    items?: PurchaseOrderItemUncheckedUpdateManyWithoutPurchaseOrderNestedInput
    invoices?: SupplierInvoiceUncheckedUpdateManyWithoutPurchaseOrderNestedInput
  }

  export type WarehouseUpsertWithoutGoodsReceiptsInput = {
    update: XOR<WarehouseUpdateWithoutGoodsReceiptsInput, WarehouseUncheckedUpdateWithoutGoodsReceiptsInput>
    create: XOR<WarehouseCreateWithoutGoodsReceiptsInput, WarehouseUncheckedCreateWithoutGoodsReceiptsInput>
    where?: WarehouseWhereInput
  }

  export type WarehouseUpdateToOneWithWhereWithoutGoodsReceiptsInput = {
    where?: WarehouseWhereInput
    data: XOR<WarehouseUpdateWithoutGoodsReceiptsInput, WarehouseUncheckedUpdateWithoutGoodsReceiptsInput>
  }

  export type WarehouseUpdateWithoutGoodsReceiptsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    managerName?: NullableStringFieldUpdateOperationsInput | string | null
    managerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    managerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumWarehouseTypeFieldUpdateOperationsInput | $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hasRfid?: BoolFieldUpdateOperationsInput | boolean
    hasBarcode?: BoolFieldUpdateOperationsInput | boolean
    temperatureControl?: BoolFieldUpdateOperationsInput | boolean
    securityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryItems?: InventoryItemUpdateManyWithoutWarehouseNestedInput
    movements?: InventoryMovementUpdateManyWithoutWarehouseNestedInput
    transfers?: StockTransferUpdateManyWithoutFromWarehouseNestedInput
    receivedTransfers?: StockTransferUpdateManyWithoutToWarehouseNestedInput
    orders?: OrderUpdateManyWithoutWarehouseNestedInput
    purchaseOrders?: PurchaseOrderUpdateManyWithoutWarehouseNestedInput
    audits?: InventoryAuditUpdateManyWithoutWarehouseNestedInput
    shipments?: ShipmentUpdateManyWithoutWarehouseNestedInput
    auditItems?: InventoryAuditItemUpdateManyWithoutWarehouseNestedInput
  }

  export type WarehouseUncheckedUpdateWithoutGoodsReceiptsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    managerName?: NullableStringFieldUpdateOperationsInput | string | null
    managerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    managerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumWarehouseTypeFieldUpdateOperationsInput | $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hasRfid?: BoolFieldUpdateOperationsInput | boolean
    hasBarcode?: BoolFieldUpdateOperationsInput | boolean
    temperatureControl?: BoolFieldUpdateOperationsInput | boolean
    securityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryItems?: InventoryItemUncheckedUpdateManyWithoutWarehouseNestedInput
    movements?: InventoryMovementUncheckedUpdateManyWithoutWarehouseNestedInput
    transfers?: StockTransferUncheckedUpdateManyWithoutFromWarehouseNestedInput
    receivedTransfers?: StockTransferUncheckedUpdateManyWithoutToWarehouseNestedInput
    orders?: OrderUncheckedUpdateManyWithoutWarehouseNestedInput
    purchaseOrders?: PurchaseOrderUncheckedUpdateManyWithoutWarehouseNestedInput
    audits?: InventoryAuditUncheckedUpdateManyWithoutWarehouseNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutWarehouseNestedInput
    auditItems?: InventoryAuditItemUncheckedUpdateManyWithoutWarehouseNestedInput
  }

  export type GoodsReceiptItemUpsertWithWhereUniqueWithoutGoodsReceiptInput = {
    where: GoodsReceiptItemWhereUniqueInput
    update: XOR<GoodsReceiptItemUpdateWithoutGoodsReceiptInput, GoodsReceiptItemUncheckedUpdateWithoutGoodsReceiptInput>
    create: XOR<GoodsReceiptItemCreateWithoutGoodsReceiptInput, GoodsReceiptItemUncheckedCreateWithoutGoodsReceiptInput>
  }

  export type GoodsReceiptItemUpdateWithWhereUniqueWithoutGoodsReceiptInput = {
    where: GoodsReceiptItemWhereUniqueInput
    data: XOR<GoodsReceiptItemUpdateWithoutGoodsReceiptInput, GoodsReceiptItemUncheckedUpdateWithoutGoodsReceiptInput>
  }

  export type GoodsReceiptItemUpdateManyWithWhereWithoutGoodsReceiptInput = {
    where: GoodsReceiptItemScalarWhereInput
    data: XOR<GoodsReceiptItemUpdateManyMutationInput, GoodsReceiptItemUncheckedUpdateManyWithoutGoodsReceiptInput>
  }

  export type GoodsReceiptCreateWithoutItemsInput = {
    id?: string
    receiptNumber: string
    receivedDate?: Date | string
    qcStatus?: $Enums.QualityStatus
    qcNotes?: string | null
    qcBy?: string | null
    qcDate?: Date | string | null
    status?: $Enums.ReceiptStatus
    notes?: string | null
    receivedBy: string
    createdAt?: Date | string
    updatedAt?: Date | string
    purchaseOrder: PurchaseOrderCreateNestedOneWithoutReceiptsInput
    warehouse: WarehouseCreateNestedOneWithoutGoodsReceiptsInput
  }

  export type GoodsReceiptUncheckedCreateWithoutItemsInput = {
    id?: string
    purchaseOrderId: string
    warehouseId: string
    receiptNumber: string
    receivedDate?: Date | string
    qcStatus?: $Enums.QualityStatus
    qcNotes?: string | null
    qcBy?: string | null
    qcDate?: Date | string | null
    status?: $Enums.ReceiptStatus
    notes?: string | null
    receivedBy: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type GoodsReceiptCreateOrConnectWithoutItemsInput = {
    where: GoodsReceiptWhereUniqueInput
    create: XOR<GoodsReceiptCreateWithoutItemsInput, GoodsReceiptUncheckedCreateWithoutItemsInput>
  }

  export type ProductCreateWithoutGoodsReceiptItemsInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    category?: CategoryCreateNestedOneWithoutProductsInput
    brand?: BrandCreateNestedOneWithoutProductsInput
    inventoryItems?: InventoryItemCreateNestedManyWithoutProductInput
    variants?: ProductVariantCreateNestedManyWithoutProductInput
    suppliers?: ProductSupplierCreateNestedManyWithoutProductInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
    purchaseItems?: PurchaseOrderItemCreateNestedManyWithoutProductInput
    movements?: InventoryMovementCreateNestedManyWithoutProductInput
    audits?: InventoryAuditCreateNestedManyWithoutProductInput
    reviews?: ProductReviewCreateNestedManyWithoutProductInput
    bundles?: ProductBundleCreateNestedManyWithoutProductsInput
    bundleItems?: ProductBundleCreateNestedManyWithoutBundleItemsInput
    transferItems?: StockTransferItemCreateNestedManyWithoutProductInput
    auditItems?: InventoryAuditItemCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutGoodsReceiptItemsInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    categoryId?: string | null
    brandId?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    inventoryItems?: InventoryItemUncheckedCreateNestedManyWithoutProductInput
    variants?: ProductVariantUncheckedCreateNestedManyWithoutProductInput
    suppliers?: ProductSupplierUncheckedCreateNestedManyWithoutProductInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    purchaseItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutProductInput
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutProductInput
    audits?: InventoryAuditUncheckedCreateNestedManyWithoutProductInput
    reviews?: ProductReviewUncheckedCreateNestedManyWithoutProductInput
    bundles?: ProductBundleUncheckedCreateNestedManyWithoutProductsInput
    bundleItems?: ProductBundleUncheckedCreateNestedManyWithoutBundleItemsInput
    transferItems?: StockTransferItemUncheckedCreateNestedManyWithoutProductInput
    auditItems?: InventoryAuditItemUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutGoodsReceiptItemsInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutGoodsReceiptItemsInput, ProductUncheckedCreateWithoutGoodsReceiptItemsInput>
  }

  export type ProductVariantCreateWithoutGoodsReceiptItemsInput = {
    id?: string
    name: string
    sku: string
    barcode?: string | null
    attributes: JsonNullValueInput | InputJsonValue
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number | null
    reorderPoint?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutVariantsInput
    inventoryItems?: InventoryItemCreateNestedManyWithoutVariantInput
    movements?: InventoryMovementCreateNestedManyWithoutVariantInput
    purchaseItems?: PurchaseOrderItemCreateNestedManyWithoutVariantInput
    orderItems?: OrderItemCreateNestedManyWithoutVariantInput
    transferItems?: StockTransferItemCreateNestedManyWithoutVariantInput
    auditItems?: InventoryAuditItemCreateNestedManyWithoutVariantInput
  }

  export type ProductVariantUncheckedCreateWithoutGoodsReceiptItemsInput = {
    id?: string
    productId: string
    name: string
    sku: string
    barcode?: string | null
    attributes: JsonNullValueInput | InputJsonValue
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number | null
    reorderPoint?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    inventoryItems?: InventoryItemUncheckedCreateNestedManyWithoutVariantInput
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutVariantInput
    purchaseItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutVariantInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutVariantInput
    transferItems?: StockTransferItemUncheckedCreateNestedManyWithoutVariantInput
    auditItems?: InventoryAuditItemUncheckedCreateNestedManyWithoutVariantInput
  }

  export type ProductVariantCreateOrConnectWithoutGoodsReceiptItemsInput = {
    where: ProductVariantWhereUniqueInput
    create: XOR<ProductVariantCreateWithoutGoodsReceiptItemsInput, ProductVariantUncheckedCreateWithoutGoodsReceiptItemsInput>
  }

  export type GoodsReceiptUpsertWithoutItemsInput = {
    update: XOR<GoodsReceiptUpdateWithoutItemsInput, GoodsReceiptUncheckedUpdateWithoutItemsInput>
    create: XOR<GoodsReceiptCreateWithoutItemsInput, GoodsReceiptUncheckedCreateWithoutItemsInput>
    where?: GoodsReceiptWhereInput
  }

  export type GoodsReceiptUpdateToOneWithWhereWithoutItemsInput = {
    where?: GoodsReceiptWhereInput
    data: XOR<GoodsReceiptUpdateWithoutItemsInput, GoodsReceiptUncheckedUpdateWithoutItemsInput>
  }

  export type GoodsReceiptUpdateWithoutItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    receiptNumber?: StringFieldUpdateOperationsInput | string
    receivedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    qcNotes?: NullableStringFieldUpdateOperationsInput | string | null
    qcBy?: NullableStringFieldUpdateOperationsInput | string | null
    qcDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumReceiptStatusFieldUpdateOperationsInput | $Enums.ReceiptStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    receivedBy?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    purchaseOrder?: PurchaseOrderUpdateOneRequiredWithoutReceiptsNestedInput
    warehouse?: WarehouseUpdateOneRequiredWithoutGoodsReceiptsNestedInput
  }

  export type GoodsReceiptUncheckedUpdateWithoutItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    purchaseOrderId?: StringFieldUpdateOperationsInput | string
    warehouseId?: StringFieldUpdateOperationsInput | string
    receiptNumber?: StringFieldUpdateOperationsInput | string
    receivedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    qcNotes?: NullableStringFieldUpdateOperationsInput | string | null
    qcBy?: NullableStringFieldUpdateOperationsInput | string | null
    qcDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumReceiptStatusFieldUpdateOperationsInput | $Enums.ReceiptStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    receivedBy?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductUpsertWithoutGoodsReceiptItemsInput = {
    update: XOR<ProductUpdateWithoutGoodsReceiptItemsInput, ProductUncheckedUpdateWithoutGoodsReceiptItemsInput>
    create: XOR<ProductCreateWithoutGoodsReceiptItemsInput, ProductUncheckedCreateWithoutGoodsReceiptItemsInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutGoodsReceiptItemsInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutGoodsReceiptItemsInput, ProductUncheckedUpdateWithoutGoodsReceiptItemsInput>
  }

  export type ProductUpdateWithoutGoodsReceiptItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    category?: CategoryUpdateOneWithoutProductsNestedInput
    brand?: BrandUpdateOneWithoutProductsNestedInput
    inventoryItems?: InventoryItemUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUpdateManyWithoutProductNestedInput
    suppliers?: ProductSupplierUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
    purchaseItems?: PurchaseOrderItemUpdateManyWithoutProductNestedInput
    movements?: InventoryMovementUpdateManyWithoutProductNestedInput
    audits?: InventoryAuditUpdateManyWithoutProductNestedInput
    reviews?: ProductReviewUpdateManyWithoutProductNestedInput
    bundles?: ProductBundleUpdateManyWithoutProductsNestedInput
    bundleItems?: ProductBundleUpdateManyWithoutBundleItemsNestedInput
    transferItems?: StockTransferItemUpdateManyWithoutProductNestedInput
    auditItems?: InventoryAuditItemUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutGoodsReceiptItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    inventoryItems?: InventoryItemUncheckedUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUncheckedUpdateManyWithoutProductNestedInput
    suppliers?: ProductSupplierUncheckedUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    purchaseItems?: PurchaseOrderItemUncheckedUpdateManyWithoutProductNestedInput
    movements?: InventoryMovementUncheckedUpdateManyWithoutProductNestedInput
    audits?: InventoryAuditUncheckedUpdateManyWithoutProductNestedInput
    reviews?: ProductReviewUncheckedUpdateManyWithoutProductNestedInput
    bundles?: ProductBundleUncheckedUpdateManyWithoutProductsNestedInput
    bundleItems?: ProductBundleUncheckedUpdateManyWithoutBundleItemsNestedInput
    transferItems?: StockTransferItemUncheckedUpdateManyWithoutProductNestedInput
    auditItems?: InventoryAuditItemUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductVariantUpsertWithoutGoodsReceiptItemsInput = {
    update: XOR<ProductVariantUpdateWithoutGoodsReceiptItemsInput, ProductVariantUncheckedUpdateWithoutGoodsReceiptItemsInput>
    create: XOR<ProductVariantCreateWithoutGoodsReceiptItemsInput, ProductVariantUncheckedCreateWithoutGoodsReceiptItemsInput>
    where?: ProductVariantWhereInput
  }

  export type ProductVariantUpdateToOneWithWhereWithoutGoodsReceiptItemsInput = {
    where?: ProductVariantWhereInput
    data: XOR<ProductVariantUpdateWithoutGoodsReceiptItemsInput, ProductVariantUncheckedUpdateWithoutGoodsReceiptItemsInput>
  }

  export type ProductVariantUpdateWithoutGoodsReceiptItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: JsonNullValueInput | InputJsonValue
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutVariantsNestedInput
    inventoryItems?: InventoryItemUpdateManyWithoutVariantNestedInput
    movements?: InventoryMovementUpdateManyWithoutVariantNestedInput
    purchaseItems?: PurchaseOrderItemUpdateManyWithoutVariantNestedInput
    orderItems?: OrderItemUpdateManyWithoutVariantNestedInput
    transferItems?: StockTransferItemUpdateManyWithoutVariantNestedInput
    auditItems?: InventoryAuditItemUpdateManyWithoutVariantNestedInput
  }

  export type ProductVariantUncheckedUpdateWithoutGoodsReceiptItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: JsonNullValueInput | InputJsonValue
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryItems?: InventoryItemUncheckedUpdateManyWithoutVariantNestedInput
    movements?: InventoryMovementUncheckedUpdateManyWithoutVariantNestedInput
    purchaseItems?: PurchaseOrderItemUncheckedUpdateManyWithoutVariantNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutVariantNestedInput
    transferItems?: StockTransferItemUncheckedUpdateManyWithoutVariantNestedInput
    auditItems?: InventoryAuditItemUncheckedUpdateManyWithoutVariantNestedInput
  }

  export type OrderCreateWithoutCustomerInput = {
    id?: string
    orderNumber: string
    type?: $Enums.OrderType
    channel?: $Enums.OrderChannel
    subtotal?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingCost?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount?: Decimal | DecimalJsLike | number | string
    currency?: string
    status?: $Enums.OrderStatus
    fulfillmentStatus?: $Enums.FulfillmentStatus
    paymentStatus?: $Enums.PaymentStatus
    orderDate?: Date | string
    requiredDate?: Date | string | null
    promisedDate?: Date | string | null
    shippedDate?: Date | string | null
    deliveredDate?: Date | string | null
    shippingMethod?: string | null
    trackingNumber?: string | null
    carrier?: string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    priority?: $Enums.OrderPriority
    rushOrder?: boolean
    notes?: string | null
    internalNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    warehouse: WarehouseCreateNestedOneWithoutOrdersInput
    items?: OrderItemCreateNestedManyWithoutOrderInput
    shipments?: ShipmentCreateNestedManyWithoutOrderInput
    invoices?: CustomerInvoiceCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutCustomerInput = {
    id?: string
    orderNumber: string
    warehouseId: string
    type?: $Enums.OrderType
    channel?: $Enums.OrderChannel
    subtotal?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingCost?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount?: Decimal | DecimalJsLike | number | string
    currency?: string
    status?: $Enums.OrderStatus
    fulfillmentStatus?: $Enums.FulfillmentStatus
    paymentStatus?: $Enums.PaymentStatus
    orderDate?: Date | string
    requiredDate?: Date | string | null
    promisedDate?: Date | string | null
    shippedDate?: Date | string | null
    deliveredDate?: Date | string | null
    shippingMethod?: string | null
    trackingNumber?: string | null
    carrier?: string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    priority?: $Enums.OrderPriority
    rushOrder?: boolean
    notes?: string | null
    internalNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    items?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutOrderInput
    invoices?: CustomerInvoiceUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutCustomerInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput>
  }

  export type OrderCreateManyCustomerInputEnvelope = {
    data: OrderCreateManyCustomerInput | OrderCreateManyCustomerInput[]
    skipDuplicates?: boolean
  }

  export type CustomerInvoiceCreateWithoutCustomerInput = {
    id?: string
    invoiceNumber: string
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paidAmount?: Decimal | DecimalJsLike | number | string
    balanceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    invoiceDate?: Date | string
    dueDate: Date | string
    paidDate?: Date | string | null
    status?: $Enums.InvoiceStatus
    paymentMethod?: string | null
    paymentReference?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    order?: OrderCreateNestedOneWithoutInvoicesInput
  }

  export type CustomerInvoiceUncheckedCreateWithoutCustomerInput = {
    id?: string
    invoiceNumber: string
    orderId?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paidAmount?: Decimal | DecimalJsLike | number | string
    balanceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    invoiceDate?: Date | string
    dueDate: Date | string
    paidDate?: Date | string | null
    status?: $Enums.InvoiceStatus
    paymentMethod?: string | null
    paymentReference?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CustomerInvoiceCreateOrConnectWithoutCustomerInput = {
    where: CustomerInvoiceWhereUniqueInput
    create: XOR<CustomerInvoiceCreateWithoutCustomerInput, CustomerInvoiceUncheckedCreateWithoutCustomerInput>
  }

  export type CustomerInvoiceCreateManyCustomerInputEnvelope = {
    data: CustomerInvoiceCreateManyCustomerInput | CustomerInvoiceCreateManyCustomerInput[]
    skipDuplicates?: boolean
  }

  export type CustomerContactCreateWithoutCustomerInput = {
    id?: string
    name: string
    title?: string | null
    email?: string | null
    phone?: string | null
    mobile?: string | null
    isPrimary?: boolean
    department?: string | null
    isActive?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CustomerContactUncheckedCreateWithoutCustomerInput = {
    id?: string
    name: string
    title?: string | null
    email?: string | null
    phone?: string | null
    mobile?: string | null
    isPrimary?: boolean
    department?: string | null
    isActive?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CustomerContactCreateOrConnectWithoutCustomerInput = {
    where: CustomerContactWhereUniqueInput
    create: XOR<CustomerContactCreateWithoutCustomerInput, CustomerContactUncheckedCreateWithoutCustomerInput>
  }

  export type CustomerContactCreateManyCustomerInputEnvelope = {
    data: CustomerContactCreateManyCustomerInput | CustomerContactCreateManyCustomerInput[]
    skipDuplicates?: boolean
  }

  export type OrderUpsertWithWhereUniqueWithoutCustomerInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutCustomerInput, OrderUncheckedUpdateWithoutCustomerInput>
    create: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutCustomerInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutCustomerInput, OrderUncheckedUpdateWithoutCustomerInput>
  }

  export type OrderUpdateManyWithWhereWithoutCustomerInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutCustomerInput>
  }

  export type CustomerInvoiceUpsertWithWhereUniqueWithoutCustomerInput = {
    where: CustomerInvoiceWhereUniqueInput
    update: XOR<CustomerInvoiceUpdateWithoutCustomerInput, CustomerInvoiceUncheckedUpdateWithoutCustomerInput>
    create: XOR<CustomerInvoiceCreateWithoutCustomerInput, CustomerInvoiceUncheckedCreateWithoutCustomerInput>
  }

  export type CustomerInvoiceUpdateWithWhereUniqueWithoutCustomerInput = {
    where: CustomerInvoiceWhereUniqueInput
    data: XOR<CustomerInvoiceUpdateWithoutCustomerInput, CustomerInvoiceUncheckedUpdateWithoutCustomerInput>
  }

  export type CustomerInvoiceUpdateManyWithWhereWithoutCustomerInput = {
    where: CustomerInvoiceScalarWhereInput
    data: XOR<CustomerInvoiceUpdateManyMutationInput, CustomerInvoiceUncheckedUpdateManyWithoutCustomerInput>
  }

  export type CustomerInvoiceScalarWhereInput = {
    AND?: CustomerInvoiceScalarWhereInput | CustomerInvoiceScalarWhereInput[]
    OR?: CustomerInvoiceScalarWhereInput[]
    NOT?: CustomerInvoiceScalarWhereInput | CustomerInvoiceScalarWhereInput[]
    id?: StringFilter<"CustomerInvoice"> | string
    invoiceNumber?: StringFilter<"CustomerInvoice"> | string
    customerId?: StringFilter<"CustomerInvoice"> | string
    orderId?: StringNullableFilter<"CustomerInvoice"> | string | null
    subtotal?: DecimalFilter<"CustomerInvoice"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFilter<"CustomerInvoice"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFilter<"CustomerInvoice"> | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFilter<"CustomerInvoice"> | Decimal | DecimalJsLike | number | string
    balanceAmount?: DecimalFilter<"CustomerInvoice"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"CustomerInvoice"> | string
    invoiceDate?: DateTimeFilter<"CustomerInvoice"> | Date | string
    dueDate?: DateTimeFilter<"CustomerInvoice"> | Date | string
    paidDate?: DateTimeNullableFilter<"CustomerInvoice"> | Date | string | null
    status?: EnumInvoiceStatusFilter<"CustomerInvoice"> | $Enums.InvoiceStatus
    paymentMethod?: StringNullableFilter<"CustomerInvoice"> | string | null
    paymentReference?: StringNullableFilter<"CustomerInvoice"> | string | null
    notes?: StringNullableFilter<"CustomerInvoice"> | string | null
    createdAt?: DateTimeFilter<"CustomerInvoice"> | Date | string
    updatedAt?: DateTimeFilter<"CustomerInvoice"> | Date | string
  }

  export type CustomerContactUpsertWithWhereUniqueWithoutCustomerInput = {
    where: CustomerContactWhereUniqueInput
    update: XOR<CustomerContactUpdateWithoutCustomerInput, CustomerContactUncheckedUpdateWithoutCustomerInput>
    create: XOR<CustomerContactCreateWithoutCustomerInput, CustomerContactUncheckedCreateWithoutCustomerInput>
  }

  export type CustomerContactUpdateWithWhereUniqueWithoutCustomerInput = {
    where: CustomerContactWhereUniqueInput
    data: XOR<CustomerContactUpdateWithoutCustomerInput, CustomerContactUncheckedUpdateWithoutCustomerInput>
  }

  export type CustomerContactUpdateManyWithWhereWithoutCustomerInput = {
    where: CustomerContactScalarWhereInput
    data: XOR<CustomerContactUpdateManyMutationInput, CustomerContactUncheckedUpdateManyWithoutCustomerInput>
  }

  export type CustomerContactScalarWhereInput = {
    AND?: CustomerContactScalarWhereInput | CustomerContactScalarWhereInput[]
    OR?: CustomerContactScalarWhereInput[]
    NOT?: CustomerContactScalarWhereInput | CustomerContactScalarWhereInput[]
    id?: StringFilter<"CustomerContact"> | string
    customerId?: StringFilter<"CustomerContact"> | string
    name?: StringFilter<"CustomerContact"> | string
    title?: StringNullableFilter<"CustomerContact"> | string | null
    email?: StringNullableFilter<"CustomerContact"> | string | null
    phone?: StringNullableFilter<"CustomerContact"> | string | null
    mobile?: StringNullableFilter<"CustomerContact"> | string | null
    isPrimary?: BoolFilter<"CustomerContact"> | boolean
    department?: StringNullableFilter<"CustomerContact"> | string | null
    isActive?: BoolFilter<"CustomerContact"> | boolean
    notes?: StringNullableFilter<"CustomerContact"> | string | null
    createdAt?: DateTimeFilter<"CustomerContact"> | Date | string
    updatedAt?: DateTimeFilter<"CustomerContact"> | Date | string
  }

  export type CustomerCreateWithoutContactsInput = {
    id?: string
    customerNumber: string
    type?: $Enums.CustomerType
    firstName?: string | null
    lastName?: string | null
    companyName?: string | null
    taxId?: string | null
    email?: string | null
    phone?: string | null
    mobile?: string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    creditLimit?: Decimal | DecimalJsLike | number | string | null
    paymentTerms?: string | null
    currency?: string
    preferredLanguage?: string | null
    timezone?: string | null
    allowMarketing?: boolean
    source?: string | null
    status?: $Enums.CustomerStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    orders?: OrderCreateNestedManyWithoutCustomerInput
    invoices?: CustomerInvoiceCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUncheckedCreateWithoutContactsInput = {
    id?: string
    customerNumber: string
    type?: $Enums.CustomerType
    firstName?: string | null
    lastName?: string | null
    companyName?: string | null
    taxId?: string | null
    email?: string | null
    phone?: string | null
    mobile?: string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    creditLimit?: Decimal | DecimalJsLike | number | string | null
    paymentTerms?: string | null
    currency?: string
    preferredLanguage?: string | null
    timezone?: string | null
    allowMarketing?: boolean
    source?: string | null
    status?: $Enums.CustomerStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    orders?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    invoices?: CustomerInvoiceUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomerCreateOrConnectWithoutContactsInput = {
    where: CustomerWhereUniqueInput
    create: XOR<CustomerCreateWithoutContactsInput, CustomerUncheckedCreateWithoutContactsInput>
  }

  export type CustomerUpsertWithoutContactsInput = {
    update: XOR<CustomerUpdateWithoutContactsInput, CustomerUncheckedUpdateWithoutContactsInput>
    create: XOR<CustomerCreateWithoutContactsInput, CustomerUncheckedCreateWithoutContactsInput>
    where?: CustomerWhereInput
  }

  export type CustomerUpdateToOneWithWhereWithoutContactsInput = {
    where?: CustomerWhereInput
    data: XOR<CustomerUpdateWithoutContactsInput, CustomerUncheckedUpdateWithoutContactsInput>
  }

  export type CustomerUpdateWithoutContactsInput = {
    id?: StringFieldUpdateOperationsInput | string
    customerNumber?: StringFieldUpdateOperationsInput | string
    type?: EnumCustomerTypeFieldUpdateOperationsInput | $Enums.CustomerType
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    creditLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    allowMarketing?: BoolFieldUpdateOperationsInput | boolean
    source?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCustomerStatusFieldUpdateOperationsInput | $Enums.CustomerStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    orders?: OrderUpdateManyWithoutCustomerNestedInput
    invoices?: CustomerInvoiceUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateWithoutContactsInput = {
    id?: StringFieldUpdateOperationsInput | string
    customerNumber?: StringFieldUpdateOperationsInput | string
    type?: EnumCustomerTypeFieldUpdateOperationsInput | $Enums.CustomerType
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    creditLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    allowMarketing?: BoolFieldUpdateOperationsInput | boolean
    source?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCustomerStatusFieldUpdateOperationsInput | $Enums.CustomerStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    orders?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    invoices?: CustomerInvoiceUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerCreateWithoutOrdersInput = {
    id?: string
    customerNumber: string
    type?: $Enums.CustomerType
    firstName?: string | null
    lastName?: string | null
    companyName?: string | null
    taxId?: string | null
    email?: string | null
    phone?: string | null
    mobile?: string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    creditLimit?: Decimal | DecimalJsLike | number | string | null
    paymentTerms?: string | null
    currency?: string
    preferredLanguage?: string | null
    timezone?: string | null
    allowMarketing?: boolean
    source?: string | null
    status?: $Enums.CustomerStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    invoices?: CustomerInvoiceCreateNestedManyWithoutCustomerInput
    contacts?: CustomerContactCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUncheckedCreateWithoutOrdersInput = {
    id?: string
    customerNumber: string
    type?: $Enums.CustomerType
    firstName?: string | null
    lastName?: string | null
    companyName?: string | null
    taxId?: string | null
    email?: string | null
    phone?: string | null
    mobile?: string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    creditLimit?: Decimal | DecimalJsLike | number | string | null
    paymentTerms?: string | null
    currency?: string
    preferredLanguage?: string | null
    timezone?: string | null
    allowMarketing?: boolean
    source?: string | null
    status?: $Enums.CustomerStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    invoices?: CustomerInvoiceUncheckedCreateNestedManyWithoutCustomerInput
    contacts?: CustomerContactUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomerCreateOrConnectWithoutOrdersInput = {
    where: CustomerWhereUniqueInput
    create: XOR<CustomerCreateWithoutOrdersInput, CustomerUncheckedCreateWithoutOrdersInput>
  }

  export type WarehouseCreateWithoutOrdersInput = {
    id?: string
    name: string
    code: string
    description?: string | null
    address: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: string | null
    managerName?: string | null
    managerEmail?: string | null
    managerPhone?: string | null
    phone?: string | null
    email?: string | null
    type?: $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    hasRfid?: boolean
    hasBarcode?: boolean
    temperatureControl?: boolean
    securityLevel?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    inventoryItems?: InventoryItemCreateNestedManyWithoutWarehouseInput
    movements?: InventoryMovementCreateNestedManyWithoutWarehouseInput
    transfers?: StockTransferCreateNestedManyWithoutFromWarehouseInput
    receivedTransfers?: StockTransferCreateNestedManyWithoutToWarehouseInput
    purchaseOrders?: PurchaseOrderCreateNestedManyWithoutWarehouseInput
    audits?: InventoryAuditCreateNestedManyWithoutWarehouseInput
    goodsReceipts?: GoodsReceiptCreateNestedManyWithoutWarehouseInput
    shipments?: ShipmentCreateNestedManyWithoutWarehouseInput
    auditItems?: InventoryAuditItemCreateNestedManyWithoutWarehouseInput
  }

  export type WarehouseUncheckedCreateWithoutOrdersInput = {
    id?: string
    name: string
    code: string
    description?: string | null
    address: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: string | null
    managerName?: string | null
    managerEmail?: string | null
    managerPhone?: string | null
    phone?: string | null
    email?: string | null
    type?: $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    hasRfid?: boolean
    hasBarcode?: boolean
    temperatureControl?: boolean
    securityLevel?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    inventoryItems?: InventoryItemUncheckedCreateNestedManyWithoutWarehouseInput
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutWarehouseInput
    transfers?: StockTransferUncheckedCreateNestedManyWithoutFromWarehouseInput
    receivedTransfers?: StockTransferUncheckedCreateNestedManyWithoutToWarehouseInput
    purchaseOrders?: PurchaseOrderUncheckedCreateNestedManyWithoutWarehouseInput
    audits?: InventoryAuditUncheckedCreateNestedManyWithoutWarehouseInput
    goodsReceipts?: GoodsReceiptUncheckedCreateNestedManyWithoutWarehouseInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutWarehouseInput
    auditItems?: InventoryAuditItemUncheckedCreateNestedManyWithoutWarehouseInput
  }

  export type WarehouseCreateOrConnectWithoutOrdersInput = {
    where: WarehouseWhereUniqueInput
    create: XOR<WarehouseCreateWithoutOrdersInput, WarehouseUncheckedCreateWithoutOrdersInput>
  }

  export type OrderItemCreateWithoutOrderInput = {
    id?: string
    orderedQty: number
    shippedQty?: number
    remainingQty: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    productName: string
    productSku: string
    status?: $Enums.OrderItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutOrderItemsInput
    variant?: ProductVariantCreateNestedOneWithoutOrderItemsInput
  }

  export type OrderItemUncheckedCreateWithoutOrderInput = {
    id?: string
    productId: string
    variantId?: string | null
    orderedQty: number
    shippedQty?: number
    remainingQty: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    productName: string
    productSku: string
    status?: $Enums.OrderItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderItemCreateOrConnectWithoutOrderInput = {
    where: OrderItemWhereUniqueInput
    create: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput>
  }

  export type OrderItemCreateManyOrderInputEnvelope = {
    data: OrderItemCreateManyOrderInput | OrderItemCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type ShipmentCreateWithoutOrderInput = {
    id?: string
    shipmentNumber: string
    carrier: string
    service?: string | null
    trackingNumber?: string | null
    fromAddress: JsonNullValueInput | InputJsonValue
    toAddress: JsonNullValueInput | InputJsonValue
    packageCount?: number
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    shippingCost?: Decimal | DecimalJsLike | number | string | null
    insuranceValue?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.ShipmentStatus
    shipDate?: Date | string | null
    estimatedDelivery?: Date | string | null
    actualDelivery?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    warehouse: WarehouseCreateNestedOneWithoutShipmentsInput
    packages?: ShipmentPackageCreateNestedManyWithoutShipmentInput
    tracking?: ShipmentTrackingCreateNestedManyWithoutShipmentInput
  }

  export type ShipmentUncheckedCreateWithoutOrderInput = {
    id?: string
    shipmentNumber: string
    warehouseId: string
    carrier: string
    service?: string | null
    trackingNumber?: string | null
    fromAddress: JsonNullValueInput | InputJsonValue
    toAddress: JsonNullValueInput | InputJsonValue
    packageCount?: number
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    shippingCost?: Decimal | DecimalJsLike | number | string | null
    insuranceValue?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.ShipmentStatus
    shipDate?: Date | string | null
    estimatedDelivery?: Date | string | null
    actualDelivery?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    packages?: ShipmentPackageUncheckedCreateNestedManyWithoutShipmentInput
    tracking?: ShipmentTrackingUncheckedCreateNestedManyWithoutShipmentInput
  }

  export type ShipmentCreateOrConnectWithoutOrderInput = {
    where: ShipmentWhereUniqueInput
    create: XOR<ShipmentCreateWithoutOrderInput, ShipmentUncheckedCreateWithoutOrderInput>
  }

  export type ShipmentCreateManyOrderInputEnvelope = {
    data: ShipmentCreateManyOrderInput | ShipmentCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type CustomerInvoiceCreateWithoutOrderInput = {
    id?: string
    invoiceNumber: string
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paidAmount?: Decimal | DecimalJsLike | number | string
    balanceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    invoiceDate?: Date | string
    dueDate: Date | string
    paidDate?: Date | string | null
    status?: $Enums.InvoiceStatus
    paymentMethod?: string | null
    paymentReference?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    customer: CustomerCreateNestedOneWithoutInvoicesInput
  }

  export type CustomerInvoiceUncheckedCreateWithoutOrderInput = {
    id?: string
    invoiceNumber: string
    customerId: string
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paidAmount?: Decimal | DecimalJsLike | number | string
    balanceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    invoiceDate?: Date | string
    dueDate: Date | string
    paidDate?: Date | string | null
    status?: $Enums.InvoiceStatus
    paymentMethod?: string | null
    paymentReference?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CustomerInvoiceCreateOrConnectWithoutOrderInput = {
    where: CustomerInvoiceWhereUniqueInput
    create: XOR<CustomerInvoiceCreateWithoutOrderInput, CustomerInvoiceUncheckedCreateWithoutOrderInput>
  }

  export type CustomerInvoiceCreateManyOrderInputEnvelope = {
    data: CustomerInvoiceCreateManyOrderInput | CustomerInvoiceCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type CustomerUpsertWithoutOrdersInput = {
    update: XOR<CustomerUpdateWithoutOrdersInput, CustomerUncheckedUpdateWithoutOrdersInput>
    create: XOR<CustomerCreateWithoutOrdersInput, CustomerUncheckedCreateWithoutOrdersInput>
    where?: CustomerWhereInput
  }

  export type CustomerUpdateToOneWithWhereWithoutOrdersInput = {
    where?: CustomerWhereInput
    data: XOR<CustomerUpdateWithoutOrdersInput, CustomerUncheckedUpdateWithoutOrdersInput>
  }

  export type CustomerUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    customerNumber?: StringFieldUpdateOperationsInput | string
    type?: EnumCustomerTypeFieldUpdateOperationsInput | $Enums.CustomerType
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    creditLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    allowMarketing?: BoolFieldUpdateOperationsInput | boolean
    source?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCustomerStatusFieldUpdateOperationsInput | $Enums.CustomerStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    invoices?: CustomerInvoiceUpdateManyWithoutCustomerNestedInput
    contacts?: CustomerContactUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    customerNumber?: StringFieldUpdateOperationsInput | string
    type?: EnumCustomerTypeFieldUpdateOperationsInput | $Enums.CustomerType
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    creditLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    allowMarketing?: BoolFieldUpdateOperationsInput | boolean
    source?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCustomerStatusFieldUpdateOperationsInput | $Enums.CustomerStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    invoices?: CustomerInvoiceUncheckedUpdateManyWithoutCustomerNestedInput
    contacts?: CustomerContactUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type WarehouseUpsertWithoutOrdersInput = {
    update: XOR<WarehouseUpdateWithoutOrdersInput, WarehouseUncheckedUpdateWithoutOrdersInput>
    create: XOR<WarehouseCreateWithoutOrdersInput, WarehouseUncheckedCreateWithoutOrdersInput>
    where?: WarehouseWhereInput
  }

  export type WarehouseUpdateToOneWithWhereWithoutOrdersInput = {
    where?: WarehouseWhereInput
    data: XOR<WarehouseUpdateWithoutOrdersInput, WarehouseUncheckedUpdateWithoutOrdersInput>
  }

  export type WarehouseUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    managerName?: NullableStringFieldUpdateOperationsInput | string | null
    managerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    managerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumWarehouseTypeFieldUpdateOperationsInput | $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hasRfid?: BoolFieldUpdateOperationsInput | boolean
    hasBarcode?: BoolFieldUpdateOperationsInput | boolean
    temperatureControl?: BoolFieldUpdateOperationsInput | boolean
    securityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryItems?: InventoryItemUpdateManyWithoutWarehouseNestedInput
    movements?: InventoryMovementUpdateManyWithoutWarehouseNestedInput
    transfers?: StockTransferUpdateManyWithoutFromWarehouseNestedInput
    receivedTransfers?: StockTransferUpdateManyWithoutToWarehouseNestedInput
    purchaseOrders?: PurchaseOrderUpdateManyWithoutWarehouseNestedInput
    audits?: InventoryAuditUpdateManyWithoutWarehouseNestedInput
    goodsReceipts?: GoodsReceiptUpdateManyWithoutWarehouseNestedInput
    shipments?: ShipmentUpdateManyWithoutWarehouseNestedInput
    auditItems?: InventoryAuditItemUpdateManyWithoutWarehouseNestedInput
  }

  export type WarehouseUncheckedUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    managerName?: NullableStringFieldUpdateOperationsInput | string | null
    managerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    managerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumWarehouseTypeFieldUpdateOperationsInput | $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hasRfid?: BoolFieldUpdateOperationsInput | boolean
    hasBarcode?: BoolFieldUpdateOperationsInput | boolean
    temperatureControl?: BoolFieldUpdateOperationsInput | boolean
    securityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryItems?: InventoryItemUncheckedUpdateManyWithoutWarehouseNestedInput
    movements?: InventoryMovementUncheckedUpdateManyWithoutWarehouseNestedInput
    transfers?: StockTransferUncheckedUpdateManyWithoutFromWarehouseNestedInput
    receivedTransfers?: StockTransferUncheckedUpdateManyWithoutToWarehouseNestedInput
    purchaseOrders?: PurchaseOrderUncheckedUpdateManyWithoutWarehouseNestedInput
    audits?: InventoryAuditUncheckedUpdateManyWithoutWarehouseNestedInput
    goodsReceipts?: GoodsReceiptUncheckedUpdateManyWithoutWarehouseNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutWarehouseNestedInput
    auditItems?: InventoryAuditItemUncheckedUpdateManyWithoutWarehouseNestedInput
  }

  export type OrderItemUpsertWithWhereUniqueWithoutOrderInput = {
    where: OrderItemWhereUniqueInput
    update: XOR<OrderItemUpdateWithoutOrderInput, OrderItemUncheckedUpdateWithoutOrderInput>
    create: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput>
  }

  export type OrderItemUpdateWithWhereUniqueWithoutOrderInput = {
    where: OrderItemWhereUniqueInput
    data: XOR<OrderItemUpdateWithoutOrderInput, OrderItemUncheckedUpdateWithoutOrderInput>
  }

  export type OrderItemUpdateManyWithWhereWithoutOrderInput = {
    where: OrderItemScalarWhereInput
    data: XOR<OrderItemUpdateManyMutationInput, OrderItemUncheckedUpdateManyWithoutOrderInput>
  }

  export type ShipmentUpsertWithWhereUniqueWithoutOrderInput = {
    where: ShipmentWhereUniqueInput
    update: XOR<ShipmentUpdateWithoutOrderInput, ShipmentUncheckedUpdateWithoutOrderInput>
    create: XOR<ShipmentCreateWithoutOrderInput, ShipmentUncheckedCreateWithoutOrderInput>
  }

  export type ShipmentUpdateWithWhereUniqueWithoutOrderInput = {
    where: ShipmentWhereUniqueInput
    data: XOR<ShipmentUpdateWithoutOrderInput, ShipmentUncheckedUpdateWithoutOrderInput>
  }

  export type ShipmentUpdateManyWithWhereWithoutOrderInput = {
    where: ShipmentScalarWhereInput
    data: XOR<ShipmentUpdateManyMutationInput, ShipmentUncheckedUpdateManyWithoutOrderInput>
  }

  export type CustomerInvoiceUpsertWithWhereUniqueWithoutOrderInput = {
    where: CustomerInvoiceWhereUniqueInput
    update: XOR<CustomerInvoiceUpdateWithoutOrderInput, CustomerInvoiceUncheckedUpdateWithoutOrderInput>
    create: XOR<CustomerInvoiceCreateWithoutOrderInput, CustomerInvoiceUncheckedCreateWithoutOrderInput>
  }

  export type CustomerInvoiceUpdateWithWhereUniqueWithoutOrderInput = {
    where: CustomerInvoiceWhereUniqueInput
    data: XOR<CustomerInvoiceUpdateWithoutOrderInput, CustomerInvoiceUncheckedUpdateWithoutOrderInput>
  }

  export type CustomerInvoiceUpdateManyWithWhereWithoutOrderInput = {
    where: CustomerInvoiceScalarWhereInput
    data: XOR<CustomerInvoiceUpdateManyMutationInput, CustomerInvoiceUncheckedUpdateManyWithoutOrderInput>
  }

  export type OrderCreateWithoutItemsInput = {
    id?: string
    orderNumber: string
    type?: $Enums.OrderType
    channel?: $Enums.OrderChannel
    subtotal?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingCost?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount?: Decimal | DecimalJsLike | number | string
    currency?: string
    status?: $Enums.OrderStatus
    fulfillmentStatus?: $Enums.FulfillmentStatus
    paymentStatus?: $Enums.PaymentStatus
    orderDate?: Date | string
    requiredDate?: Date | string | null
    promisedDate?: Date | string | null
    shippedDate?: Date | string | null
    deliveredDate?: Date | string | null
    shippingMethod?: string | null
    trackingNumber?: string | null
    carrier?: string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    priority?: $Enums.OrderPriority
    rushOrder?: boolean
    notes?: string | null
    internalNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    customer: CustomerCreateNestedOneWithoutOrdersInput
    warehouse: WarehouseCreateNestedOneWithoutOrdersInput
    shipments?: ShipmentCreateNestedManyWithoutOrderInput
    invoices?: CustomerInvoiceCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutItemsInput = {
    id?: string
    orderNumber: string
    customerId: string
    warehouseId: string
    type?: $Enums.OrderType
    channel?: $Enums.OrderChannel
    subtotal?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingCost?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount?: Decimal | DecimalJsLike | number | string
    currency?: string
    status?: $Enums.OrderStatus
    fulfillmentStatus?: $Enums.FulfillmentStatus
    paymentStatus?: $Enums.PaymentStatus
    orderDate?: Date | string
    requiredDate?: Date | string | null
    promisedDate?: Date | string | null
    shippedDate?: Date | string | null
    deliveredDate?: Date | string | null
    shippingMethod?: string | null
    trackingNumber?: string | null
    carrier?: string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    priority?: $Enums.OrderPriority
    rushOrder?: boolean
    notes?: string | null
    internalNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    shipments?: ShipmentUncheckedCreateNestedManyWithoutOrderInput
    invoices?: CustomerInvoiceUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutItemsInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutItemsInput, OrderUncheckedCreateWithoutItemsInput>
  }

  export type ProductCreateWithoutOrderItemsInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    category?: CategoryCreateNestedOneWithoutProductsInput
    brand?: BrandCreateNestedOneWithoutProductsInput
    inventoryItems?: InventoryItemCreateNestedManyWithoutProductInput
    variants?: ProductVariantCreateNestedManyWithoutProductInput
    suppliers?: ProductSupplierCreateNestedManyWithoutProductInput
    purchaseItems?: PurchaseOrderItemCreateNestedManyWithoutProductInput
    movements?: InventoryMovementCreateNestedManyWithoutProductInput
    audits?: InventoryAuditCreateNestedManyWithoutProductInput
    reviews?: ProductReviewCreateNestedManyWithoutProductInput
    bundles?: ProductBundleCreateNestedManyWithoutProductsInput
    bundleItems?: ProductBundleCreateNestedManyWithoutBundleItemsInput
    goodsReceiptItems?: GoodsReceiptItemCreateNestedManyWithoutProductInput
    transferItems?: StockTransferItemCreateNestedManyWithoutProductInput
    auditItems?: InventoryAuditItemCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutOrderItemsInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    categoryId?: string | null
    brandId?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    inventoryItems?: InventoryItemUncheckedCreateNestedManyWithoutProductInput
    variants?: ProductVariantUncheckedCreateNestedManyWithoutProductInput
    suppliers?: ProductSupplierUncheckedCreateNestedManyWithoutProductInput
    purchaseItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutProductInput
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutProductInput
    audits?: InventoryAuditUncheckedCreateNestedManyWithoutProductInput
    reviews?: ProductReviewUncheckedCreateNestedManyWithoutProductInput
    bundles?: ProductBundleUncheckedCreateNestedManyWithoutProductsInput
    bundleItems?: ProductBundleUncheckedCreateNestedManyWithoutBundleItemsInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedCreateNestedManyWithoutProductInput
    transferItems?: StockTransferItemUncheckedCreateNestedManyWithoutProductInput
    auditItems?: InventoryAuditItemUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutOrderItemsInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutOrderItemsInput, ProductUncheckedCreateWithoutOrderItemsInput>
  }

  export type ProductVariantCreateWithoutOrderItemsInput = {
    id?: string
    name: string
    sku: string
    barcode?: string | null
    attributes: JsonNullValueInput | InputJsonValue
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number | null
    reorderPoint?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutVariantsInput
    inventoryItems?: InventoryItemCreateNestedManyWithoutVariantInput
    movements?: InventoryMovementCreateNestedManyWithoutVariantInput
    purchaseItems?: PurchaseOrderItemCreateNestedManyWithoutVariantInput
    goodsReceiptItems?: GoodsReceiptItemCreateNestedManyWithoutVariantInput
    transferItems?: StockTransferItemCreateNestedManyWithoutVariantInput
    auditItems?: InventoryAuditItemCreateNestedManyWithoutVariantInput
  }

  export type ProductVariantUncheckedCreateWithoutOrderItemsInput = {
    id?: string
    productId: string
    name: string
    sku: string
    barcode?: string | null
    attributes: JsonNullValueInput | InputJsonValue
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number | null
    reorderPoint?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    inventoryItems?: InventoryItemUncheckedCreateNestedManyWithoutVariantInput
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutVariantInput
    purchaseItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutVariantInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedCreateNestedManyWithoutVariantInput
    transferItems?: StockTransferItemUncheckedCreateNestedManyWithoutVariantInput
    auditItems?: InventoryAuditItemUncheckedCreateNestedManyWithoutVariantInput
  }

  export type ProductVariantCreateOrConnectWithoutOrderItemsInput = {
    where: ProductVariantWhereUniqueInput
    create: XOR<ProductVariantCreateWithoutOrderItemsInput, ProductVariantUncheckedCreateWithoutOrderItemsInput>
  }

  export type OrderUpsertWithoutItemsInput = {
    update: XOR<OrderUpdateWithoutItemsInput, OrderUncheckedUpdateWithoutItemsInput>
    create: XOR<OrderCreateWithoutItemsInput, OrderUncheckedCreateWithoutItemsInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutItemsInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutItemsInput, OrderUncheckedUpdateWithoutItemsInput>
  }

  export type OrderUpdateWithoutItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    type?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    channel?: EnumOrderChannelFieldUpdateOperationsInput | $Enums.OrderChannel
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    fulfillmentStatus?: EnumFulfillmentStatusFieldUpdateOperationsInput | $Enums.FulfillmentStatus
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    requiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    promisedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingMethod?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    carrier?: NullableStringFieldUpdateOperationsInput | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    priority?: EnumOrderPriorityFieldUpdateOperationsInput | $Enums.OrderPriority
    rushOrder?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    customer?: CustomerUpdateOneRequiredWithoutOrdersNestedInput
    warehouse?: WarehouseUpdateOneRequiredWithoutOrdersNestedInput
    shipments?: ShipmentUpdateManyWithoutOrderNestedInput
    invoices?: CustomerInvoiceUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    warehouseId?: StringFieldUpdateOperationsInput | string
    type?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    channel?: EnumOrderChannelFieldUpdateOperationsInput | $Enums.OrderChannel
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    fulfillmentStatus?: EnumFulfillmentStatusFieldUpdateOperationsInput | $Enums.FulfillmentStatus
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    requiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    promisedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingMethod?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    carrier?: NullableStringFieldUpdateOperationsInput | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    priority?: EnumOrderPriorityFieldUpdateOperationsInput | $Enums.OrderPriority
    rushOrder?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    shipments?: ShipmentUncheckedUpdateManyWithoutOrderNestedInput
    invoices?: CustomerInvoiceUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type ProductUpsertWithoutOrderItemsInput = {
    update: XOR<ProductUpdateWithoutOrderItemsInput, ProductUncheckedUpdateWithoutOrderItemsInput>
    create: XOR<ProductCreateWithoutOrderItemsInput, ProductUncheckedCreateWithoutOrderItemsInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutOrderItemsInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutOrderItemsInput, ProductUncheckedUpdateWithoutOrderItemsInput>
  }

  export type ProductUpdateWithoutOrderItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    category?: CategoryUpdateOneWithoutProductsNestedInput
    brand?: BrandUpdateOneWithoutProductsNestedInput
    inventoryItems?: InventoryItemUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUpdateManyWithoutProductNestedInput
    suppliers?: ProductSupplierUpdateManyWithoutProductNestedInput
    purchaseItems?: PurchaseOrderItemUpdateManyWithoutProductNestedInput
    movements?: InventoryMovementUpdateManyWithoutProductNestedInput
    audits?: InventoryAuditUpdateManyWithoutProductNestedInput
    reviews?: ProductReviewUpdateManyWithoutProductNestedInput
    bundles?: ProductBundleUpdateManyWithoutProductsNestedInput
    bundleItems?: ProductBundleUpdateManyWithoutBundleItemsNestedInput
    goodsReceiptItems?: GoodsReceiptItemUpdateManyWithoutProductNestedInput
    transferItems?: StockTransferItemUpdateManyWithoutProductNestedInput
    auditItems?: InventoryAuditItemUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutOrderItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    inventoryItems?: InventoryItemUncheckedUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUncheckedUpdateManyWithoutProductNestedInput
    suppliers?: ProductSupplierUncheckedUpdateManyWithoutProductNestedInput
    purchaseItems?: PurchaseOrderItemUncheckedUpdateManyWithoutProductNestedInput
    movements?: InventoryMovementUncheckedUpdateManyWithoutProductNestedInput
    audits?: InventoryAuditUncheckedUpdateManyWithoutProductNestedInput
    reviews?: ProductReviewUncheckedUpdateManyWithoutProductNestedInput
    bundles?: ProductBundleUncheckedUpdateManyWithoutProductsNestedInput
    bundleItems?: ProductBundleUncheckedUpdateManyWithoutBundleItemsNestedInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedUpdateManyWithoutProductNestedInput
    transferItems?: StockTransferItemUncheckedUpdateManyWithoutProductNestedInput
    auditItems?: InventoryAuditItemUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductVariantUpsertWithoutOrderItemsInput = {
    update: XOR<ProductVariantUpdateWithoutOrderItemsInput, ProductVariantUncheckedUpdateWithoutOrderItemsInput>
    create: XOR<ProductVariantCreateWithoutOrderItemsInput, ProductVariantUncheckedCreateWithoutOrderItemsInput>
    where?: ProductVariantWhereInput
  }

  export type ProductVariantUpdateToOneWithWhereWithoutOrderItemsInput = {
    where?: ProductVariantWhereInput
    data: XOR<ProductVariantUpdateWithoutOrderItemsInput, ProductVariantUncheckedUpdateWithoutOrderItemsInput>
  }

  export type ProductVariantUpdateWithoutOrderItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: JsonNullValueInput | InputJsonValue
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutVariantsNestedInput
    inventoryItems?: InventoryItemUpdateManyWithoutVariantNestedInput
    movements?: InventoryMovementUpdateManyWithoutVariantNestedInput
    purchaseItems?: PurchaseOrderItemUpdateManyWithoutVariantNestedInput
    goodsReceiptItems?: GoodsReceiptItemUpdateManyWithoutVariantNestedInput
    transferItems?: StockTransferItemUpdateManyWithoutVariantNestedInput
    auditItems?: InventoryAuditItemUpdateManyWithoutVariantNestedInput
  }

  export type ProductVariantUncheckedUpdateWithoutOrderItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: JsonNullValueInput | InputJsonValue
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryItems?: InventoryItemUncheckedUpdateManyWithoutVariantNestedInput
    movements?: InventoryMovementUncheckedUpdateManyWithoutVariantNestedInput
    purchaseItems?: PurchaseOrderItemUncheckedUpdateManyWithoutVariantNestedInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedUpdateManyWithoutVariantNestedInput
    transferItems?: StockTransferItemUncheckedUpdateManyWithoutVariantNestedInput
    auditItems?: InventoryAuditItemUncheckedUpdateManyWithoutVariantNestedInput
  }

  export type OrderCreateWithoutShipmentsInput = {
    id?: string
    orderNumber: string
    type?: $Enums.OrderType
    channel?: $Enums.OrderChannel
    subtotal?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingCost?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount?: Decimal | DecimalJsLike | number | string
    currency?: string
    status?: $Enums.OrderStatus
    fulfillmentStatus?: $Enums.FulfillmentStatus
    paymentStatus?: $Enums.PaymentStatus
    orderDate?: Date | string
    requiredDate?: Date | string | null
    promisedDate?: Date | string | null
    shippedDate?: Date | string | null
    deliveredDate?: Date | string | null
    shippingMethod?: string | null
    trackingNumber?: string | null
    carrier?: string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    priority?: $Enums.OrderPriority
    rushOrder?: boolean
    notes?: string | null
    internalNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    customer: CustomerCreateNestedOneWithoutOrdersInput
    warehouse: WarehouseCreateNestedOneWithoutOrdersInput
    items?: OrderItemCreateNestedManyWithoutOrderInput
    invoices?: CustomerInvoiceCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutShipmentsInput = {
    id?: string
    orderNumber: string
    customerId: string
    warehouseId: string
    type?: $Enums.OrderType
    channel?: $Enums.OrderChannel
    subtotal?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingCost?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount?: Decimal | DecimalJsLike | number | string
    currency?: string
    status?: $Enums.OrderStatus
    fulfillmentStatus?: $Enums.FulfillmentStatus
    paymentStatus?: $Enums.PaymentStatus
    orderDate?: Date | string
    requiredDate?: Date | string | null
    promisedDate?: Date | string | null
    shippedDate?: Date | string | null
    deliveredDate?: Date | string | null
    shippingMethod?: string | null
    trackingNumber?: string | null
    carrier?: string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    priority?: $Enums.OrderPriority
    rushOrder?: boolean
    notes?: string | null
    internalNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    items?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
    invoices?: CustomerInvoiceUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutShipmentsInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutShipmentsInput, OrderUncheckedCreateWithoutShipmentsInput>
  }

  export type WarehouseCreateWithoutShipmentsInput = {
    id?: string
    name: string
    code: string
    description?: string | null
    address: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: string | null
    managerName?: string | null
    managerEmail?: string | null
    managerPhone?: string | null
    phone?: string | null
    email?: string | null
    type?: $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    hasRfid?: boolean
    hasBarcode?: boolean
    temperatureControl?: boolean
    securityLevel?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    inventoryItems?: InventoryItemCreateNestedManyWithoutWarehouseInput
    movements?: InventoryMovementCreateNestedManyWithoutWarehouseInput
    transfers?: StockTransferCreateNestedManyWithoutFromWarehouseInput
    receivedTransfers?: StockTransferCreateNestedManyWithoutToWarehouseInput
    orders?: OrderCreateNestedManyWithoutWarehouseInput
    purchaseOrders?: PurchaseOrderCreateNestedManyWithoutWarehouseInput
    audits?: InventoryAuditCreateNestedManyWithoutWarehouseInput
    goodsReceipts?: GoodsReceiptCreateNestedManyWithoutWarehouseInput
    auditItems?: InventoryAuditItemCreateNestedManyWithoutWarehouseInput
  }

  export type WarehouseUncheckedCreateWithoutShipmentsInput = {
    id?: string
    name: string
    code: string
    description?: string | null
    address: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: string | null
    managerName?: string | null
    managerEmail?: string | null
    managerPhone?: string | null
    phone?: string | null
    email?: string | null
    type?: $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    hasRfid?: boolean
    hasBarcode?: boolean
    temperatureControl?: boolean
    securityLevel?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    inventoryItems?: InventoryItemUncheckedCreateNestedManyWithoutWarehouseInput
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutWarehouseInput
    transfers?: StockTransferUncheckedCreateNestedManyWithoutFromWarehouseInput
    receivedTransfers?: StockTransferUncheckedCreateNestedManyWithoutToWarehouseInput
    orders?: OrderUncheckedCreateNestedManyWithoutWarehouseInput
    purchaseOrders?: PurchaseOrderUncheckedCreateNestedManyWithoutWarehouseInput
    audits?: InventoryAuditUncheckedCreateNestedManyWithoutWarehouseInput
    goodsReceipts?: GoodsReceiptUncheckedCreateNestedManyWithoutWarehouseInput
    auditItems?: InventoryAuditItemUncheckedCreateNestedManyWithoutWarehouseInput
  }

  export type WarehouseCreateOrConnectWithoutShipmentsInput = {
    where: WarehouseWhereUniqueInput
    create: XOR<WarehouseCreateWithoutShipmentsInput, WarehouseUncheckedCreateWithoutShipmentsInput>
  }

  export type ShipmentPackageCreateWithoutShipmentInput = {
    id?: string
    packageNumber: string
    trackingNumber?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    contents?: NullableJsonNullValueInput | InputJsonValue
    status?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ShipmentPackageUncheckedCreateWithoutShipmentInput = {
    id?: string
    packageNumber: string
    trackingNumber?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    contents?: NullableJsonNullValueInput | InputJsonValue
    status?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ShipmentPackageCreateOrConnectWithoutShipmentInput = {
    where: ShipmentPackageWhereUniqueInput
    create: XOR<ShipmentPackageCreateWithoutShipmentInput, ShipmentPackageUncheckedCreateWithoutShipmentInput>
  }

  export type ShipmentPackageCreateManyShipmentInputEnvelope = {
    data: ShipmentPackageCreateManyShipmentInput | ShipmentPackageCreateManyShipmentInput[]
    skipDuplicates?: boolean
  }

  export type ShipmentTrackingCreateWithoutShipmentInput = {
    id?: string
    status: string
    description?: string | null
    location?: string | null
    eventDate: Date | string
    rawData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type ShipmentTrackingUncheckedCreateWithoutShipmentInput = {
    id?: string
    status: string
    description?: string | null
    location?: string | null
    eventDate: Date | string
    rawData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type ShipmentTrackingCreateOrConnectWithoutShipmentInput = {
    where: ShipmentTrackingWhereUniqueInput
    create: XOR<ShipmentTrackingCreateWithoutShipmentInput, ShipmentTrackingUncheckedCreateWithoutShipmentInput>
  }

  export type ShipmentTrackingCreateManyShipmentInputEnvelope = {
    data: ShipmentTrackingCreateManyShipmentInput | ShipmentTrackingCreateManyShipmentInput[]
    skipDuplicates?: boolean
  }

  export type OrderUpsertWithoutShipmentsInput = {
    update: XOR<OrderUpdateWithoutShipmentsInput, OrderUncheckedUpdateWithoutShipmentsInput>
    create: XOR<OrderCreateWithoutShipmentsInput, OrderUncheckedCreateWithoutShipmentsInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutShipmentsInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutShipmentsInput, OrderUncheckedUpdateWithoutShipmentsInput>
  }

  export type OrderUpdateWithoutShipmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    type?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    channel?: EnumOrderChannelFieldUpdateOperationsInput | $Enums.OrderChannel
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    fulfillmentStatus?: EnumFulfillmentStatusFieldUpdateOperationsInput | $Enums.FulfillmentStatus
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    requiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    promisedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingMethod?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    carrier?: NullableStringFieldUpdateOperationsInput | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    priority?: EnumOrderPriorityFieldUpdateOperationsInput | $Enums.OrderPriority
    rushOrder?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    customer?: CustomerUpdateOneRequiredWithoutOrdersNestedInput
    warehouse?: WarehouseUpdateOneRequiredWithoutOrdersNestedInput
    items?: OrderItemUpdateManyWithoutOrderNestedInput
    invoices?: CustomerInvoiceUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutShipmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    warehouseId?: StringFieldUpdateOperationsInput | string
    type?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    channel?: EnumOrderChannelFieldUpdateOperationsInput | $Enums.OrderChannel
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    fulfillmentStatus?: EnumFulfillmentStatusFieldUpdateOperationsInput | $Enums.FulfillmentStatus
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    requiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    promisedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingMethod?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    carrier?: NullableStringFieldUpdateOperationsInput | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    priority?: EnumOrderPriorityFieldUpdateOperationsInput | $Enums.OrderPriority
    rushOrder?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    items?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
    invoices?: CustomerInvoiceUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type WarehouseUpsertWithoutShipmentsInput = {
    update: XOR<WarehouseUpdateWithoutShipmentsInput, WarehouseUncheckedUpdateWithoutShipmentsInput>
    create: XOR<WarehouseCreateWithoutShipmentsInput, WarehouseUncheckedCreateWithoutShipmentsInput>
    where?: WarehouseWhereInput
  }

  export type WarehouseUpdateToOneWithWhereWithoutShipmentsInput = {
    where?: WarehouseWhereInput
    data: XOR<WarehouseUpdateWithoutShipmentsInput, WarehouseUncheckedUpdateWithoutShipmentsInput>
  }

  export type WarehouseUpdateWithoutShipmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    managerName?: NullableStringFieldUpdateOperationsInput | string | null
    managerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    managerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumWarehouseTypeFieldUpdateOperationsInput | $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hasRfid?: BoolFieldUpdateOperationsInput | boolean
    hasBarcode?: BoolFieldUpdateOperationsInput | boolean
    temperatureControl?: BoolFieldUpdateOperationsInput | boolean
    securityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryItems?: InventoryItemUpdateManyWithoutWarehouseNestedInput
    movements?: InventoryMovementUpdateManyWithoutWarehouseNestedInput
    transfers?: StockTransferUpdateManyWithoutFromWarehouseNestedInput
    receivedTransfers?: StockTransferUpdateManyWithoutToWarehouseNestedInput
    orders?: OrderUpdateManyWithoutWarehouseNestedInput
    purchaseOrders?: PurchaseOrderUpdateManyWithoutWarehouseNestedInput
    audits?: InventoryAuditUpdateManyWithoutWarehouseNestedInput
    goodsReceipts?: GoodsReceiptUpdateManyWithoutWarehouseNestedInput
    auditItems?: InventoryAuditItemUpdateManyWithoutWarehouseNestedInput
  }

  export type WarehouseUncheckedUpdateWithoutShipmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    managerName?: NullableStringFieldUpdateOperationsInput | string | null
    managerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    managerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumWarehouseTypeFieldUpdateOperationsInput | $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hasRfid?: BoolFieldUpdateOperationsInput | boolean
    hasBarcode?: BoolFieldUpdateOperationsInput | boolean
    temperatureControl?: BoolFieldUpdateOperationsInput | boolean
    securityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryItems?: InventoryItemUncheckedUpdateManyWithoutWarehouseNestedInput
    movements?: InventoryMovementUncheckedUpdateManyWithoutWarehouseNestedInput
    transfers?: StockTransferUncheckedUpdateManyWithoutFromWarehouseNestedInput
    receivedTransfers?: StockTransferUncheckedUpdateManyWithoutToWarehouseNestedInput
    orders?: OrderUncheckedUpdateManyWithoutWarehouseNestedInput
    purchaseOrders?: PurchaseOrderUncheckedUpdateManyWithoutWarehouseNestedInput
    audits?: InventoryAuditUncheckedUpdateManyWithoutWarehouseNestedInput
    goodsReceipts?: GoodsReceiptUncheckedUpdateManyWithoutWarehouseNestedInput
    auditItems?: InventoryAuditItemUncheckedUpdateManyWithoutWarehouseNestedInput
  }

  export type ShipmentPackageUpsertWithWhereUniqueWithoutShipmentInput = {
    where: ShipmentPackageWhereUniqueInput
    update: XOR<ShipmentPackageUpdateWithoutShipmentInput, ShipmentPackageUncheckedUpdateWithoutShipmentInput>
    create: XOR<ShipmentPackageCreateWithoutShipmentInput, ShipmentPackageUncheckedCreateWithoutShipmentInput>
  }

  export type ShipmentPackageUpdateWithWhereUniqueWithoutShipmentInput = {
    where: ShipmentPackageWhereUniqueInput
    data: XOR<ShipmentPackageUpdateWithoutShipmentInput, ShipmentPackageUncheckedUpdateWithoutShipmentInput>
  }

  export type ShipmentPackageUpdateManyWithWhereWithoutShipmentInput = {
    where: ShipmentPackageScalarWhereInput
    data: XOR<ShipmentPackageUpdateManyMutationInput, ShipmentPackageUncheckedUpdateManyWithoutShipmentInput>
  }

  export type ShipmentPackageScalarWhereInput = {
    AND?: ShipmentPackageScalarWhereInput | ShipmentPackageScalarWhereInput[]
    OR?: ShipmentPackageScalarWhereInput[]
    NOT?: ShipmentPackageScalarWhereInput | ShipmentPackageScalarWhereInput[]
    id?: StringFilter<"ShipmentPackage"> | string
    shipmentId?: StringFilter<"ShipmentPackage"> | string
    packageNumber?: StringFilter<"ShipmentPackage"> | string
    trackingNumber?: StringNullableFilter<"ShipmentPackage"> | string | null
    weight?: DecimalNullableFilter<"ShipmentPackage"> | Decimal | DecimalJsLike | number | string | null
    dimensions?: JsonNullableFilter<"ShipmentPackage">
    contents?: JsonNullableFilter<"ShipmentPackage">
    status?: StringNullableFilter<"ShipmentPackage"> | string | null
    createdAt?: DateTimeFilter<"ShipmentPackage"> | Date | string
    updatedAt?: DateTimeFilter<"ShipmentPackage"> | Date | string
  }

  export type ShipmentTrackingUpsertWithWhereUniqueWithoutShipmentInput = {
    where: ShipmentTrackingWhereUniqueInput
    update: XOR<ShipmentTrackingUpdateWithoutShipmentInput, ShipmentTrackingUncheckedUpdateWithoutShipmentInput>
    create: XOR<ShipmentTrackingCreateWithoutShipmentInput, ShipmentTrackingUncheckedCreateWithoutShipmentInput>
  }

  export type ShipmentTrackingUpdateWithWhereUniqueWithoutShipmentInput = {
    where: ShipmentTrackingWhereUniqueInput
    data: XOR<ShipmentTrackingUpdateWithoutShipmentInput, ShipmentTrackingUncheckedUpdateWithoutShipmentInput>
  }

  export type ShipmentTrackingUpdateManyWithWhereWithoutShipmentInput = {
    where: ShipmentTrackingScalarWhereInput
    data: XOR<ShipmentTrackingUpdateManyMutationInput, ShipmentTrackingUncheckedUpdateManyWithoutShipmentInput>
  }

  export type ShipmentTrackingScalarWhereInput = {
    AND?: ShipmentTrackingScalarWhereInput | ShipmentTrackingScalarWhereInput[]
    OR?: ShipmentTrackingScalarWhereInput[]
    NOT?: ShipmentTrackingScalarWhereInput | ShipmentTrackingScalarWhereInput[]
    id?: StringFilter<"ShipmentTracking"> | string
    shipmentId?: StringFilter<"ShipmentTracking"> | string
    status?: StringFilter<"ShipmentTracking"> | string
    description?: StringNullableFilter<"ShipmentTracking"> | string | null
    location?: StringNullableFilter<"ShipmentTracking"> | string | null
    eventDate?: DateTimeFilter<"ShipmentTracking"> | Date | string
    rawData?: JsonNullableFilter<"ShipmentTracking">
    createdAt?: DateTimeFilter<"ShipmentTracking"> | Date | string
  }

  export type ShipmentCreateWithoutPackagesInput = {
    id?: string
    shipmentNumber: string
    carrier: string
    service?: string | null
    trackingNumber?: string | null
    fromAddress: JsonNullValueInput | InputJsonValue
    toAddress: JsonNullValueInput | InputJsonValue
    packageCount?: number
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    shippingCost?: Decimal | DecimalJsLike | number | string | null
    insuranceValue?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.ShipmentStatus
    shipDate?: Date | string | null
    estimatedDelivery?: Date | string | null
    actualDelivery?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    order?: OrderCreateNestedOneWithoutShipmentsInput
    warehouse: WarehouseCreateNestedOneWithoutShipmentsInput
    tracking?: ShipmentTrackingCreateNestedManyWithoutShipmentInput
  }

  export type ShipmentUncheckedCreateWithoutPackagesInput = {
    id?: string
    shipmentNumber: string
    orderId?: string | null
    warehouseId: string
    carrier: string
    service?: string | null
    trackingNumber?: string | null
    fromAddress: JsonNullValueInput | InputJsonValue
    toAddress: JsonNullValueInput | InputJsonValue
    packageCount?: number
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    shippingCost?: Decimal | DecimalJsLike | number | string | null
    insuranceValue?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.ShipmentStatus
    shipDate?: Date | string | null
    estimatedDelivery?: Date | string | null
    actualDelivery?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    tracking?: ShipmentTrackingUncheckedCreateNestedManyWithoutShipmentInput
  }

  export type ShipmentCreateOrConnectWithoutPackagesInput = {
    where: ShipmentWhereUniqueInput
    create: XOR<ShipmentCreateWithoutPackagesInput, ShipmentUncheckedCreateWithoutPackagesInput>
  }

  export type ShipmentUpsertWithoutPackagesInput = {
    update: XOR<ShipmentUpdateWithoutPackagesInput, ShipmentUncheckedUpdateWithoutPackagesInput>
    create: XOR<ShipmentCreateWithoutPackagesInput, ShipmentUncheckedCreateWithoutPackagesInput>
    where?: ShipmentWhereInput
  }

  export type ShipmentUpdateToOneWithWhereWithoutPackagesInput = {
    where?: ShipmentWhereInput
    data: XOR<ShipmentUpdateWithoutPackagesInput, ShipmentUncheckedUpdateWithoutPackagesInput>
  }

  export type ShipmentUpdateWithoutPackagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    shipmentNumber?: StringFieldUpdateOperationsInput | string
    carrier?: StringFieldUpdateOperationsInput | string
    service?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    fromAddress?: JsonNullValueInput | InputJsonValue
    toAddress?: JsonNullValueInput | InputJsonValue
    packageCount?: IntFieldUpdateOperationsInput | number
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    shippingCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insuranceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumShipmentStatusFieldUpdateOperationsInput | $Enums.ShipmentStatus
    shipDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    order?: OrderUpdateOneWithoutShipmentsNestedInput
    warehouse?: WarehouseUpdateOneRequiredWithoutShipmentsNestedInput
    tracking?: ShipmentTrackingUpdateManyWithoutShipmentNestedInput
  }

  export type ShipmentUncheckedUpdateWithoutPackagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    shipmentNumber?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    warehouseId?: StringFieldUpdateOperationsInput | string
    carrier?: StringFieldUpdateOperationsInput | string
    service?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    fromAddress?: JsonNullValueInput | InputJsonValue
    toAddress?: JsonNullValueInput | InputJsonValue
    packageCount?: IntFieldUpdateOperationsInput | number
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    shippingCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insuranceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumShipmentStatusFieldUpdateOperationsInput | $Enums.ShipmentStatus
    shipDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    tracking?: ShipmentTrackingUncheckedUpdateManyWithoutShipmentNestedInput
  }

  export type ShipmentCreateWithoutTrackingInput = {
    id?: string
    shipmentNumber: string
    carrier: string
    service?: string | null
    trackingNumber?: string | null
    fromAddress: JsonNullValueInput | InputJsonValue
    toAddress: JsonNullValueInput | InputJsonValue
    packageCount?: number
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    shippingCost?: Decimal | DecimalJsLike | number | string | null
    insuranceValue?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.ShipmentStatus
    shipDate?: Date | string | null
    estimatedDelivery?: Date | string | null
    actualDelivery?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    order?: OrderCreateNestedOneWithoutShipmentsInput
    warehouse: WarehouseCreateNestedOneWithoutShipmentsInput
    packages?: ShipmentPackageCreateNestedManyWithoutShipmentInput
  }

  export type ShipmentUncheckedCreateWithoutTrackingInput = {
    id?: string
    shipmentNumber: string
    orderId?: string | null
    warehouseId: string
    carrier: string
    service?: string | null
    trackingNumber?: string | null
    fromAddress: JsonNullValueInput | InputJsonValue
    toAddress: JsonNullValueInput | InputJsonValue
    packageCount?: number
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    shippingCost?: Decimal | DecimalJsLike | number | string | null
    insuranceValue?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.ShipmentStatus
    shipDate?: Date | string | null
    estimatedDelivery?: Date | string | null
    actualDelivery?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    packages?: ShipmentPackageUncheckedCreateNestedManyWithoutShipmentInput
  }

  export type ShipmentCreateOrConnectWithoutTrackingInput = {
    where: ShipmentWhereUniqueInput
    create: XOR<ShipmentCreateWithoutTrackingInput, ShipmentUncheckedCreateWithoutTrackingInput>
  }

  export type ShipmentUpsertWithoutTrackingInput = {
    update: XOR<ShipmentUpdateWithoutTrackingInput, ShipmentUncheckedUpdateWithoutTrackingInput>
    create: XOR<ShipmentCreateWithoutTrackingInput, ShipmentUncheckedCreateWithoutTrackingInput>
    where?: ShipmentWhereInput
  }

  export type ShipmentUpdateToOneWithWhereWithoutTrackingInput = {
    where?: ShipmentWhereInput
    data: XOR<ShipmentUpdateWithoutTrackingInput, ShipmentUncheckedUpdateWithoutTrackingInput>
  }

  export type ShipmentUpdateWithoutTrackingInput = {
    id?: StringFieldUpdateOperationsInput | string
    shipmentNumber?: StringFieldUpdateOperationsInput | string
    carrier?: StringFieldUpdateOperationsInput | string
    service?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    fromAddress?: JsonNullValueInput | InputJsonValue
    toAddress?: JsonNullValueInput | InputJsonValue
    packageCount?: IntFieldUpdateOperationsInput | number
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    shippingCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insuranceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumShipmentStatusFieldUpdateOperationsInput | $Enums.ShipmentStatus
    shipDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    order?: OrderUpdateOneWithoutShipmentsNestedInput
    warehouse?: WarehouseUpdateOneRequiredWithoutShipmentsNestedInput
    packages?: ShipmentPackageUpdateManyWithoutShipmentNestedInput
  }

  export type ShipmentUncheckedUpdateWithoutTrackingInput = {
    id?: StringFieldUpdateOperationsInput | string
    shipmentNumber?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    warehouseId?: StringFieldUpdateOperationsInput | string
    carrier?: StringFieldUpdateOperationsInput | string
    service?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    fromAddress?: JsonNullValueInput | InputJsonValue
    toAddress?: JsonNullValueInput | InputJsonValue
    packageCount?: IntFieldUpdateOperationsInput | number
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    shippingCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insuranceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumShipmentStatusFieldUpdateOperationsInput | $Enums.ShipmentStatus
    shipDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    packages?: ShipmentPackageUncheckedUpdateManyWithoutShipmentNestedInput
  }

  export type WarehouseCreateWithoutTransfersInput = {
    id?: string
    name: string
    code: string
    description?: string | null
    address: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: string | null
    managerName?: string | null
    managerEmail?: string | null
    managerPhone?: string | null
    phone?: string | null
    email?: string | null
    type?: $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    hasRfid?: boolean
    hasBarcode?: boolean
    temperatureControl?: boolean
    securityLevel?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    inventoryItems?: InventoryItemCreateNestedManyWithoutWarehouseInput
    movements?: InventoryMovementCreateNestedManyWithoutWarehouseInput
    receivedTransfers?: StockTransferCreateNestedManyWithoutToWarehouseInput
    orders?: OrderCreateNestedManyWithoutWarehouseInput
    purchaseOrders?: PurchaseOrderCreateNestedManyWithoutWarehouseInput
    audits?: InventoryAuditCreateNestedManyWithoutWarehouseInput
    goodsReceipts?: GoodsReceiptCreateNestedManyWithoutWarehouseInput
    shipments?: ShipmentCreateNestedManyWithoutWarehouseInput
    auditItems?: InventoryAuditItemCreateNestedManyWithoutWarehouseInput
  }

  export type WarehouseUncheckedCreateWithoutTransfersInput = {
    id?: string
    name: string
    code: string
    description?: string | null
    address: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: string | null
    managerName?: string | null
    managerEmail?: string | null
    managerPhone?: string | null
    phone?: string | null
    email?: string | null
    type?: $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    hasRfid?: boolean
    hasBarcode?: boolean
    temperatureControl?: boolean
    securityLevel?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    inventoryItems?: InventoryItemUncheckedCreateNestedManyWithoutWarehouseInput
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutWarehouseInput
    receivedTransfers?: StockTransferUncheckedCreateNestedManyWithoutToWarehouseInput
    orders?: OrderUncheckedCreateNestedManyWithoutWarehouseInput
    purchaseOrders?: PurchaseOrderUncheckedCreateNestedManyWithoutWarehouseInput
    audits?: InventoryAuditUncheckedCreateNestedManyWithoutWarehouseInput
    goodsReceipts?: GoodsReceiptUncheckedCreateNestedManyWithoutWarehouseInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutWarehouseInput
    auditItems?: InventoryAuditItemUncheckedCreateNestedManyWithoutWarehouseInput
  }

  export type WarehouseCreateOrConnectWithoutTransfersInput = {
    where: WarehouseWhereUniqueInput
    create: XOR<WarehouseCreateWithoutTransfersInput, WarehouseUncheckedCreateWithoutTransfersInput>
  }

  export type WarehouseCreateWithoutReceivedTransfersInput = {
    id?: string
    name: string
    code: string
    description?: string | null
    address: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: string | null
    managerName?: string | null
    managerEmail?: string | null
    managerPhone?: string | null
    phone?: string | null
    email?: string | null
    type?: $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    hasRfid?: boolean
    hasBarcode?: boolean
    temperatureControl?: boolean
    securityLevel?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    inventoryItems?: InventoryItemCreateNestedManyWithoutWarehouseInput
    movements?: InventoryMovementCreateNestedManyWithoutWarehouseInput
    transfers?: StockTransferCreateNestedManyWithoutFromWarehouseInput
    orders?: OrderCreateNestedManyWithoutWarehouseInput
    purchaseOrders?: PurchaseOrderCreateNestedManyWithoutWarehouseInput
    audits?: InventoryAuditCreateNestedManyWithoutWarehouseInput
    goodsReceipts?: GoodsReceiptCreateNestedManyWithoutWarehouseInput
    shipments?: ShipmentCreateNestedManyWithoutWarehouseInput
    auditItems?: InventoryAuditItemCreateNestedManyWithoutWarehouseInput
  }

  export type WarehouseUncheckedCreateWithoutReceivedTransfersInput = {
    id?: string
    name: string
    code: string
    description?: string | null
    address: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: string | null
    managerName?: string | null
    managerEmail?: string | null
    managerPhone?: string | null
    phone?: string | null
    email?: string | null
    type?: $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    hasRfid?: boolean
    hasBarcode?: boolean
    temperatureControl?: boolean
    securityLevel?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    inventoryItems?: InventoryItemUncheckedCreateNestedManyWithoutWarehouseInput
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutWarehouseInput
    transfers?: StockTransferUncheckedCreateNestedManyWithoutFromWarehouseInput
    orders?: OrderUncheckedCreateNestedManyWithoutWarehouseInput
    purchaseOrders?: PurchaseOrderUncheckedCreateNestedManyWithoutWarehouseInput
    audits?: InventoryAuditUncheckedCreateNestedManyWithoutWarehouseInput
    goodsReceipts?: GoodsReceiptUncheckedCreateNestedManyWithoutWarehouseInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutWarehouseInput
    auditItems?: InventoryAuditItemUncheckedCreateNestedManyWithoutWarehouseInput
  }

  export type WarehouseCreateOrConnectWithoutReceivedTransfersInput = {
    where: WarehouseWhereUniqueInput
    create: XOR<WarehouseCreateWithoutReceivedTransfersInput, WarehouseUncheckedCreateWithoutReceivedTransfersInput>
  }

  export type StockTransferItemCreateWithoutTransferInput = {
    id?: string
    requestedQty: number
    shippedQty?: number
    receivedQty?: number
    productName: string
    productSku: string
    lotNumber?: string | null
    batchNumber?: string | null
    status?: $Enums.TransferItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutTransferItemsInput
    variant?: ProductVariantCreateNestedOneWithoutTransferItemsInput
  }

  export type StockTransferItemUncheckedCreateWithoutTransferInput = {
    id?: string
    productId: string
    variantId?: string | null
    requestedQty: number
    shippedQty?: number
    receivedQty?: number
    productName: string
    productSku: string
    lotNumber?: string | null
    batchNumber?: string | null
    status?: $Enums.TransferItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type StockTransferItemCreateOrConnectWithoutTransferInput = {
    where: StockTransferItemWhereUniqueInput
    create: XOR<StockTransferItemCreateWithoutTransferInput, StockTransferItemUncheckedCreateWithoutTransferInput>
  }

  export type StockTransferItemCreateManyTransferInputEnvelope = {
    data: StockTransferItemCreateManyTransferInput | StockTransferItemCreateManyTransferInput[]
    skipDuplicates?: boolean
  }

  export type WarehouseUpsertWithoutTransfersInput = {
    update: XOR<WarehouseUpdateWithoutTransfersInput, WarehouseUncheckedUpdateWithoutTransfersInput>
    create: XOR<WarehouseCreateWithoutTransfersInput, WarehouseUncheckedCreateWithoutTransfersInput>
    where?: WarehouseWhereInput
  }

  export type WarehouseUpdateToOneWithWhereWithoutTransfersInput = {
    where?: WarehouseWhereInput
    data: XOR<WarehouseUpdateWithoutTransfersInput, WarehouseUncheckedUpdateWithoutTransfersInput>
  }

  export type WarehouseUpdateWithoutTransfersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    managerName?: NullableStringFieldUpdateOperationsInput | string | null
    managerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    managerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumWarehouseTypeFieldUpdateOperationsInput | $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hasRfid?: BoolFieldUpdateOperationsInput | boolean
    hasBarcode?: BoolFieldUpdateOperationsInput | boolean
    temperatureControl?: BoolFieldUpdateOperationsInput | boolean
    securityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryItems?: InventoryItemUpdateManyWithoutWarehouseNestedInput
    movements?: InventoryMovementUpdateManyWithoutWarehouseNestedInput
    receivedTransfers?: StockTransferUpdateManyWithoutToWarehouseNestedInput
    orders?: OrderUpdateManyWithoutWarehouseNestedInput
    purchaseOrders?: PurchaseOrderUpdateManyWithoutWarehouseNestedInput
    audits?: InventoryAuditUpdateManyWithoutWarehouseNestedInput
    goodsReceipts?: GoodsReceiptUpdateManyWithoutWarehouseNestedInput
    shipments?: ShipmentUpdateManyWithoutWarehouseNestedInput
    auditItems?: InventoryAuditItemUpdateManyWithoutWarehouseNestedInput
  }

  export type WarehouseUncheckedUpdateWithoutTransfersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    managerName?: NullableStringFieldUpdateOperationsInput | string | null
    managerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    managerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumWarehouseTypeFieldUpdateOperationsInput | $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hasRfid?: BoolFieldUpdateOperationsInput | boolean
    hasBarcode?: BoolFieldUpdateOperationsInput | boolean
    temperatureControl?: BoolFieldUpdateOperationsInput | boolean
    securityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryItems?: InventoryItemUncheckedUpdateManyWithoutWarehouseNestedInput
    movements?: InventoryMovementUncheckedUpdateManyWithoutWarehouseNestedInput
    receivedTransfers?: StockTransferUncheckedUpdateManyWithoutToWarehouseNestedInput
    orders?: OrderUncheckedUpdateManyWithoutWarehouseNestedInput
    purchaseOrders?: PurchaseOrderUncheckedUpdateManyWithoutWarehouseNestedInput
    audits?: InventoryAuditUncheckedUpdateManyWithoutWarehouseNestedInput
    goodsReceipts?: GoodsReceiptUncheckedUpdateManyWithoutWarehouseNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutWarehouseNestedInput
    auditItems?: InventoryAuditItemUncheckedUpdateManyWithoutWarehouseNestedInput
  }

  export type WarehouseUpsertWithoutReceivedTransfersInput = {
    update: XOR<WarehouseUpdateWithoutReceivedTransfersInput, WarehouseUncheckedUpdateWithoutReceivedTransfersInput>
    create: XOR<WarehouseCreateWithoutReceivedTransfersInput, WarehouseUncheckedCreateWithoutReceivedTransfersInput>
    where?: WarehouseWhereInput
  }

  export type WarehouseUpdateToOneWithWhereWithoutReceivedTransfersInput = {
    where?: WarehouseWhereInput
    data: XOR<WarehouseUpdateWithoutReceivedTransfersInput, WarehouseUncheckedUpdateWithoutReceivedTransfersInput>
  }

  export type WarehouseUpdateWithoutReceivedTransfersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    managerName?: NullableStringFieldUpdateOperationsInput | string | null
    managerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    managerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumWarehouseTypeFieldUpdateOperationsInput | $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hasRfid?: BoolFieldUpdateOperationsInput | boolean
    hasBarcode?: BoolFieldUpdateOperationsInput | boolean
    temperatureControl?: BoolFieldUpdateOperationsInput | boolean
    securityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryItems?: InventoryItemUpdateManyWithoutWarehouseNestedInput
    movements?: InventoryMovementUpdateManyWithoutWarehouseNestedInput
    transfers?: StockTransferUpdateManyWithoutFromWarehouseNestedInput
    orders?: OrderUpdateManyWithoutWarehouseNestedInput
    purchaseOrders?: PurchaseOrderUpdateManyWithoutWarehouseNestedInput
    audits?: InventoryAuditUpdateManyWithoutWarehouseNestedInput
    goodsReceipts?: GoodsReceiptUpdateManyWithoutWarehouseNestedInput
    shipments?: ShipmentUpdateManyWithoutWarehouseNestedInput
    auditItems?: InventoryAuditItemUpdateManyWithoutWarehouseNestedInput
  }

  export type WarehouseUncheckedUpdateWithoutReceivedTransfersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    managerName?: NullableStringFieldUpdateOperationsInput | string | null
    managerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    managerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumWarehouseTypeFieldUpdateOperationsInput | $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hasRfid?: BoolFieldUpdateOperationsInput | boolean
    hasBarcode?: BoolFieldUpdateOperationsInput | boolean
    temperatureControl?: BoolFieldUpdateOperationsInput | boolean
    securityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryItems?: InventoryItemUncheckedUpdateManyWithoutWarehouseNestedInput
    movements?: InventoryMovementUncheckedUpdateManyWithoutWarehouseNestedInput
    transfers?: StockTransferUncheckedUpdateManyWithoutFromWarehouseNestedInput
    orders?: OrderUncheckedUpdateManyWithoutWarehouseNestedInput
    purchaseOrders?: PurchaseOrderUncheckedUpdateManyWithoutWarehouseNestedInput
    audits?: InventoryAuditUncheckedUpdateManyWithoutWarehouseNestedInput
    goodsReceipts?: GoodsReceiptUncheckedUpdateManyWithoutWarehouseNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutWarehouseNestedInput
    auditItems?: InventoryAuditItemUncheckedUpdateManyWithoutWarehouseNestedInput
  }

  export type StockTransferItemUpsertWithWhereUniqueWithoutTransferInput = {
    where: StockTransferItemWhereUniqueInput
    update: XOR<StockTransferItemUpdateWithoutTransferInput, StockTransferItemUncheckedUpdateWithoutTransferInput>
    create: XOR<StockTransferItemCreateWithoutTransferInput, StockTransferItemUncheckedCreateWithoutTransferInput>
  }

  export type StockTransferItemUpdateWithWhereUniqueWithoutTransferInput = {
    where: StockTransferItemWhereUniqueInput
    data: XOR<StockTransferItemUpdateWithoutTransferInput, StockTransferItemUncheckedUpdateWithoutTransferInput>
  }

  export type StockTransferItemUpdateManyWithWhereWithoutTransferInput = {
    where: StockTransferItemScalarWhereInput
    data: XOR<StockTransferItemUpdateManyMutationInput, StockTransferItemUncheckedUpdateManyWithoutTransferInput>
  }

  export type StockTransferCreateWithoutItemsInput = {
    id?: string
    transferNumber: string
    status?: $Enums.TransferStatus
    requestedDate?: Date | string
    shippedDate?: Date | string | null
    receivedDate?: Date | string | null
    approvedBy?: string | null
    approvedAt?: Date | string | null
    reason?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    fromWarehouse: WarehouseCreateNestedOneWithoutTransfersInput
    toWarehouse: WarehouseCreateNestedOneWithoutReceivedTransfersInput
  }

  export type StockTransferUncheckedCreateWithoutItemsInput = {
    id?: string
    transferNumber: string
    fromWarehouseId: string
    toWarehouseId: string
    status?: $Enums.TransferStatus
    requestedDate?: Date | string
    shippedDate?: Date | string | null
    receivedDate?: Date | string | null
    approvedBy?: string | null
    approvedAt?: Date | string | null
    reason?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
  }

  export type StockTransferCreateOrConnectWithoutItemsInput = {
    where: StockTransferWhereUniqueInput
    create: XOR<StockTransferCreateWithoutItemsInput, StockTransferUncheckedCreateWithoutItemsInput>
  }

  export type ProductCreateWithoutTransferItemsInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    category?: CategoryCreateNestedOneWithoutProductsInput
    brand?: BrandCreateNestedOneWithoutProductsInput
    inventoryItems?: InventoryItemCreateNestedManyWithoutProductInput
    variants?: ProductVariantCreateNestedManyWithoutProductInput
    suppliers?: ProductSupplierCreateNestedManyWithoutProductInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
    purchaseItems?: PurchaseOrderItemCreateNestedManyWithoutProductInput
    movements?: InventoryMovementCreateNestedManyWithoutProductInput
    audits?: InventoryAuditCreateNestedManyWithoutProductInput
    reviews?: ProductReviewCreateNestedManyWithoutProductInput
    bundles?: ProductBundleCreateNestedManyWithoutProductsInput
    bundleItems?: ProductBundleCreateNestedManyWithoutBundleItemsInput
    goodsReceiptItems?: GoodsReceiptItemCreateNestedManyWithoutProductInput
    auditItems?: InventoryAuditItemCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutTransferItemsInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    categoryId?: string | null
    brandId?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    inventoryItems?: InventoryItemUncheckedCreateNestedManyWithoutProductInput
    variants?: ProductVariantUncheckedCreateNestedManyWithoutProductInput
    suppliers?: ProductSupplierUncheckedCreateNestedManyWithoutProductInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    purchaseItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutProductInput
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutProductInput
    audits?: InventoryAuditUncheckedCreateNestedManyWithoutProductInput
    reviews?: ProductReviewUncheckedCreateNestedManyWithoutProductInput
    bundles?: ProductBundleUncheckedCreateNestedManyWithoutProductsInput
    bundleItems?: ProductBundleUncheckedCreateNestedManyWithoutBundleItemsInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedCreateNestedManyWithoutProductInput
    auditItems?: InventoryAuditItemUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutTransferItemsInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutTransferItemsInput, ProductUncheckedCreateWithoutTransferItemsInput>
  }

  export type ProductVariantCreateWithoutTransferItemsInput = {
    id?: string
    name: string
    sku: string
    barcode?: string | null
    attributes: JsonNullValueInput | InputJsonValue
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number | null
    reorderPoint?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutVariantsInput
    inventoryItems?: InventoryItemCreateNestedManyWithoutVariantInput
    movements?: InventoryMovementCreateNestedManyWithoutVariantInput
    purchaseItems?: PurchaseOrderItemCreateNestedManyWithoutVariantInput
    goodsReceiptItems?: GoodsReceiptItemCreateNestedManyWithoutVariantInput
    orderItems?: OrderItemCreateNestedManyWithoutVariantInput
    auditItems?: InventoryAuditItemCreateNestedManyWithoutVariantInput
  }

  export type ProductVariantUncheckedCreateWithoutTransferItemsInput = {
    id?: string
    productId: string
    name: string
    sku: string
    barcode?: string | null
    attributes: JsonNullValueInput | InputJsonValue
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number | null
    reorderPoint?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    inventoryItems?: InventoryItemUncheckedCreateNestedManyWithoutVariantInput
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutVariantInput
    purchaseItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutVariantInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedCreateNestedManyWithoutVariantInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutVariantInput
    auditItems?: InventoryAuditItemUncheckedCreateNestedManyWithoutVariantInput
  }

  export type ProductVariantCreateOrConnectWithoutTransferItemsInput = {
    where: ProductVariantWhereUniqueInput
    create: XOR<ProductVariantCreateWithoutTransferItemsInput, ProductVariantUncheckedCreateWithoutTransferItemsInput>
  }

  export type StockTransferUpsertWithoutItemsInput = {
    update: XOR<StockTransferUpdateWithoutItemsInput, StockTransferUncheckedUpdateWithoutItemsInput>
    create: XOR<StockTransferCreateWithoutItemsInput, StockTransferUncheckedCreateWithoutItemsInput>
    where?: StockTransferWhereInput
  }

  export type StockTransferUpdateToOneWithWhereWithoutItemsInput = {
    where?: StockTransferWhereInput
    data: XOR<StockTransferUpdateWithoutItemsInput, StockTransferUncheckedUpdateWithoutItemsInput>
  }

  export type StockTransferUpdateWithoutItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    transferNumber?: StringFieldUpdateOperationsInput | string
    status?: EnumTransferStatusFieldUpdateOperationsInput | $Enums.TransferStatus
    requestedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    shippedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    receivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    fromWarehouse?: WarehouseUpdateOneRequiredWithoutTransfersNestedInput
    toWarehouse?: WarehouseUpdateOneRequiredWithoutReceivedTransfersNestedInput
  }

  export type StockTransferUncheckedUpdateWithoutItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    transferNumber?: StringFieldUpdateOperationsInput | string
    fromWarehouseId?: StringFieldUpdateOperationsInput | string
    toWarehouseId?: StringFieldUpdateOperationsInput | string
    status?: EnumTransferStatusFieldUpdateOperationsInput | $Enums.TransferStatus
    requestedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    shippedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    receivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type ProductUpsertWithoutTransferItemsInput = {
    update: XOR<ProductUpdateWithoutTransferItemsInput, ProductUncheckedUpdateWithoutTransferItemsInput>
    create: XOR<ProductCreateWithoutTransferItemsInput, ProductUncheckedCreateWithoutTransferItemsInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutTransferItemsInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutTransferItemsInput, ProductUncheckedUpdateWithoutTransferItemsInput>
  }

  export type ProductUpdateWithoutTransferItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    category?: CategoryUpdateOneWithoutProductsNestedInput
    brand?: BrandUpdateOneWithoutProductsNestedInput
    inventoryItems?: InventoryItemUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUpdateManyWithoutProductNestedInput
    suppliers?: ProductSupplierUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
    purchaseItems?: PurchaseOrderItemUpdateManyWithoutProductNestedInput
    movements?: InventoryMovementUpdateManyWithoutProductNestedInput
    audits?: InventoryAuditUpdateManyWithoutProductNestedInput
    reviews?: ProductReviewUpdateManyWithoutProductNestedInput
    bundles?: ProductBundleUpdateManyWithoutProductsNestedInput
    bundleItems?: ProductBundleUpdateManyWithoutBundleItemsNestedInput
    goodsReceiptItems?: GoodsReceiptItemUpdateManyWithoutProductNestedInput
    auditItems?: InventoryAuditItemUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutTransferItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    inventoryItems?: InventoryItemUncheckedUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUncheckedUpdateManyWithoutProductNestedInput
    suppliers?: ProductSupplierUncheckedUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    purchaseItems?: PurchaseOrderItemUncheckedUpdateManyWithoutProductNestedInput
    movements?: InventoryMovementUncheckedUpdateManyWithoutProductNestedInput
    audits?: InventoryAuditUncheckedUpdateManyWithoutProductNestedInput
    reviews?: ProductReviewUncheckedUpdateManyWithoutProductNestedInput
    bundles?: ProductBundleUncheckedUpdateManyWithoutProductsNestedInput
    bundleItems?: ProductBundleUncheckedUpdateManyWithoutBundleItemsNestedInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedUpdateManyWithoutProductNestedInput
    auditItems?: InventoryAuditItemUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductVariantUpsertWithoutTransferItemsInput = {
    update: XOR<ProductVariantUpdateWithoutTransferItemsInput, ProductVariantUncheckedUpdateWithoutTransferItemsInput>
    create: XOR<ProductVariantCreateWithoutTransferItemsInput, ProductVariantUncheckedCreateWithoutTransferItemsInput>
    where?: ProductVariantWhereInput
  }

  export type ProductVariantUpdateToOneWithWhereWithoutTransferItemsInput = {
    where?: ProductVariantWhereInput
    data: XOR<ProductVariantUpdateWithoutTransferItemsInput, ProductVariantUncheckedUpdateWithoutTransferItemsInput>
  }

  export type ProductVariantUpdateWithoutTransferItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: JsonNullValueInput | InputJsonValue
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutVariantsNestedInput
    inventoryItems?: InventoryItemUpdateManyWithoutVariantNestedInput
    movements?: InventoryMovementUpdateManyWithoutVariantNestedInput
    purchaseItems?: PurchaseOrderItemUpdateManyWithoutVariantNestedInput
    goodsReceiptItems?: GoodsReceiptItemUpdateManyWithoutVariantNestedInput
    orderItems?: OrderItemUpdateManyWithoutVariantNestedInput
    auditItems?: InventoryAuditItemUpdateManyWithoutVariantNestedInput
  }

  export type ProductVariantUncheckedUpdateWithoutTransferItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: JsonNullValueInput | InputJsonValue
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryItems?: InventoryItemUncheckedUpdateManyWithoutVariantNestedInput
    movements?: InventoryMovementUncheckedUpdateManyWithoutVariantNestedInput
    purchaseItems?: PurchaseOrderItemUncheckedUpdateManyWithoutVariantNestedInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedUpdateManyWithoutVariantNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutVariantNestedInput
    auditItems?: InventoryAuditItemUncheckedUpdateManyWithoutVariantNestedInput
  }

  export type InventoryItemCreateWithoutReservationsInput = {
    id?: string
    zone?: string | null
    aisle?: string | null
    shelf?: string | null
    bin?: string | null
    locationCode?: string | null
    quantity?: number
    reservedQuantity?: number
    availableQuantity?: number
    averageCost?: Decimal | DecimalJsLike | number | string | null
    lastCost?: Decimal | DecimalJsLike | number | string | null
    lotNumber?: string | null
    batchNumber?: string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    expiryDate?: Date | string | null
    status?: $Enums.InventoryStatus
    qcStatus?: $Enums.QualityStatus
    quarantineReason?: string | null
    lastMovement?: Date | string | null
    lastCount?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutInventoryItemsInput
    variant?: ProductVariantCreateNestedOneWithoutInventoryItemsInput
    warehouse: WarehouseCreateNestedOneWithoutInventoryItemsInput
    movements?: InventoryMovementCreateNestedManyWithoutInventoryItemInput
  }

  export type InventoryItemUncheckedCreateWithoutReservationsInput = {
    id?: string
    productId: string
    variantId?: string | null
    warehouseId: string
    zone?: string | null
    aisle?: string | null
    shelf?: string | null
    bin?: string | null
    locationCode?: string | null
    quantity?: number
    reservedQuantity?: number
    availableQuantity?: number
    averageCost?: Decimal | DecimalJsLike | number | string | null
    lastCost?: Decimal | DecimalJsLike | number | string | null
    lotNumber?: string | null
    batchNumber?: string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    expiryDate?: Date | string | null
    status?: $Enums.InventoryStatus
    qcStatus?: $Enums.QualityStatus
    quarantineReason?: string | null
    lastMovement?: Date | string | null
    lastCount?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutInventoryItemInput
  }

  export type InventoryItemCreateOrConnectWithoutReservationsInput = {
    where: InventoryItemWhereUniqueInput
    create: XOR<InventoryItemCreateWithoutReservationsInput, InventoryItemUncheckedCreateWithoutReservationsInput>
  }

  export type InventoryItemUpsertWithoutReservationsInput = {
    update: XOR<InventoryItemUpdateWithoutReservationsInput, InventoryItemUncheckedUpdateWithoutReservationsInput>
    create: XOR<InventoryItemCreateWithoutReservationsInput, InventoryItemUncheckedCreateWithoutReservationsInput>
    where?: InventoryItemWhereInput
  }

  export type InventoryItemUpdateToOneWithWhereWithoutReservationsInput = {
    where?: InventoryItemWhereInput
    data: XOR<InventoryItemUpdateWithoutReservationsInput, InventoryItemUncheckedUpdateWithoutReservationsInput>
  }

  export type InventoryItemUpdateWithoutReservationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    aisle?: NullableStringFieldUpdateOperationsInput | string | null
    shelf?: NullableStringFieldUpdateOperationsInput | string | null
    bin?: NullableStringFieldUpdateOperationsInput | string | null
    locationCode?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    reservedQuantity?: IntFieldUpdateOperationsInput | number
    availableQuantity?: IntFieldUpdateOperationsInput | number
    averageCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lastCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInventoryStatusFieldUpdateOperationsInput | $Enums.InventoryStatus
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    quarantineReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastMovement?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastCount?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutInventoryItemsNestedInput
    variant?: ProductVariantUpdateOneWithoutInventoryItemsNestedInput
    warehouse?: WarehouseUpdateOneRequiredWithoutInventoryItemsNestedInput
    movements?: InventoryMovementUpdateManyWithoutInventoryItemNestedInput
  }

  export type InventoryItemUncheckedUpdateWithoutReservationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    warehouseId?: StringFieldUpdateOperationsInput | string
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    aisle?: NullableStringFieldUpdateOperationsInput | string | null
    shelf?: NullableStringFieldUpdateOperationsInput | string | null
    bin?: NullableStringFieldUpdateOperationsInput | string | null
    locationCode?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    reservedQuantity?: IntFieldUpdateOperationsInput | number
    availableQuantity?: IntFieldUpdateOperationsInput | number
    averageCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lastCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInventoryStatusFieldUpdateOperationsInput | $Enums.InventoryStatus
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    quarantineReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastMovement?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastCount?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    movements?: InventoryMovementUncheckedUpdateManyWithoutInventoryItemNestedInput
  }

  export type SupplierCreateWithoutInvoicesInput = {
    id?: string
    name: string
    code: string
    email?: string | null
    phone?: string | null
    website?: string | null
    companyType?: $Enums.CompanyType | null
    taxId?: string | null
    vatNumber?: string | null
    registrationNumber?: string | null
    billingAddress: JsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    contactName?: string | null
    contactEmail?: string | null
    contactPhone?: string | null
    contactTitle?: string | null
    paymentTerms?: string | null
    creditLimit?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    rating?: Decimal | DecimalJsLike | number | string | null
    onTimeDelivery?: Decimal | DecimalJsLike | number | string | null
    qualityRating?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.SupplierStatus
    certifications?: NullableJsonNullValueInput | InputJsonValue
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    products?: ProductSupplierCreateNestedManyWithoutSupplierInput
    purchaseOrders?: PurchaseOrderCreateNestedManyWithoutSupplierInput
    contacts?: SupplierContactCreateNestedManyWithoutSupplierInput
    documents?: SupplierDocumentCreateNestedManyWithoutSupplierInput
  }

  export type SupplierUncheckedCreateWithoutInvoicesInput = {
    id?: string
    name: string
    code: string
    email?: string | null
    phone?: string | null
    website?: string | null
    companyType?: $Enums.CompanyType | null
    taxId?: string | null
    vatNumber?: string | null
    registrationNumber?: string | null
    billingAddress: JsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    contactName?: string | null
    contactEmail?: string | null
    contactPhone?: string | null
    contactTitle?: string | null
    paymentTerms?: string | null
    creditLimit?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    rating?: Decimal | DecimalJsLike | number | string | null
    onTimeDelivery?: Decimal | DecimalJsLike | number | string | null
    qualityRating?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.SupplierStatus
    certifications?: NullableJsonNullValueInput | InputJsonValue
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    products?: ProductSupplierUncheckedCreateNestedManyWithoutSupplierInput
    purchaseOrders?: PurchaseOrderUncheckedCreateNestedManyWithoutSupplierInput
    contacts?: SupplierContactUncheckedCreateNestedManyWithoutSupplierInput
    documents?: SupplierDocumentUncheckedCreateNestedManyWithoutSupplierInput
  }

  export type SupplierCreateOrConnectWithoutInvoicesInput = {
    where: SupplierWhereUniqueInput
    create: XOR<SupplierCreateWithoutInvoicesInput, SupplierUncheckedCreateWithoutInvoicesInput>
  }

  export type PurchaseOrderCreateWithoutInvoicesInput = {
    id?: string
    orderNumber: string
    subtotal?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingCost?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount?: Decimal | DecimalJsLike | number | string
    currency?: string
    status?: $Enums.PurchaseOrderStatus
    orderDate?: Date | string
    expectedDate?: Date | string | null
    deliveryDate?: Date | string | null
    paymentTerms?: string | null
    shippingTerms?: string | null
    trackingNumber?: string | null
    carrier?: string | null
    approvedBy?: string | null
    approvedAt?: Date | string | null
    notes?: string | null
    internalNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    supplier: SupplierCreateNestedOneWithoutPurchaseOrdersInput
    warehouse?: WarehouseCreateNestedOneWithoutPurchaseOrdersInput
    items?: PurchaseOrderItemCreateNestedManyWithoutPurchaseOrderInput
    receipts?: GoodsReceiptCreateNestedManyWithoutPurchaseOrderInput
  }

  export type PurchaseOrderUncheckedCreateWithoutInvoicesInput = {
    id?: string
    orderNumber: string
    supplierId: string
    warehouseId?: string | null
    subtotal?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingCost?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount?: Decimal | DecimalJsLike | number | string
    currency?: string
    status?: $Enums.PurchaseOrderStatus
    orderDate?: Date | string
    expectedDate?: Date | string | null
    deliveryDate?: Date | string | null
    paymentTerms?: string | null
    shippingTerms?: string | null
    trackingNumber?: string | null
    carrier?: string | null
    approvedBy?: string | null
    approvedAt?: Date | string | null
    notes?: string | null
    internalNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    items?: PurchaseOrderItemUncheckedCreateNestedManyWithoutPurchaseOrderInput
    receipts?: GoodsReceiptUncheckedCreateNestedManyWithoutPurchaseOrderInput
  }

  export type PurchaseOrderCreateOrConnectWithoutInvoicesInput = {
    where: PurchaseOrderWhereUniqueInput
    create: XOR<PurchaseOrderCreateWithoutInvoicesInput, PurchaseOrderUncheckedCreateWithoutInvoicesInput>
  }

  export type SupplierUpsertWithoutInvoicesInput = {
    update: XOR<SupplierUpdateWithoutInvoicesInput, SupplierUncheckedUpdateWithoutInvoicesInput>
    create: XOR<SupplierCreateWithoutInvoicesInput, SupplierUncheckedCreateWithoutInvoicesInput>
    where?: SupplierWhereInput
  }

  export type SupplierUpdateToOneWithWhereWithoutInvoicesInput = {
    where?: SupplierWhereInput
    data: XOR<SupplierUpdateWithoutInvoicesInput, SupplierUncheckedUpdateWithoutInvoicesInput>
  }

  export type SupplierUpdateWithoutInvoicesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    companyType?: NullableEnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    vatNumber?: NullableStringFieldUpdateOperationsInput | string | null
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: JsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactTitle?: NullableStringFieldUpdateOperationsInput | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    creditLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    onTimeDelivery?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    qualityRating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumSupplierStatusFieldUpdateOperationsInput | $Enums.SupplierStatus
    certifications?: NullableJsonNullValueInput | InputJsonValue
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    products?: ProductSupplierUpdateManyWithoutSupplierNestedInput
    purchaseOrders?: PurchaseOrderUpdateManyWithoutSupplierNestedInput
    contacts?: SupplierContactUpdateManyWithoutSupplierNestedInput
    documents?: SupplierDocumentUpdateManyWithoutSupplierNestedInput
  }

  export type SupplierUncheckedUpdateWithoutInvoicesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    companyType?: NullableEnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    vatNumber?: NullableStringFieldUpdateOperationsInput | string | null
    registrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: JsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactTitle?: NullableStringFieldUpdateOperationsInput | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    creditLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    onTimeDelivery?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    qualityRating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumSupplierStatusFieldUpdateOperationsInput | $Enums.SupplierStatus
    certifications?: NullableJsonNullValueInput | InputJsonValue
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    products?: ProductSupplierUncheckedUpdateManyWithoutSupplierNestedInput
    purchaseOrders?: PurchaseOrderUncheckedUpdateManyWithoutSupplierNestedInput
    contacts?: SupplierContactUncheckedUpdateManyWithoutSupplierNestedInput
    documents?: SupplierDocumentUncheckedUpdateManyWithoutSupplierNestedInput
  }

  export type PurchaseOrderUpsertWithoutInvoicesInput = {
    update: XOR<PurchaseOrderUpdateWithoutInvoicesInput, PurchaseOrderUncheckedUpdateWithoutInvoicesInput>
    create: XOR<PurchaseOrderCreateWithoutInvoicesInput, PurchaseOrderUncheckedCreateWithoutInvoicesInput>
    where?: PurchaseOrderWhereInput
  }

  export type PurchaseOrderUpdateToOneWithWhereWithoutInvoicesInput = {
    where?: PurchaseOrderWhereInput
    data: XOR<PurchaseOrderUpdateWithoutInvoicesInput, PurchaseOrderUncheckedUpdateWithoutInvoicesInput>
  }

  export type PurchaseOrderUpdateWithoutInvoicesInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPurchaseOrderStatusFieldUpdateOperationsInput | $Enums.PurchaseOrderStatus
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expectedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    shippingTerms?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    carrier?: NullableStringFieldUpdateOperationsInput | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    supplier?: SupplierUpdateOneRequiredWithoutPurchaseOrdersNestedInput
    warehouse?: WarehouseUpdateOneWithoutPurchaseOrdersNestedInput
    items?: PurchaseOrderItemUpdateManyWithoutPurchaseOrderNestedInput
    receipts?: GoodsReceiptUpdateManyWithoutPurchaseOrderNestedInput
  }

  export type PurchaseOrderUncheckedUpdateWithoutInvoicesInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    supplierId?: StringFieldUpdateOperationsInput | string
    warehouseId?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPurchaseOrderStatusFieldUpdateOperationsInput | $Enums.PurchaseOrderStatus
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expectedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    shippingTerms?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    carrier?: NullableStringFieldUpdateOperationsInput | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    items?: PurchaseOrderItemUncheckedUpdateManyWithoutPurchaseOrderNestedInput
    receipts?: GoodsReceiptUncheckedUpdateManyWithoutPurchaseOrderNestedInput
  }

  export type CustomerCreateWithoutInvoicesInput = {
    id?: string
    customerNumber: string
    type?: $Enums.CustomerType
    firstName?: string | null
    lastName?: string | null
    companyName?: string | null
    taxId?: string | null
    email?: string | null
    phone?: string | null
    mobile?: string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    creditLimit?: Decimal | DecimalJsLike | number | string | null
    paymentTerms?: string | null
    currency?: string
    preferredLanguage?: string | null
    timezone?: string | null
    allowMarketing?: boolean
    source?: string | null
    status?: $Enums.CustomerStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    orders?: OrderCreateNestedManyWithoutCustomerInput
    contacts?: CustomerContactCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUncheckedCreateWithoutInvoicesInput = {
    id?: string
    customerNumber: string
    type?: $Enums.CustomerType
    firstName?: string | null
    lastName?: string | null
    companyName?: string | null
    taxId?: string | null
    email?: string | null
    phone?: string | null
    mobile?: string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    creditLimit?: Decimal | DecimalJsLike | number | string | null
    paymentTerms?: string | null
    currency?: string
    preferredLanguage?: string | null
    timezone?: string | null
    allowMarketing?: boolean
    source?: string | null
    status?: $Enums.CustomerStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    orders?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    contacts?: CustomerContactUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomerCreateOrConnectWithoutInvoicesInput = {
    where: CustomerWhereUniqueInput
    create: XOR<CustomerCreateWithoutInvoicesInput, CustomerUncheckedCreateWithoutInvoicesInput>
  }

  export type OrderCreateWithoutInvoicesInput = {
    id?: string
    orderNumber: string
    type?: $Enums.OrderType
    channel?: $Enums.OrderChannel
    subtotal?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingCost?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount?: Decimal | DecimalJsLike | number | string
    currency?: string
    status?: $Enums.OrderStatus
    fulfillmentStatus?: $Enums.FulfillmentStatus
    paymentStatus?: $Enums.PaymentStatus
    orderDate?: Date | string
    requiredDate?: Date | string | null
    promisedDate?: Date | string | null
    shippedDate?: Date | string | null
    deliveredDate?: Date | string | null
    shippingMethod?: string | null
    trackingNumber?: string | null
    carrier?: string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    priority?: $Enums.OrderPriority
    rushOrder?: boolean
    notes?: string | null
    internalNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    customer: CustomerCreateNestedOneWithoutOrdersInput
    warehouse: WarehouseCreateNestedOneWithoutOrdersInput
    items?: OrderItemCreateNestedManyWithoutOrderInput
    shipments?: ShipmentCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutInvoicesInput = {
    id?: string
    orderNumber: string
    customerId: string
    warehouseId: string
    type?: $Enums.OrderType
    channel?: $Enums.OrderChannel
    subtotal?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingCost?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount?: Decimal | DecimalJsLike | number | string
    currency?: string
    status?: $Enums.OrderStatus
    fulfillmentStatus?: $Enums.FulfillmentStatus
    paymentStatus?: $Enums.PaymentStatus
    orderDate?: Date | string
    requiredDate?: Date | string | null
    promisedDate?: Date | string | null
    shippedDate?: Date | string | null
    deliveredDate?: Date | string | null
    shippingMethod?: string | null
    trackingNumber?: string | null
    carrier?: string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    priority?: $Enums.OrderPriority
    rushOrder?: boolean
    notes?: string | null
    internalNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    items?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutInvoicesInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutInvoicesInput, OrderUncheckedCreateWithoutInvoicesInput>
  }

  export type CustomerUpsertWithoutInvoicesInput = {
    update: XOR<CustomerUpdateWithoutInvoicesInput, CustomerUncheckedUpdateWithoutInvoicesInput>
    create: XOR<CustomerCreateWithoutInvoicesInput, CustomerUncheckedCreateWithoutInvoicesInput>
    where?: CustomerWhereInput
  }

  export type CustomerUpdateToOneWithWhereWithoutInvoicesInput = {
    where?: CustomerWhereInput
    data: XOR<CustomerUpdateWithoutInvoicesInput, CustomerUncheckedUpdateWithoutInvoicesInput>
  }

  export type CustomerUpdateWithoutInvoicesInput = {
    id?: StringFieldUpdateOperationsInput | string
    customerNumber?: StringFieldUpdateOperationsInput | string
    type?: EnumCustomerTypeFieldUpdateOperationsInput | $Enums.CustomerType
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    creditLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    allowMarketing?: BoolFieldUpdateOperationsInput | boolean
    source?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCustomerStatusFieldUpdateOperationsInput | $Enums.CustomerStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    orders?: OrderUpdateManyWithoutCustomerNestedInput
    contacts?: CustomerContactUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateWithoutInvoicesInput = {
    id?: StringFieldUpdateOperationsInput | string
    customerNumber?: StringFieldUpdateOperationsInput | string
    type?: EnumCustomerTypeFieldUpdateOperationsInput | $Enums.CustomerType
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    creditLimit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    allowMarketing?: BoolFieldUpdateOperationsInput | boolean
    source?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCustomerStatusFieldUpdateOperationsInput | $Enums.CustomerStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    orders?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    contacts?: CustomerContactUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type OrderUpsertWithoutInvoicesInput = {
    update: XOR<OrderUpdateWithoutInvoicesInput, OrderUncheckedUpdateWithoutInvoicesInput>
    create: XOR<OrderCreateWithoutInvoicesInput, OrderUncheckedCreateWithoutInvoicesInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutInvoicesInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutInvoicesInput, OrderUncheckedUpdateWithoutInvoicesInput>
  }

  export type OrderUpdateWithoutInvoicesInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    type?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    channel?: EnumOrderChannelFieldUpdateOperationsInput | $Enums.OrderChannel
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    fulfillmentStatus?: EnumFulfillmentStatusFieldUpdateOperationsInput | $Enums.FulfillmentStatus
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    requiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    promisedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingMethod?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    carrier?: NullableStringFieldUpdateOperationsInput | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    priority?: EnumOrderPriorityFieldUpdateOperationsInput | $Enums.OrderPriority
    rushOrder?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    customer?: CustomerUpdateOneRequiredWithoutOrdersNestedInput
    warehouse?: WarehouseUpdateOneRequiredWithoutOrdersNestedInput
    items?: OrderItemUpdateManyWithoutOrderNestedInput
    shipments?: ShipmentUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutInvoicesInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    warehouseId?: StringFieldUpdateOperationsInput | string
    type?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    channel?: EnumOrderChannelFieldUpdateOperationsInput | $Enums.OrderChannel
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    fulfillmentStatus?: EnumFulfillmentStatusFieldUpdateOperationsInput | $Enums.FulfillmentStatus
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    requiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    promisedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingMethod?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    carrier?: NullableStringFieldUpdateOperationsInput | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    priority?: EnumOrderPriorityFieldUpdateOperationsInput | $Enums.OrderPriority
    rushOrder?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    items?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type WarehouseCreateWithoutAuditsInput = {
    id?: string
    name: string
    code: string
    description?: string | null
    address: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: string | null
    managerName?: string | null
    managerEmail?: string | null
    managerPhone?: string | null
    phone?: string | null
    email?: string | null
    type?: $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    hasRfid?: boolean
    hasBarcode?: boolean
    temperatureControl?: boolean
    securityLevel?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    inventoryItems?: InventoryItemCreateNestedManyWithoutWarehouseInput
    movements?: InventoryMovementCreateNestedManyWithoutWarehouseInput
    transfers?: StockTransferCreateNestedManyWithoutFromWarehouseInput
    receivedTransfers?: StockTransferCreateNestedManyWithoutToWarehouseInput
    orders?: OrderCreateNestedManyWithoutWarehouseInput
    purchaseOrders?: PurchaseOrderCreateNestedManyWithoutWarehouseInput
    goodsReceipts?: GoodsReceiptCreateNestedManyWithoutWarehouseInput
    shipments?: ShipmentCreateNestedManyWithoutWarehouseInput
    auditItems?: InventoryAuditItemCreateNestedManyWithoutWarehouseInput
  }

  export type WarehouseUncheckedCreateWithoutAuditsInput = {
    id?: string
    name: string
    code: string
    description?: string | null
    address: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: string | null
    managerName?: string | null
    managerEmail?: string | null
    managerPhone?: string | null
    phone?: string | null
    email?: string | null
    type?: $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    hasRfid?: boolean
    hasBarcode?: boolean
    temperatureControl?: boolean
    securityLevel?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    inventoryItems?: InventoryItemUncheckedCreateNestedManyWithoutWarehouseInput
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutWarehouseInput
    transfers?: StockTransferUncheckedCreateNestedManyWithoutFromWarehouseInput
    receivedTransfers?: StockTransferUncheckedCreateNestedManyWithoutToWarehouseInput
    orders?: OrderUncheckedCreateNestedManyWithoutWarehouseInput
    purchaseOrders?: PurchaseOrderUncheckedCreateNestedManyWithoutWarehouseInput
    goodsReceipts?: GoodsReceiptUncheckedCreateNestedManyWithoutWarehouseInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutWarehouseInput
    auditItems?: InventoryAuditItemUncheckedCreateNestedManyWithoutWarehouseInput
  }

  export type WarehouseCreateOrConnectWithoutAuditsInput = {
    where: WarehouseWhereUniqueInput
    create: XOR<WarehouseCreateWithoutAuditsInput, WarehouseUncheckedCreateWithoutAuditsInput>
  }

  export type ProductCreateWithoutAuditsInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    category?: CategoryCreateNestedOneWithoutProductsInput
    brand?: BrandCreateNestedOneWithoutProductsInput
    inventoryItems?: InventoryItemCreateNestedManyWithoutProductInput
    variants?: ProductVariantCreateNestedManyWithoutProductInput
    suppliers?: ProductSupplierCreateNestedManyWithoutProductInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
    purchaseItems?: PurchaseOrderItemCreateNestedManyWithoutProductInput
    movements?: InventoryMovementCreateNestedManyWithoutProductInput
    reviews?: ProductReviewCreateNestedManyWithoutProductInput
    bundles?: ProductBundleCreateNestedManyWithoutProductsInput
    bundleItems?: ProductBundleCreateNestedManyWithoutBundleItemsInput
    goodsReceiptItems?: GoodsReceiptItemCreateNestedManyWithoutProductInput
    transferItems?: StockTransferItemCreateNestedManyWithoutProductInput
    auditItems?: InventoryAuditItemCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutAuditsInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    categoryId?: string | null
    brandId?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    inventoryItems?: InventoryItemUncheckedCreateNestedManyWithoutProductInput
    variants?: ProductVariantUncheckedCreateNestedManyWithoutProductInput
    suppliers?: ProductSupplierUncheckedCreateNestedManyWithoutProductInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    purchaseItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutProductInput
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutProductInput
    reviews?: ProductReviewUncheckedCreateNestedManyWithoutProductInput
    bundles?: ProductBundleUncheckedCreateNestedManyWithoutProductsInput
    bundleItems?: ProductBundleUncheckedCreateNestedManyWithoutBundleItemsInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedCreateNestedManyWithoutProductInput
    transferItems?: StockTransferItemUncheckedCreateNestedManyWithoutProductInput
    auditItems?: InventoryAuditItemUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutAuditsInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutAuditsInput, ProductUncheckedCreateWithoutAuditsInput>
  }

  export type InventoryAuditItemCreateWithoutAuditInput = {
    id?: string
    systemQty: number
    countedQty?: number | null
    adjustmentQty?: number | null
    location?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    countedBy?: string | null
    countedAt?: Date | string | null
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    status?: $Enums.AuditItemStatus
    discrepancyReason?: string | null
    requiresInvestigation?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutAuditItemsInput
    variant?: ProductVariantCreateNestedOneWithoutAuditItemsInput
    warehouse: WarehouseCreateNestedOneWithoutAuditItemsInput
  }

  export type InventoryAuditItemUncheckedCreateWithoutAuditInput = {
    id?: string
    productId: string
    variantId?: string | null
    warehouseId: string
    systemQty: number
    countedQty?: number | null
    adjustmentQty?: number | null
    location?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    countedBy?: string | null
    countedAt?: Date | string | null
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    status?: $Enums.AuditItemStatus
    discrepancyReason?: string | null
    requiresInvestigation?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InventoryAuditItemCreateOrConnectWithoutAuditInput = {
    where: InventoryAuditItemWhereUniqueInput
    create: XOR<InventoryAuditItemCreateWithoutAuditInput, InventoryAuditItemUncheckedCreateWithoutAuditInput>
  }

  export type InventoryAuditItemCreateManyAuditInputEnvelope = {
    data: InventoryAuditItemCreateManyAuditInput | InventoryAuditItemCreateManyAuditInput[]
    skipDuplicates?: boolean
  }

  export type WarehouseUpsertWithoutAuditsInput = {
    update: XOR<WarehouseUpdateWithoutAuditsInput, WarehouseUncheckedUpdateWithoutAuditsInput>
    create: XOR<WarehouseCreateWithoutAuditsInput, WarehouseUncheckedCreateWithoutAuditsInput>
    where?: WarehouseWhereInput
  }

  export type WarehouseUpdateToOneWithWhereWithoutAuditsInput = {
    where?: WarehouseWhereInput
    data: XOR<WarehouseUpdateWithoutAuditsInput, WarehouseUncheckedUpdateWithoutAuditsInput>
  }

  export type WarehouseUpdateWithoutAuditsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    managerName?: NullableStringFieldUpdateOperationsInput | string | null
    managerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    managerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumWarehouseTypeFieldUpdateOperationsInput | $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hasRfid?: BoolFieldUpdateOperationsInput | boolean
    hasBarcode?: BoolFieldUpdateOperationsInput | boolean
    temperatureControl?: BoolFieldUpdateOperationsInput | boolean
    securityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryItems?: InventoryItemUpdateManyWithoutWarehouseNestedInput
    movements?: InventoryMovementUpdateManyWithoutWarehouseNestedInput
    transfers?: StockTransferUpdateManyWithoutFromWarehouseNestedInput
    receivedTransfers?: StockTransferUpdateManyWithoutToWarehouseNestedInput
    orders?: OrderUpdateManyWithoutWarehouseNestedInput
    purchaseOrders?: PurchaseOrderUpdateManyWithoutWarehouseNestedInput
    goodsReceipts?: GoodsReceiptUpdateManyWithoutWarehouseNestedInput
    shipments?: ShipmentUpdateManyWithoutWarehouseNestedInput
    auditItems?: InventoryAuditItemUpdateManyWithoutWarehouseNestedInput
  }

  export type WarehouseUncheckedUpdateWithoutAuditsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    managerName?: NullableStringFieldUpdateOperationsInput | string | null
    managerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    managerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumWarehouseTypeFieldUpdateOperationsInput | $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hasRfid?: BoolFieldUpdateOperationsInput | boolean
    hasBarcode?: BoolFieldUpdateOperationsInput | boolean
    temperatureControl?: BoolFieldUpdateOperationsInput | boolean
    securityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryItems?: InventoryItemUncheckedUpdateManyWithoutWarehouseNestedInput
    movements?: InventoryMovementUncheckedUpdateManyWithoutWarehouseNestedInput
    transfers?: StockTransferUncheckedUpdateManyWithoutFromWarehouseNestedInput
    receivedTransfers?: StockTransferUncheckedUpdateManyWithoutToWarehouseNestedInput
    orders?: OrderUncheckedUpdateManyWithoutWarehouseNestedInput
    purchaseOrders?: PurchaseOrderUncheckedUpdateManyWithoutWarehouseNestedInput
    goodsReceipts?: GoodsReceiptUncheckedUpdateManyWithoutWarehouseNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutWarehouseNestedInput
    auditItems?: InventoryAuditItemUncheckedUpdateManyWithoutWarehouseNestedInput
  }

  export type ProductUpsertWithoutAuditsInput = {
    update: XOR<ProductUpdateWithoutAuditsInput, ProductUncheckedUpdateWithoutAuditsInput>
    create: XOR<ProductCreateWithoutAuditsInput, ProductUncheckedCreateWithoutAuditsInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutAuditsInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutAuditsInput, ProductUncheckedUpdateWithoutAuditsInput>
  }

  export type ProductUpdateWithoutAuditsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    category?: CategoryUpdateOneWithoutProductsNestedInput
    brand?: BrandUpdateOneWithoutProductsNestedInput
    inventoryItems?: InventoryItemUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUpdateManyWithoutProductNestedInput
    suppliers?: ProductSupplierUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
    purchaseItems?: PurchaseOrderItemUpdateManyWithoutProductNestedInput
    movements?: InventoryMovementUpdateManyWithoutProductNestedInput
    reviews?: ProductReviewUpdateManyWithoutProductNestedInput
    bundles?: ProductBundleUpdateManyWithoutProductsNestedInput
    bundleItems?: ProductBundleUpdateManyWithoutBundleItemsNestedInput
    goodsReceiptItems?: GoodsReceiptItemUpdateManyWithoutProductNestedInput
    transferItems?: StockTransferItemUpdateManyWithoutProductNestedInput
    auditItems?: InventoryAuditItemUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutAuditsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    inventoryItems?: InventoryItemUncheckedUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUncheckedUpdateManyWithoutProductNestedInput
    suppliers?: ProductSupplierUncheckedUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    purchaseItems?: PurchaseOrderItemUncheckedUpdateManyWithoutProductNestedInput
    movements?: InventoryMovementUncheckedUpdateManyWithoutProductNestedInput
    reviews?: ProductReviewUncheckedUpdateManyWithoutProductNestedInput
    bundles?: ProductBundleUncheckedUpdateManyWithoutProductsNestedInput
    bundleItems?: ProductBundleUncheckedUpdateManyWithoutBundleItemsNestedInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedUpdateManyWithoutProductNestedInput
    transferItems?: StockTransferItemUncheckedUpdateManyWithoutProductNestedInput
    auditItems?: InventoryAuditItemUncheckedUpdateManyWithoutProductNestedInput
  }

  export type InventoryAuditItemUpsertWithWhereUniqueWithoutAuditInput = {
    where: InventoryAuditItemWhereUniqueInput
    update: XOR<InventoryAuditItemUpdateWithoutAuditInput, InventoryAuditItemUncheckedUpdateWithoutAuditInput>
    create: XOR<InventoryAuditItemCreateWithoutAuditInput, InventoryAuditItemUncheckedCreateWithoutAuditInput>
  }

  export type InventoryAuditItemUpdateWithWhereUniqueWithoutAuditInput = {
    where: InventoryAuditItemWhereUniqueInput
    data: XOR<InventoryAuditItemUpdateWithoutAuditInput, InventoryAuditItemUncheckedUpdateWithoutAuditInput>
  }

  export type InventoryAuditItemUpdateManyWithWhereWithoutAuditInput = {
    where: InventoryAuditItemScalarWhereInput
    data: XOR<InventoryAuditItemUpdateManyMutationInput, InventoryAuditItemUncheckedUpdateManyWithoutAuditInput>
  }

  export type InventoryAuditCreateWithoutItemsInput = {
    id?: string
    auditNumber: string
    type: $Enums.AuditType
    method?: $Enums.AuditMethod
    status?: $Enums.AuditStatus
    plannedDate: Date | string
    startedDate?: Date | string | null
    completedDate?: Date | string | null
    auditedBy: string
    supervisedBy?: string | null
    totalItems?: number | null
    itemsCounted?: number | null
    discrepancies?: number | null
    adjustmentValue?: Decimal | DecimalJsLike | number | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    warehouse?: WarehouseCreateNestedOneWithoutAuditsInput
    product?: ProductCreateNestedOneWithoutAuditsInput
  }

  export type InventoryAuditUncheckedCreateWithoutItemsInput = {
    id?: string
    auditNumber: string
    warehouseId?: string | null
    productId?: string | null
    type: $Enums.AuditType
    method?: $Enums.AuditMethod
    status?: $Enums.AuditStatus
    plannedDate: Date | string
    startedDate?: Date | string | null
    completedDate?: Date | string | null
    auditedBy: string
    supervisedBy?: string | null
    totalItems?: number | null
    itemsCounted?: number | null
    discrepancies?: number | null
    adjustmentValue?: Decimal | DecimalJsLike | number | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InventoryAuditCreateOrConnectWithoutItemsInput = {
    where: InventoryAuditWhereUniqueInput
    create: XOR<InventoryAuditCreateWithoutItemsInput, InventoryAuditUncheckedCreateWithoutItemsInput>
  }

  export type ProductCreateWithoutAuditItemsInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    category?: CategoryCreateNestedOneWithoutProductsInput
    brand?: BrandCreateNestedOneWithoutProductsInput
    inventoryItems?: InventoryItemCreateNestedManyWithoutProductInput
    variants?: ProductVariantCreateNestedManyWithoutProductInput
    suppliers?: ProductSupplierCreateNestedManyWithoutProductInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
    purchaseItems?: PurchaseOrderItemCreateNestedManyWithoutProductInput
    movements?: InventoryMovementCreateNestedManyWithoutProductInput
    audits?: InventoryAuditCreateNestedManyWithoutProductInput
    reviews?: ProductReviewCreateNestedManyWithoutProductInput
    bundles?: ProductBundleCreateNestedManyWithoutProductsInput
    bundleItems?: ProductBundleCreateNestedManyWithoutBundleItemsInput
    goodsReceiptItems?: GoodsReceiptItemCreateNestedManyWithoutProductInput
    transferItems?: StockTransferItemCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutAuditItemsInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    categoryId?: string | null
    brandId?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    inventoryItems?: InventoryItemUncheckedCreateNestedManyWithoutProductInput
    variants?: ProductVariantUncheckedCreateNestedManyWithoutProductInput
    suppliers?: ProductSupplierUncheckedCreateNestedManyWithoutProductInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    purchaseItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutProductInput
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutProductInput
    audits?: InventoryAuditUncheckedCreateNestedManyWithoutProductInput
    reviews?: ProductReviewUncheckedCreateNestedManyWithoutProductInput
    bundles?: ProductBundleUncheckedCreateNestedManyWithoutProductsInput
    bundleItems?: ProductBundleUncheckedCreateNestedManyWithoutBundleItemsInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedCreateNestedManyWithoutProductInput
    transferItems?: StockTransferItemUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutAuditItemsInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutAuditItemsInput, ProductUncheckedCreateWithoutAuditItemsInput>
  }

  export type ProductVariantCreateWithoutAuditItemsInput = {
    id?: string
    name: string
    sku: string
    barcode?: string | null
    attributes: JsonNullValueInput | InputJsonValue
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number | null
    reorderPoint?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutVariantsInput
    inventoryItems?: InventoryItemCreateNestedManyWithoutVariantInput
    movements?: InventoryMovementCreateNestedManyWithoutVariantInput
    purchaseItems?: PurchaseOrderItemCreateNestedManyWithoutVariantInput
    goodsReceiptItems?: GoodsReceiptItemCreateNestedManyWithoutVariantInput
    orderItems?: OrderItemCreateNestedManyWithoutVariantInput
    transferItems?: StockTransferItemCreateNestedManyWithoutVariantInput
  }

  export type ProductVariantUncheckedCreateWithoutAuditItemsInput = {
    id?: string
    productId: string
    name: string
    sku: string
    barcode?: string | null
    attributes: JsonNullValueInput | InputJsonValue
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number | null
    reorderPoint?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    inventoryItems?: InventoryItemUncheckedCreateNestedManyWithoutVariantInput
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutVariantInput
    purchaseItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutVariantInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedCreateNestedManyWithoutVariantInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutVariantInput
    transferItems?: StockTransferItemUncheckedCreateNestedManyWithoutVariantInput
  }

  export type ProductVariantCreateOrConnectWithoutAuditItemsInput = {
    where: ProductVariantWhereUniqueInput
    create: XOR<ProductVariantCreateWithoutAuditItemsInput, ProductVariantUncheckedCreateWithoutAuditItemsInput>
  }

  export type WarehouseCreateWithoutAuditItemsInput = {
    id?: string
    name: string
    code: string
    description?: string | null
    address: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: string | null
    managerName?: string | null
    managerEmail?: string | null
    managerPhone?: string | null
    phone?: string | null
    email?: string | null
    type?: $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    hasRfid?: boolean
    hasBarcode?: boolean
    temperatureControl?: boolean
    securityLevel?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    inventoryItems?: InventoryItemCreateNestedManyWithoutWarehouseInput
    movements?: InventoryMovementCreateNestedManyWithoutWarehouseInput
    transfers?: StockTransferCreateNestedManyWithoutFromWarehouseInput
    receivedTransfers?: StockTransferCreateNestedManyWithoutToWarehouseInput
    orders?: OrderCreateNestedManyWithoutWarehouseInput
    purchaseOrders?: PurchaseOrderCreateNestedManyWithoutWarehouseInput
    audits?: InventoryAuditCreateNestedManyWithoutWarehouseInput
    goodsReceipts?: GoodsReceiptCreateNestedManyWithoutWarehouseInput
    shipments?: ShipmentCreateNestedManyWithoutWarehouseInput
  }

  export type WarehouseUncheckedCreateWithoutAuditItemsInput = {
    id?: string
    name: string
    code: string
    description?: string | null
    address: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: string | null
    managerName?: string | null
    managerEmail?: string | null
    managerPhone?: string | null
    phone?: string | null
    email?: string | null
    type?: $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    hasRfid?: boolean
    hasBarcode?: boolean
    temperatureControl?: boolean
    securityLevel?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    inventoryItems?: InventoryItemUncheckedCreateNestedManyWithoutWarehouseInput
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutWarehouseInput
    transfers?: StockTransferUncheckedCreateNestedManyWithoutFromWarehouseInput
    receivedTransfers?: StockTransferUncheckedCreateNestedManyWithoutToWarehouseInput
    orders?: OrderUncheckedCreateNestedManyWithoutWarehouseInput
    purchaseOrders?: PurchaseOrderUncheckedCreateNestedManyWithoutWarehouseInput
    audits?: InventoryAuditUncheckedCreateNestedManyWithoutWarehouseInput
    goodsReceipts?: GoodsReceiptUncheckedCreateNestedManyWithoutWarehouseInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutWarehouseInput
  }

  export type WarehouseCreateOrConnectWithoutAuditItemsInput = {
    where: WarehouseWhereUniqueInput
    create: XOR<WarehouseCreateWithoutAuditItemsInput, WarehouseUncheckedCreateWithoutAuditItemsInput>
  }

  export type InventoryAuditUpsertWithoutItemsInput = {
    update: XOR<InventoryAuditUpdateWithoutItemsInput, InventoryAuditUncheckedUpdateWithoutItemsInput>
    create: XOR<InventoryAuditCreateWithoutItemsInput, InventoryAuditUncheckedCreateWithoutItemsInput>
    where?: InventoryAuditWhereInput
  }

  export type InventoryAuditUpdateToOneWithWhereWithoutItemsInput = {
    where?: InventoryAuditWhereInput
    data: XOR<InventoryAuditUpdateWithoutItemsInput, InventoryAuditUncheckedUpdateWithoutItemsInput>
  }

  export type InventoryAuditUpdateWithoutItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    auditNumber?: StringFieldUpdateOperationsInput | string
    type?: EnumAuditTypeFieldUpdateOperationsInput | $Enums.AuditType
    method?: EnumAuditMethodFieldUpdateOperationsInput | $Enums.AuditMethod
    status?: EnumAuditStatusFieldUpdateOperationsInput | $Enums.AuditStatus
    plannedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    startedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auditedBy?: StringFieldUpdateOperationsInput | string
    supervisedBy?: NullableStringFieldUpdateOperationsInput | string | null
    totalItems?: NullableIntFieldUpdateOperationsInput | number | null
    itemsCounted?: NullableIntFieldUpdateOperationsInput | number | null
    discrepancies?: NullableIntFieldUpdateOperationsInput | number | null
    adjustmentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    warehouse?: WarehouseUpdateOneWithoutAuditsNestedInput
    product?: ProductUpdateOneWithoutAuditsNestedInput
  }

  export type InventoryAuditUncheckedUpdateWithoutItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    auditNumber?: StringFieldUpdateOperationsInput | string
    warehouseId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumAuditTypeFieldUpdateOperationsInput | $Enums.AuditType
    method?: EnumAuditMethodFieldUpdateOperationsInput | $Enums.AuditMethod
    status?: EnumAuditStatusFieldUpdateOperationsInput | $Enums.AuditStatus
    plannedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    startedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auditedBy?: StringFieldUpdateOperationsInput | string
    supervisedBy?: NullableStringFieldUpdateOperationsInput | string | null
    totalItems?: NullableIntFieldUpdateOperationsInput | number | null
    itemsCounted?: NullableIntFieldUpdateOperationsInput | number | null
    discrepancies?: NullableIntFieldUpdateOperationsInput | number | null
    adjustmentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductUpsertWithoutAuditItemsInput = {
    update: XOR<ProductUpdateWithoutAuditItemsInput, ProductUncheckedUpdateWithoutAuditItemsInput>
    create: XOR<ProductCreateWithoutAuditItemsInput, ProductUncheckedCreateWithoutAuditItemsInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutAuditItemsInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutAuditItemsInput, ProductUncheckedUpdateWithoutAuditItemsInput>
  }

  export type ProductUpdateWithoutAuditItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    category?: CategoryUpdateOneWithoutProductsNestedInput
    brand?: BrandUpdateOneWithoutProductsNestedInput
    inventoryItems?: InventoryItemUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUpdateManyWithoutProductNestedInput
    suppliers?: ProductSupplierUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
    purchaseItems?: PurchaseOrderItemUpdateManyWithoutProductNestedInput
    movements?: InventoryMovementUpdateManyWithoutProductNestedInput
    audits?: InventoryAuditUpdateManyWithoutProductNestedInput
    reviews?: ProductReviewUpdateManyWithoutProductNestedInput
    bundles?: ProductBundleUpdateManyWithoutProductsNestedInput
    bundleItems?: ProductBundleUpdateManyWithoutBundleItemsNestedInput
    goodsReceiptItems?: GoodsReceiptItemUpdateManyWithoutProductNestedInput
    transferItems?: StockTransferItemUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutAuditItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    inventoryItems?: InventoryItemUncheckedUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUncheckedUpdateManyWithoutProductNestedInput
    suppliers?: ProductSupplierUncheckedUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    purchaseItems?: PurchaseOrderItemUncheckedUpdateManyWithoutProductNestedInput
    movements?: InventoryMovementUncheckedUpdateManyWithoutProductNestedInput
    audits?: InventoryAuditUncheckedUpdateManyWithoutProductNestedInput
    reviews?: ProductReviewUncheckedUpdateManyWithoutProductNestedInput
    bundles?: ProductBundleUncheckedUpdateManyWithoutProductsNestedInput
    bundleItems?: ProductBundleUncheckedUpdateManyWithoutBundleItemsNestedInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedUpdateManyWithoutProductNestedInput
    transferItems?: StockTransferItemUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductVariantUpsertWithoutAuditItemsInput = {
    update: XOR<ProductVariantUpdateWithoutAuditItemsInput, ProductVariantUncheckedUpdateWithoutAuditItemsInput>
    create: XOR<ProductVariantCreateWithoutAuditItemsInput, ProductVariantUncheckedCreateWithoutAuditItemsInput>
    where?: ProductVariantWhereInput
  }

  export type ProductVariantUpdateToOneWithWhereWithoutAuditItemsInput = {
    where?: ProductVariantWhereInput
    data: XOR<ProductVariantUpdateWithoutAuditItemsInput, ProductVariantUncheckedUpdateWithoutAuditItemsInput>
  }

  export type ProductVariantUpdateWithoutAuditItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: JsonNullValueInput | InputJsonValue
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutVariantsNestedInput
    inventoryItems?: InventoryItemUpdateManyWithoutVariantNestedInput
    movements?: InventoryMovementUpdateManyWithoutVariantNestedInput
    purchaseItems?: PurchaseOrderItemUpdateManyWithoutVariantNestedInput
    goodsReceiptItems?: GoodsReceiptItemUpdateManyWithoutVariantNestedInput
    orderItems?: OrderItemUpdateManyWithoutVariantNestedInput
    transferItems?: StockTransferItemUpdateManyWithoutVariantNestedInput
  }

  export type ProductVariantUncheckedUpdateWithoutAuditItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: JsonNullValueInput | InputJsonValue
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryItems?: InventoryItemUncheckedUpdateManyWithoutVariantNestedInput
    movements?: InventoryMovementUncheckedUpdateManyWithoutVariantNestedInput
    purchaseItems?: PurchaseOrderItemUncheckedUpdateManyWithoutVariantNestedInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedUpdateManyWithoutVariantNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutVariantNestedInput
    transferItems?: StockTransferItemUncheckedUpdateManyWithoutVariantNestedInput
  }

  export type WarehouseUpsertWithoutAuditItemsInput = {
    update: XOR<WarehouseUpdateWithoutAuditItemsInput, WarehouseUncheckedUpdateWithoutAuditItemsInput>
    create: XOR<WarehouseCreateWithoutAuditItemsInput, WarehouseUncheckedCreateWithoutAuditItemsInput>
    where?: WarehouseWhereInput
  }

  export type WarehouseUpdateToOneWithWhereWithoutAuditItemsInput = {
    where?: WarehouseWhereInput
    data: XOR<WarehouseUpdateWithoutAuditItemsInput, WarehouseUncheckedUpdateWithoutAuditItemsInput>
  }

  export type WarehouseUpdateWithoutAuditItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    managerName?: NullableStringFieldUpdateOperationsInput | string | null
    managerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    managerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumWarehouseTypeFieldUpdateOperationsInput | $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hasRfid?: BoolFieldUpdateOperationsInput | boolean
    hasBarcode?: BoolFieldUpdateOperationsInput | boolean
    temperatureControl?: BoolFieldUpdateOperationsInput | boolean
    securityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryItems?: InventoryItemUpdateManyWithoutWarehouseNestedInput
    movements?: InventoryMovementUpdateManyWithoutWarehouseNestedInput
    transfers?: StockTransferUpdateManyWithoutFromWarehouseNestedInput
    receivedTransfers?: StockTransferUpdateManyWithoutToWarehouseNestedInput
    orders?: OrderUpdateManyWithoutWarehouseNestedInput
    purchaseOrders?: PurchaseOrderUpdateManyWithoutWarehouseNestedInput
    audits?: InventoryAuditUpdateManyWithoutWarehouseNestedInput
    goodsReceipts?: GoodsReceiptUpdateManyWithoutWarehouseNestedInput
    shipments?: ShipmentUpdateManyWithoutWarehouseNestedInput
  }

  export type WarehouseUncheckedUpdateWithoutAuditItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: JsonNullValueInput | InputJsonValue
    coordinates?: NullableJsonNullValueInput | InputJsonValue
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    managerName?: NullableStringFieldUpdateOperationsInput | string | null
    managerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    managerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumWarehouseTypeFieldUpdateOperationsInput | $Enums.WarehouseType
    capacity?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hasRfid?: BoolFieldUpdateOperationsInput | boolean
    hasBarcode?: BoolFieldUpdateOperationsInput | boolean
    temperatureControl?: BoolFieldUpdateOperationsInput | boolean
    securityLevel?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryItems?: InventoryItemUncheckedUpdateManyWithoutWarehouseNestedInput
    movements?: InventoryMovementUncheckedUpdateManyWithoutWarehouseNestedInput
    transfers?: StockTransferUncheckedUpdateManyWithoutFromWarehouseNestedInput
    receivedTransfers?: StockTransferUncheckedUpdateManyWithoutToWarehouseNestedInput
    orders?: OrderUncheckedUpdateManyWithoutWarehouseNestedInput
    purchaseOrders?: PurchaseOrderUncheckedUpdateManyWithoutWarehouseNestedInput
    audits?: InventoryAuditUncheckedUpdateManyWithoutWarehouseNestedInput
    goodsReceipts?: GoodsReceiptUncheckedUpdateManyWithoutWarehouseNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutWarehouseNestedInput
  }

  export type ProductCreateWithoutReviewsInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    category?: CategoryCreateNestedOneWithoutProductsInput
    brand?: BrandCreateNestedOneWithoutProductsInput
    inventoryItems?: InventoryItemCreateNestedManyWithoutProductInput
    variants?: ProductVariantCreateNestedManyWithoutProductInput
    suppliers?: ProductSupplierCreateNestedManyWithoutProductInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
    purchaseItems?: PurchaseOrderItemCreateNestedManyWithoutProductInput
    movements?: InventoryMovementCreateNestedManyWithoutProductInput
    audits?: InventoryAuditCreateNestedManyWithoutProductInput
    bundles?: ProductBundleCreateNestedManyWithoutProductsInput
    bundleItems?: ProductBundleCreateNestedManyWithoutBundleItemsInput
    goodsReceiptItems?: GoodsReceiptItemCreateNestedManyWithoutProductInput
    transferItems?: StockTransferItemCreateNestedManyWithoutProductInput
    auditItems?: InventoryAuditItemCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutReviewsInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    categoryId?: string | null
    brandId?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
    inventoryItems?: InventoryItemUncheckedCreateNestedManyWithoutProductInput
    variants?: ProductVariantUncheckedCreateNestedManyWithoutProductInput
    suppliers?: ProductSupplierUncheckedCreateNestedManyWithoutProductInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    purchaseItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutProductInput
    movements?: InventoryMovementUncheckedCreateNestedManyWithoutProductInput
    audits?: InventoryAuditUncheckedCreateNestedManyWithoutProductInput
    bundles?: ProductBundleUncheckedCreateNestedManyWithoutProductsInput
    bundleItems?: ProductBundleUncheckedCreateNestedManyWithoutBundleItemsInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedCreateNestedManyWithoutProductInput
    transferItems?: StockTransferItemUncheckedCreateNestedManyWithoutProductInput
    auditItems?: InventoryAuditItemUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutReviewsInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutReviewsInput, ProductUncheckedCreateWithoutReviewsInput>
  }

  export type ProductUpsertWithoutReviewsInput = {
    update: XOR<ProductUpdateWithoutReviewsInput, ProductUncheckedUpdateWithoutReviewsInput>
    create: XOR<ProductCreateWithoutReviewsInput, ProductUncheckedCreateWithoutReviewsInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutReviewsInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutReviewsInput, ProductUncheckedUpdateWithoutReviewsInput>
  }

  export type ProductUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    category?: CategoryUpdateOneWithoutProductsNestedInput
    brand?: BrandUpdateOneWithoutProductsNestedInput
    inventoryItems?: InventoryItemUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUpdateManyWithoutProductNestedInput
    suppliers?: ProductSupplierUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
    purchaseItems?: PurchaseOrderItemUpdateManyWithoutProductNestedInput
    movements?: InventoryMovementUpdateManyWithoutProductNestedInput
    audits?: InventoryAuditUpdateManyWithoutProductNestedInput
    bundles?: ProductBundleUpdateManyWithoutProductsNestedInput
    bundleItems?: ProductBundleUpdateManyWithoutBundleItemsNestedInput
    goodsReceiptItems?: GoodsReceiptItemUpdateManyWithoutProductNestedInput
    transferItems?: StockTransferItemUpdateManyWithoutProductNestedInput
    auditItems?: InventoryAuditItemUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    inventoryItems?: InventoryItemUncheckedUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUncheckedUpdateManyWithoutProductNestedInput
    suppliers?: ProductSupplierUncheckedUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    purchaseItems?: PurchaseOrderItemUncheckedUpdateManyWithoutProductNestedInput
    movements?: InventoryMovementUncheckedUpdateManyWithoutProductNestedInput
    audits?: InventoryAuditUncheckedUpdateManyWithoutProductNestedInput
    bundles?: ProductBundleUncheckedUpdateManyWithoutProductsNestedInput
    bundleItems?: ProductBundleUncheckedUpdateManyWithoutBundleItemsNestedInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedUpdateManyWithoutProductNestedInput
    transferItems?: StockTransferItemUncheckedUpdateManyWithoutProductNestedInput
    auditItems?: InventoryAuditItemUncheckedUpdateManyWithoutProductNestedInput
  }

  export type InventoryItemCreateManyProductInput = {
    id?: string
    variantId?: string | null
    warehouseId: string
    zone?: string | null
    aisle?: string | null
    shelf?: string | null
    bin?: string | null
    locationCode?: string | null
    quantity?: number
    reservedQuantity?: number
    availableQuantity?: number
    averageCost?: Decimal | DecimalJsLike | number | string | null
    lastCost?: Decimal | DecimalJsLike | number | string | null
    lotNumber?: string | null
    batchNumber?: string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    expiryDate?: Date | string | null
    status?: $Enums.InventoryStatus
    qcStatus?: $Enums.QualityStatus
    quarantineReason?: string | null
    lastMovement?: Date | string | null
    lastCount?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductVariantCreateManyProductInput = {
    id?: string
    name: string
    sku: string
    barcode?: string | null
    attributes: JsonNullValueInput | InputJsonValue
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number | null
    reorderPoint?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductSupplierCreateManyProductInput = {
    id?: string
    supplierId: string
    supplierSku?: string | null
    supplierName?: string | null
    unitCost: Decimal | DecimalJsLike | number | string
    currency?: string
    minOrderQty?: number | null
    maxOrderQty?: number | null
    leadTimeDays?: number | null
    isPreferred?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderItemCreateManyProductInput = {
    id?: string
    orderId: string
    variantId?: string | null
    orderedQty: number
    shippedQty?: number
    remainingQty: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    productName: string
    productSku: string
    status?: $Enums.OrderItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PurchaseOrderItemCreateManyProductInput = {
    id?: string
    purchaseOrderId: string
    variantId?: string | null
    orderedQty: number
    receivedQty?: number
    remainingQty: number
    unitCost: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    productName: string
    productSku: string
    supplierSku?: string | null
    expectedDate?: Date | string | null
    status?: $Enums.PurchaseItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InventoryMovementCreateManyProductInput = {
    id?: string
    type: $Enums.MovementType
    subtype?: string | null
    variantId?: string | null
    warehouseId: string
    inventoryItemId?: string | null
    quantity: number
    quantityBefore: number
    quantityAfter: number
    unitCost?: Decimal | DecimalJsLike | number | string | null
    totalCost?: Decimal | DecimalJsLike | number | string | null
    referenceType?: string | null
    referenceId?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    expiryDate?: Date | string | null
    reason?: string | null
    notes?: string | null
    userId: string
    approvedBy?: string | null
    approvedAt?: Date | string | null
    occurredAt?: Date | string
    createdAt?: Date | string
  }

  export type InventoryAuditCreateManyProductInput = {
    id?: string
    auditNumber: string
    warehouseId?: string | null
    type: $Enums.AuditType
    method?: $Enums.AuditMethod
    status?: $Enums.AuditStatus
    plannedDate: Date | string
    startedDate?: Date | string | null
    completedDate?: Date | string | null
    auditedBy: string
    supervisedBy?: string | null
    totalItems?: number | null
    itemsCounted?: number | null
    discrepancies?: number | null
    adjustmentValue?: Decimal | DecimalJsLike | number | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductReviewCreateManyProductInput = {
    id?: string
    rating: number
    title?: string | null
    review?: string | null
    reviewerName?: string | null
    reviewerEmail?: string | null
    isApproved?: boolean
    isVisible?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type GoodsReceiptItemCreateManyProductInput = {
    id?: string
    goodsReceiptId: string
    variantId?: string | null
    expectedQty: number
    receivedQty: number
    acceptedQty: number
    rejectedQty: number
    qcStatus?: $Enums.QualityStatus
    qcNotes?: string | null
    rejectionReason?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    expiryDate?: Date | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    receivedLocation?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type StockTransferItemCreateManyProductInput = {
    id?: string
    transferId: string
    variantId?: string | null
    requestedQty: number
    shippedQty?: number
    receivedQty?: number
    productName: string
    productSku: string
    lotNumber?: string | null
    batchNumber?: string | null
    status?: $Enums.TransferItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InventoryAuditItemCreateManyProductInput = {
    id?: string
    auditId: string
    variantId?: string | null
    warehouseId: string
    systemQty: number
    countedQty?: number | null
    adjustmentQty?: number | null
    location?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    countedBy?: string | null
    countedAt?: Date | string | null
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    status?: $Enums.AuditItemStatus
    discrepancyReason?: string | null
    requiresInvestigation?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InventoryItemUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    aisle?: NullableStringFieldUpdateOperationsInput | string | null
    shelf?: NullableStringFieldUpdateOperationsInput | string | null
    bin?: NullableStringFieldUpdateOperationsInput | string | null
    locationCode?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    reservedQuantity?: IntFieldUpdateOperationsInput | number
    availableQuantity?: IntFieldUpdateOperationsInput | number
    averageCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lastCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInventoryStatusFieldUpdateOperationsInput | $Enums.InventoryStatus
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    quarantineReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastMovement?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastCount?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    variant?: ProductVariantUpdateOneWithoutInventoryItemsNestedInput
    warehouse?: WarehouseUpdateOneRequiredWithoutInventoryItemsNestedInput
    movements?: InventoryMovementUpdateManyWithoutInventoryItemNestedInput
    reservations?: StockReservationUpdateManyWithoutInventoryItemNestedInput
  }

  export type InventoryItemUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    warehouseId?: StringFieldUpdateOperationsInput | string
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    aisle?: NullableStringFieldUpdateOperationsInput | string | null
    shelf?: NullableStringFieldUpdateOperationsInput | string | null
    bin?: NullableStringFieldUpdateOperationsInput | string | null
    locationCode?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    reservedQuantity?: IntFieldUpdateOperationsInput | number
    availableQuantity?: IntFieldUpdateOperationsInput | number
    averageCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lastCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInventoryStatusFieldUpdateOperationsInput | $Enums.InventoryStatus
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    quarantineReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastMovement?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastCount?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    movements?: InventoryMovementUncheckedUpdateManyWithoutInventoryItemNestedInput
    reservations?: StockReservationUncheckedUpdateManyWithoutInventoryItemNestedInput
  }

  export type InventoryItemUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    warehouseId?: StringFieldUpdateOperationsInput | string
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    aisle?: NullableStringFieldUpdateOperationsInput | string | null
    shelf?: NullableStringFieldUpdateOperationsInput | string | null
    bin?: NullableStringFieldUpdateOperationsInput | string | null
    locationCode?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    reservedQuantity?: IntFieldUpdateOperationsInput | number
    availableQuantity?: IntFieldUpdateOperationsInput | number
    averageCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lastCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInventoryStatusFieldUpdateOperationsInput | $Enums.InventoryStatus
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    quarantineReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastMovement?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastCount?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductVariantUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: JsonNullValueInput | InputJsonValue
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryItems?: InventoryItemUpdateManyWithoutVariantNestedInput
    movements?: InventoryMovementUpdateManyWithoutVariantNestedInput
    purchaseItems?: PurchaseOrderItemUpdateManyWithoutVariantNestedInput
    goodsReceiptItems?: GoodsReceiptItemUpdateManyWithoutVariantNestedInput
    orderItems?: OrderItemUpdateManyWithoutVariantNestedInput
    transferItems?: StockTransferItemUpdateManyWithoutVariantNestedInput
    auditItems?: InventoryAuditItemUpdateManyWithoutVariantNestedInput
  }

  export type ProductVariantUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: JsonNullValueInput | InputJsonValue
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryItems?: InventoryItemUncheckedUpdateManyWithoutVariantNestedInput
    movements?: InventoryMovementUncheckedUpdateManyWithoutVariantNestedInput
    purchaseItems?: PurchaseOrderItemUncheckedUpdateManyWithoutVariantNestedInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedUpdateManyWithoutVariantNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutVariantNestedInput
    transferItems?: StockTransferItemUncheckedUpdateManyWithoutVariantNestedInput
    auditItems?: InventoryAuditItemUncheckedUpdateManyWithoutVariantNestedInput
  }

  export type ProductVariantUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: JsonNullValueInput | InputJsonValue
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductSupplierUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    supplierSku?: NullableStringFieldUpdateOperationsInput | string | null
    supplierName?: NullableStringFieldUpdateOperationsInput | string | null
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    minOrderQty?: NullableIntFieldUpdateOperationsInput | number | null
    maxOrderQty?: NullableIntFieldUpdateOperationsInput | number | null
    leadTimeDays?: NullableIntFieldUpdateOperationsInput | number | null
    isPreferred?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    supplier?: SupplierUpdateOneRequiredWithoutProductsNestedInput
  }

  export type ProductSupplierUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    supplierId?: StringFieldUpdateOperationsInput | string
    supplierSku?: NullableStringFieldUpdateOperationsInput | string | null
    supplierName?: NullableStringFieldUpdateOperationsInput | string | null
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    minOrderQty?: NullableIntFieldUpdateOperationsInput | number | null
    maxOrderQty?: NullableIntFieldUpdateOperationsInput | number | null
    leadTimeDays?: NullableIntFieldUpdateOperationsInput | number | null
    isPreferred?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductSupplierUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    supplierId?: StringFieldUpdateOperationsInput | string
    supplierSku?: NullableStringFieldUpdateOperationsInput | string | null
    supplierName?: NullableStringFieldUpdateOperationsInput | string | null
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    minOrderQty?: NullableIntFieldUpdateOperationsInput | number | null
    maxOrderQty?: NullableIntFieldUpdateOperationsInput | number | null
    leadTimeDays?: NullableIntFieldUpdateOperationsInput | number | null
    isPreferred?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderItemUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderedQty?: IntFieldUpdateOperationsInput | number
    shippedQty?: IntFieldUpdateOperationsInput | number
    remainingQty?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderItemStatusFieldUpdateOperationsInput | $Enums.OrderItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneRequiredWithoutItemsNestedInput
    variant?: ProductVariantUpdateOneWithoutOrderItemsNestedInput
  }

  export type OrderItemUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    orderedQty?: IntFieldUpdateOperationsInput | number
    shippedQty?: IntFieldUpdateOperationsInput | number
    remainingQty?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderItemStatusFieldUpdateOperationsInput | $Enums.OrderItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderItemUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    orderedQty?: IntFieldUpdateOperationsInput | number
    shippedQty?: IntFieldUpdateOperationsInput | number
    remainingQty?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderItemStatusFieldUpdateOperationsInput | $Enums.OrderItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PurchaseOrderItemUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    remainingQty?: IntFieldUpdateOperationsInput | number
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    supplierSku?: NullableStringFieldUpdateOperationsInput | string | null
    expectedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPurchaseItemStatusFieldUpdateOperationsInput | $Enums.PurchaseItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    purchaseOrder?: PurchaseOrderUpdateOneRequiredWithoutItemsNestedInput
    variant?: ProductVariantUpdateOneWithoutPurchaseItemsNestedInput
  }

  export type PurchaseOrderItemUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    purchaseOrderId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    orderedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    remainingQty?: IntFieldUpdateOperationsInput | number
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    supplierSku?: NullableStringFieldUpdateOperationsInput | string | null
    expectedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPurchaseItemStatusFieldUpdateOperationsInput | $Enums.PurchaseItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PurchaseOrderItemUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    purchaseOrderId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    orderedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    remainingQty?: IntFieldUpdateOperationsInput | number
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    supplierSku?: NullableStringFieldUpdateOperationsInput | string | null
    expectedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPurchaseItemStatusFieldUpdateOperationsInput | $Enums.PurchaseItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryMovementUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    subtype?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    quantityBefore?: IntFieldUpdateOperationsInput | number
    quantityAfter?: IntFieldUpdateOperationsInput | number
    unitCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    referenceType?: NullableStringFieldUpdateOperationsInput | string | null
    referenceId?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    variant?: ProductVariantUpdateOneWithoutMovementsNestedInput
    warehouse?: WarehouseUpdateOneRequiredWithoutMovementsNestedInput
    inventoryItem?: InventoryItemUpdateOneWithoutMovementsNestedInput
  }

  export type InventoryMovementUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    subtype?: NullableStringFieldUpdateOperationsInput | string | null
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    warehouseId?: StringFieldUpdateOperationsInput | string
    inventoryItemId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    quantityBefore?: IntFieldUpdateOperationsInput | number
    quantityAfter?: IntFieldUpdateOperationsInput | number
    unitCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    referenceType?: NullableStringFieldUpdateOperationsInput | string | null
    referenceId?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryMovementUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    subtype?: NullableStringFieldUpdateOperationsInput | string | null
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    warehouseId?: StringFieldUpdateOperationsInput | string
    inventoryItemId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    quantityBefore?: IntFieldUpdateOperationsInput | number
    quantityAfter?: IntFieldUpdateOperationsInput | number
    unitCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    referenceType?: NullableStringFieldUpdateOperationsInput | string | null
    referenceId?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryAuditUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    auditNumber?: StringFieldUpdateOperationsInput | string
    type?: EnumAuditTypeFieldUpdateOperationsInput | $Enums.AuditType
    method?: EnumAuditMethodFieldUpdateOperationsInput | $Enums.AuditMethod
    status?: EnumAuditStatusFieldUpdateOperationsInput | $Enums.AuditStatus
    plannedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    startedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auditedBy?: StringFieldUpdateOperationsInput | string
    supervisedBy?: NullableStringFieldUpdateOperationsInput | string | null
    totalItems?: NullableIntFieldUpdateOperationsInput | number | null
    itemsCounted?: NullableIntFieldUpdateOperationsInput | number | null
    discrepancies?: NullableIntFieldUpdateOperationsInput | number | null
    adjustmentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    warehouse?: WarehouseUpdateOneWithoutAuditsNestedInput
    items?: InventoryAuditItemUpdateManyWithoutAuditNestedInput
  }

  export type InventoryAuditUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    auditNumber?: StringFieldUpdateOperationsInput | string
    warehouseId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumAuditTypeFieldUpdateOperationsInput | $Enums.AuditType
    method?: EnumAuditMethodFieldUpdateOperationsInput | $Enums.AuditMethod
    status?: EnumAuditStatusFieldUpdateOperationsInput | $Enums.AuditStatus
    plannedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    startedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auditedBy?: StringFieldUpdateOperationsInput | string
    supervisedBy?: NullableStringFieldUpdateOperationsInput | string | null
    totalItems?: NullableIntFieldUpdateOperationsInput | number | null
    itemsCounted?: NullableIntFieldUpdateOperationsInput | number | null
    discrepancies?: NullableIntFieldUpdateOperationsInput | number | null
    adjustmentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: InventoryAuditItemUncheckedUpdateManyWithoutAuditNestedInput
  }

  export type InventoryAuditUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    auditNumber?: StringFieldUpdateOperationsInput | string
    warehouseId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumAuditTypeFieldUpdateOperationsInput | $Enums.AuditType
    method?: EnumAuditMethodFieldUpdateOperationsInput | $Enums.AuditMethod
    status?: EnumAuditStatusFieldUpdateOperationsInput | $Enums.AuditStatus
    plannedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    startedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auditedBy?: StringFieldUpdateOperationsInput | string
    supervisedBy?: NullableStringFieldUpdateOperationsInput | string | null
    totalItems?: NullableIntFieldUpdateOperationsInput | number | null
    itemsCounted?: NullableIntFieldUpdateOperationsInput | number | null
    discrepancies?: NullableIntFieldUpdateOperationsInput | number | null
    adjustmentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductReviewUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    review?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerName?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductReviewUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    review?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerName?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductReviewUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    review?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerName?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductBundleUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    bundlePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    bundleItems?: ProductUpdateManyWithoutBundleItemsNestedInput
  }

  export type ProductBundleUncheckedUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    bundlePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    bundleItems?: ProductUncheckedUpdateManyWithoutBundleItemsNestedInput
  }

  export type ProductBundleUncheckedUpdateManyWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    bundlePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductBundleUpdateWithoutBundleItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    bundlePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: ProductUpdateManyWithoutBundlesNestedInput
  }

  export type ProductBundleUncheckedUpdateWithoutBundleItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    bundlePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: ProductUncheckedUpdateManyWithoutBundlesNestedInput
  }

  export type ProductBundleUncheckedUpdateManyWithoutBundleItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    bundlePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GoodsReceiptItemUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    expectedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    acceptedQty?: IntFieldUpdateOperationsInput | number
    rejectedQty?: IntFieldUpdateOperationsInput | number
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    qcNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    receivedLocation?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    goodsReceipt?: GoodsReceiptUpdateOneRequiredWithoutItemsNestedInput
    variant?: ProductVariantUpdateOneWithoutGoodsReceiptItemsNestedInput
  }

  export type GoodsReceiptItemUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    goodsReceiptId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    expectedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    acceptedQty?: IntFieldUpdateOperationsInput | number
    rejectedQty?: IntFieldUpdateOperationsInput | number
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    qcNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    receivedLocation?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GoodsReceiptItemUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    goodsReceiptId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    expectedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    acceptedQty?: IntFieldUpdateOperationsInput | number
    rejectedQty?: IntFieldUpdateOperationsInput | number
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    qcNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    receivedLocation?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StockTransferItemUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    requestedQty?: IntFieldUpdateOperationsInput | number
    shippedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTransferItemStatusFieldUpdateOperationsInput | $Enums.TransferItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    transfer?: StockTransferUpdateOneRequiredWithoutItemsNestedInput
    variant?: ProductVariantUpdateOneWithoutTransferItemsNestedInput
  }

  export type StockTransferItemUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    transferId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    requestedQty?: IntFieldUpdateOperationsInput | number
    shippedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTransferItemStatusFieldUpdateOperationsInput | $Enums.TransferItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StockTransferItemUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    transferId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    requestedQty?: IntFieldUpdateOperationsInput | number
    shippedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTransferItemStatusFieldUpdateOperationsInput | $Enums.TransferItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryAuditItemUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    systemQty?: IntFieldUpdateOperationsInput | number
    countedQty?: NullableIntFieldUpdateOperationsInput | number | null
    adjustmentQty?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    countedBy?: NullableStringFieldUpdateOperationsInput | string | null
    countedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAuditItemStatusFieldUpdateOperationsInput | $Enums.AuditItemStatus
    discrepancyReason?: NullableStringFieldUpdateOperationsInput | string | null
    requiresInvestigation?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    audit?: InventoryAuditUpdateOneRequiredWithoutItemsNestedInput
    variant?: ProductVariantUpdateOneWithoutAuditItemsNestedInput
    warehouse?: WarehouseUpdateOneRequiredWithoutAuditItemsNestedInput
  }

  export type InventoryAuditItemUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    auditId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    warehouseId?: StringFieldUpdateOperationsInput | string
    systemQty?: IntFieldUpdateOperationsInput | number
    countedQty?: NullableIntFieldUpdateOperationsInput | number | null
    adjustmentQty?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    countedBy?: NullableStringFieldUpdateOperationsInput | string | null
    countedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAuditItemStatusFieldUpdateOperationsInput | $Enums.AuditItemStatus
    discrepancyReason?: NullableStringFieldUpdateOperationsInput | string | null
    requiresInvestigation?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryAuditItemUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    auditId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    warehouseId?: StringFieldUpdateOperationsInput | string
    systemQty?: IntFieldUpdateOperationsInput | number
    countedQty?: NullableIntFieldUpdateOperationsInput | number | null
    adjustmentQty?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    countedBy?: NullableStringFieldUpdateOperationsInput | string | null
    countedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAuditItemStatusFieldUpdateOperationsInput | $Enums.AuditItemStatus
    discrepancyReason?: NullableStringFieldUpdateOperationsInput | string | null
    requiresInvestigation?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryItemCreateManyVariantInput = {
    id?: string
    productId: string
    warehouseId: string
    zone?: string | null
    aisle?: string | null
    shelf?: string | null
    bin?: string | null
    locationCode?: string | null
    quantity?: number
    reservedQuantity?: number
    availableQuantity?: number
    averageCost?: Decimal | DecimalJsLike | number | string | null
    lastCost?: Decimal | DecimalJsLike | number | string | null
    lotNumber?: string | null
    batchNumber?: string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    expiryDate?: Date | string | null
    status?: $Enums.InventoryStatus
    qcStatus?: $Enums.QualityStatus
    quarantineReason?: string | null
    lastMovement?: Date | string | null
    lastCount?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InventoryMovementCreateManyVariantInput = {
    id?: string
    type: $Enums.MovementType
    subtype?: string | null
    productId: string
    warehouseId: string
    inventoryItemId?: string | null
    quantity: number
    quantityBefore: number
    quantityAfter: number
    unitCost?: Decimal | DecimalJsLike | number | string | null
    totalCost?: Decimal | DecimalJsLike | number | string | null
    referenceType?: string | null
    referenceId?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    expiryDate?: Date | string | null
    reason?: string | null
    notes?: string | null
    userId: string
    approvedBy?: string | null
    approvedAt?: Date | string | null
    occurredAt?: Date | string
    createdAt?: Date | string
  }

  export type PurchaseOrderItemCreateManyVariantInput = {
    id?: string
    purchaseOrderId: string
    productId: string
    orderedQty: number
    receivedQty?: number
    remainingQty: number
    unitCost: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    productName: string
    productSku: string
    supplierSku?: string | null
    expectedDate?: Date | string | null
    status?: $Enums.PurchaseItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type GoodsReceiptItemCreateManyVariantInput = {
    id?: string
    goodsReceiptId: string
    productId: string
    expectedQty: number
    receivedQty: number
    acceptedQty: number
    rejectedQty: number
    qcStatus?: $Enums.QualityStatus
    qcNotes?: string | null
    rejectionReason?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    expiryDate?: Date | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    receivedLocation?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderItemCreateManyVariantInput = {
    id?: string
    orderId: string
    productId: string
    orderedQty: number
    shippedQty?: number
    remainingQty: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    productName: string
    productSku: string
    status?: $Enums.OrderItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type StockTransferItemCreateManyVariantInput = {
    id?: string
    transferId: string
    productId: string
    requestedQty: number
    shippedQty?: number
    receivedQty?: number
    productName: string
    productSku: string
    lotNumber?: string | null
    batchNumber?: string | null
    status?: $Enums.TransferItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InventoryAuditItemCreateManyVariantInput = {
    id?: string
    auditId: string
    productId: string
    warehouseId: string
    systemQty: number
    countedQty?: number | null
    adjustmentQty?: number | null
    location?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    countedBy?: string | null
    countedAt?: Date | string | null
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    status?: $Enums.AuditItemStatus
    discrepancyReason?: string | null
    requiresInvestigation?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InventoryItemUpdateWithoutVariantInput = {
    id?: StringFieldUpdateOperationsInput | string
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    aisle?: NullableStringFieldUpdateOperationsInput | string | null
    shelf?: NullableStringFieldUpdateOperationsInput | string | null
    bin?: NullableStringFieldUpdateOperationsInput | string | null
    locationCode?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    reservedQuantity?: IntFieldUpdateOperationsInput | number
    availableQuantity?: IntFieldUpdateOperationsInput | number
    averageCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lastCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInventoryStatusFieldUpdateOperationsInput | $Enums.InventoryStatus
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    quarantineReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastMovement?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastCount?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutInventoryItemsNestedInput
    warehouse?: WarehouseUpdateOneRequiredWithoutInventoryItemsNestedInput
    movements?: InventoryMovementUpdateManyWithoutInventoryItemNestedInput
    reservations?: StockReservationUpdateManyWithoutInventoryItemNestedInput
  }

  export type InventoryItemUncheckedUpdateWithoutVariantInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    warehouseId?: StringFieldUpdateOperationsInput | string
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    aisle?: NullableStringFieldUpdateOperationsInput | string | null
    shelf?: NullableStringFieldUpdateOperationsInput | string | null
    bin?: NullableStringFieldUpdateOperationsInput | string | null
    locationCode?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    reservedQuantity?: IntFieldUpdateOperationsInput | number
    availableQuantity?: IntFieldUpdateOperationsInput | number
    averageCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lastCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInventoryStatusFieldUpdateOperationsInput | $Enums.InventoryStatus
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    quarantineReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastMovement?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastCount?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    movements?: InventoryMovementUncheckedUpdateManyWithoutInventoryItemNestedInput
    reservations?: StockReservationUncheckedUpdateManyWithoutInventoryItemNestedInput
  }

  export type InventoryItemUncheckedUpdateManyWithoutVariantInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    warehouseId?: StringFieldUpdateOperationsInput | string
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    aisle?: NullableStringFieldUpdateOperationsInput | string | null
    shelf?: NullableStringFieldUpdateOperationsInput | string | null
    bin?: NullableStringFieldUpdateOperationsInput | string | null
    locationCode?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    reservedQuantity?: IntFieldUpdateOperationsInput | number
    availableQuantity?: IntFieldUpdateOperationsInput | number
    averageCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lastCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInventoryStatusFieldUpdateOperationsInput | $Enums.InventoryStatus
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    quarantineReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastMovement?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastCount?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryMovementUpdateWithoutVariantInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    subtype?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    quantityBefore?: IntFieldUpdateOperationsInput | number
    quantityAfter?: IntFieldUpdateOperationsInput | number
    unitCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    referenceType?: NullableStringFieldUpdateOperationsInput | string | null
    referenceId?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutMovementsNestedInput
    warehouse?: WarehouseUpdateOneRequiredWithoutMovementsNestedInput
    inventoryItem?: InventoryItemUpdateOneWithoutMovementsNestedInput
  }

  export type InventoryMovementUncheckedUpdateWithoutVariantInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    subtype?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: StringFieldUpdateOperationsInput | string
    warehouseId?: StringFieldUpdateOperationsInput | string
    inventoryItemId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    quantityBefore?: IntFieldUpdateOperationsInput | number
    quantityAfter?: IntFieldUpdateOperationsInput | number
    unitCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    referenceType?: NullableStringFieldUpdateOperationsInput | string | null
    referenceId?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryMovementUncheckedUpdateManyWithoutVariantInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    subtype?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: StringFieldUpdateOperationsInput | string
    warehouseId?: StringFieldUpdateOperationsInput | string
    inventoryItemId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    quantityBefore?: IntFieldUpdateOperationsInput | number
    quantityAfter?: IntFieldUpdateOperationsInput | number
    unitCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    referenceType?: NullableStringFieldUpdateOperationsInput | string | null
    referenceId?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PurchaseOrderItemUpdateWithoutVariantInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    remainingQty?: IntFieldUpdateOperationsInput | number
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    supplierSku?: NullableStringFieldUpdateOperationsInput | string | null
    expectedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPurchaseItemStatusFieldUpdateOperationsInput | $Enums.PurchaseItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    purchaseOrder?: PurchaseOrderUpdateOneRequiredWithoutItemsNestedInput
    product?: ProductUpdateOneRequiredWithoutPurchaseItemsNestedInput
  }

  export type PurchaseOrderItemUncheckedUpdateWithoutVariantInput = {
    id?: StringFieldUpdateOperationsInput | string
    purchaseOrderId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    orderedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    remainingQty?: IntFieldUpdateOperationsInput | number
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    supplierSku?: NullableStringFieldUpdateOperationsInput | string | null
    expectedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPurchaseItemStatusFieldUpdateOperationsInput | $Enums.PurchaseItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PurchaseOrderItemUncheckedUpdateManyWithoutVariantInput = {
    id?: StringFieldUpdateOperationsInput | string
    purchaseOrderId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    orderedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    remainingQty?: IntFieldUpdateOperationsInput | number
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    supplierSku?: NullableStringFieldUpdateOperationsInput | string | null
    expectedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPurchaseItemStatusFieldUpdateOperationsInput | $Enums.PurchaseItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GoodsReceiptItemUpdateWithoutVariantInput = {
    id?: StringFieldUpdateOperationsInput | string
    expectedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    acceptedQty?: IntFieldUpdateOperationsInput | number
    rejectedQty?: IntFieldUpdateOperationsInput | number
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    qcNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    receivedLocation?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    goodsReceipt?: GoodsReceiptUpdateOneRequiredWithoutItemsNestedInput
    product?: ProductUpdateOneRequiredWithoutGoodsReceiptItemsNestedInput
  }

  export type GoodsReceiptItemUncheckedUpdateWithoutVariantInput = {
    id?: StringFieldUpdateOperationsInput | string
    goodsReceiptId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    expectedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    acceptedQty?: IntFieldUpdateOperationsInput | number
    rejectedQty?: IntFieldUpdateOperationsInput | number
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    qcNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    receivedLocation?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GoodsReceiptItemUncheckedUpdateManyWithoutVariantInput = {
    id?: StringFieldUpdateOperationsInput | string
    goodsReceiptId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    expectedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    acceptedQty?: IntFieldUpdateOperationsInput | number
    rejectedQty?: IntFieldUpdateOperationsInput | number
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    qcNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    receivedLocation?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderItemUpdateWithoutVariantInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderedQty?: IntFieldUpdateOperationsInput | number
    shippedQty?: IntFieldUpdateOperationsInput | number
    remainingQty?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderItemStatusFieldUpdateOperationsInput | $Enums.OrderItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneRequiredWithoutItemsNestedInput
    product?: ProductUpdateOneRequiredWithoutOrderItemsNestedInput
  }

  export type OrderItemUncheckedUpdateWithoutVariantInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    orderedQty?: IntFieldUpdateOperationsInput | number
    shippedQty?: IntFieldUpdateOperationsInput | number
    remainingQty?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderItemStatusFieldUpdateOperationsInput | $Enums.OrderItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderItemUncheckedUpdateManyWithoutVariantInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    orderedQty?: IntFieldUpdateOperationsInput | number
    shippedQty?: IntFieldUpdateOperationsInput | number
    remainingQty?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderItemStatusFieldUpdateOperationsInput | $Enums.OrderItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StockTransferItemUpdateWithoutVariantInput = {
    id?: StringFieldUpdateOperationsInput | string
    requestedQty?: IntFieldUpdateOperationsInput | number
    shippedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTransferItemStatusFieldUpdateOperationsInput | $Enums.TransferItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    transfer?: StockTransferUpdateOneRequiredWithoutItemsNestedInput
    product?: ProductUpdateOneRequiredWithoutTransferItemsNestedInput
  }

  export type StockTransferItemUncheckedUpdateWithoutVariantInput = {
    id?: StringFieldUpdateOperationsInput | string
    transferId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    requestedQty?: IntFieldUpdateOperationsInput | number
    shippedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTransferItemStatusFieldUpdateOperationsInput | $Enums.TransferItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StockTransferItemUncheckedUpdateManyWithoutVariantInput = {
    id?: StringFieldUpdateOperationsInput | string
    transferId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    requestedQty?: IntFieldUpdateOperationsInput | number
    shippedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTransferItemStatusFieldUpdateOperationsInput | $Enums.TransferItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryAuditItemUpdateWithoutVariantInput = {
    id?: StringFieldUpdateOperationsInput | string
    systemQty?: IntFieldUpdateOperationsInput | number
    countedQty?: NullableIntFieldUpdateOperationsInput | number | null
    adjustmentQty?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    countedBy?: NullableStringFieldUpdateOperationsInput | string | null
    countedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAuditItemStatusFieldUpdateOperationsInput | $Enums.AuditItemStatus
    discrepancyReason?: NullableStringFieldUpdateOperationsInput | string | null
    requiresInvestigation?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    audit?: InventoryAuditUpdateOneRequiredWithoutItemsNestedInput
    product?: ProductUpdateOneRequiredWithoutAuditItemsNestedInput
    warehouse?: WarehouseUpdateOneRequiredWithoutAuditItemsNestedInput
  }

  export type InventoryAuditItemUncheckedUpdateWithoutVariantInput = {
    id?: StringFieldUpdateOperationsInput | string
    auditId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    warehouseId?: StringFieldUpdateOperationsInput | string
    systemQty?: IntFieldUpdateOperationsInput | number
    countedQty?: NullableIntFieldUpdateOperationsInput | number | null
    adjustmentQty?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    countedBy?: NullableStringFieldUpdateOperationsInput | string | null
    countedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAuditItemStatusFieldUpdateOperationsInput | $Enums.AuditItemStatus
    discrepancyReason?: NullableStringFieldUpdateOperationsInput | string | null
    requiresInvestigation?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryAuditItemUncheckedUpdateManyWithoutVariantInput = {
    id?: StringFieldUpdateOperationsInput | string
    auditId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    warehouseId?: StringFieldUpdateOperationsInput | string
    systemQty?: IntFieldUpdateOperationsInput | number
    countedQty?: NullableIntFieldUpdateOperationsInput | number | null
    adjustmentQty?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    countedBy?: NullableStringFieldUpdateOperationsInput | string | null
    countedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAuditItemStatusFieldUpdateOperationsInput | $Enums.AuditItemStatus
    discrepancyReason?: NullableStringFieldUpdateOperationsInput | string | null
    requiresInvestigation?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryCreateManyParentInput = {
    id?: string
    name: string
    description?: string | null
    slug: string
    level?: number
    path?: string | null
    icon?: string | null
    color?: string | null
    image?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductCreateManyCategoryInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    brandId?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
  }

  export type CategoryUpdateWithoutParentInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    path?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    children?: CategoryUpdateManyWithoutParentNestedInput
    products?: ProductUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateWithoutParentInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    path?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    children?: CategoryUncheckedUpdateManyWithoutParentNestedInput
    products?: ProductUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateManyWithoutParentInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    path?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    brand?: BrandUpdateOneWithoutProductsNestedInput
    inventoryItems?: InventoryItemUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUpdateManyWithoutProductNestedInput
    suppliers?: ProductSupplierUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
    purchaseItems?: PurchaseOrderItemUpdateManyWithoutProductNestedInput
    movements?: InventoryMovementUpdateManyWithoutProductNestedInput
    audits?: InventoryAuditUpdateManyWithoutProductNestedInput
    reviews?: ProductReviewUpdateManyWithoutProductNestedInput
    bundles?: ProductBundleUpdateManyWithoutProductsNestedInput
    bundleItems?: ProductBundleUpdateManyWithoutBundleItemsNestedInput
    goodsReceiptItems?: GoodsReceiptItemUpdateManyWithoutProductNestedInput
    transferItems?: StockTransferItemUpdateManyWithoutProductNestedInput
    auditItems?: InventoryAuditItemUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    inventoryItems?: InventoryItemUncheckedUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUncheckedUpdateManyWithoutProductNestedInput
    suppliers?: ProductSupplierUncheckedUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    purchaseItems?: PurchaseOrderItemUncheckedUpdateManyWithoutProductNestedInput
    movements?: InventoryMovementUncheckedUpdateManyWithoutProductNestedInput
    audits?: InventoryAuditUncheckedUpdateManyWithoutProductNestedInput
    reviews?: ProductReviewUncheckedUpdateManyWithoutProductNestedInput
    bundles?: ProductBundleUncheckedUpdateManyWithoutProductsNestedInput
    bundleItems?: ProductBundleUncheckedUpdateManyWithoutBundleItemsNestedInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedUpdateManyWithoutProductNestedInput
    transferItems?: StockTransferItemUncheckedUpdateManyWithoutProductNestedInput
    auditItems?: InventoryAuditItemUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type ProductCreateManyBrandInput = {
    id?: string
    name: string
    description?: string | null
    sku: string
    barcode?: string | null
    slug?: string | null
    categoryId?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: string | null
    size?: string | null
    material?: string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    sellingPrice?: Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: Decimal | DecimalJsLike | number | string | null
    minStockLevel?: number
    maxStockLevel?: number | null
    reorderPoint?: number | null
    reorderQuantity?: number | null
    status?: $Enums.ProductStatus
    isTrackable?: boolean
    isSerialized?: boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: number | null
    shelfLife?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
  }

  export type ProductUpdateWithoutBrandInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    category?: CategoryUpdateOneWithoutProductsNestedInput
    inventoryItems?: InventoryItemUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUpdateManyWithoutProductNestedInput
    suppliers?: ProductSupplierUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
    purchaseItems?: PurchaseOrderItemUpdateManyWithoutProductNestedInput
    movements?: InventoryMovementUpdateManyWithoutProductNestedInput
    audits?: InventoryAuditUpdateManyWithoutProductNestedInput
    reviews?: ProductReviewUpdateManyWithoutProductNestedInput
    bundles?: ProductBundleUpdateManyWithoutProductsNestedInput
    bundleItems?: ProductBundleUpdateManyWithoutBundleItemsNestedInput
    goodsReceiptItems?: GoodsReceiptItemUpdateManyWithoutProductNestedInput
    transferItems?: StockTransferItemUpdateManyWithoutProductNestedInput
    auditItems?: InventoryAuditItemUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutBrandInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    inventoryItems?: InventoryItemUncheckedUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUncheckedUpdateManyWithoutProductNestedInput
    suppliers?: ProductSupplierUncheckedUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    purchaseItems?: PurchaseOrderItemUncheckedUpdateManyWithoutProductNestedInput
    movements?: InventoryMovementUncheckedUpdateManyWithoutProductNestedInput
    audits?: InventoryAuditUncheckedUpdateManyWithoutProductNestedInput
    reviews?: ProductReviewUncheckedUpdateManyWithoutProductNestedInput
    bundles?: ProductBundleUncheckedUpdateManyWithoutProductsNestedInput
    bundleItems?: ProductBundleUncheckedUpdateManyWithoutBundleItemsNestedInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedUpdateManyWithoutProductNestedInput
    transferItems?: StockTransferItemUncheckedUpdateManyWithoutProductNestedInput
    auditItems?: InventoryAuditItemUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutBrandInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type ProductUpdateWithoutBundlesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    category?: CategoryUpdateOneWithoutProductsNestedInput
    brand?: BrandUpdateOneWithoutProductsNestedInput
    inventoryItems?: InventoryItemUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUpdateManyWithoutProductNestedInput
    suppliers?: ProductSupplierUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
    purchaseItems?: PurchaseOrderItemUpdateManyWithoutProductNestedInput
    movements?: InventoryMovementUpdateManyWithoutProductNestedInput
    audits?: InventoryAuditUpdateManyWithoutProductNestedInput
    reviews?: ProductReviewUpdateManyWithoutProductNestedInput
    bundleItems?: ProductBundleUpdateManyWithoutBundleItemsNestedInput
    goodsReceiptItems?: GoodsReceiptItemUpdateManyWithoutProductNestedInput
    transferItems?: StockTransferItemUpdateManyWithoutProductNestedInput
    auditItems?: InventoryAuditItemUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutBundlesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    inventoryItems?: InventoryItemUncheckedUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUncheckedUpdateManyWithoutProductNestedInput
    suppliers?: ProductSupplierUncheckedUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    purchaseItems?: PurchaseOrderItemUncheckedUpdateManyWithoutProductNestedInput
    movements?: InventoryMovementUncheckedUpdateManyWithoutProductNestedInput
    audits?: InventoryAuditUncheckedUpdateManyWithoutProductNestedInput
    reviews?: ProductReviewUncheckedUpdateManyWithoutProductNestedInput
    bundleItems?: ProductBundleUncheckedUpdateManyWithoutBundleItemsNestedInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedUpdateManyWithoutProductNestedInput
    transferItems?: StockTransferItemUncheckedUpdateManyWithoutProductNestedInput
    auditItems?: InventoryAuditItemUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutBundlesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type ProductUpdateWithoutBundleItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    category?: CategoryUpdateOneWithoutProductsNestedInput
    brand?: BrandUpdateOneWithoutProductsNestedInput
    inventoryItems?: InventoryItemUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUpdateManyWithoutProductNestedInput
    suppliers?: ProductSupplierUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
    purchaseItems?: PurchaseOrderItemUpdateManyWithoutProductNestedInput
    movements?: InventoryMovementUpdateManyWithoutProductNestedInput
    audits?: InventoryAuditUpdateManyWithoutProductNestedInput
    reviews?: ProductReviewUpdateManyWithoutProductNestedInput
    bundles?: ProductBundleUpdateManyWithoutProductsNestedInput
    goodsReceiptItems?: GoodsReceiptItemUpdateManyWithoutProductNestedInput
    transferItems?: StockTransferItemUpdateManyWithoutProductNestedInput
    auditItems?: InventoryAuditItemUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutBundleItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    inventoryItems?: InventoryItemUncheckedUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUncheckedUpdateManyWithoutProductNestedInput
    suppliers?: ProductSupplierUncheckedUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    purchaseItems?: PurchaseOrderItemUncheckedUpdateManyWithoutProductNestedInput
    movements?: InventoryMovementUncheckedUpdateManyWithoutProductNestedInput
    audits?: InventoryAuditUncheckedUpdateManyWithoutProductNestedInput
    reviews?: ProductReviewUncheckedUpdateManyWithoutProductNestedInput
    bundles?: ProductBundleUncheckedUpdateManyWithoutProductsNestedInput
    goodsReceiptItems?: GoodsReceiptItemUncheckedUpdateManyWithoutProductNestedInput
    transferItems?: StockTransferItemUncheckedUpdateManyWithoutProductNestedInput
    auditItems?: InventoryAuditItemUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutBundleItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    color?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    material?: NullableStringFieldUpdateOperationsInput | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sellingPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    wholesalePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minStockLevel?: IntFieldUpdateOperationsInput | number
    maxStockLevel?: NullableIntFieldUpdateOperationsInput | number | null
    reorderPoint?: NullableIntFieldUpdateOperationsInput | number | null
    reorderQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isTrackable?: BoolFieldUpdateOperationsInput | boolean
    isSerialized?: BoolFieldUpdateOperationsInput | boolean
    images?: NullableJsonNullValueInput | InputJsonValue
    primaryImage?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    leadTimeSupply?: NullableIntFieldUpdateOperationsInput | number | null
    shelfLife?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type InventoryItemCreateManyWarehouseInput = {
    id?: string
    productId: string
    variantId?: string | null
    zone?: string | null
    aisle?: string | null
    shelf?: string | null
    bin?: string | null
    locationCode?: string | null
    quantity?: number
    reservedQuantity?: number
    availableQuantity?: number
    averageCost?: Decimal | DecimalJsLike | number | string | null
    lastCost?: Decimal | DecimalJsLike | number | string | null
    lotNumber?: string | null
    batchNumber?: string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    expiryDate?: Date | string | null
    status?: $Enums.InventoryStatus
    qcStatus?: $Enums.QualityStatus
    quarantineReason?: string | null
    lastMovement?: Date | string | null
    lastCount?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InventoryMovementCreateManyWarehouseInput = {
    id?: string
    type: $Enums.MovementType
    subtype?: string | null
    productId: string
    variantId?: string | null
    inventoryItemId?: string | null
    quantity: number
    quantityBefore: number
    quantityAfter: number
    unitCost?: Decimal | DecimalJsLike | number | string | null
    totalCost?: Decimal | DecimalJsLike | number | string | null
    referenceType?: string | null
    referenceId?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    expiryDate?: Date | string | null
    reason?: string | null
    notes?: string | null
    userId: string
    approvedBy?: string | null
    approvedAt?: Date | string | null
    occurredAt?: Date | string
    createdAt?: Date | string
  }

  export type StockTransferCreateManyFromWarehouseInput = {
    id?: string
    transferNumber: string
    toWarehouseId: string
    status?: $Enums.TransferStatus
    requestedDate?: Date | string
    shippedDate?: Date | string | null
    receivedDate?: Date | string | null
    approvedBy?: string | null
    approvedAt?: Date | string | null
    reason?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
  }

  export type StockTransferCreateManyToWarehouseInput = {
    id?: string
    transferNumber: string
    fromWarehouseId: string
    status?: $Enums.TransferStatus
    requestedDate?: Date | string
    shippedDate?: Date | string | null
    receivedDate?: Date | string | null
    approvedBy?: string | null
    approvedAt?: Date | string | null
    reason?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
  }

  export type OrderCreateManyWarehouseInput = {
    id?: string
    orderNumber: string
    customerId: string
    type?: $Enums.OrderType
    channel?: $Enums.OrderChannel
    subtotal?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingCost?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount?: Decimal | DecimalJsLike | number | string
    currency?: string
    status?: $Enums.OrderStatus
    fulfillmentStatus?: $Enums.FulfillmentStatus
    paymentStatus?: $Enums.PaymentStatus
    orderDate?: Date | string
    requiredDate?: Date | string | null
    promisedDate?: Date | string | null
    shippedDate?: Date | string | null
    deliveredDate?: Date | string | null
    shippingMethod?: string | null
    trackingNumber?: string | null
    carrier?: string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    priority?: $Enums.OrderPriority
    rushOrder?: boolean
    notes?: string | null
    internalNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
  }

  export type PurchaseOrderCreateManyWarehouseInput = {
    id?: string
    orderNumber: string
    supplierId: string
    subtotal?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingCost?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount?: Decimal | DecimalJsLike | number | string
    currency?: string
    status?: $Enums.PurchaseOrderStatus
    orderDate?: Date | string
    expectedDate?: Date | string | null
    deliveryDate?: Date | string | null
    paymentTerms?: string | null
    shippingTerms?: string | null
    trackingNumber?: string | null
    carrier?: string | null
    approvedBy?: string | null
    approvedAt?: Date | string | null
    notes?: string | null
    internalNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
  }

  export type InventoryAuditCreateManyWarehouseInput = {
    id?: string
    auditNumber: string
    productId?: string | null
    type: $Enums.AuditType
    method?: $Enums.AuditMethod
    status?: $Enums.AuditStatus
    plannedDate: Date | string
    startedDate?: Date | string | null
    completedDate?: Date | string | null
    auditedBy: string
    supervisedBy?: string | null
    totalItems?: number | null
    itemsCounted?: number | null
    discrepancies?: number | null
    adjustmentValue?: Decimal | DecimalJsLike | number | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type GoodsReceiptCreateManyWarehouseInput = {
    id?: string
    purchaseOrderId: string
    receiptNumber: string
    receivedDate?: Date | string
    qcStatus?: $Enums.QualityStatus
    qcNotes?: string | null
    qcBy?: string | null
    qcDate?: Date | string | null
    status?: $Enums.ReceiptStatus
    notes?: string | null
    receivedBy: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ShipmentCreateManyWarehouseInput = {
    id?: string
    shipmentNumber: string
    orderId?: string | null
    carrier: string
    service?: string | null
    trackingNumber?: string | null
    fromAddress: JsonNullValueInput | InputJsonValue
    toAddress: JsonNullValueInput | InputJsonValue
    packageCount?: number
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    shippingCost?: Decimal | DecimalJsLike | number | string | null
    insuranceValue?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.ShipmentStatus
    shipDate?: Date | string | null
    estimatedDelivery?: Date | string | null
    actualDelivery?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
  }

  export type InventoryAuditItemCreateManyWarehouseInput = {
    id?: string
    auditId: string
    productId: string
    variantId?: string | null
    systemQty: number
    countedQty?: number | null
    adjustmentQty?: number | null
    location?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    countedBy?: string | null
    countedAt?: Date | string | null
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    status?: $Enums.AuditItemStatus
    discrepancyReason?: string | null
    requiresInvestigation?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InventoryItemUpdateWithoutWarehouseInput = {
    id?: StringFieldUpdateOperationsInput | string
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    aisle?: NullableStringFieldUpdateOperationsInput | string | null
    shelf?: NullableStringFieldUpdateOperationsInput | string | null
    bin?: NullableStringFieldUpdateOperationsInput | string | null
    locationCode?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    reservedQuantity?: IntFieldUpdateOperationsInput | number
    availableQuantity?: IntFieldUpdateOperationsInput | number
    averageCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lastCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInventoryStatusFieldUpdateOperationsInput | $Enums.InventoryStatus
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    quarantineReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastMovement?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastCount?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutInventoryItemsNestedInput
    variant?: ProductVariantUpdateOneWithoutInventoryItemsNestedInput
    movements?: InventoryMovementUpdateManyWithoutInventoryItemNestedInput
    reservations?: StockReservationUpdateManyWithoutInventoryItemNestedInput
  }

  export type InventoryItemUncheckedUpdateWithoutWarehouseInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    aisle?: NullableStringFieldUpdateOperationsInput | string | null
    shelf?: NullableStringFieldUpdateOperationsInput | string | null
    bin?: NullableStringFieldUpdateOperationsInput | string | null
    locationCode?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    reservedQuantity?: IntFieldUpdateOperationsInput | number
    availableQuantity?: IntFieldUpdateOperationsInput | number
    averageCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lastCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInventoryStatusFieldUpdateOperationsInput | $Enums.InventoryStatus
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    quarantineReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastMovement?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastCount?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    movements?: InventoryMovementUncheckedUpdateManyWithoutInventoryItemNestedInput
    reservations?: StockReservationUncheckedUpdateManyWithoutInventoryItemNestedInput
  }

  export type InventoryItemUncheckedUpdateManyWithoutWarehouseInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    aisle?: NullableStringFieldUpdateOperationsInput | string | null
    shelf?: NullableStringFieldUpdateOperationsInput | string | null
    bin?: NullableStringFieldUpdateOperationsInput | string | null
    locationCode?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    reservedQuantity?: IntFieldUpdateOperationsInput | number
    availableQuantity?: IntFieldUpdateOperationsInput | number
    averageCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lastCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInventoryStatusFieldUpdateOperationsInput | $Enums.InventoryStatus
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    quarantineReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastMovement?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastCount?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryMovementUpdateWithoutWarehouseInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    subtype?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    quantityBefore?: IntFieldUpdateOperationsInput | number
    quantityAfter?: IntFieldUpdateOperationsInput | number
    unitCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    referenceType?: NullableStringFieldUpdateOperationsInput | string | null
    referenceId?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutMovementsNestedInput
    variant?: ProductVariantUpdateOneWithoutMovementsNestedInput
    inventoryItem?: InventoryItemUpdateOneWithoutMovementsNestedInput
  }

  export type InventoryMovementUncheckedUpdateWithoutWarehouseInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    subtype?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    inventoryItemId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    quantityBefore?: IntFieldUpdateOperationsInput | number
    quantityAfter?: IntFieldUpdateOperationsInput | number
    unitCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    referenceType?: NullableStringFieldUpdateOperationsInput | string | null
    referenceId?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryMovementUncheckedUpdateManyWithoutWarehouseInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    subtype?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    inventoryItemId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    quantityBefore?: IntFieldUpdateOperationsInput | number
    quantityAfter?: IntFieldUpdateOperationsInput | number
    unitCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    referenceType?: NullableStringFieldUpdateOperationsInput | string | null
    referenceId?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StockTransferUpdateWithoutFromWarehouseInput = {
    id?: StringFieldUpdateOperationsInput | string
    transferNumber?: StringFieldUpdateOperationsInput | string
    status?: EnumTransferStatusFieldUpdateOperationsInput | $Enums.TransferStatus
    requestedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    shippedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    receivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    toWarehouse?: WarehouseUpdateOneRequiredWithoutReceivedTransfersNestedInput
    items?: StockTransferItemUpdateManyWithoutTransferNestedInput
  }

  export type StockTransferUncheckedUpdateWithoutFromWarehouseInput = {
    id?: StringFieldUpdateOperationsInput | string
    transferNumber?: StringFieldUpdateOperationsInput | string
    toWarehouseId?: StringFieldUpdateOperationsInput | string
    status?: EnumTransferStatusFieldUpdateOperationsInput | $Enums.TransferStatus
    requestedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    shippedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    receivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    items?: StockTransferItemUncheckedUpdateManyWithoutTransferNestedInput
  }

  export type StockTransferUncheckedUpdateManyWithoutFromWarehouseInput = {
    id?: StringFieldUpdateOperationsInput | string
    transferNumber?: StringFieldUpdateOperationsInput | string
    toWarehouseId?: StringFieldUpdateOperationsInput | string
    status?: EnumTransferStatusFieldUpdateOperationsInput | $Enums.TransferStatus
    requestedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    shippedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    receivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type StockTransferUpdateWithoutToWarehouseInput = {
    id?: StringFieldUpdateOperationsInput | string
    transferNumber?: StringFieldUpdateOperationsInput | string
    status?: EnumTransferStatusFieldUpdateOperationsInput | $Enums.TransferStatus
    requestedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    shippedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    receivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    fromWarehouse?: WarehouseUpdateOneRequiredWithoutTransfersNestedInput
    items?: StockTransferItemUpdateManyWithoutTransferNestedInput
  }

  export type StockTransferUncheckedUpdateWithoutToWarehouseInput = {
    id?: StringFieldUpdateOperationsInput | string
    transferNumber?: StringFieldUpdateOperationsInput | string
    fromWarehouseId?: StringFieldUpdateOperationsInput | string
    status?: EnumTransferStatusFieldUpdateOperationsInput | $Enums.TransferStatus
    requestedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    shippedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    receivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    items?: StockTransferItemUncheckedUpdateManyWithoutTransferNestedInput
  }

  export type StockTransferUncheckedUpdateManyWithoutToWarehouseInput = {
    id?: StringFieldUpdateOperationsInput | string
    transferNumber?: StringFieldUpdateOperationsInput | string
    fromWarehouseId?: StringFieldUpdateOperationsInput | string
    status?: EnumTransferStatusFieldUpdateOperationsInput | $Enums.TransferStatus
    requestedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    shippedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    receivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type OrderUpdateWithoutWarehouseInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    type?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    channel?: EnumOrderChannelFieldUpdateOperationsInput | $Enums.OrderChannel
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    fulfillmentStatus?: EnumFulfillmentStatusFieldUpdateOperationsInput | $Enums.FulfillmentStatus
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    requiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    promisedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingMethod?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    carrier?: NullableStringFieldUpdateOperationsInput | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    priority?: EnumOrderPriorityFieldUpdateOperationsInput | $Enums.OrderPriority
    rushOrder?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    customer?: CustomerUpdateOneRequiredWithoutOrdersNestedInput
    items?: OrderItemUpdateManyWithoutOrderNestedInput
    shipments?: ShipmentUpdateManyWithoutOrderNestedInput
    invoices?: CustomerInvoiceUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutWarehouseInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    type?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    channel?: EnumOrderChannelFieldUpdateOperationsInput | $Enums.OrderChannel
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    fulfillmentStatus?: EnumFulfillmentStatusFieldUpdateOperationsInput | $Enums.FulfillmentStatus
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    requiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    promisedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingMethod?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    carrier?: NullableStringFieldUpdateOperationsInput | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    priority?: EnumOrderPriorityFieldUpdateOperationsInput | $Enums.OrderPriority
    rushOrder?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    items?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutOrderNestedInput
    invoices?: CustomerInvoiceUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutWarehouseInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    type?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    channel?: EnumOrderChannelFieldUpdateOperationsInput | $Enums.OrderChannel
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    fulfillmentStatus?: EnumFulfillmentStatusFieldUpdateOperationsInput | $Enums.FulfillmentStatus
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    requiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    promisedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingMethod?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    carrier?: NullableStringFieldUpdateOperationsInput | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    priority?: EnumOrderPriorityFieldUpdateOperationsInput | $Enums.OrderPriority
    rushOrder?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type PurchaseOrderUpdateWithoutWarehouseInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPurchaseOrderStatusFieldUpdateOperationsInput | $Enums.PurchaseOrderStatus
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expectedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    shippingTerms?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    carrier?: NullableStringFieldUpdateOperationsInput | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    supplier?: SupplierUpdateOneRequiredWithoutPurchaseOrdersNestedInput
    items?: PurchaseOrderItemUpdateManyWithoutPurchaseOrderNestedInput
    receipts?: GoodsReceiptUpdateManyWithoutPurchaseOrderNestedInput
    invoices?: SupplierInvoiceUpdateManyWithoutPurchaseOrderNestedInput
  }

  export type PurchaseOrderUncheckedUpdateWithoutWarehouseInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    supplierId?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPurchaseOrderStatusFieldUpdateOperationsInput | $Enums.PurchaseOrderStatus
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expectedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    shippingTerms?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    carrier?: NullableStringFieldUpdateOperationsInput | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    items?: PurchaseOrderItemUncheckedUpdateManyWithoutPurchaseOrderNestedInput
    receipts?: GoodsReceiptUncheckedUpdateManyWithoutPurchaseOrderNestedInput
    invoices?: SupplierInvoiceUncheckedUpdateManyWithoutPurchaseOrderNestedInput
  }

  export type PurchaseOrderUncheckedUpdateManyWithoutWarehouseInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    supplierId?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPurchaseOrderStatusFieldUpdateOperationsInput | $Enums.PurchaseOrderStatus
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expectedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    shippingTerms?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    carrier?: NullableStringFieldUpdateOperationsInput | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type InventoryAuditUpdateWithoutWarehouseInput = {
    id?: StringFieldUpdateOperationsInput | string
    auditNumber?: StringFieldUpdateOperationsInput | string
    type?: EnumAuditTypeFieldUpdateOperationsInput | $Enums.AuditType
    method?: EnumAuditMethodFieldUpdateOperationsInput | $Enums.AuditMethod
    status?: EnumAuditStatusFieldUpdateOperationsInput | $Enums.AuditStatus
    plannedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    startedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auditedBy?: StringFieldUpdateOperationsInput | string
    supervisedBy?: NullableStringFieldUpdateOperationsInput | string | null
    totalItems?: NullableIntFieldUpdateOperationsInput | number | null
    itemsCounted?: NullableIntFieldUpdateOperationsInput | number | null
    discrepancies?: NullableIntFieldUpdateOperationsInput | number | null
    adjustmentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneWithoutAuditsNestedInput
    items?: InventoryAuditItemUpdateManyWithoutAuditNestedInput
  }

  export type InventoryAuditUncheckedUpdateWithoutWarehouseInput = {
    id?: StringFieldUpdateOperationsInput | string
    auditNumber?: StringFieldUpdateOperationsInput | string
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumAuditTypeFieldUpdateOperationsInput | $Enums.AuditType
    method?: EnumAuditMethodFieldUpdateOperationsInput | $Enums.AuditMethod
    status?: EnumAuditStatusFieldUpdateOperationsInput | $Enums.AuditStatus
    plannedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    startedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auditedBy?: StringFieldUpdateOperationsInput | string
    supervisedBy?: NullableStringFieldUpdateOperationsInput | string | null
    totalItems?: NullableIntFieldUpdateOperationsInput | number | null
    itemsCounted?: NullableIntFieldUpdateOperationsInput | number | null
    discrepancies?: NullableIntFieldUpdateOperationsInput | number | null
    adjustmentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: InventoryAuditItemUncheckedUpdateManyWithoutAuditNestedInput
  }

  export type InventoryAuditUncheckedUpdateManyWithoutWarehouseInput = {
    id?: StringFieldUpdateOperationsInput | string
    auditNumber?: StringFieldUpdateOperationsInput | string
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumAuditTypeFieldUpdateOperationsInput | $Enums.AuditType
    method?: EnumAuditMethodFieldUpdateOperationsInput | $Enums.AuditMethod
    status?: EnumAuditStatusFieldUpdateOperationsInput | $Enums.AuditStatus
    plannedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    startedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auditedBy?: StringFieldUpdateOperationsInput | string
    supervisedBy?: NullableStringFieldUpdateOperationsInput | string | null
    totalItems?: NullableIntFieldUpdateOperationsInput | number | null
    itemsCounted?: NullableIntFieldUpdateOperationsInput | number | null
    discrepancies?: NullableIntFieldUpdateOperationsInput | number | null
    adjustmentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GoodsReceiptUpdateWithoutWarehouseInput = {
    id?: StringFieldUpdateOperationsInput | string
    receiptNumber?: StringFieldUpdateOperationsInput | string
    receivedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    qcNotes?: NullableStringFieldUpdateOperationsInput | string | null
    qcBy?: NullableStringFieldUpdateOperationsInput | string | null
    qcDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumReceiptStatusFieldUpdateOperationsInput | $Enums.ReceiptStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    receivedBy?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    purchaseOrder?: PurchaseOrderUpdateOneRequiredWithoutReceiptsNestedInput
    items?: GoodsReceiptItemUpdateManyWithoutGoodsReceiptNestedInput
  }

  export type GoodsReceiptUncheckedUpdateWithoutWarehouseInput = {
    id?: StringFieldUpdateOperationsInput | string
    purchaseOrderId?: StringFieldUpdateOperationsInput | string
    receiptNumber?: StringFieldUpdateOperationsInput | string
    receivedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    qcNotes?: NullableStringFieldUpdateOperationsInput | string | null
    qcBy?: NullableStringFieldUpdateOperationsInput | string | null
    qcDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumReceiptStatusFieldUpdateOperationsInput | $Enums.ReceiptStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    receivedBy?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: GoodsReceiptItemUncheckedUpdateManyWithoutGoodsReceiptNestedInput
  }

  export type GoodsReceiptUncheckedUpdateManyWithoutWarehouseInput = {
    id?: StringFieldUpdateOperationsInput | string
    purchaseOrderId?: StringFieldUpdateOperationsInput | string
    receiptNumber?: StringFieldUpdateOperationsInput | string
    receivedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    qcNotes?: NullableStringFieldUpdateOperationsInput | string | null
    qcBy?: NullableStringFieldUpdateOperationsInput | string | null
    qcDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumReceiptStatusFieldUpdateOperationsInput | $Enums.ReceiptStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    receivedBy?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShipmentUpdateWithoutWarehouseInput = {
    id?: StringFieldUpdateOperationsInput | string
    shipmentNumber?: StringFieldUpdateOperationsInput | string
    carrier?: StringFieldUpdateOperationsInput | string
    service?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    fromAddress?: JsonNullValueInput | InputJsonValue
    toAddress?: JsonNullValueInput | InputJsonValue
    packageCount?: IntFieldUpdateOperationsInput | number
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    shippingCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insuranceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumShipmentStatusFieldUpdateOperationsInput | $Enums.ShipmentStatus
    shipDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    order?: OrderUpdateOneWithoutShipmentsNestedInput
    packages?: ShipmentPackageUpdateManyWithoutShipmentNestedInput
    tracking?: ShipmentTrackingUpdateManyWithoutShipmentNestedInput
  }

  export type ShipmentUncheckedUpdateWithoutWarehouseInput = {
    id?: StringFieldUpdateOperationsInput | string
    shipmentNumber?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    carrier?: StringFieldUpdateOperationsInput | string
    service?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    fromAddress?: JsonNullValueInput | InputJsonValue
    toAddress?: JsonNullValueInput | InputJsonValue
    packageCount?: IntFieldUpdateOperationsInput | number
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    shippingCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insuranceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumShipmentStatusFieldUpdateOperationsInput | $Enums.ShipmentStatus
    shipDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    packages?: ShipmentPackageUncheckedUpdateManyWithoutShipmentNestedInput
    tracking?: ShipmentTrackingUncheckedUpdateManyWithoutShipmentNestedInput
  }

  export type ShipmentUncheckedUpdateManyWithoutWarehouseInput = {
    id?: StringFieldUpdateOperationsInput | string
    shipmentNumber?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    carrier?: StringFieldUpdateOperationsInput | string
    service?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    fromAddress?: JsonNullValueInput | InputJsonValue
    toAddress?: JsonNullValueInput | InputJsonValue
    packageCount?: IntFieldUpdateOperationsInput | number
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    shippingCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insuranceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumShipmentStatusFieldUpdateOperationsInput | $Enums.ShipmentStatus
    shipDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type InventoryAuditItemUpdateWithoutWarehouseInput = {
    id?: StringFieldUpdateOperationsInput | string
    systemQty?: IntFieldUpdateOperationsInput | number
    countedQty?: NullableIntFieldUpdateOperationsInput | number | null
    adjustmentQty?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    countedBy?: NullableStringFieldUpdateOperationsInput | string | null
    countedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAuditItemStatusFieldUpdateOperationsInput | $Enums.AuditItemStatus
    discrepancyReason?: NullableStringFieldUpdateOperationsInput | string | null
    requiresInvestigation?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    audit?: InventoryAuditUpdateOneRequiredWithoutItemsNestedInput
    product?: ProductUpdateOneRequiredWithoutAuditItemsNestedInput
    variant?: ProductVariantUpdateOneWithoutAuditItemsNestedInput
  }

  export type InventoryAuditItemUncheckedUpdateWithoutWarehouseInput = {
    id?: StringFieldUpdateOperationsInput | string
    auditId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    systemQty?: IntFieldUpdateOperationsInput | number
    countedQty?: NullableIntFieldUpdateOperationsInput | number | null
    adjustmentQty?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    countedBy?: NullableStringFieldUpdateOperationsInput | string | null
    countedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAuditItemStatusFieldUpdateOperationsInput | $Enums.AuditItemStatus
    discrepancyReason?: NullableStringFieldUpdateOperationsInput | string | null
    requiresInvestigation?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryAuditItemUncheckedUpdateManyWithoutWarehouseInput = {
    id?: StringFieldUpdateOperationsInput | string
    auditId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    systemQty?: IntFieldUpdateOperationsInput | number
    countedQty?: NullableIntFieldUpdateOperationsInput | number | null
    adjustmentQty?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    countedBy?: NullableStringFieldUpdateOperationsInput | string | null
    countedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAuditItemStatusFieldUpdateOperationsInput | $Enums.AuditItemStatus
    discrepancyReason?: NullableStringFieldUpdateOperationsInput | string | null
    requiresInvestigation?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryMovementCreateManyInventoryItemInput = {
    id?: string
    type: $Enums.MovementType
    subtype?: string | null
    productId: string
    variantId?: string | null
    warehouseId: string
    quantity: number
    quantityBefore: number
    quantityAfter: number
    unitCost?: Decimal | DecimalJsLike | number | string | null
    totalCost?: Decimal | DecimalJsLike | number | string | null
    referenceType?: string | null
    referenceId?: string | null
    fromLocation?: string | null
    toLocation?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    expiryDate?: Date | string | null
    reason?: string | null
    notes?: string | null
    userId: string
    approvedBy?: string | null
    approvedAt?: Date | string | null
    occurredAt?: Date | string
    createdAt?: Date | string
  }

  export type StockReservationCreateManyInventoryItemInput = {
    id?: string
    reservationType: $Enums.ReservationType
    referenceType: string
    referenceId: string
    quantity: number
    status?: $Enums.ReservationStatus
    reservedAt?: Date | string
    expiresAt?: Date | string | null
    releasedAt?: Date | string | null
    reservedBy: string
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InventoryMovementUpdateWithoutInventoryItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    subtype?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    quantityBefore?: IntFieldUpdateOperationsInput | number
    quantityAfter?: IntFieldUpdateOperationsInput | number
    unitCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    referenceType?: NullableStringFieldUpdateOperationsInput | string | null
    referenceId?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutMovementsNestedInput
    variant?: ProductVariantUpdateOneWithoutMovementsNestedInput
    warehouse?: WarehouseUpdateOneRequiredWithoutMovementsNestedInput
  }

  export type InventoryMovementUncheckedUpdateWithoutInventoryItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    subtype?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    warehouseId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    quantityBefore?: IntFieldUpdateOperationsInput | number
    quantityAfter?: IntFieldUpdateOperationsInput | number
    unitCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    referenceType?: NullableStringFieldUpdateOperationsInput | string | null
    referenceId?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryMovementUncheckedUpdateManyWithoutInventoryItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    subtype?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    warehouseId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    quantityBefore?: IntFieldUpdateOperationsInput | number
    quantityAfter?: IntFieldUpdateOperationsInput | number
    unitCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    referenceType?: NullableStringFieldUpdateOperationsInput | string | null
    referenceId?: NullableStringFieldUpdateOperationsInput | string | null
    fromLocation?: NullableStringFieldUpdateOperationsInput | string | null
    toLocation?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StockReservationUpdateWithoutInventoryItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    reservationType?: EnumReservationTypeFieldUpdateOperationsInput | $Enums.ReservationType
    referenceType?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumReservationStatusFieldUpdateOperationsInput | $Enums.ReservationStatus
    reservedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reservedBy?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StockReservationUncheckedUpdateWithoutInventoryItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    reservationType?: EnumReservationTypeFieldUpdateOperationsInput | $Enums.ReservationType
    referenceType?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumReservationStatusFieldUpdateOperationsInput | $Enums.ReservationStatus
    reservedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reservedBy?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StockReservationUncheckedUpdateManyWithoutInventoryItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    reservationType?: EnumReservationTypeFieldUpdateOperationsInput | $Enums.ReservationType
    referenceType?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumReservationStatusFieldUpdateOperationsInput | $Enums.ReservationStatus
    reservedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reservedBy?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductSupplierCreateManySupplierInput = {
    id?: string
    productId: string
    supplierSku?: string | null
    supplierName?: string | null
    unitCost: Decimal | DecimalJsLike | number | string
    currency?: string
    minOrderQty?: number | null
    maxOrderQty?: number | null
    leadTimeDays?: number | null
    isPreferred?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PurchaseOrderCreateManySupplierInput = {
    id?: string
    orderNumber: string
    warehouseId?: string | null
    subtotal?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingCost?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount?: Decimal | DecimalJsLike | number | string
    currency?: string
    status?: $Enums.PurchaseOrderStatus
    orderDate?: Date | string
    expectedDate?: Date | string | null
    deliveryDate?: Date | string | null
    paymentTerms?: string | null
    shippingTerms?: string | null
    trackingNumber?: string | null
    carrier?: string | null
    approvedBy?: string | null
    approvedAt?: Date | string | null
    notes?: string | null
    internalNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
  }

  export type SupplierInvoiceCreateManySupplierInput = {
    id?: string
    invoiceNumber: string
    purchaseOrderId?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    invoiceDate: Date | string
    dueDate: Date | string
    paidDate?: Date | string | null
    status?: $Enums.InvoiceStatus
    paymentMethod?: string | null
    paymentReference?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SupplierContactCreateManySupplierInput = {
    id?: string
    name: string
    title?: string | null
    email?: string | null
    phone?: string | null
    mobile?: string | null
    isPrimary?: boolean
    department?: string | null
    isActive?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SupplierDocumentCreateManySupplierInput = {
    id?: string
    name: string
    type: $Enums.DocumentType
    category?: string | null
    fileName: string
    fileSize?: number | null
    fileType?: string | null
    filePath: string
    uploadedBy: string
    uploadedAt?: Date | string
    expiresAt?: Date | string | null
    isActive?: boolean
  }

  export type ProductSupplierUpdateWithoutSupplierInput = {
    id?: StringFieldUpdateOperationsInput | string
    supplierSku?: NullableStringFieldUpdateOperationsInput | string | null
    supplierName?: NullableStringFieldUpdateOperationsInput | string | null
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    minOrderQty?: NullableIntFieldUpdateOperationsInput | number | null
    maxOrderQty?: NullableIntFieldUpdateOperationsInput | number | null
    leadTimeDays?: NullableIntFieldUpdateOperationsInput | number | null
    isPreferred?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutSuppliersNestedInput
  }

  export type ProductSupplierUncheckedUpdateWithoutSupplierInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    supplierSku?: NullableStringFieldUpdateOperationsInput | string | null
    supplierName?: NullableStringFieldUpdateOperationsInput | string | null
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    minOrderQty?: NullableIntFieldUpdateOperationsInput | number | null
    maxOrderQty?: NullableIntFieldUpdateOperationsInput | number | null
    leadTimeDays?: NullableIntFieldUpdateOperationsInput | number | null
    isPreferred?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductSupplierUncheckedUpdateManyWithoutSupplierInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    supplierSku?: NullableStringFieldUpdateOperationsInput | string | null
    supplierName?: NullableStringFieldUpdateOperationsInput | string | null
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    minOrderQty?: NullableIntFieldUpdateOperationsInput | number | null
    maxOrderQty?: NullableIntFieldUpdateOperationsInput | number | null
    leadTimeDays?: NullableIntFieldUpdateOperationsInput | number | null
    isPreferred?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PurchaseOrderUpdateWithoutSupplierInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPurchaseOrderStatusFieldUpdateOperationsInput | $Enums.PurchaseOrderStatus
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expectedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    shippingTerms?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    carrier?: NullableStringFieldUpdateOperationsInput | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    warehouse?: WarehouseUpdateOneWithoutPurchaseOrdersNestedInput
    items?: PurchaseOrderItemUpdateManyWithoutPurchaseOrderNestedInput
    receipts?: GoodsReceiptUpdateManyWithoutPurchaseOrderNestedInput
    invoices?: SupplierInvoiceUpdateManyWithoutPurchaseOrderNestedInput
  }

  export type PurchaseOrderUncheckedUpdateWithoutSupplierInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    warehouseId?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPurchaseOrderStatusFieldUpdateOperationsInput | $Enums.PurchaseOrderStatus
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expectedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    shippingTerms?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    carrier?: NullableStringFieldUpdateOperationsInput | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    items?: PurchaseOrderItemUncheckedUpdateManyWithoutPurchaseOrderNestedInput
    receipts?: GoodsReceiptUncheckedUpdateManyWithoutPurchaseOrderNestedInput
    invoices?: SupplierInvoiceUncheckedUpdateManyWithoutPurchaseOrderNestedInput
  }

  export type PurchaseOrderUncheckedUpdateManyWithoutSupplierInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    warehouseId?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPurchaseOrderStatusFieldUpdateOperationsInput | $Enums.PurchaseOrderStatus
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expectedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    shippingTerms?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    carrier?: NullableStringFieldUpdateOperationsInput | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type SupplierInvoiceUpdateWithoutSupplierInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    invoiceDate?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    paidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    purchaseOrder?: PurchaseOrderUpdateOneWithoutInvoicesNestedInput
  }

  export type SupplierInvoiceUncheckedUpdateWithoutSupplierInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    purchaseOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    invoiceDate?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    paidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplierInvoiceUncheckedUpdateManyWithoutSupplierInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    purchaseOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    invoiceDate?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    paidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplierContactUpdateWithoutSupplierInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplierContactUncheckedUpdateWithoutSupplierInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplierContactUncheckedUpdateManyWithoutSupplierInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplierDocumentUpdateWithoutSupplierInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    category?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    fileType?: NullableStringFieldUpdateOperationsInput | string | null
    filePath?: StringFieldUpdateOperationsInput | string
    uploadedBy?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type SupplierDocumentUncheckedUpdateWithoutSupplierInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    category?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    fileType?: NullableStringFieldUpdateOperationsInput | string | null
    filePath?: StringFieldUpdateOperationsInput | string
    uploadedBy?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type SupplierDocumentUncheckedUpdateManyWithoutSupplierInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    category?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    fileType?: NullableStringFieldUpdateOperationsInput | string | null
    filePath?: StringFieldUpdateOperationsInput | string
    uploadedBy?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PurchaseOrderItemCreateManyPurchaseOrderInput = {
    id?: string
    productId: string
    variantId?: string | null
    orderedQty: number
    receivedQty?: number
    remainingQty: number
    unitCost: Decimal | DecimalJsLike | number | string
    totalCost: Decimal | DecimalJsLike | number | string
    productName: string
    productSku: string
    supplierSku?: string | null
    expectedDate?: Date | string | null
    status?: $Enums.PurchaseItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type GoodsReceiptCreateManyPurchaseOrderInput = {
    id?: string
    warehouseId: string
    receiptNumber: string
    receivedDate?: Date | string
    qcStatus?: $Enums.QualityStatus
    qcNotes?: string | null
    qcBy?: string | null
    qcDate?: Date | string | null
    status?: $Enums.ReceiptStatus
    notes?: string | null
    receivedBy: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SupplierInvoiceCreateManyPurchaseOrderInput = {
    id?: string
    invoiceNumber: string
    supplierId: string
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    invoiceDate: Date | string
    dueDate: Date | string
    paidDate?: Date | string | null
    status?: $Enums.InvoiceStatus
    paymentMethod?: string | null
    paymentReference?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PurchaseOrderItemUpdateWithoutPurchaseOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    remainingQty?: IntFieldUpdateOperationsInput | number
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    supplierSku?: NullableStringFieldUpdateOperationsInput | string | null
    expectedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPurchaseItemStatusFieldUpdateOperationsInput | $Enums.PurchaseItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutPurchaseItemsNestedInput
    variant?: ProductVariantUpdateOneWithoutPurchaseItemsNestedInput
  }

  export type PurchaseOrderItemUncheckedUpdateWithoutPurchaseOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    orderedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    remainingQty?: IntFieldUpdateOperationsInput | number
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    supplierSku?: NullableStringFieldUpdateOperationsInput | string | null
    expectedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPurchaseItemStatusFieldUpdateOperationsInput | $Enums.PurchaseItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PurchaseOrderItemUncheckedUpdateManyWithoutPurchaseOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    orderedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    remainingQty?: IntFieldUpdateOperationsInput | number
    unitCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    supplierSku?: NullableStringFieldUpdateOperationsInput | string | null
    expectedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPurchaseItemStatusFieldUpdateOperationsInput | $Enums.PurchaseItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GoodsReceiptUpdateWithoutPurchaseOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    receiptNumber?: StringFieldUpdateOperationsInput | string
    receivedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    qcNotes?: NullableStringFieldUpdateOperationsInput | string | null
    qcBy?: NullableStringFieldUpdateOperationsInput | string | null
    qcDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumReceiptStatusFieldUpdateOperationsInput | $Enums.ReceiptStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    receivedBy?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    warehouse?: WarehouseUpdateOneRequiredWithoutGoodsReceiptsNestedInput
    items?: GoodsReceiptItemUpdateManyWithoutGoodsReceiptNestedInput
  }

  export type GoodsReceiptUncheckedUpdateWithoutPurchaseOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    warehouseId?: StringFieldUpdateOperationsInput | string
    receiptNumber?: StringFieldUpdateOperationsInput | string
    receivedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    qcNotes?: NullableStringFieldUpdateOperationsInput | string | null
    qcBy?: NullableStringFieldUpdateOperationsInput | string | null
    qcDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumReceiptStatusFieldUpdateOperationsInput | $Enums.ReceiptStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    receivedBy?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: GoodsReceiptItemUncheckedUpdateManyWithoutGoodsReceiptNestedInput
  }

  export type GoodsReceiptUncheckedUpdateManyWithoutPurchaseOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    warehouseId?: StringFieldUpdateOperationsInput | string
    receiptNumber?: StringFieldUpdateOperationsInput | string
    receivedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    qcNotes?: NullableStringFieldUpdateOperationsInput | string | null
    qcBy?: NullableStringFieldUpdateOperationsInput | string | null
    qcDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumReceiptStatusFieldUpdateOperationsInput | $Enums.ReceiptStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    receivedBy?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplierInvoiceUpdateWithoutPurchaseOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    invoiceDate?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    paidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    supplier?: SupplierUpdateOneRequiredWithoutInvoicesNestedInput
  }

  export type SupplierInvoiceUncheckedUpdateWithoutPurchaseOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    supplierId?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    invoiceDate?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    paidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplierInvoiceUncheckedUpdateManyWithoutPurchaseOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    supplierId?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    invoiceDate?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    paidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GoodsReceiptItemCreateManyGoodsReceiptInput = {
    id?: string
    productId: string
    variantId?: string | null
    expectedQty: number
    receivedQty: number
    acceptedQty: number
    rejectedQty: number
    qcStatus?: $Enums.QualityStatus
    qcNotes?: string | null
    rejectionReason?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    expiryDate?: Date | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    receivedLocation?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type GoodsReceiptItemUpdateWithoutGoodsReceiptInput = {
    id?: StringFieldUpdateOperationsInput | string
    expectedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    acceptedQty?: IntFieldUpdateOperationsInput | number
    rejectedQty?: IntFieldUpdateOperationsInput | number
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    qcNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    receivedLocation?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutGoodsReceiptItemsNestedInput
    variant?: ProductVariantUpdateOneWithoutGoodsReceiptItemsNestedInput
  }

  export type GoodsReceiptItemUncheckedUpdateWithoutGoodsReceiptInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    expectedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    acceptedQty?: IntFieldUpdateOperationsInput | number
    rejectedQty?: IntFieldUpdateOperationsInput | number
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    qcNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    receivedLocation?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GoodsReceiptItemUncheckedUpdateManyWithoutGoodsReceiptInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    expectedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    acceptedQty?: IntFieldUpdateOperationsInput | number
    rejectedQty?: IntFieldUpdateOperationsInput | number
    qcStatus?: EnumQualityStatusFieldUpdateOperationsInput | $Enums.QualityStatus
    qcNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    serialNumbers?: NullableJsonNullValueInput | InputJsonValue
    receivedLocation?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderCreateManyCustomerInput = {
    id?: string
    orderNumber: string
    warehouseId: string
    type?: $Enums.OrderType
    channel?: $Enums.OrderChannel
    subtotal?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    shippingCost?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    totalAmount?: Decimal | DecimalJsLike | number | string
    currency?: string
    status?: $Enums.OrderStatus
    fulfillmentStatus?: $Enums.FulfillmentStatus
    paymentStatus?: $Enums.PaymentStatus
    orderDate?: Date | string
    requiredDate?: Date | string | null
    promisedDate?: Date | string | null
    shippedDate?: Date | string | null
    deliveredDate?: Date | string | null
    shippingMethod?: string | null
    trackingNumber?: string | null
    carrier?: string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    priority?: $Enums.OrderPriority
    rushOrder?: boolean
    notes?: string | null
    internalNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
  }

  export type CustomerInvoiceCreateManyCustomerInput = {
    id?: string
    invoiceNumber: string
    orderId?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paidAmount?: Decimal | DecimalJsLike | number | string
    balanceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    invoiceDate?: Date | string
    dueDate: Date | string
    paidDate?: Date | string | null
    status?: $Enums.InvoiceStatus
    paymentMethod?: string | null
    paymentReference?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CustomerContactCreateManyCustomerInput = {
    id?: string
    name: string
    title?: string | null
    email?: string | null
    phone?: string | null
    mobile?: string | null
    isPrimary?: boolean
    department?: string | null
    isActive?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    type?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    channel?: EnumOrderChannelFieldUpdateOperationsInput | $Enums.OrderChannel
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    fulfillmentStatus?: EnumFulfillmentStatusFieldUpdateOperationsInput | $Enums.FulfillmentStatus
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    requiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    promisedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingMethod?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    carrier?: NullableStringFieldUpdateOperationsInput | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    priority?: EnumOrderPriorityFieldUpdateOperationsInput | $Enums.OrderPriority
    rushOrder?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    warehouse?: WarehouseUpdateOneRequiredWithoutOrdersNestedInput
    items?: OrderItemUpdateManyWithoutOrderNestedInput
    shipments?: ShipmentUpdateManyWithoutOrderNestedInput
    invoices?: CustomerInvoiceUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    warehouseId?: StringFieldUpdateOperationsInput | string
    type?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    channel?: EnumOrderChannelFieldUpdateOperationsInput | $Enums.OrderChannel
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    fulfillmentStatus?: EnumFulfillmentStatusFieldUpdateOperationsInput | $Enums.FulfillmentStatus
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    requiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    promisedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingMethod?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    carrier?: NullableStringFieldUpdateOperationsInput | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    priority?: EnumOrderPriorityFieldUpdateOperationsInput | $Enums.OrderPriority
    rushOrder?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    items?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutOrderNestedInput
    invoices?: CustomerInvoiceUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    warehouseId?: StringFieldUpdateOperationsInput | string
    type?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    channel?: EnumOrderChannelFieldUpdateOperationsInput | $Enums.OrderChannel
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    fulfillmentStatus?: EnumFulfillmentStatusFieldUpdateOperationsInput | $Enums.FulfillmentStatus
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    orderDate?: DateTimeFieldUpdateOperationsInput | Date | string
    requiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    promisedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingMethod?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    carrier?: NullableStringFieldUpdateOperationsInput | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    priority?: EnumOrderPriorityFieldUpdateOperationsInput | $Enums.OrderPriority
    rushOrder?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type CustomerInvoiceUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    balanceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    invoiceDate?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    paidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneWithoutInvoicesNestedInput
  }

  export type CustomerInvoiceUncheckedUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    balanceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    invoiceDate?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    paidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomerInvoiceUncheckedUpdateManyWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    balanceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    invoiceDate?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    paidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomerContactUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomerContactUncheckedUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomerContactUncheckedUpdateManyWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderItemCreateManyOrderInput = {
    id?: string
    productId: string
    variantId?: string | null
    orderedQty: number
    shippedQty?: number
    remainingQty: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    productName: string
    productSku: string
    status?: $Enums.OrderItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ShipmentCreateManyOrderInput = {
    id?: string
    shipmentNumber: string
    warehouseId: string
    carrier: string
    service?: string | null
    trackingNumber?: string | null
    fromAddress: JsonNullValueInput | InputJsonValue
    toAddress: JsonNullValueInput | InputJsonValue
    packageCount?: number
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    shippingCost?: Decimal | DecimalJsLike | number | string | null
    insuranceValue?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.ShipmentStatus
    shipDate?: Date | string | null
    estimatedDelivery?: Date | string | null
    actualDelivery?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: string
  }

  export type CustomerInvoiceCreateManyOrderInput = {
    id?: string
    invoiceNumber: string
    customerId: string
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paidAmount?: Decimal | DecimalJsLike | number | string
    balanceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    invoiceDate?: Date | string
    dueDate: Date | string
    paidDate?: Date | string | null
    status?: $Enums.InvoiceStatus
    paymentMethod?: string | null
    paymentReference?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderItemUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderedQty?: IntFieldUpdateOperationsInput | number
    shippedQty?: IntFieldUpdateOperationsInput | number
    remainingQty?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderItemStatusFieldUpdateOperationsInput | $Enums.OrderItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutOrderItemsNestedInput
    variant?: ProductVariantUpdateOneWithoutOrderItemsNestedInput
  }

  export type OrderItemUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    orderedQty?: IntFieldUpdateOperationsInput | number
    shippedQty?: IntFieldUpdateOperationsInput | number
    remainingQty?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderItemStatusFieldUpdateOperationsInput | $Enums.OrderItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderItemUncheckedUpdateManyWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    orderedQty?: IntFieldUpdateOperationsInput | number
    shippedQty?: IntFieldUpdateOperationsInput | number
    remainingQty?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderItemStatusFieldUpdateOperationsInput | $Enums.OrderItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShipmentUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    shipmentNumber?: StringFieldUpdateOperationsInput | string
    carrier?: StringFieldUpdateOperationsInput | string
    service?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    fromAddress?: JsonNullValueInput | InputJsonValue
    toAddress?: JsonNullValueInput | InputJsonValue
    packageCount?: IntFieldUpdateOperationsInput | number
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    shippingCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insuranceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumShipmentStatusFieldUpdateOperationsInput | $Enums.ShipmentStatus
    shipDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    warehouse?: WarehouseUpdateOneRequiredWithoutShipmentsNestedInput
    packages?: ShipmentPackageUpdateManyWithoutShipmentNestedInput
    tracking?: ShipmentTrackingUpdateManyWithoutShipmentNestedInput
  }

  export type ShipmentUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    shipmentNumber?: StringFieldUpdateOperationsInput | string
    warehouseId?: StringFieldUpdateOperationsInput | string
    carrier?: StringFieldUpdateOperationsInput | string
    service?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    fromAddress?: JsonNullValueInput | InputJsonValue
    toAddress?: JsonNullValueInput | InputJsonValue
    packageCount?: IntFieldUpdateOperationsInput | number
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    shippingCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insuranceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumShipmentStatusFieldUpdateOperationsInput | $Enums.ShipmentStatus
    shipDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    packages?: ShipmentPackageUncheckedUpdateManyWithoutShipmentNestedInput
    tracking?: ShipmentTrackingUncheckedUpdateManyWithoutShipmentNestedInput
  }

  export type ShipmentUncheckedUpdateManyWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    shipmentNumber?: StringFieldUpdateOperationsInput | string
    warehouseId?: StringFieldUpdateOperationsInput | string
    carrier?: StringFieldUpdateOperationsInput | string
    service?: NullableStringFieldUpdateOperationsInput | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    fromAddress?: JsonNullValueInput | InputJsonValue
    toAddress?: JsonNullValueInput | InputJsonValue
    packageCount?: IntFieldUpdateOperationsInput | number
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    shippingCost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insuranceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumShipmentStatusFieldUpdateOperationsInput | $Enums.ShipmentStatus
    shipDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type CustomerInvoiceUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    balanceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    invoiceDate?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    paidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    customer?: CustomerUpdateOneRequiredWithoutInvoicesNestedInput
  }

  export type CustomerInvoiceUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    balanceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    invoiceDate?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    paidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomerInvoiceUncheckedUpdateManyWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    balanceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    invoiceDate?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    paidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentReference?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShipmentPackageCreateManyShipmentInput = {
    id?: string
    packageNumber: string
    trackingNumber?: string | null
    weight?: Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    contents?: NullableJsonNullValueInput | InputJsonValue
    status?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ShipmentTrackingCreateManyShipmentInput = {
    id?: string
    status: string
    description?: string | null
    location?: string | null
    eventDate: Date | string
    rawData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type ShipmentPackageUpdateWithoutShipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    packageNumber?: StringFieldUpdateOperationsInput | string
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    contents?: NullableJsonNullValueInput | InputJsonValue
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShipmentPackageUncheckedUpdateWithoutShipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    packageNumber?: StringFieldUpdateOperationsInput | string
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    contents?: NullableJsonNullValueInput | InputJsonValue
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShipmentPackageUncheckedUpdateManyWithoutShipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    packageNumber?: StringFieldUpdateOperationsInput | string
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dimensions?: NullableJsonNullValueInput | InputJsonValue
    contents?: NullableJsonNullValueInput | InputJsonValue
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShipmentTrackingUpdateWithoutShipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    eventDate?: DateTimeFieldUpdateOperationsInput | Date | string
    rawData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShipmentTrackingUncheckedUpdateWithoutShipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    eventDate?: DateTimeFieldUpdateOperationsInput | Date | string
    rawData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShipmentTrackingUncheckedUpdateManyWithoutShipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    eventDate?: DateTimeFieldUpdateOperationsInput | Date | string
    rawData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StockTransferItemCreateManyTransferInput = {
    id?: string
    productId: string
    variantId?: string | null
    requestedQty: number
    shippedQty?: number
    receivedQty?: number
    productName: string
    productSku: string
    lotNumber?: string | null
    batchNumber?: string | null
    status?: $Enums.TransferItemStatus
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type StockTransferItemUpdateWithoutTransferInput = {
    id?: StringFieldUpdateOperationsInput | string
    requestedQty?: IntFieldUpdateOperationsInput | number
    shippedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTransferItemStatusFieldUpdateOperationsInput | $Enums.TransferItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutTransferItemsNestedInput
    variant?: ProductVariantUpdateOneWithoutTransferItemsNestedInput
  }

  export type StockTransferItemUncheckedUpdateWithoutTransferInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    requestedQty?: IntFieldUpdateOperationsInput | number
    shippedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTransferItemStatusFieldUpdateOperationsInput | $Enums.TransferItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StockTransferItemUncheckedUpdateManyWithoutTransferInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    requestedQty?: IntFieldUpdateOperationsInput | number
    shippedQty?: IntFieldUpdateOperationsInput | number
    receivedQty?: IntFieldUpdateOperationsInput | number
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: StringFieldUpdateOperationsInput | string
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTransferItemStatusFieldUpdateOperationsInput | $Enums.TransferItemStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryAuditItemCreateManyAuditInput = {
    id?: string
    productId: string
    variantId?: string | null
    warehouseId: string
    systemQty: number
    countedQty?: number | null
    adjustmentQty?: number | null
    location?: string | null
    lotNumber?: string | null
    batchNumber?: string | null
    countedBy?: string | null
    countedAt?: Date | string | null
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    status?: $Enums.AuditItemStatus
    discrepancyReason?: string | null
    requiresInvestigation?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InventoryAuditItemUpdateWithoutAuditInput = {
    id?: StringFieldUpdateOperationsInput | string
    systemQty?: IntFieldUpdateOperationsInput | number
    countedQty?: NullableIntFieldUpdateOperationsInput | number | null
    adjustmentQty?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    countedBy?: NullableStringFieldUpdateOperationsInput | string | null
    countedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAuditItemStatusFieldUpdateOperationsInput | $Enums.AuditItemStatus
    discrepancyReason?: NullableStringFieldUpdateOperationsInput | string | null
    requiresInvestigation?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutAuditItemsNestedInput
    variant?: ProductVariantUpdateOneWithoutAuditItemsNestedInput
    warehouse?: WarehouseUpdateOneRequiredWithoutAuditItemsNestedInput
  }

  export type InventoryAuditItemUncheckedUpdateWithoutAuditInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    warehouseId?: StringFieldUpdateOperationsInput | string
    systemQty?: IntFieldUpdateOperationsInput | number
    countedQty?: NullableIntFieldUpdateOperationsInput | number | null
    adjustmentQty?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    countedBy?: NullableStringFieldUpdateOperationsInput | string | null
    countedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAuditItemStatusFieldUpdateOperationsInput | $Enums.AuditItemStatus
    discrepancyReason?: NullableStringFieldUpdateOperationsInput | string | null
    requiresInvestigation?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryAuditItemUncheckedUpdateManyWithoutAuditInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    warehouseId?: StringFieldUpdateOperationsInput | string
    systemQty?: IntFieldUpdateOperationsInput | number
    countedQty?: NullableIntFieldUpdateOperationsInput | number | null
    adjustmentQty?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    lotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    countedBy?: NullableStringFieldUpdateOperationsInput | string | null
    countedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAuditItemStatusFieldUpdateOperationsInput | $Enums.AuditItemStatus
    discrepancyReason?: NullableStringFieldUpdateOperationsInput | string | null
    requiresInvestigation?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}